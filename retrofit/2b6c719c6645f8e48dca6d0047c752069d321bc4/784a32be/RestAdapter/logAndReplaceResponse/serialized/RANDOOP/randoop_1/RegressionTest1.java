import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Profiler profiler36 = restAdapter29.profiler;
        retrofit.RestAdapter.Log log37 = restAdapter29.log;
        java.util.concurrent.Executor executor38 = restAdapter29.gethttpExecutor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(executor38);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.Server server12 = null;
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        java.util.concurrent.Executor executor18 = builder14.getcallbackExecutor();
        builder9.setcallbackExecutor(executor18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler32 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean35 = logLevel34.log();
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server7, provider8, executor18, executor24, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler32, log33, logLevel34);
        retrofit.ErrorHandler errorHandler37 = restAdapter36.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter36.logLevel;
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter36.getLogLevel();
        restAdapter6.logLevel = logLevel40;
        retrofit.converter.Converter converter42 = restAdapter6.converter;
        retrofit.converter.Converter converter43 = restAdapter6.getconverter();
        retrofit.client.Client.Provider provider44 = restAdapter6.clientProvider;
        java.util.concurrent.Executor executor45 = restAdapter6.callbackExecutor;
        java.lang.String str46 = restAdapter6.getTHREAD_PREFIX();
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNotNull(converter43);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Retrofit-" + "'", str46, "Retrofit-");
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.client.Client.Provider provider2 = null;
        builder0.clientProvider = provider2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor6 = serializedObjectSupporter5.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter5();
        retrofit.client.Response response8 = serializedObjectSupporter5.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter5.deserializeObjectConverter2();
        retrofit.Server server10 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder11 = builder0.setServer(server10);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(response8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.geterrorHandler();
        retrofit.client.Client.Provider provider32 = restAdapter29.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler35 = serializedObjectSupporter34.deserializeObjectErrorHandler1();
        retrofit.client.Response response36 = serializedObjectSupporter34.deserializeObjectResponse2();
        int int37 = response36.getStatus();
        retrofit.client.Response response39 = restAdapter29.logAndReplaceResponse("http://example.com/", response36, (long) '#');
        retrofit.RequestInterceptor requestInterceptor40 = restAdapter29.getrequestInterceptor();
        retrofit.converter.Converter converter41 = restAdapter29.converter;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(errorHandler35);
        org.junit.Assert.assertNotNull(response36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 200 + "'", int37 == 200);
        org.junit.Assert.assertNotNull(response39);
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(converter41);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler6 = null;
        builder5.errorHandler = errorHandler6;
        java.util.concurrent.Executor executor8 = builder5.gethttpExecutor();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        java.util.concurrent.Executor executor11 = builder9.callbackExecutor;
        builder5.setcallbackExecutor(executor11);
        builder0.callbackExecutor = executor11;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.client.Client.Provider provider16 = builder14.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel17 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder0.setLogLevel(logLevel17);
        retrofit.RestAdapter.LogLevel logLevel19 = builder0.logLevel;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.client.Client.Provider provider4 = builder0.clientProvider;
        java.lang.Class<?> wildcardClass5 = provider4.getClass();
        org.junit.Assert.assertNotNull(provider4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.client.Client.Provider provider3 = builder0.clientProvider;
        java.util.concurrent.Executor executor4 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.Server server6 = null;
        builder0.server = server6;
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler35 = null;
        builder34.errorHandler = errorHandler35;
        retrofit.Server server37 = null;
        builder34.server = server37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        java.util.concurrent.Executor executor43 = builder39.getcallbackExecutor();
        builder34.setcallbackExecutor(executor43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        java.util.concurrent.Executor executor49 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor51 = serializedObjectSupporter50.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor53 = serializedObjectSupporter52.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.Profiler profiler55 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler57 = serializedObjectSupporter56.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean60 = logLevel59.log();
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server32, provider33, executor43, executor49, requestInterceptor51, (retrofit.converter.Converter) gsonConverter54, profiler55, errorHandler57, log58, logLevel59);
        retrofit.Server server62 = restAdapter61.server;
        retrofit.ErrorHandler errorHandler63 = restAdapter61.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter61.logLevel;
        restAdapter29.logLevel = logLevel64;
        boolean boolean66 = logLevel64.log();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNotNull(requestInterceptor53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(server62);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        retrofit.client.Response response42 = serializedObjectSupporter38.deserializeObjectResponse8();
        retrofit.client.Response response43 = serializedObjectSupporter38.deserializeObjectResponse2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter44 = serializedObjectSupporter38.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertNotNull(response42);
        org.junit.Assert.assertNotNull(response43);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response9 = serializedObjectSupporter8.deserializeObjectResponse8();
        java.lang.String str10 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter4();
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder14 = builder0.setServer(server13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        java.util.concurrent.Executor executor17 = null;
        builder15.callbackExecutor = executor17;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response20 = serializedObjectSupporter19.deserializeObjectResponse8();
        java.lang.String str21 = serializedObjectSupporter19.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder23 = builder15.setConverter((retrofit.converter.Converter) gsonConverter22);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("OK");
        retrofit.client.Client.Provider provider26 = builder23.getclientProvider();
        retrofit.RestAdapter.Builder builder27 = builder14.setClient(provider26);
        builder27.ensureSaneDefaults();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(response9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(response20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http://example.com/" + "'", str21, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(provider26);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.errorHandler;
        java.lang.String str32 = restAdapter29.getTHREAD_PREFIX();
        retrofit.Profiler profiler33 = restAdapter29.profiler;
        retrofit.Profiler profiler34 = restAdapter29.profiler;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNull(profiler34);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString11();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString11();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-" + "'", str5, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter1();
        java.lang.String str35 = serializedObjectSupporter32.deserializeObjectString11();
        restHandler31.serializedObjectSupporter = serializedObjectSupporter32;
        java.lang.String str37 = serializedObjectSupporter32.deserializeObjectString5();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://example.com/" + "'", str37, "http://example.com/");
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        java.util.concurrent.Executor executor5 = builder0.httpExecutor;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.ErrorHandler errorHandler36 = restAdapter35.errorHandler;
        retrofit.ErrorHandler errorHandler37 = restAdapter35.geterrorHandler();
        retrofit.client.Client.Provider provider38 = restAdapter35.getclientProvider();
        retrofit.RequestInterceptor requestInterceptor39 = restAdapter35.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder40 = builder0.setRequestInterceptor(requestInterceptor39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler42 = null;
        builder41.errorHandler = errorHandler42;
        retrofit.RequestInterceptor requestInterceptor44 = builder41.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder46 = builder41.setLogLevel(logLevel45);
        boolean boolean47 = logLevel45.log();
        builder40.logLevel = logLevel45;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(requestInterceptor44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        builder0.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor5 = builder0.requestInterceptor;
        retrofit.RestAdapter.Log log6 = builder0.log;
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertNotNull(log6);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder0.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = builder0.logLevel;
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.ErrorHandler errorHandler39 = restAdapter38.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter38.new RestHandler();
        retrofit.RestAdapter.Log log41 = restAdapter38.log;
        retrofit.RestAdapter.Builder builder42 = builder0.setLog(log41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter44 = builder43.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = builder43.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel46 = builder43.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler48 = serializedObjectSupporter47.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter6();
        builder43.converter = gsonConverter49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler52 = null;
        builder51.errorHandler = errorHandler52;
        java.util.concurrent.Executor executor54 = builder51.gethttpExecutor();
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        java.util.concurrent.Executor executor57 = builder55.callbackExecutor;
        builder51.setcallbackExecutor(executor57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter60 = builder59.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = builder59.serializedObjectSupporter;
        java.util.concurrent.Executor executor62 = null;
        builder59.sethttpExecutor(executor62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler65 = null;
        builder64.errorHandler = errorHandler65;
        retrofit.Server server67 = null;
        builder64.server = server67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.RestAdapter.Log log71 = null;
        builder69.log = log71;
        java.util.concurrent.Executor executor73 = builder69.getcallbackExecutor();
        builder64.setcallbackExecutor(executor73);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor76 = null;
        builder75.setcallbackExecutor(executor76);
        retrofit.client.Client.Provider provider78 = builder75.clientProvider;
        java.util.concurrent.Executor executor79 = builder75.gethttpExecutor();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        builder80.ensureSaneDefaults();
        java.util.concurrent.Executor executor82 = builder80.callbackExecutor;
        builder75.setcallbackExecutor(executor82);
        retrofit.RestAdapter.Builder builder84 = builder59.setExecutors(executor73, executor82);
        retrofit.RestAdapter.Builder builder85 = builder43.setExecutors(executor57, executor82);
        builder42.setcallbackExecutor(executor82);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(serializedObjectSupporter45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNotNull(executor57);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(serializedObjectSupporter61);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNull(executor79);
        org.junit.Assert.assertNotNull(executor82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Server server36 = restAdapter29.server;
        java.util.concurrent.Executor executor37 = restAdapter29.gethttpExecutor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertNotNull(executor37);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString11();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString9();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-" + "'", str5, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider3 = null;
        builder0.setclientProvider(provider3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RequestInterceptor requestInterceptor7 = null;
        builder5.requestInterceptor = requestInterceptor7;
        retrofit.RestAdapter.Builder builder10 = builder5.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.RequestInterceptor requestInterceptor14 = builder11.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder16 = builder11.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        java.util.concurrent.Executor executor19 = builder17.callbackExecutor;
        builder16.callbackExecutor = executor19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter22 = builder21.converter;
        retrofit.ErrorHandler errorHandler23 = null;
        builder21.errorHandler = errorHandler23;
        retrofit.converter.Converter converter25 = builder21.converter;
        retrofit.client.Client.Provider provider26 = builder21.getclientProvider();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler28 = null;
        builder27.errorHandler = errorHandler28;
        retrofit.Server server30 = null;
        builder27.server = server30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        java.util.concurrent.Executor executor36 = builder32.getcallbackExecutor();
        builder27.setcallbackExecutor(executor36);
        builder21.sethttpExecutor(executor36);
        retrofit.RestAdapter.Builder builder39 = builder5.setExecutors(executor19, executor36);
        builder0.setcallbackExecutor(executor19);
        retrofit.ErrorHandler errorHandler41 = builder0.errorHandler;
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNull(converter22);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(errorHandler41);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse8();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse4();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections5 = serializedObjectSupporter0.deserializeObjectList2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(response4);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler39 = null;
        builder38.errorHandler = errorHandler39;
        retrofit.Server server41 = null;
        builder38.server = server41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        java.util.concurrent.Executor executor47 = builder43.getcallbackExecutor();
        builder38.setcallbackExecutor(executor47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter54.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler59 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler61 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean64 = logLevel63.log();
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server36, provider37, executor47, executor53, requestInterceptor55, (retrofit.converter.Converter) gsonConverter58, profiler59, errorHandler61, log62, logLevel63);
        retrofit.Server server66 = restAdapter65.server;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter65.logLevel = logLevel67;
        retrofit.client.Client.Provider provider69 = restAdapter65.getclientProvider();
        retrofit.client.Client.Provider provider70 = restAdapter65.clientProvider;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler72 = null;
        builder71.errorHandler = errorHandler72;
        retrofit.RequestInterceptor requestInterceptor74 = builder71.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder76 = builder71.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        builder71.logLevel = logLevel77;
        restAdapter65.setLogLevel(logLevel77);
        restAdapter29.setLogLevel(logLevel77);
        retrofit.client.Client.Provider provider81 = restAdapter29.clientProvider;
        retrofit.client.Client.Provider provider82 = restAdapter29.clientProvider;
        retrofit.Server server83 = restAdapter29.getserver();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider81);
        org.junit.Assert.assertNull(provider82);
        org.junit.Assert.assertNull(server83);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString10();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Forbidden" + "'", str5, "Forbidden");
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = restAdapter29.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor34 = restAdapter29.requestInterceptor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(requestInterceptor34);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.gethttpExecutor();
        retrofit.Server server4 = null;
        builder0.server = server4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder0.setRequestInterceptor(requestInterceptor25);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter38 = builder37.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = builder37.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel40 = builder37.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler42 = serializedObjectSupporter41.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter6();
        builder37.converter = gsonConverter43;
        builder36.converter = gsonConverter43;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response47 = serializedObjectSupporter46.deserializeObjectResponse8();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter46.deserializeObjectConverter7();
        builder36.serializedObjectSupporter = serializedObjectSupporter46;
        java.lang.String str50 = serializedObjectSupporter46.deserializeObjectString5();
        java.lang.String str51 = serializedObjectSupporter46.deserializeObjectString9();
        retrofit.Server server52 = serializedObjectSupporter46.deserializeObjectServer1();
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(response47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(server52);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Profiler profiler30 = restAdapter29.getprofiler();
        java.util.concurrent.Executor executor31 = restAdapter29.gethttpExecutor();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter29.getLogLevel();
        java.util.concurrent.Executor executor33 = restAdapter29.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor34 = restAdapter29.getrequestInterceptor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNotNull(requestInterceptor34);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.setclientProvider(provider6);
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor9 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder10 = builder0.setRequestInterceptor(requestInterceptor9);
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Profiler profiler34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean39 = logLevel38.log();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server11, provider12, executor22, executor28, requestInterceptor30, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler36, log37, logLevel38);
        retrofit.Server server41 = restAdapter40.server;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter40.logLevel = logLevel42;
        retrofit.client.Client.Provider provider44 = restAdapter40.getclientProvider();
        retrofit.RestAdapter.Log log45 = restAdapter40.log;
        retrofit.RequestInterceptor requestInterceptor46 = restAdapter40.requestInterceptor;
        retrofit.RestAdapter.Builder builder47 = builder0.setRequestInterceptor(requestInterceptor46);
        retrofit.RestAdapter.Log log48 = builder47.log;
        retrofit.RestAdapter.Builder builder50 = builder47.setServer("hi!");
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertNotNull(builder50);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.client.Client.Provider provider3 = builder0.clientProvider;
        java.util.concurrent.Executor executor4 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor7 = builder5.callbackExecutor;
        builder0.setcallbackExecutor(executor7);
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.ErrorHandler errorHandler39 = restAdapter38.errorHandler;
        builder0.errorHandler = errorHandler39;
        retrofit.converter.Converter converter41 = builder0.converter;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter43 = builder42.converter;
        retrofit.ErrorHandler errorHandler44 = null;
        builder42.errorHandler = errorHandler44;
        retrofit.converter.Converter converter46 = builder42.converter;
        retrofit.client.Client.Provider provider47 = builder42.getclientProvider();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler49 = null;
        builder48.errorHandler = errorHandler49;
        retrofit.Server server51 = null;
        builder48.server = server51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        java.util.concurrent.Executor executor57 = builder53.getcallbackExecutor();
        builder48.setcallbackExecutor(executor57);
        builder42.sethttpExecutor(executor57);
        builder0.sethttpExecutor(executor57);
        retrofit.client.Client client61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder62 = builder0.setClient(client61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(executor57);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.Server server39 = restAdapter38.server;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter38.logLevel = logLevel40;
        retrofit.RequestInterceptor requestInterceptor42 = restAdapter38.requestInterceptor;
        retrofit.RestAdapter.Builder builder43 = builder0.setRequestInterceptor(requestInterceptor42);
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor45 = serializedObjectSupporter44.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter44.deserializeObjectConverter1();
        retrofit.mime.TypedString typedString47 = serializedObjectSupporter44.deserializeObjectTypedInput1();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter44.deserializeObjectConverter4();
        retrofit.RequestInterceptor requestInterceptor49 = serializedObjectSupporter44.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder50 = builder0.setRequestInterceptor(requestInterceptor49);
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(typedString47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder50);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler10 = serializedObjectSupporter9.deserializeObjectErrorHandler1();
        builder8.errorHandler = errorHandler10;
        retrofit.Server server12 = builder8.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler14 = serializedObjectSupporter13.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter6();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.Server server17 = serializedObjectSupporter13.deserializeObjectServer1();
        builder8.server = server17;
        retrofit.Profiler profiler19 = builder8.profiler;
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(errorHandler10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNull(profiler19);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter29.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.client.Response response37 = serializedObjectSupporter35.deserializeObjectResponse2();
        restHandler34.serializedObjectSupporter = serializedObjectSupporter35;
        java.lang.String str39 = serializedObjectSupporter35.deserializeObjectString1();
        retrofit.client.Response response40 = serializedObjectSupporter35.deserializeObjectResponse8();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(response37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-" + "'", str39, "Retrofit-");
        org.junit.Assert.assertNotNull(response40);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.client.Client.Provider provider4 = null;
        builder0.clientProvider = provider4;
        retrofit.RequestInterceptor requestInterceptor6 = builder0.requestInterceptor;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(provider7);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse3();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString10();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString12();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Forbidden" + "'", str5, "Forbidden");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Internal Server Error" + "'", str6, "Internal Server Error");
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.errorHandler;
        java.lang.String str32 = restAdapter29.getTHREAD_PREFIX();
        retrofit.Profiler profiler33 = restAdapter29.profiler;
        java.util.concurrent.Executor executor34 = restAdapter29.httpExecutor;
        retrofit.client.Client.Provider provider35 = restAdapter29.clientProvider;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNull(provider35);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter5();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString13();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse3();
        int int5 = response4.getStatus();
        java.util.List<retrofit.client.Header> headerList6 = response4.getHeaders();
        java.util.List<retrofit.client.Header> headerList7 = response4.getHeaders();
        retrofit.mime.TypedInput typedInput8 = response4.body;
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 200 + "'", int5 == 200);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(typedInput8);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString11();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString12();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.client.Response response8 = serializedObjectSupporter0.deserializeObjectResponse1();
        java.util.List<retrofit.client.Header> headerList9 = response8.getHeaders();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Internal Server Error" + "'", str6, "Internal Server Error");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(response8);
        org.junit.Assert.assertNotNull(headerList9);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "OK" + "'", str5, "OK");
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Profiler profiler34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean39 = logLevel38.log();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server11, provider12, executor22, executor28, requestInterceptor30, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler36, log37, logLevel38);
        retrofit.Server server41 = restAdapter40.server;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder0.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = null;
        builder45.setcallbackExecutor(executor46);
        retrofit.client.Client.Provider provider48 = null;
        builder45.setclientProvider(provider48);
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = builder45.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.ErrorHandler errorHandler53 = null;
        builder51.errorHandler = errorHandler53;
        retrofit.RequestInterceptor requestInterceptor55 = builder51.requestInterceptor;
        java.util.concurrent.Executor executor56 = builder51.httpExecutor;
        retrofit.Server server57 = null;
        retrofit.client.Client.Provider provider58 = null;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler60 = null;
        builder59.errorHandler = errorHandler60;
        retrofit.Server server62 = null;
        builder59.server = server62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        java.util.concurrent.Executor executor68 = builder64.getcallbackExecutor();
        builder59.setcallbackExecutor(executor68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        builder70.ensureSaneDefaults();
        retrofit.RestAdapter.Log log72 = null;
        builder70.log = log72;
        java.util.concurrent.Executor executor74 = builder70.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor76 = serializedObjectSupporter75.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter77 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter77.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter79 = serializedObjectSupporter77.deserializeObjectConverter5();
        retrofit.Profiler profiler80 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter81 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler82 = serializedObjectSupporter81.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean85 = logLevel84.log();
        retrofit.RestAdapter restAdapter86 = new retrofit.RestAdapter(server57, provider58, executor68, executor74, requestInterceptor76, (retrofit.converter.Converter) gsonConverter79, profiler80, errorHandler82, log83, logLevel84);
        retrofit.ErrorHandler errorHandler87 = restAdapter86.errorHandler;
        retrofit.ErrorHandler errorHandler88 = restAdapter86.geterrorHandler();
        retrofit.client.Client.Provider provider89 = restAdapter86.getclientProvider();
        retrofit.RequestInterceptor requestInterceptor90 = restAdapter86.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder91 = builder51.setRequestInterceptor(requestInterceptor90);
        builder45.requestInterceptor = requestInterceptor90;
        builder44.requestInterceptor = requestInterceptor90;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(serializedObjectSupporter50);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertNull(requestInterceptor55);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(executor74);
        org.junit.Assert.assertNotNull(requestInterceptor76);
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertNotNull(gsonConverter79);
        org.junit.Assert.assertNotNull(errorHandler82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertNull(provider89);
        org.junit.Assert.assertNotNull(requestInterceptor90);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString11();
        retrofit.RequestInterceptor requestInterceptor6 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString7();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "OK" + "'", str8, "OK");
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNull(server1);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        java.util.concurrent.Executor executor42 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler44 = null;
        builder43.errorHandler = errorHandler44;
        java.util.concurrent.Executor executor46 = builder43.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        builder43.requestInterceptor = requestInterceptor47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.Server server55 = builder54.server;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        builder54.requestInterceptor = requestInterceptor56;
        retrofit.RestAdapter.Builder builder59 = builder54.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler61 = null;
        builder60.errorHandler = errorHandler61;
        retrofit.RequestInterceptor requestInterceptor63 = builder60.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder65 = builder60.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        java.util.concurrent.Executor executor68 = builder66.callbackExecutor;
        builder65.callbackExecutor = executor68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter71 = builder70.converter;
        retrofit.ErrorHandler errorHandler72 = null;
        builder70.errorHandler = errorHandler72;
        retrofit.converter.Converter converter74 = builder70.converter;
        retrofit.client.Client.Provider provider75 = builder70.getclientProvider();
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler77 = null;
        builder76.errorHandler = errorHandler77;
        retrofit.Server server79 = null;
        builder76.server = server79;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        builder81.ensureSaneDefaults();
        retrofit.RestAdapter.Log log83 = null;
        builder81.log = log83;
        java.util.concurrent.Executor executor85 = builder81.getcallbackExecutor();
        builder76.setcallbackExecutor(executor85);
        builder70.sethttpExecutor(executor85);
        retrofit.RestAdapter.Builder builder88 = builder54.setExecutors(executor68, executor85);
        retrofit.RestAdapter.Builder builder89 = builder43.setExecutors(executor53, executor85);
        builder0.httpExecutor = executor53;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(requestInterceptor63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNull(converter71);
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString2 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString13();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString13();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter4();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(typedString2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        builder0.setcallbackExecutor(executor11);
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler17 = null;
        builder16.errorHandler = errorHandler17;
        retrofit.Server server19 = null;
        builder16.server = server19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        java.util.concurrent.Executor executor25 = builder21.getcallbackExecutor();
        builder16.setcallbackExecutor(executor25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler37 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler39 = serializedObjectSupporter38.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean42 = logLevel41.log();
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server14, provider15, executor25, executor31, requestInterceptor33, (retrofit.converter.Converter) gsonConverter36, profiler37, errorHandler39, log40, logLevel41);
        retrofit.Server server44 = restAdapter43.server;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter43.logLevel = logLevel45;
        retrofit.client.Client.Provider provider47 = restAdapter43.getclientProvider();
        retrofit.client.Client.Provider provider48 = restAdapter43.clientProvider;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler50 = null;
        builder49.errorHandler = errorHandler50;
        retrofit.RequestInterceptor requestInterceptor52 = builder49.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder54 = builder49.setLogLevel(logLevel53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.NONE;
        builder49.logLevel = logLevel55;
        restAdapter43.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder0.setLogLevel(logLevel55);
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler62 = null;
        builder61.errorHandler = errorHandler62;
        retrofit.Server server64 = null;
        builder61.server = server64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        java.util.concurrent.Executor executor70 = builder66.getcallbackExecutor();
        builder61.setcallbackExecutor(executor70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        java.util.concurrent.Executor executor76 = builder72.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter77 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter77.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor80 = serializedObjectSupporter79.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter79.deserializeObjectConverter5();
        retrofit.Profiler profiler82 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler84 = serializedObjectSupporter83.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean87 = logLevel86.log();
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server59, provider60, executor70, executor76, requestInterceptor78, (retrofit.converter.Converter) gsonConverter81, profiler82, errorHandler84, log85, logLevel86);
        retrofit.ErrorHandler errorHandler89 = restAdapter88.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel90 = restAdapter88.getLogLevel();
        retrofit.RequestInterceptor requestInterceptor91 = restAdapter88.requestInterceptor;
        builder0.requestInterceptor = requestInterceptor91;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNull(requestInterceptor52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(executor70);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertNotNull(requestInterceptor80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(errorHandler84);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(errorHandler89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(requestInterceptor91);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse1();
        org.junit.Assert.assertNotNull(response1);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder2.errorHandler = errorHandler4;
        retrofit.converter.Converter converter6 = builder2.converter;
        retrofit.client.Client.Provider provider7 = builder2.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        builder2.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder23.setclientProvider(provider26);
        retrofit.RequestInterceptor requestInterceptor28 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = null;
        builder29.callbackExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response34 = serializedObjectSupporter33.deserializeObjectResponse8();
        java.lang.String str35 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder37 = builder29.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = null;
        builder39.callbackExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response44 = serializedObjectSupporter43.deserializeObjectResponse8();
        java.lang.String str45 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder47 = builder39.setConverter((retrofit.converter.Converter) gsonConverter46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        builder47.errorHandler = errorHandler49;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server0, provider1, executor17, executor22, requestInterceptor28, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler49, log51, logLevel52);
        java.lang.String str54 = restAdapter53.getTHREAD_PREFIX();
        retrofit.Profiler profiler55 = restAdapter53.profiler;
        retrofit.converter.Converter converter56 = restAdapter53.getconverter();
        retrofit.RequestInterceptor requestInterceptor57 = restAdapter53.requestInterceptor;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(response34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNotNull(converter56);
        org.junit.Assert.assertNotNull(requestInterceptor57);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        java.util.concurrent.Executor executor6 = builder4.callbackExecutor;
        builder0.setcallbackExecutor(executor6);
        retrofit.client.Client.Provider provider8 = builder0.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler11 = null;
        builder10.errorHandler = errorHandler11;
        retrofit.RequestInterceptor requestInterceptor13 = builder10.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder15 = builder10.setLogLevel(logLevel14);
        builder0.logLevel = logLevel14;
        retrofit.RestAdapter.LogLevel logLevel17 = builder0.logLevel;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.client.Client.Provider provider3 = null;
        builder0.setclientProvider(provider3);
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler6 = builder0.errorHandler;
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(errorHandler6);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString10();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString7();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Forbidden" + "'", str2, "Forbidden");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter29.new RestHandler();
        java.lang.String str35 = restAdapter29.getIDLE_THREAD_NAME();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel3 = builder0.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler5 = serializedObjectSupporter4.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter6();
        builder0.converter = gsonConverter6;
        retrofit.client.Client.Provider provider8 = builder0.clientProvider;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNull(provider8);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString11();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString8();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections6 = serializedObjectSupporter0.deserializeObjectList2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler38 = restAdapter29.geterrorHandler();
        retrofit.Server server39 = restAdapter29.getserver();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNull(server39);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.client.Client.Provider provider3 = builder0.clientProvider;
        java.util.concurrent.Executor executor4 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor7 = builder5.callbackExecutor;
        builder0.setcallbackExecutor(executor7);
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.ErrorHandler errorHandler39 = restAdapter38.errorHandler;
        builder0.errorHandler = errorHandler39;
        retrofit.RestAdapter.Log log41 = builder0.log;
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler45 = null;
        builder44.errorHandler = errorHandler45;
        retrofit.Server server47 = null;
        builder44.server = server47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        builder44.setcallbackExecutor(executor53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        java.util.concurrent.Executor executor59 = builder55.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor61 = serializedObjectSupporter60.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor63 = serializedObjectSupporter62.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter64 = serializedObjectSupporter62.deserializeObjectConverter5();
        retrofit.Profiler profiler65 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler67 = serializedObjectSupporter66.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean70 = logLevel69.log();
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server42, provider43, executor53, executor59, requestInterceptor61, (retrofit.converter.Converter) gsonConverter64, profiler65, errorHandler67, log68, logLevel69);
        retrofit.ErrorHandler errorHandler72 = restAdapter71.errorHandler;
        builder0.errorHandler = errorHandler72;
        retrofit.Profiler profiler74 = null;
        builder0.profiler = profiler74;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertNotNull(requestInterceptor63);
        org.junit.Assert.assertNotNull(gsonConverter64);
        org.junit.Assert.assertNotNull(errorHandler67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(errorHandler72);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse7();
        retrofit.mime.TypedInput typedInput2 = response1.getBody();
        java.util.List<retrofit.client.Header> headerList3 = response1.getHeaders();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertNull(typedInput2);
        org.junit.Assert.assertNotNull(headerList3);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = response2.getReason();
        java.util.List<retrofit.client.Header> headerList4 = response2.headers;
        int int5 = response2.getStatus();
        int int6 = response2.getStatus();
        java.lang.String str7 = response2.reason;
        java.util.List<retrofit.client.Header> headerList8 = response2.getHeaders();
        java.lang.String str9 = response2.getReason();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "OK" + "'", str3, "OK");
        org.junit.Assert.assertNotNull(headerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 200 + "'", int5 == 200);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 200 + "'", int6 == 200);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "OK" + "'", str7, "OK");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "OK" + "'", str9, "OK");
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder10.serializedObjectSupporter;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler16 = null;
        builder15.errorHandler = errorHandler16;
        retrofit.Server server18 = null;
        builder15.server = server18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        builder15.setcallbackExecutor(executor24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        java.util.concurrent.Executor executor30 = builder26.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter33.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.Profiler profiler36 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler38 = serializedObjectSupporter37.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean41 = logLevel40.log();
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server13, provider14, executor24, executor30, requestInterceptor32, (retrofit.converter.Converter) gsonConverter35, profiler36, errorHandler38, log39, logLevel40);
        retrofit.ErrorHandler errorHandler43 = restAdapter42.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log45 = restAdapter42.log;
        java.lang.String str46 = restAdapter42.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider47 = restAdapter42.clientProvider;
        retrofit.Server server48 = restAdapter42.server;
        java.util.concurrent.Executor executor49 = restAdapter42.getcallbackExecutor();
        builder10.setcallbackExecutor(executor49);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Retrofit-" + "'", str46, "Retrofit-");
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertNotNull(executor49);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter3();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString12();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse2();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Internal Server Error" + "'", str6, "Internal Server Error");
        org.junit.Assert.assertNotNull(response7);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse1();
        retrofit.mime.TypedInput typedInput8 = response7.getBody();
        int int9 = response7.status;
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertNotNull(typedInput8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 200 + "'", int9 == 200);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler38 = restAdapter29.errorHandler;
        retrofit.Profiler profiler39 = restAdapter29.profiler;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNull(profiler39);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        java.lang.String str33 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter29.logLevel;
        boolean boolean35 = logLevel34.log();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-Idle" + "'", str33, "Retrofit-Idle");
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.RestAdapter.Log log7 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder8 = builder0.setLog(log7);
        java.util.concurrent.Executor executor9 = builder8.httpExecutor;
        retrofit.client.Client.Provider provider10 = builder8.getclientProvider();
        retrofit.Profiler profiler11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder8.setProfiler(profiler11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString8();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString5 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        retrofit.mime.TypedString typedString6 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter2();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString7();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(typedString5);
        org.junit.Assert.assertNotNull(typedString6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        builder4.requestInterceptor = requestInterceptor6;
        retrofit.RestAdapter.Builder builder9 = builder4.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler11 = null;
        builder10.errorHandler = errorHandler11;
        java.util.concurrent.Executor executor13 = builder10.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response15 = serializedObjectSupporter14.deserializeObjectResponse8();
        java.lang.String str16 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter4();
        java.lang.String str18 = serializedObjectSupporter14.deserializeObjectString3();
        retrofit.Server server19 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder20 = builder10.setServer(server19);
        builder4.server = server19;
        retrofit.RestAdapter.Builder builder22 = builder0.setServer(server19);
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler26 = null;
        builder25.errorHandler = errorHandler26;
        retrofit.Server server28 = null;
        builder25.server = server28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        java.util.concurrent.Executor executor34 = builder30.getcallbackExecutor();
        builder25.setcallbackExecutor(executor34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        java.util.concurrent.Executor executor40 = builder36.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter41.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor44 = serializedObjectSupporter43.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        retrofit.Profiler profiler46 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler48 = serializedObjectSupporter47.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean51 = logLevel50.log();
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server23, provider24, executor34, executor40, requestInterceptor42, (retrofit.converter.Converter) gsonConverter45, profiler46, errorHandler48, log49, logLevel50);
        retrofit.ErrorHandler errorHandler53 = restAdapter52.errorHandler;
        retrofit.ErrorHandler errorHandler54 = restAdapter52.geterrorHandler();
        retrofit.client.Client.Provider provider55 = restAdapter52.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler58 = serializedObjectSupporter57.deserializeObjectErrorHandler1();
        retrofit.client.Response response59 = serializedObjectSupporter57.deserializeObjectResponse2();
        int int60 = response59.getStatus();
        retrofit.client.Response response62 = restAdapter52.logAndReplaceResponse("http://example.com/", response59, (long) '#');
        retrofit.RequestInterceptor requestInterceptor63 = restAdapter52.getrequestInterceptor();
        builder22.requestInterceptor = requestInterceptor63;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(response15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(requestInterceptor44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(errorHandler54);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNotNull(response59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 200 + "'", int60 == 200);
        org.junit.Assert.assertNotNull(response62);
        org.junit.Assert.assertNotNull(requestInterceptor63);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter29.logLevel;
        java.util.concurrent.Executor executor33 = restAdapter29.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = restAdapter29.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNull(serializedObjectSupporter34);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.setclientProvider(provider6);
        retrofit.RequestInterceptor requestInterceptor8 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter10 = builder9.converter;
        retrofit.ErrorHandler errorHandler11 = null;
        builder9.errorHandler = errorHandler11;
        retrofit.converter.Converter converter13 = builder9.converter;
        retrofit.client.Client.Provider provider14 = builder9.getclientProvider();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler16 = null;
        builder15.errorHandler = errorHandler16;
        retrofit.Server server18 = null;
        builder15.server = server18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        builder15.setcallbackExecutor(executor24);
        builder9.sethttpExecutor(executor24);
        builder0.callbackExecutor = executor24;
        retrofit.RequestInterceptor requestInterceptor28 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNull(requestInterceptor28);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.client.Client.Provider provider3 = builder0.clientProvider;
        retrofit.converter.Converter converter4 = builder0.converter;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(converter4);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString11();
        retrofit.RequestInterceptor requestInterceptor6 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter8 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler7);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        java.util.concurrent.Executor executor6 = builder4.callbackExecutor;
        builder0.setcallbackExecutor(executor6);
        retrofit.converter.Converter converter8 = builder0.converter;
        java.util.concurrent.Executor executor9 = null;
        builder0.sethttpExecutor(executor9);
        retrofit.RestAdapter.Log log11 = builder0.log;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(log11);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log38 = builder0.log;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler42 = null;
        builder41.errorHandler = errorHandler42;
        retrofit.Server server44 = null;
        builder41.server = server44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        java.util.concurrent.Executor executor50 = builder46.getcallbackExecutor();
        builder41.setcallbackExecutor(executor50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        java.util.concurrent.Executor executor56 = builder52.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor58 = serializedObjectSupporter57.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor60 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter59.deserializeObjectConverter5();
        retrofit.Profiler profiler62 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler64 = serializedObjectSupporter63.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean67 = logLevel66.log();
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server39, provider40, executor50, executor56, requestInterceptor58, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler64, log65, logLevel66);
        retrofit.Server server69 = restAdapter68.server;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter68.logLevel = logLevel70;
        retrofit.client.Client.Provider provider72 = restAdapter68.getclientProvider();
        retrofit.client.Client.Provider provider73 = restAdapter68.clientProvider;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler75 = null;
        builder74.errorHandler = errorHandler75;
        retrofit.RequestInterceptor requestInterceptor77 = builder74.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder79 = builder74.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.NONE;
        builder74.logLevel = logLevel80;
        restAdapter68.setLogLevel(logLevel80);
        java.lang.String str83 = restAdapter68.getTHREAD_PREFIX();
        retrofit.RequestInterceptor requestInterceptor84 = restAdapter68.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder85 = builder0.setRequestInterceptor(requestInterceptor84);
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor87 = null;
        builder86.setcallbackExecutor(executor87);
        retrofit.client.Client.Provider provider89 = builder86.clientProvider;
        java.util.concurrent.Executor executor90 = builder86.gethttpExecutor();
        retrofit.RestAdapter.Builder builder91 = new retrofit.RestAdapter.Builder();
        builder91.ensureSaneDefaults();
        java.util.concurrent.Executor executor93 = builder91.callbackExecutor;
        builder86.setcallbackExecutor(executor93);
        builder85.sethttpExecutor(executor93);
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(errorHandler64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNull(requestInterceptor77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Retrofit-" + "'", str83, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNull(provider89);
        org.junit.Assert.assertNull(executor90);
        org.junit.Assert.assertNotNull(executor93);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = builder35.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel41;
        restAdapter29.setLogLevel(logLevel41);
        java.lang.String str44 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str45 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor46 = restAdapter29.getrequestInterceptor();
        retrofit.RestAdapter.Log log47 = restAdapter29.log;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-" + "'", str44, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-Idle" + "'", str45, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(log47);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response3 = serializedObjectSupporter2.deserializeObjectResponse7();
        retrofit.Server server4 = serializedObjectSupporter2.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder5 = builder0.setServer(server4);
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        java.util.concurrent.Executor executor9 = builder6.gethttpExecutor();
        retrofit.Server server10 = null;
        builder6.server = server10;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler15 = null;
        builder14.errorHandler = errorHandler15;
        retrofit.Server server17 = null;
        builder14.server = server17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        builder14.setcallbackExecutor(executor23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        java.util.concurrent.Executor executor29 = builder25.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.Profiler profiler35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler37 = serializedObjectSupporter36.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean40 = logLevel39.log();
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server12, provider13, executor23, executor29, requestInterceptor31, (retrofit.converter.Converter) gsonConverter34, profiler35, errorHandler37, log38, logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder6.setRequestInterceptor(requestInterceptor31);
        builder0.requestInterceptor = requestInterceptor31;
        java.util.concurrent.Executor executor44 = builder0.gethttpExecutor();
        retrofit.Profiler profiler45 = builder0.profiler;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNull(profiler45);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.converter.Converter converter4 = builder0.converter;
        java.util.concurrent.Executor executor5 = builder0.httpExecutor;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.Server server36 = restAdapter35.server;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter35.logLevel = logLevel37;
        retrofit.client.Client.Provider provider39 = restAdapter35.getclientProvider();
        retrofit.RestAdapter.Log log40 = restAdapter35.log;
        java.lang.String str41 = restAdapter35.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor42 = restAdapter35.requestInterceptor;
        retrofit.RestAdapter.Builder builder43 = builder0.setRequestInterceptor(requestInterceptor42);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Retrofit-Idle" + "'", str41, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder0.setLog(log4);
        retrofit.client.Client.Provider provider6 = builder0.getclientProvider();
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.Server server12 = null;
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        java.util.concurrent.Executor executor18 = builder14.getcallbackExecutor();
        builder9.setcallbackExecutor(executor18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler32 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean35 = logLevel34.log();
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server7, provider8, executor18, executor24, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler32, log33, logLevel34);
        retrofit.ErrorHandler errorHandler37 = restAdapter36.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter38.deserializeObjectConverter5();
        restAdapter36.serializedObjectSupporter = serializedObjectSupporter38;
        retrofit.RestAdapter.Log log42 = restAdapter36.log;
        retrofit.Profiler profiler43 = restAdapter36.profiler;
        retrofit.RestAdapter.Log log44 = restAdapter36.log;
        builder0.log = log44;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertNotNull(log44);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor34 = restAdapter29.getcallbackExecutor();
        retrofit.Profiler profiler35 = restAdapter29.profiler;
        retrofit.converter.Converter converter36 = restAdapter29.getconverter();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNotNull(converter36);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.ErrorHandler errorHandler36 = restAdapter35.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter35.logLevel;
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        builder5.log = log38;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        log40.log("Internal Server Error");
        retrofit.RestAdapter.Builder builder43 = builder5.setLog(log40);
        retrofit.client.Client.Provider provider44 = builder43.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(provider44);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.logLevel;
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNull(provider33);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response9 = serializedObjectSupporter8.deserializeObjectResponse8();
        java.lang.String str10 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter4();
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder14 = builder0.setServer(server13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = null;
        builder15.setcallbackExecutor(executor16);
        retrofit.client.Client.Provider provider18 = builder15.clientProvider;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter20 = builder19.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder19.serializedObjectSupporter;
        java.util.concurrent.Executor executor22 = null;
        builder19.sethttpExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler25 = null;
        builder24.errorHandler = errorHandler25;
        retrofit.Server server27 = null;
        builder24.server = server27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        java.util.concurrent.Executor executor33 = builder29.getcallbackExecutor();
        builder24.setcallbackExecutor(executor33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.setcallbackExecutor(executor36);
        retrofit.client.Client.Provider provider38 = builder35.clientProvider;
        java.util.concurrent.Executor executor39 = builder35.gethttpExecutor();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        java.util.concurrent.Executor executor42 = builder40.callbackExecutor;
        builder35.setcallbackExecutor(executor42);
        retrofit.RestAdapter.Builder builder44 = builder19.setExecutors(executor33, executor42);
        builder15.setcallbackExecutor(executor42);
        builder0.callbackExecutor = executor42;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler48 = serializedObjectSupporter47.deserializeObjectErrorHandler1();
        retrofit.client.Response response49 = serializedObjectSupporter47.deserializeObjectResponse2();
        builder0.serializedObjectSupporter = serializedObjectSupporter47;
        retrofit.Server server51 = null;
        retrofit.client.Client.Provider provider52 = null;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler54 = null;
        builder53.errorHandler = errorHandler54;
        retrofit.Server server56 = null;
        builder53.server = server56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        java.util.concurrent.Executor executor62 = builder58.getcallbackExecutor();
        builder53.setcallbackExecutor(executor62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        java.util.concurrent.Executor executor68 = builder64.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor70 = serializedObjectSupporter69.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter71 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor72 = serializedObjectSupporter71.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter73 = serializedObjectSupporter71.deserializeObjectConverter5();
        retrofit.Profiler profiler74 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler76 = serializedObjectSupporter75.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean79 = logLevel78.log();
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server51, provider52, executor62, executor68, requestInterceptor70, (retrofit.converter.Converter) gsonConverter73, profiler74, errorHandler76, log77, logLevel78);
        retrofit.ErrorHandler errorHandler81 = restAdapter80.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter82 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor83 = serializedObjectSupporter82.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter84 = serializedObjectSupporter82.deserializeObjectConverter5();
        restAdapter80.serializedObjectSupporter = serializedObjectSupporter82;
        retrofit.RestAdapter.Log log86 = restAdapter80.log;
        log86.log("Retrofit-Idle");
        builder0.log = log86;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(response9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(response49);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(requestInterceptor72);
        org.junit.Assert.assertNotNull(gsonConverter73);
        org.junit.Assert.assertNotNull(errorHandler76);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(requestInterceptor83);
        org.junit.Assert.assertNotNull(gsonConverter84);
        org.junit.Assert.assertNotNull(log86);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString11();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = builder35.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel41;
        restAdapter29.setLogLevel(logLevel41);
        java.lang.String str44 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str45 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler46 = restAdapter29.geterrorHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-" + "'", str44, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-Idle" + "'", str45, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler46);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response9 = serializedObjectSupporter8.deserializeObjectResponse8();
        java.lang.String str10 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter4();
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder14 = builder0.setServer(server13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = null;
        builder15.setcallbackExecutor(executor16);
        retrofit.client.Client.Provider provider18 = builder15.clientProvider;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter20 = builder19.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder19.serializedObjectSupporter;
        java.util.concurrent.Executor executor22 = null;
        builder19.sethttpExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler25 = null;
        builder24.errorHandler = errorHandler25;
        retrofit.Server server27 = null;
        builder24.server = server27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        java.util.concurrent.Executor executor33 = builder29.getcallbackExecutor();
        builder24.setcallbackExecutor(executor33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.setcallbackExecutor(executor36);
        retrofit.client.Client.Provider provider38 = builder35.clientProvider;
        java.util.concurrent.Executor executor39 = builder35.gethttpExecutor();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        java.util.concurrent.Executor executor42 = builder40.callbackExecutor;
        builder35.setcallbackExecutor(executor42);
        retrofit.RestAdapter.Builder builder44 = builder19.setExecutors(executor33, executor42);
        builder15.setcallbackExecutor(executor42);
        builder0.callbackExecutor = executor42;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler50 = null;
        builder49.errorHandler = errorHandler50;
        retrofit.Server server52 = null;
        builder49.server = server52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Log log56 = null;
        builder54.log = log56;
        java.util.concurrent.Executor executor58 = builder54.getcallbackExecutor();
        builder49.setcallbackExecutor(executor58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        java.util.concurrent.Executor executor64 = builder60.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor66 = serializedObjectSupporter65.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor68 = serializedObjectSupporter67.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter69 = serializedObjectSupporter67.deserializeObjectConverter5();
        retrofit.Profiler profiler70 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter71 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler72 = serializedObjectSupporter71.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean75 = logLevel74.log();
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server47, provider48, executor58, executor64, requestInterceptor66, (retrofit.converter.Converter) gsonConverter69, profiler70, errorHandler72, log73, logLevel74);
        builder0.sethttpExecutor(executor58);
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(response9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(requestInterceptor68);
        org.junit.Assert.assertNotNull(gsonConverter69);
        org.junit.Assert.assertNotNull(errorHandler72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.ErrorHandler errorHandler35 = restAdapter29.errorHandler;
        retrofit.client.Client.Provider provider36 = restAdapter29.clientProvider;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(errorHandler35);
        org.junit.Assert.assertNull(provider36);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections5 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response9 = serializedObjectSupporter8.deserializeObjectResponse8();
        java.lang.String str10 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter4();
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder14 = builder0.setServer(server13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = null;
        builder15.setcallbackExecutor(executor16);
        retrofit.client.Client.Provider provider18 = builder15.clientProvider;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter20 = builder19.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder19.serializedObjectSupporter;
        java.util.concurrent.Executor executor22 = null;
        builder19.sethttpExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler25 = null;
        builder24.errorHandler = errorHandler25;
        retrofit.Server server27 = null;
        builder24.server = server27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        java.util.concurrent.Executor executor33 = builder29.getcallbackExecutor();
        builder24.setcallbackExecutor(executor33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.setcallbackExecutor(executor36);
        retrofit.client.Client.Provider provider38 = builder35.clientProvider;
        java.util.concurrent.Executor executor39 = builder35.gethttpExecutor();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        java.util.concurrent.Executor executor42 = builder40.callbackExecutor;
        builder35.setcallbackExecutor(executor42);
        retrofit.RestAdapter.Builder builder44 = builder19.setExecutors(executor33, executor42);
        builder15.setcallbackExecutor(executor42);
        builder0.callbackExecutor = executor42;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler48 = serializedObjectSupporter47.deserializeObjectErrorHandler1();
        retrofit.client.Response response49 = serializedObjectSupporter47.deserializeObjectResponse2();
        builder0.serializedObjectSupporter = serializedObjectSupporter47;
        java.util.concurrent.Executor executor51 = null;
        builder0.callbackExecutor = executor51;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(response9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(response49);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler37 = null;
        builder36.errorHandler = errorHandler37;
        retrofit.RequestInterceptor requestInterceptor39 = builder36.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder41 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        java.util.concurrent.Executor executor44 = builder42.callbackExecutor;
        builder41.callbackExecutor = executor44;
        retrofit.RestAdapter.LogLevel logLevel46 = builder41.logLevel;
        restAdapter29.setLogLevel(logLevel46);
        retrofit.RequestInterceptor requestInterceptor48 = restAdapter29.getrequestInterceptor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(requestInterceptor39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor48);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.logLevel;
        retrofit.Profiler profiler32 = restAdapter29.getprofiler();
        retrofit.Server server33 = restAdapter29.getserver();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(server33);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str4 = response3.getReason();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "OK" + "'", str4, "OK");
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.client.Client.Provider provider4 = null;
        builder0.clientProvider = provider4;
        retrofit.RequestInterceptor requestInterceptor6 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel8 = builder7.logLevel;
        retrofit.client.Client.Provider provider9 = null;
        builder7.setclientProvider(provider9);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder12 = builder7.setLog(log11);
        retrofit.RestAdapter.Builder builder13 = builder0.setLog(log11);
        java.util.concurrent.Executor executor14 = builder13.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(executor14);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.geterrorHandler();
        retrofit.Server server32 = restAdapter29.server;
        retrofit.client.Client.Provider provider33 = restAdapter29.clientProvider;
        retrofit.client.Client.Provider provider34 = restAdapter29.getclientProvider();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider3 = null;
        builder0.setclientProvider(provider3);
        retrofit.RequestInterceptor requestInterceptor5 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder6.serializedObjectSupporter;
        retrofit.client.Client.Provider provider9 = null;
        builder6.setclientProvider(provider9);
        retrofit.RequestInterceptor requestInterceptor11 = builder6.requestInterceptor;
        retrofit.RestAdapter.Builder builder12 = builder0.setRequestInterceptor(requestInterceptor11);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor14 = serializedObjectSupporter13.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter5();
        retrofit.client.Response response16 = serializedObjectSupporter13.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter13.deserializeObjectConverter5();
        builder12.converter = gsonConverter17;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler20 = serializedObjectSupporter19.deserializeObjectErrorHandler1();
        retrofit.client.Response response21 = serializedObjectSupporter19.deserializeObjectResponse2();
        java.lang.String str22 = serializedObjectSupporter19.deserializeObjectString10();
        retrofit.client.Response response23 = serializedObjectSupporter19.deserializeObjectResponse8();
        retrofit.client.Response response24 = serializedObjectSupporter19.deserializeObjectResponse8();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter19.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder26 = builder12.setRequestInterceptor(requestInterceptor25);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNotNull(requestInterceptor11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(response16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(response21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Forbidden" + "'", str22, "Forbidden");
        org.junit.Assert.assertNotNull(response23);
        org.junit.Assert.assertNotNull(response24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString8();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse2();
        int int6 = response5.getStatus();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 200 + "'", int6 == 200);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString8();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str9 = serializedObjectSupporter0.deserializeObjectString11();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.Server server2 = null;
        retrofit.client.Client.Provider provider3 = null;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler5 = null;
        builder4.errorHandler = errorHandler5;
        retrofit.Server server7 = null;
        builder4.server = server7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        java.util.concurrent.Executor executor13 = builder9.getcallbackExecutor();
        builder4.setcallbackExecutor(executor13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        java.util.concurrent.Executor executor19 = builder15.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter22.deserializeObjectConverter5();
        retrofit.Profiler profiler25 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler27 = serializedObjectSupporter26.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean30 = logLevel29.log();
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server2, provider3, executor13, executor19, requestInterceptor21, (retrofit.converter.Converter) gsonConverter24, profiler25, errorHandler27, log28, logLevel29);
        retrofit.Server server32 = restAdapter31.server;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter31.logLevel = logLevel33;
        retrofit.client.Client.Provider provider35 = restAdapter31.getclientProvider();
        retrofit.client.Client.Provider provider36 = restAdapter31.clientProvider;
        java.util.concurrent.Executor executor37 = restAdapter31.httpExecutor;
        builder0.sethttpExecutor(executor37);
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler42 = null;
        builder41.errorHandler = errorHandler42;
        retrofit.Server server44 = null;
        builder41.server = server44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        java.util.concurrent.Executor executor50 = builder46.getcallbackExecutor();
        builder41.setcallbackExecutor(executor50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        java.util.concurrent.Executor executor56 = builder52.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor58 = serializedObjectSupporter57.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor60 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter59.deserializeObjectConverter5();
        retrofit.Profiler profiler62 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler64 = serializedObjectSupporter63.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean67 = logLevel66.log();
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server39, provider40, executor50, executor56, requestInterceptor58, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler64, log65, logLevel66);
        retrofit.Server server69 = restAdapter68.server;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter68.logLevel = logLevel70;
        retrofit.RequestInterceptor requestInterceptor72 = restAdapter68.requestInterceptor;
        java.util.concurrent.Executor executor73 = restAdapter68.httpExecutor;
        builder0.sethttpExecutor(executor73);
        retrofit.client.Client.Provider provider75 = builder0.getclientProvider();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor13);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(errorHandler64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor72);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNull(provider75);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        builder0.requestInterceptor = requestInterceptor4;
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(executor6);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.Server server4 = builder3.server;
        retrofit.ErrorHandler errorHandler5 = null;
        builder3.errorHandler = errorHandler5;
        java.util.concurrent.Executor executor7 = null;
        builder3.sethttpExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder3.setclientProvider(provider9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor12 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder13 = builder3.setRequestInterceptor(requestInterceptor12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter15 = builder14.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder14.serializedObjectSupporter;
        java.util.concurrent.Executor executor17 = null;
        builder14.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler20 = null;
        builder19.errorHandler = errorHandler20;
        retrofit.Server server22 = null;
        builder19.server = server22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        builder19.setcallbackExecutor(executor28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.setcallbackExecutor(executor31);
        retrofit.client.Client.Provider provider33 = builder30.clientProvider;
        java.util.concurrent.Executor executor34 = builder30.gethttpExecutor();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        java.util.concurrent.Executor executor37 = builder35.callbackExecutor;
        builder30.setcallbackExecutor(executor37);
        retrofit.RestAdapter.Builder builder39 = builder14.setExecutors(executor28, executor37);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler41 = null;
        builder40.errorHandler = errorHandler41;
        retrofit.RequestInterceptor requestInterceptor43 = builder40.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder45 = builder40.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        java.util.concurrent.Executor executor48 = builder46.callbackExecutor;
        builder45.callbackExecutor = executor48;
        retrofit.RestAdapter.Builder builder50 = builder13.setExecutors(executor28, executor48);
        builder0.httpExecutor = executor48;
        retrofit.client.Client.Provider provider52 = builder0.getclientProvider();
        java.util.concurrent.Executor executor53 = builder0.getcallbackExecutor();
        java.util.concurrent.Executor executor54 = builder0.gethttpExecutor();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNotNull(requestInterceptor12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(requestInterceptor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertNotNull(executor54);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        retrofit.converter.Converter converter36 = restAdapter29.getconverter();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNotNull(converter36);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.client.Client client3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setClient(client3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(converter2);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        java.util.concurrent.Executor executor4 = builder0.getcallbackExecutor();
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        org.junit.Assert.assertNotNull(executor4);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString12();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString7();
        retrofit.client.Response response6 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Internal Server Error" + "'", str3, "Internal Server Error");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(response6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler8);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString7();
        java.lang.Class class3 = serializedObjectSupporter0.deserializeObjectClass1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(class3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.converter.Converter converter4 = null;
        builder0.converter = converter4;
        retrofit.Server server6 = builder0.server;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.Server server12 = null;
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        java.util.concurrent.Executor executor18 = builder14.getcallbackExecutor();
        builder9.setcallbackExecutor(executor18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler32 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean35 = logLevel34.log();
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server7, provider8, executor18, executor24, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler32, log33, logLevel34);
        retrofit.ErrorHandler errorHandler37 = restAdapter36.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter38.deserializeObjectConverter5();
        restAdapter36.serializedObjectSupporter = serializedObjectSupporter38;
        retrofit.RestAdapter.Log log42 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter36.logLevel;
        java.lang.String str44 = restAdapter36.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler45 = restAdapter36.geterrorHandler();
        builder0.errorHandler = errorHandler45;
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-Idle" + "'", str44, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler45);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler39 = null;
        builder38.errorHandler = errorHandler39;
        retrofit.Server server41 = null;
        builder38.server = server41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        java.util.concurrent.Executor executor47 = builder43.getcallbackExecutor();
        builder38.setcallbackExecutor(executor47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter54.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler59 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler61 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean64 = logLevel63.log();
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server36, provider37, executor47, executor53, requestInterceptor55, (retrofit.converter.Converter) gsonConverter58, profiler59, errorHandler61, log62, logLevel63);
        retrofit.Server server66 = restAdapter65.server;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter65.logLevel = logLevel67;
        retrofit.client.Client.Provider provider69 = restAdapter65.getclientProvider();
        retrofit.client.Client.Provider provider70 = restAdapter65.clientProvider;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler72 = null;
        builder71.errorHandler = errorHandler72;
        retrofit.RequestInterceptor requestInterceptor74 = builder71.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder76 = builder71.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        builder71.logLevel = logLevel77;
        restAdapter65.setLogLevel(logLevel77);
        restAdapter29.setLogLevel(logLevel77);
        retrofit.client.Client.Provider provider81 = restAdapter29.clientProvider;
        retrofit.ErrorHandler errorHandler82 = restAdapter29.geterrorHandler();
        java.util.concurrent.Executor executor83 = restAdapter29.getcallbackExecutor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider81);
        org.junit.Assert.assertNotNull(errorHandler82);
        org.junit.Assert.assertNotNull(executor83);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.String str42 = serializedObjectSupporter38.deserializeObjectString10();
        java.lang.String str43 = serializedObjectSupporter38.deserializeObjectString13();
        java.lang.String str44 = serializedObjectSupporter38.deserializeObjectString5();
        retrofit.RequestInterceptor requestInterceptor45 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Forbidden" + "'", str42, "Forbidden");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "http://example.com/" + "'", str43, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor45);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler38 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler39 = restAdapter29.geterrorHandler();
        retrofit.ErrorHandler errorHandler40 = restAdapter29.geterrorHandler();
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler44 = null;
        builder43.errorHandler = errorHandler44;
        retrofit.Server server46 = null;
        builder43.server = server46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        java.util.concurrent.Executor executor52 = builder48.getcallbackExecutor();
        builder43.setcallbackExecutor(executor52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Log log56 = null;
        builder54.log = log56;
        java.util.concurrent.Executor executor58 = builder54.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor60 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor62 = serializedObjectSupporter61.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter61.deserializeObjectConverter5();
        retrofit.Profiler profiler64 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler66 = serializedObjectSupporter65.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean69 = logLevel68.log();
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server41, provider42, executor52, executor58, requestInterceptor60, (retrofit.converter.Converter) gsonConverter63, profiler64, errorHandler66, log67, logLevel68);
        retrofit.Server server71 = restAdapter70.server;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter70.logLevel = logLevel72;
        retrofit.client.Client.Provider provider74 = restAdapter70.getclientProvider();
        retrofit.client.Client.Provider provider75 = restAdapter70.clientProvider;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler77 = null;
        builder76.errorHandler = errorHandler77;
        retrofit.RequestInterceptor requestInterceptor79 = builder76.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder81 = builder76.setLogLevel(logLevel80);
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.NONE;
        builder76.logLevel = logLevel82;
        restAdapter70.setLogLevel(logLevel82);
        boolean boolean85 = logLevel82.log();
        restAdapter29.setLogLevel(logLevel82);
        retrofit.RestAdapter.RestHandler restHandler87 = restAdapter29.new RestHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider74);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertNull(requestInterceptor79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.Profiler profiler4 = null;
        builder0.profiler = profiler4;
        retrofit.RestAdapter.Log log6 = builder0.log;
        org.junit.Assert.assertNull(log6);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse1();
        java.util.List<retrofit.client.Header> headerList6 = response5.getHeaders();
        int int7 = response5.getStatus();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 200 + "'", int7 == 200);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response9 = serializedObjectSupporter8.deserializeObjectResponse8();
        java.lang.String str10 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter4();
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder14 = builder0.setServer(server13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = null;
        builder15.setcallbackExecutor(executor16);
        retrofit.client.Client.Provider provider18 = builder15.clientProvider;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter20 = builder19.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder19.serializedObjectSupporter;
        java.util.concurrent.Executor executor22 = null;
        builder19.sethttpExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler25 = null;
        builder24.errorHandler = errorHandler25;
        retrofit.Server server27 = null;
        builder24.server = server27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        java.util.concurrent.Executor executor33 = builder29.getcallbackExecutor();
        builder24.setcallbackExecutor(executor33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.setcallbackExecutor(executor36);
        retrofit.client.Client.Provider provider38 = builder35.clientProvider;
        java.util.concurrent.Executor executor39 = builder35.gethttpExecutor();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        java.util.concurrent.Executor executor42 = builder40.callbackExecutor;
        builder35.setcallbackExecutor(executor42);
        retrofit.RestAdapter.Builder builder44 = builder19.setExecutors(executor33, executor42);
        builder15.setcallbackExecutor(executor42);
        builder0.callbackExecutor = executor42;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler48 = serializedObjectSupporter47.deserializeObjectErrorHandler1();
        retrofit.client.Response response49 = serializedObjectSupporter47.deserializeObjectResponse2();
        builder0.serializedObjectSupporter = serializedObjectSupporter47;
        java.lang.String str51 = serializedObjectSupporter47.deserializeObjectString7();
        retrofit.client.Response response52 = serializedObjectSupporter47.deserializeObjectResponse2();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(response9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(response49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(response52);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.ErrorHandler errorHandler35 = restAdapter33.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter33.setLogLevel(logLevel36);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler39 = serializedObjectSupporter38.deserializeObjectErrorHandler1();
        retrofit.client.Response response40 = serializedObjectSupporter38.deserializeObjectResponse2();
        restAdapter33.serializedObjectSupporter = serializedObjectSupporter38;
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter38.deserializeObjectConverter2();
        builder3.converter = gsonConverter42;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNotNull(errorHandler35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(response40);
        org.junit.Assert.assertNotNull(gsonConverter42);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler35 = null;
        builder34.errorHandler = errorHandler35;
        retrofit.Server server37 = null;
        builder34.server = server37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        java.util.concurrent.Executor executor43 = builder39.getcallbackExecutor();
        builder34.setcallbackExecutor(executor43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        java.util.concurrent.Executor executor49 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor51 = serializedObjectSupporter50.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor53 = serializedObjectSupporter52.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.Profiler profiler55 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler57 = serializedObjectSupporter56.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean60 = logLevel59.log();
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server32, provider33, executor43, executor49, requestInterceptor51, (retrofit.converter.Converter) gsonConverter54, profiler55, errorHandler57, log58, logLevel59);
        retrofit.Server server62 = restAdapter61.server;
        retrofit.ErrorHandler errorHandler63 = restAdapter61.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter61.logLevel;
        restAdapter29.logLevel = logLevel64;
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = restAdapter29.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNotNull(requestInterceptor53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(server62);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(serializedObjectSupporter66);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse7();
        java.lang.String str2 = response1.reason;
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Internal Server Error" + "'", str2, "Internal Server Error");
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        retrofit.client.Response response42 = serializedObjectSupporter38.deserializeObjectResponse4();
        retrofit.client.Response response43 = serializedObjectSupporter38.deserializeObjectResponse2();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertNotNull(response42);
        org.junit.Assert.assertNotNull(response43);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.converter.Converter converter4 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        builder0.logLevel = logLevel6;
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter2.deserializeObjectErrorHandler1();
        retrofit.client.Response response4 = serializedObjectSupporter2.deserializeObjectResponse2();
        java.lang.String str5 = response4.getReason();
        java.util.List<retrofit.client.Header> headerList6 = response4.headers;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.client.Response response9 = serializedObjectSupporter7.deserializeObjectResponse2();
        java.lang.String str10 = response9.getReason();
        java.util.List<retrofit.client.Header> headerList11 = response9.headers;
        int int12 = response9.getStatus();
        retrofit.mime.TypedInput typedInput13 = response9.getBody();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response14 = new retrofit.client.Response(0, "hi!", headerList6, typedInput13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "OK" + "'", str5, "OK");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(response9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "OK" + "'", str10, "OK");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 200 + "'", int12 == 200);
        org.junit.Assert.assertNotNull(typedInput13);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Request request33 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request34 = restAdapter29.logAndReplaceRequest(request33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Profiler profiler30 = restAdapter29.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = restAdapter29.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNull(serializedObjectSupporter31);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter35.deserializeObjectConverter8();
        java.lang.Class class37 = serializedObjectSupporter35.deserializeObjectClass1();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(class37);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        java.lang.String str30 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.Log log31 = restAdapter29.log;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-Idle" + "'", str30, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(log31);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter1();
        java.lang.String str35 = serializedObjectSupporter32.deserializeObjectString11();
        restHandler31.serializedObjectSupporter = serializedObjectSupporter32;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler38 = serializedObjectSupporter37.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter6();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter37.deserializeObjectTypedInput1();
        restHandler31.serializedObjectSupporter = serializedObjectSupporter37;
        retrofit.client.Response response42 = serializedObjectSupporter37.deserializeObjectResponse1();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertNotNull(response42);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Profiler profiler36 = restAdapter29.profiler;
        retrofit.ErrorHandler errorHandler37 = restAdapter29.errorHandler;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNotNull(errorHandler37);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        java.lang.String str33 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor34 = restAdapter29.getrequestInterceptor();
        retrofit.ErrorHandler errorHandler35 = restAdapter29.geterrorHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-Idle" + "'", str33, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertNotNull(errorHandler35);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log38 = builder0.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = builder0.serializedObjectSupporter;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.RestAdapter.Log log34 = restAdapter29.log;
        java.lang.String str35 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor36 = restAdapter29.requestInterceptor;
        retrofit.client.Client.Provider provider37 = restAdapter29.clientProvider;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNull(provider37);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.Server server36 = restAdapter35.server;
        retrofit.ErrorHandler errorHandler37 = restAdapter35.errorHandler;
        builder0.errorHandler = errorHandler37;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response40 = serializedObjectSupporter39.deserializeObjectResponse8();
        retrofit.ErrorHandler errorHandler41 = serializedObjectSupporter39.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder42 = builder0.setErrorHandler(errorHandler41);
        java.util.concurrent.Executor executor43 = builder42.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        java.lang.String str45 = serializedObjectSupporter44.deserializeObjectString4();
        java.lang.String str46 = serializedObjectSupporter44.deserializeObjectString13();
        builder42.serializedObjectSupporter = serializedObjectSupporter44;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler49 = null;
        builder48.errorHandler = errorHandler49;
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = builder48.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder53 = builder48.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = builder53.build();
        retrofit.Server server55 = null;
        retrofit.client.Client.Provider provider56 = null;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler58 = null;
        builder57.errorHandler = errorHandler58;
        retrofit.Server server60 = null;
        builder57.server = server60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        java.util.concurrent.Executor executor66 = builder62.getcallbackExecutor();
        builder57.setcallbackExecutor(executor66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        builder68.ensureSaneDefaults();
        retrofit.RestAdapter.Log log70 = null;
        builder68.log = log70;
        java.util.concurrent.Executor executor72 = builder68.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter73 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor74 = serializedObjectSupporter73.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor76 = serializedObjectSupporter75.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter77 = serializedObjectSupporter75.deserializeObjectConverter5();
        retrofit.Profiler profiler78 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler80 = serializedObjectSupporter79.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean83 = logLevel82.log();
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server55, provider56, executor66, executor72, requestInterceptor74, (retrofit.converter.Converter) gsonConverter77, profiler78, errorHandler80, log81, logLevel82);
        retrofit.ErrorHandler errorHandler85 = restAdapter84.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter84.logLevel;
        retrofit.RestAdapter.Log log87 = restAdapter84.log;
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter84.getLogLevel();
        restAdapter54.logLevel = logLevel88;
        retrofit.converter.Converter converter90 = restAdapter54.converter;
        retrofit.converter.Converter converter91 = restAdapter54.getconverter();
        retrofit.client.Client.Provider provider92 = restAdapter54.getclientProvider();
        builder42.clientProvider = provider92;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(response40);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "OK" + "'", str45, "OK");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com/" + "'", str46, "http://example.com/");
        org.junit.Assert.assertNull(serializedObjectSupporter51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(restAdapter54);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertNotNull(requestInterceptor74);
        org.junit.Assert.assertNotNull(requestInterceptor76);
        org.junit.Assert.assertNotNull(gsonConverter77);
        org.junit.Assert.assertNotNull(errorHandler80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(errorHandler85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter90);
        org.junit.Assert.assertNotNull(converter91);
        org.junit.Assert.assertNotNull(provider92);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str34 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str35 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str36 = restAdapter29.getIDLE_THREAD_NAME();
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.Profiler profiler38 = restAdapter29.getprofiler();
        retrofit.ErrorHandler errorHandler39 = restAdapter29.errorHandler;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Retrofit-" + "'", str34, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-" + "'", str35, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-Idle" + "'", str36, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertNotNull(errorHandler39);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        retrofit.converter.Converter converter37 = restAdapter29.converter;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler39 = null;
        builder38.errorHandler = errorHandler39;
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = builder38.serializedObjectSupporter;
        retrofit.Server server42 = builder38.server;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter44 = builder43.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = builder43.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel46 = builder43.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder38.setLogLevel(logLevel46);
        restAdapter29.setLogLevel(logLevel46);
        retrofit.converter.Converter converter49 = restAdapter29.getconverter();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter37);
        org.junit.Assert.assertNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(serializedObjectSupporter45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(converter49);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.String str42 = serializedObjectSupporter38.deserializeObjectString7();
        retrofit.client.Response response43 = serializedObjectSupporter38.deserializeObjectResponse7();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections44 = serializedObjectSupporter38.deserializeObjectList2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(response43);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter6 = builder5.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder5.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel8 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder9 = builder0.setLogLevel(logLevel8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler11 = serializedObjectSupporter10.deserializeObjectErrorHandler1();
        retrofit.client.Response response12 = serializedObjectSupporter10.deserializeObjectResponse2();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString13();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter10.deserializeObjectConverter5();
        retrofit.RestAdapter.Builder builder15 = builder9.setConverter((retrofit.converter.Converter) gsonConverter14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder9.serializedObjectSupporter;
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(errorHandler11);
        org.junit.Assert.assertNotNull(response12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler38 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler39 = restAdapter29.geterrorHandler();
        retrofit.Profiler profiler40 = restAdapter29.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler43 = serializedObjectSupporter42.deserializeObjectErrorHandler1();
        retrofit.client.Response response44 = serializedObjectSupporter42.deserializeObjectResponse2();
        java.lang.String str45 = response44.getReason();
        java.util.List<retrofit.client.Header> headerList46 = response44.headers;
        retrofit.mime.TypedInput typedInput47 = response44.getBody();
        retrofit.client.Response response49 = restAdapter29.logAndReplaceResponse("Internal Server Error", response44, (long) '4');
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "OK" + "'", str45, "OK");
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(typedInput47);
        org.junit.Assert.assertNotNull(response49);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder0.setLogLevel(logLevel6);
        retrofit.Server server8 = null;
        retrofit.client.Client.Provider provider9 = null;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler11 = null;
        builder10.errorHandler = errorHandler11;
        retrofit.Server server13 = null;
        builder10.server = server13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        java.util.concurrent.Executor executor19 = builder15.getcallbackExecutor();
        builder10.setcallbackExecutor(executor19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        java.util.concurrent.Executor executor25 = builder21.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor29 = serializedObjectSupporter28.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.Profiler profiler31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler33 = serializedObjectSupporter32.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean36 = logLevel35.log();
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server8, provider9, executor19, executor25, requestInterceptor27, (retrofit.converter.Converter) gsonConverter30, profiler31, errorHandler33, log34, logLevel35);
        retrofit.Server server38 = restAdapter37.server;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter37.logLevel = logLevel39;
        retrofit.client.Client.Provider provider41 = restAdapter37.getclientProvider();
        retrofit.RestAdapter.Log log42 = restAdapter37.log;
        retrofit.RestAdapter.Builder builder43 = builder0.setLog(log42);
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler10 = serializedObjectSupporter9.deserializeObjectErrorHandler1();
        builder8.errorHandler = errorHandler10;
        retrofit.Server server12 = null;
        builder8.server = server12;
        retrofit.RestAdapter.Log log14 = builder8.log;
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(errorHandler10);
        org.junit.Assert.assertNotNull(log14);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString12();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString9();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString8();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Internal Server Error" + "'", str3, "Internal Server Error");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response3 = serializedObjectSupporter2.deserializeObjectResponse7();
        retrofit.Server server4 = serializedObjectSupporter2.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder5 = builder0.setServer(server4);
        retrofit.Profiler profiler6 = null;
        builder5.profiler = profiler6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        java.util.concurrent.Executor executor10 = null;
        builder8.callbackExecutor = executor10;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response13 = serializedObjectSupporter12.deserializeObjectResponse8();
        java.lang.String str14 = serializedObjectSupporter12.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder16 = builder8.setConverter((retrofit.converter.Converter) gsonConverter15);
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler20 = null;
        builder19.errorHandler = errorHandler20;
        retrofit.Server server22 = null;
        builder19.server = server22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        builder19.setcallbackExecutor(executor28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        java.util.concurrent.Executor executor34 = builder30.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor36 = serializedObjectSupporter35.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter37.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.Profiler profiler40 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler42 = serializedObjectSupporter41.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean45 = logLevel44.log();
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server17, provider18, executor28, executor34, requestInterceptor36, (retrofit.converter.Converter) gsonConverter39, profiler40, errorHandler42, log43, logLevel44);
        retrofit.Server server47 = restAdapter46.server;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter46.logLevel = logLevel48;
        retrofit.RequestInterceptor requestInterceptor50 = restAdapter46.requestInterceptor;
        retrofit.RestAdapter.Builder builder51 = builder8.setRequestInterceptor(requestInterceptor50);
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler55 = null;
        builder54.errorHandler = errorHandler55;
        retrofit.Server server57 = null;
        builder54.server = server57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        builder59.ensureSaneDefaults();
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        java.util.concurrent.Executor executor63 = builder59.getcallbackExecutor();
        builder54.setcallbackExecutor(executor63);
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        retrofit.RestAdapter.Log log67 = null;
        builder65.log = log67;
        java.util.concurrent.Executor executor69 = builder65.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor71 = serializedObjectSupporter70.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor73 = serializedObjectSupporter72.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter74 = serializedObjectSupporter72.deserializeObjectConverter5();
        retrofit.Profiler profiler75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler77 = serializedObjectSupporter76.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean80 = logLevel79.log();
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server52, provider53, executor63, executor69, requestInterceptor71, (retrofit.converter.Converter) gsonConverter74, profiler75, errorHandler77, log78, logLevel79);
        retrofit.ErrorHandler errorHandler82 = restAdapter81.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter81.getLogLevel();
        java.lang.String str84 = restAdapter81.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor85 = restAdapter81.getcallbackExecutor();
        builder8.sethttpExecutor(executor85);
        java.util.concurrent.Executor executor87 = builder8.gethttpExecutor();
        builder5.callbackExecutor = executor87;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(response13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertNotNull(executor69);
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(gsonConverter74);
        org.junit.Assert.assertNotNull(errorHandler77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(errorHandler82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Retrofit-Idle" + "'", str84, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(executor87);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter2.deserializeObjectErrorHandler1();
        retrofit.client.Response response4 = serializedObjectSupporter2.deserializeObjectResponse2();
        java.lang.String str5 = response4.getReason();
        java.util.List<retrofit.client.Header> headerList6 = response4.headers;
        retrofit.mime.TypedInput typedInput7 = response4.getBody();
        retrofit.mime.TypedInput typedInput8 = response4.getBody();
        java.lang.String str9 = response4.reason;
        java.util.List<retrofit.client.Header> headerList10 = response4.headers;
        retrofit.mime.TypedInput typedInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response12 = new retrofit.client.Response((int) (short) 0, "hi!", headerList10, typedInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "OK" + "'", str5, "OK");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(typedInput7);
        org.junit.Assert.assertNotNull(typedInput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "OK" + "'", str9, "OK");
        org.junit.Assert.assertNotNull(headerList10);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.Server server12 = null;
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        java.util.concurrent.Executor executor18 = builder14.getcallbackExecutor();
        builder9.setcallbackExecutor(executor18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler32 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean35 = logLevel34.log();
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server7, provider8, executor18, executor24, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler32, log33, logLevel34);
        retrofit.ErrorHandler errorHandler37 = restAdapter36.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter36.logLevel;
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter36.getLogLevel();
        restAdapter6.logLevel = logLevel40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.converter.Converter converter44 = builder42.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response46 = serializedObjectSupporter45.deserializeObjectResponse8();
        java.lang.String str47 = serializedObjectSupporter45.deserializeObjectString10();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter45.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder49 = builder42.setConverter((retrofit.converter.Converter) gsonConverter48);
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler53 = null;
        builder52.errorHandler = errorHandler53;
        retrofit.Server server55 = null;
        builder52.server = server55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        java.util.concurrent.Executor executor61 = builder57.getcallbackExecutor();
        builder52.setcallbackExecutor(executor61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        java.util.concurrent.Executor executor67 = builder63.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor69 = serializedObjectSupporter68.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor71 = serializedObjectSupporter70.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter70.deserializeObjectConverter5();
        retrofit.Profiler profiler73 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler75 = serializedObjectSupporter74.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean78 = logLevel77.log();
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server50, provider51, executor61, executor67, requestInterceptor69, (retrofit.converter.Converter) gsonConverter72, profiler73, errorHandler75, log76, logLevel77);
        retrofit.Server server80 = restAdapter79.server;
        retrofit.ErrorHandler errorHandler81 = restAdapter79.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter79.logLevel;
        retrofit.Server server83 = restAdapter79.server;
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter79.getLogLevel();
        builder49.logLevel = logLevel84;
        restAdapter6.setLogLevel(logLevel84);
        boolean boolean87 = logLevel84.log();
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNotNull(response46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Forbidden" + "'", str47, "Forbidden");
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNotNull(requestInterceptor69);
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(errorHandler75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(server80);
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response10 = serializedObjectSupporter9.deserializeObjectResponse8();
        retrofit.ErrorHandler errorHandler11 = serializedObjectSupporter9.deserializeObjectErrorHandler1();
        builder8.errorHandler = errorHandler11;
        retrofit.client.Client.Provider provider13 = builder8.clientProvider;
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(response10);
        org.junit.Assert.assertNotNull(errorHandler11);
        org.junit.Assert.assertNotNull(provider13);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log3 = builder0.log;
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(log3);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.logLevel;
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.converter.Converter converter33 = restAdapter29.converter;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(converter33);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.Server server7 = restAdapter6.getserver();
        retrofit.ErrorHandler errorHandler8 = restAdapter6.errorHandler;
        java.lang.Throwable throwable9 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter6.logException(throwable9, "Forbidden");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(errorHandler8);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor5 = serializedObjectSupporter4.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder6 = builder0.setRequestInterceptor(requestInterceptor5);
        retrofit.RestAdapter.LogLevel logLevel7 = builder6.logLevel;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.client.Client.Provider provider10 = builder8.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel11 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder12 = builder6.setLogLevel(logLevel11);
        retrofit.RestAdapter.Log log13 = builder6.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(log13);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.geterrorHandler();
        retrofit.Server server32 = restAdapter29.server;
        retrofit.Profiler profiler33 = restAdapter29.profiler;
        retrofit.RestAdapter.Log log34 = restAdapter29.log;
        java.lang.Throwable throwable35 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter29.logException(throwable35, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNotNull(log34);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        java.util.concurrent.Executor executor4 = builder0.getcallbackExecutor();
        retrofit.ErrorHandler errorHandler5 = builder0.errorHandler;
        org.junit.Assert.assertNotNull(executor4);
        org.junit.Assert.assertNotNull(errorHandler5);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(log4);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.RequestInterceptor requestInterceptor9 = builder6.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        java.util.concurrent.Executor executor14 = builder12.callbackExecutor;
        builder11.callbackExecutor = executor14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter17 = builder16.converter;
        retrofit.ErrorHandler errorHandler18 = null;
        builder16.errorHandler = errorHandler18;
        retrofit.converter.Converter converter20 = builder16.converter;
        retrofit.client.Client.Provider provider21 = builder16.getclientProvider();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        builder16.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder34 = builder0.setExecutors(executor14, executor31);
        java.util.concurrent.Executor executor35 = builder34.callbackExecutor;
        java.util.concurrent.Executor executor36 = builder34.getcallbackExecutor();
        retrofit.converter.Converter converter37 = builder34.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = builder34.serializedObjectSupporter;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler42 = null;
        builder41.errorHandler = errorHandler42;
        retrofit.Server server44 = null;
        builder41.server = server44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        java.util.concurrent.Executor executor50 = builder46.getcallbackExecutor();
        builder41.setcallbackExecutor(executor50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        java.util.concurrent.Executor executor56 = builder52.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor58 = serializedObjectSupporter57.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor60 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter59.deserializeObjectConverter5();
        retrofit.Profiler profiler62 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler64 = serializedObjectSupporter63.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean67 = logLevel66.log();
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server39, provider40, executor50, executor56, requestInterceptor58, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler64, log65, logLevel66);
        retrofit.ErrorHandler errorHandler69 = restAdapter68.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler70 = restAdapter68.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter68.logLevel;
        builder34.logLevel = logLevel71;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertNull(serializedObjectSupporter38);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(errorHandler64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(errorHandler69);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.ErrorHandler errorHandler35 = restAdapter29.errorHandler;
        retrofit.RestAdapter.Log log36 = restAdapter29.log;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(errorHandler35);
        org.junit.Assert.assertNotNull(log36);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.ErrorHandler errorHandler9 = null;
        builder7.errorHandler = errorHandler9;
        java.util.concurrent.Executor executor11 = null;
        builder7.sethttpExecutor(executor11);
        java.util.concurrent.Executor executor13 = builder7.httpExecutor;
        retrofit.Profiler profiler14 = null;
        builder7.profiler = profiler14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor17 = null;
        builder16.setcallbackExecutor(executor17);
        retrofit.client.Client.Provider provider19 = builder16.clientProvider;
        java.util.concurrent.Executor executor20 = builder16.gethttpExecutor();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        java.util.concurrent.Executor executor23 = builder21.callbackExecutor;
        builder16.setcallbackExecutor(executor23);
        builder7.callbackExecutor = executor23;
        builder0.callbackExecutor = executor23;
        java.util.concurrent.Executor executor27 = builder0.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNull(executor27);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log38 = builder0.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        java.util.concurrent.Executor executor42 = null;
        builder40.callbackExecutor = executor42;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response45 = serializedObjectSupporter44.deserializeObjectResponse8();
        java.lang.String str46 = serializedObjectSupporter44.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter44.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder48 = builder40.setConverter((retrofit.converter.Converter) gsonConverter47);
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler50 = serializedObjectSupporter49.deserializeObjectErrorHandler1();
        builder48.errorHandler = errorHandler50;
        retrofit.Server server52 = builder48.server;
        retrofit.Profiler profiler53 = builder48.profiler;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.ErrorHandler errorHandler56 = null;
        builder54.errorHandler = errorHandler56;
        retrofit.client.Client.Provider provider58 = null;
        builder54.clientProvider = provider58;
        retrofit.Server server60 = null;
        retrofit.client.Client.Provider provider61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler63 = null;
        builder62.errorHandler = errorHandler63;
        retrofit.Server server65 = null;
        builder62.server = server65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Log log69 = null;
        builder67.log = log69;
        java.util.concurrent.Executor executor71 = builder67.getcallbackExecutor();
        builder62.setcallbackExecutor(executor71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.RestAdapter.Log log75 = null;
        builder73.log = log75;
        java.util.concurrent.Executor executor77 = builder73.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor79 = serializedObjectSupporter78.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor81 = serializedObjectSupporter80.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter80.deserializeObjectConverter5();
        retrofit.Profiler profiler83 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter84 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler85 = serializedObjectSupporter84.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean88 = logLevel87.log();
        retrofit.RestAdapter restAdapter89 = new retrofit.RestAdapter(server60, provider61, executor71, executor77, requestInterceptor79, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler85, log86, logLevel87);
        retrofit.ErrorHandler errorHandler90 = restAdapter89.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler91 = restAdapter89.new RestHandler();
        java.util.concurrent.Executor executor92 = restAdapter89.httpExecutor;
        builder54.httpExecutor = executor92;
        builder48.callbackExecutor = executor92;
        retrofit.RequestInterceptor requestInterceptor95 = builder48.requestInterceptor;
        java.util.concurrent.Executor executor96 = builder48.getcallbackExecutor();
        builder0.httpExecutor = executor96;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
        org.junit.Assert.assertNotNull(response45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com/" + "'", str46, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(errorHandler50);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor71);
        org.junit.Assert.assertNotNull(executor77);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(requestInterceptor81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNotNull(errorHandler85);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(errorHandler90);
        org.junit.Assert.assertNotNull(executor92);
        org.junit.Assert.assertNotNull(requestInterceptor95);
        org.junit.Assert.assertNotNull(executor96);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.mime.TypedInput typedInput4 = response3.body;
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(typedInput4);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.RequestInterceptor requestInterceptor5 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString10();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString7();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Forbidden" + "'", str6, "Forbidden");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler10 = serializedObjectSupporter9.deserializeObjectErrorHandler1();
        builder8.errorHandler = errorHandler10;
        retrofit.Server server12 = builder8.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler14 = serializedObjectSupporter13.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter13.deserializeObjectConverter6();
        java.lang.String str16 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.Server server17 = serializedObjectSupporter13.deserializeObjectServer1();
        builder8.server = server17;
        builder8.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(errorHandler10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter29.logLevel;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor34 = null;
        builder33.setcallbackExecutor(executor34);
        retrofit.client.Client.Provider provider36 = builder33.clientProvider;
        java.util.concurrent.Executor executor37 = builder33.gethttpExecutor();
        retrofit.RestAdapter.Log log38 = builder33.log;
        retrofit.RestAdapter.LogLevel logLevel39 = builder33.logLevel;
        restAdapter29.logLevel = logLevel39;
        java.lang.String str41 = restAdapter29.getTHREAD_PREFIX();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Retrofit-" + "'", str41, "Retrofit-");
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse4();
        retrofit.mime.TypedInput typedInput8 = response7.getBody();
        java.util.List<retrofit.client.Header> headerList9 = response7.getHeaders();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertNull(typedInput8);
        org.junit.Assert.assertNotNull(headerList9);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler39 = null;
        builder38.errorHandler = errorHandler39;
        retrofit.Server server41 = null;
        builder38.server = server41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        java.util.concurrent.Executor executor47 = builder43.getcallbackExecutor();
        builder38.setcallbackExecutor(executor47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter54.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler59 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler61 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean64 = logLevel63.log();
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server36, provider37, executor47, executor53, requestInterceptor55, (retrofit.converter.Converter) gsonConverter58, profiler59, errorHandler61, log62, logLevel63);
        retrofit.Server server66 = restAdapter65.server;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter65.logLevel = logLevel67;
        retrofit.client.Client.Provider provider69 = restAdapter65.getclientProvider();
        retrofit.client.Client.Provider provider70 = restAdapter65.clientProvider;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler72 = null;
        builder71.errorHandler = errorHandler72;
        retrofit.RequestInterceptor requestInterceptor74 = builder71.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder76 = builder71.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        builder71.logLevel = logLevel77;
        restAdapter65.setLogLevel(logLevel77);
        restAdapter29.setLogLevel(logLevel77);
        retrofit.client.Client.Provider provider81 = restAdapter29.clientProvider;
        retrofit.SerializedObjectSupporter serializedObjectSupporter82 = restAdapter29.serializedObjectSupporter;
        retrofit.RestAdapter.RestHandler restHandler83 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log84 = restAdapter29.log;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider81);
        org.junit.Assert.assertNotNull(serializedObjectSupporter82);
        org.junit.Assert.assertNotNull(log84);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString12();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter7();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Internal Server Error" + "'", str6, "Internal Server Error");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(gsonConverter8);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        retrofit.Profiler profiler36 = restAdapter29.getprofiler();
        java.lang.String str37 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RequestInterceptor requestInterceptor38 = restAdapter29.getrequestInterceptor();
        java.util.concurrent.Executor executor39 = restAdapter29.callbackExecutor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(executor39);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.Class class42 = serializedObjectSupporter38.deserializeObjectClass1();
        retrofit.client.Response response43 = serializedObjectSupporter38.deserializeObjectResponse7();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections44 = serializedObjectSupporter38.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertNotNull(class42);
        org.junit.Assert.assertNotNull(response43);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler6 = null;
        builder5.errorHandler = errorHandler6;
        java.util.concurrent.Executor executor8 = builder5.gethttpExecutor();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        java.util.concurrent.Executor executor11 = builder9.callbackExecutor;
        builder5.setcallbackExecutor(executor11);
        builder0.callbackExecutor = executor11;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.client.Client.Provider provider16 = builder14.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel17 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder0.setLogLevel(logLevel17);
        java.util.concurrent.Executor executor19 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.converter.Converter converter22 = builder20.converter;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler26 = null;
        builder25.errorHandler = errorHandler26;
        retrofit.Server server28 = null;
        builder25.server = server28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        java.util.concurrent.Executor executor34 = builder30.getcallbackExecutor();
        builder25.setcallbackExecutor(executor34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        java.util.concurrent.Executor executor40 = builder36.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter41.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor44 = serializedObjectSupporter43.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        retrofit.Profiler profiler46 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler48 = serializedObjectSupporter47.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean51 = logLevel50.log();
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server23, provider24, executor34, executor40, requestInterceptor42, (retrofit.converter.Converter) gsonConverter45, profiler46, errorHandler48, log49, logLevel50);
        retrofit.Server server53 = restAdapter52.server;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter52.logLevel = logLevel54;
        java.util.concurrent.Executor executor56 = restAdapter52.gethttpExecutor();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = builder57.server;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        builder57.requestInterceptor = requestInterceptor59;
        retrofit.RestAdapter.Builder builder62 = builder57.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler64 = null;
        builder63.errorHandler = errorHandler64;
        retrofit.RequestInterceptor requestInterceptor66 = builder63.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder68 = builder63.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        java.util.concurrent.Executor executor71 = builder69.callbackExecutor;
        builder68.callbackExecutor = executor71;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter74 = builder73.converter;
        retrofit.ErrorHandler errorHandler75 = null;
        builder73.errorHandler = errorHandler75;
        retrofit.converter.Converter converter77 = builder73.converter;
        retrofit.client.Client.Provider provider78 = builder73.getclientProvider();
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler80 = null;
        builder79.errorHandler = errorHandler80;
        retrofit.Server server82 = null;
        builder79.server = server82;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        builder84.ensureSaneDefaults();
        retrofit.RestAdapter.Log log86 = null;
        builder84.log = log86;
        java.util.concurrent.Executor executor88 = builder84.getcallbackExecutor();
        builder79.setcallbackExecutor(executor88);
        builder73.sethttpExecutor(executor88);
        retrofit.RestAdapter.Builder builder91 = builder57.setExecutors(executor71, executor88);
        retrofit.RestAdapter.Builder builder92 = builder20.setExecutors(executor56, executor71);
        builder0.sethttpExecutor(executor56);
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertNull(converter22);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(requestInterceptor44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(requestInterceptor66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(executor71);
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNull(converter77);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNotNull(executor88);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter29.logLevel;
        retrofit.Server server33 = restAdapter29.server;
        java.util.concurrent.Executor executor34 = restAdapter29.callbackExecutor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertNotNull(executor34);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = builder3.logLevel;
        retrofit.ErrorHandler errorHandler5 = null;
        builder3.errorHandler = errorHandler5;
        retrofit.client.Client.Provider provider7 = null;
        builder3.clientProvider = provider7;
        retrofit.RequestInterceptor requestInterceptor9 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler11 = null;
        builder10.errorHandler = errorHandler11;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder10.serializedObjectSupporter;
        retrofit.Server server14 = builder10.server;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter16 = builder15.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel18 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder10.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder20 = builder3.setLogLevel(logLevel18);
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        builder0.logLevel = logLevel21;
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.Server server3 = null;
        retrofit.client.Client.Provider provider4 = null;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler6 = null;
        builder5.errorHandler = errorHandler6;
        retrofit.Server server8 = null;
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        java.util.concurrent.Executor executor14 = builder10.getcallbackExecutor();
        builder5.setcallbackExecutor(executor14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter21.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor24 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.Profiler profiler26 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler28 = serializedObjectSupporter27.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean31 = logLevel30.log();
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server3, provider4, executor14, executor20, requestInterceptor22, (retrofit.converter.Converter) gsonConverter25, profiler26, errorHandler28, log29, logLevel30);
        retrofit.Server server33 = restAdapter32.server;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter32.logLevel = logLevel34;
        java.util.concurrent.Executor executor36 = restAdapter32.gethttpExecutor();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        builder37.requestInterceptor = requestInterceptor39;
        retrofit.RestAdapter.Builder builder42 = builder37.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler44 = null;
        builder43.errorHandler = errorHandler44;
        retrofit.RequestInterceptor requestInterceptor46 = builder43.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder48 = builder43.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        java.util.concurrent.Executor executor51 = builder49.callbackExecutor;
        builder48.callbackExecutor = executor51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter54 = builder53.converter;
        retrofit.ErrorHandler errorHandler55 = null;
        builder53.errorHandler = errorHandler55;
        retrofit.converter.Converter converter57 = builder53.converter;
        retrofit.client.Client.Provider provider58 = builder53.getclientProvider();
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler60 = null;
        builder59.errorHandler = errorHandler60;
        retrofit.Server server62 = null;
        builder59.server = server62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        java.util.concurrent.Executor executor68 = builder64.getcallbackExecutor();
        builder59.setcallbackExecutor(executor68);
        builder53.sethttpExecutor(executor68);
        retrofit.RestAdapter.Builder builder71 = builder37.setExecutors(executor51, executor68);
        retrofit.RestAdapter.Builder builder72 = builder0.setExecutors(executor36, executor51);
        retrofit.Profiler profiler73 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder74 = builder72.setProfiler(profiler73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(requestInterceptor46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        retrofit.Profiler profiler7 = null;
        builder0.profiler = profiler7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder9.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder14 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.Server server16 = restAdapter15.getserver();
        retrofit.ErrorHandler errorHandler17 = restAdapter15.errorHandler;
        retrofit.Server server18 = restAdapter15.server;
        builder0.server = server18;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(errorHandler17);
        org.junit.Assert.assertNotNull(server18);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        retrofit.Profiler profiler36 = restAdapter29.profiler;
        java.util.concurrent.Executor executor37 = restAdapter29.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter29.logLevel;
        java.lang.String str39 = restAdapter29.getIDLE_THREAD_NAME();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-Idle" + "'", str39, "Retrofit-Idle");
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler38 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler39 = restAdapter29.geterrorHandler();
        retrofit.RequestInterceptor requestInterceptor40 = restAdapter29.requestInterceptor;
        java.util.concurrent.Executor executor41 = restAdapter29.httpExecutor;
        java.util.concurrent.Executor executor42 = restAdapter29.gethttpExecutor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(executor42);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.clientProvider = provider6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response13 = serializedObjectSupporter12.deserializeObjectResponse8();
        java.lang.String str14 = serializedObjectSupporter12.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter4();
        java.lang.String str16 = serializedObjectSupporter12.deserializeObjectString3();
        retrofit.Server server17 = serializedObjectSupporter12.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder18 = builder8.setServer(server17);
        retrofit.RestAdapter.Builder builder19 = builder0.setServer(server17);
        retrofit.RequestInterceptor requestInterceptor20 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(response13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(requestInterceptor20);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString12();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString12();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.RequestInterceptor requestInterceptor7 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Internal Server Error" + "'", str3, "Internal Server Error");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Internal Server Error" + "'", str5, "Internal Server Error");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "OK" + "'", str6, "OK");
        org.junit.Assert.assertNotNull(requestInterceptor7);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler10 = serializedObjectSupporter9.deserializeObjectErrorHandler1();
        builder8.errorHandler = errorHandler10;
        retrofit.Server server12 = builder8.server;
        retrofit.Profiler profiler13 = builder8.profiler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.ErrorHandler errorHandler16 = null;
        builder14.errorHandler = errorHandler16;
        retrofit.client.Client.Provider provider18 = null;
        builder14.clientProvider = provider18;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        java.util.concurrent.Executor executor37 = builder33.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor41 = serializedObjectSupporter40.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler45 = serializedObjectSupporter44.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean48 = logLevel47.log();
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server20, provider21, executor31, executor37, requestInterceptor39, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler45, log46, logLevel47);
        retrofit.ErrorHandler errorHandler50 = restAdapter49.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        java.util.concurrent.Executor executor52 = restAdapter49.httpExecutor;
        builder14.httpExecutor = executor52;
        builder8.callbackExecutor = executor52;
        retrofit.RequestInterceptor requestInterceptor55 = builder8.requestInterceptor;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler59 = null;
        builder58.errorHandler = errorHandler59;
        retrofit.Server server61 = null;
        builder58.server = server61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        java.util.concurrent.Executor executor67 = builder63.getcallbackExecutor();
        builder58.setcallbackExecutor(executor67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.RestAdapter.Log log71 = null;
        builder69.log = log71;
        java.util.concurrent.Executor executor73 = builder69.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor75 = serializedObjectSupporter74.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor77 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter76.deserializeObjectConverter5();
        retrofit.Profiler profiler79 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler81 = serializedObjectSupporter80.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean84 = logLevel83.log();
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server56, provider57, executor67, executor73, requestInterceptor75, (retrofit.converter.Converter) gsonConverter78, profiler79, errorHandler81, log82, logLevel83);
        retrofit.ErrorHandler errorHandler86 = restAdapter85.errorHandler;
        retrofit.ErrorHandler errorHandler87 = restAdapter85.geterrorHandler();
        retrofit.client.Client.Provider provider88 = restAdapter85.getclientProvider();
        retrofit.RequestInterceptor requestInterceptor89 = restAdapter85.getrequestInterceptor();
        retrofit.RestAdapter.Log log90 = restAdapter85.log;
        retrofit.RestAdapter.Builder builder91 = builder8.setLog(log90);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(errorHandler10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(requestInterceptor41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(errorHandler45);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(errorHandler50);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(requestInterceptor77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertNull(provider88);
        org.junit.Assert.assertNotNull(requestInterceptor89);
        org.junit.Assert.assertNotNull(log90);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        retrofit.Profiler profiler36 = restAdapter29.profiler;
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter29.new RestHandler();
        java.lang.String str38 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter41 = builder40.converter;
        retrofit.ErrorHandler errorHandler42 = null;
        builder40.errorHandler = errorHandler42;
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler47 = null;
        builder46.errorHandler = errorHandler47;
        retrofit.Server server49 = null;
        builder46.server = server49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        java.util.concurrent.Executor executor55 = builder51.getcallbackExecutor();
        builder46.setcallbackExecutor(executor55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        java.util.concurrent.Executor executor61 = builder57.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor63 = serializedObjectSupporter62.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor65 = serializedObjectSupporter64.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter64.deserializeObjectConverter5();
        retrofit.Profiler profiler67 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler69 = serializedObjectSupporter68.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean72 = logLevel71.log();
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server44, provider45, executor55, executor61, requestInterceptor63, (retrofit.converter.Converter) gsonConverter66, profiler67, errorHandler69, log70, logLevel71);
        retrofit.Server server74 = restAdapter73.server;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter73.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = builder40.setLogLevel(logLevel75);
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor79 = serializedObjectSupporter78.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString80 = serializedObjectSupporter78.deserializeObjectTypedInput1();
        builder40.serializedObjectSupporter = serializedObjectSupporter78;
        java.lang.Class class82 = serializedObjectSupporter78.deserializeObjectClass1();
        retrofit.client.Response response83 = serializedObjectSupporter78.deserializeObjectResponse7();
        retrofit.client.Response response85 = restAdapter29.logAndReplaceResponse("Internal Server Error", response83, (long) '#');
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Retrofit-Idle" + "'", str38, "Retrofit-Idle");
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(requestInterceptor63);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(errorHandler69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(typedString80);
        org.junit.Assert.assertNotNull(class82);
        org.junit.Assert.assertNotNull(response83);
        org.junit.Assert.assertNotNull(response85);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler35 = null;
        builder34.errorHandler = errorHandler35;
        retrofit.Server server37 = null;
        builder34.server = server37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        java.util.concurrent.Executor executor43 = builder39.getcallbackExecutor();
        builder34.setcallbackExecutor(executor43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        java.util.concurrent.Executor executor49 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor51 = serializedObjectSupporter50.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor53 = serializedObjectSupporter52.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.Profiler profiler55 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler57 = serializedObjectSupporter56.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean60 = logLevel59.log();
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server32, provider33, executor43, executor49, requestInterceptor51, (retrofit.converter.Converter) gsonConverter54, profiler55, errorHandler57, log58, logLevel59);
        retrofit.Server server62 = restAdapter61.server;
        retrofit.ErrorHandler errorHandler63 = restAdapter61.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter61.logLevel;
        restAdapter29.logLevel = logLevel64;
        retrofit.client.Request request66 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request67 = restAdapter29.logAndReplaceRequest(request66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNotNull(requestInterceptor53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(server62);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse3();
        java.lang.Class class5 = serializedObjectSupporter0.deserializeObjectClass1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter7();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertNotNull(class5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder0.setLogLevel(logLevel6);
        retrofit.RestAdapter.LogLevel logLevel8 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor10 = null;
        builder9.setcallbackExecutor(executor10);
        retrofit.client.Client.Provider provider12 = builder9.clientProvider;
        java.util.concurrent.Executor executor13 = builder9.gethttpExecutor();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.callbackExecutor;
        builder9.setcallbackExecutor(executor16);
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler21 = null;
        builder20.errorHandler = errorHandler21;
        retrofit.Server server23 = null;
        builder20.server = server23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        java.util.concurrent.Executor executor29 = builder25.getcallbackExecutor();
        builder20.setcallbackExecutor(executor29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        java.util.concurrent.Executor executor35 = builder31.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor37 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter38.deserializeObjectConverter5();
        retrofit.Profiler profiler41 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler43 = serializedObjectSupporter42.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean46 = logLevel45.log();
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server18, provider19, executor29, executor35, requestInterceptor37, (retrofit.converter.Converter) gsonConverter40, profiler41, errorHandler43, log44, logLevel45);
        retrofit.ErrorHandler errorHandler48 = restAdapter47.errorHandler;
        builder9.errorHandler = errorHandler48;
        retrofit.RestAdapter.Log log50 = builder9.log;
        retrofit.Server server51 = null;
        retrofit.client.Client.Provider provider52 = null;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler54 = null;
        builder53.errorHandler = errorHandler54;
        retrofit.Server server56 = null;
        builder53.server = server56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        java.util.concurrent.Executor executor62 = builder58.getcallbackExecutor();
        builder53.setcallbackExecutor(executor62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        java.util.concurrent.Executor executor68 = builder64.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor70 = serializedObjectSupporter69.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter71 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor72 = serializedObjectSupporter71.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter73 = serializedObjectSupporter71.deserializeObjectConverter5();
        retrofit.Profiler profiler74 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler76 = serializedObjectSupporter75.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean79 = logLevel78.log();
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server51, provider52, executor62, executor68, requestInterceptor70, (retrofit.converter.Converter) gsonConverter73, profiler74, errorHandler76, log77, logLevel78);
        retrofit.ErrorHandler errorHandler81 = restAdapter80.errorHandler;
        builder9.errorHandler = errorHandler81;
        builder0.errorHandler = errorHandler81;
        retrofit.SerializedObjectSupporter serializedObjectSupporter84 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor85 = serializedObjectSupporter84.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter86 = serializedObjectSupporter84.deserializeObjectConverter7();
        retrofit.RestAdapter.Builder builder87 = builder0.setConverter((retrofit.converter.Converter) gsonConverter86);
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        log88.log("Internal Server Error");
        builder0.log = log88;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(requestInterceptor72);
        org.junit.Assert.assertNotNull(gsonConverter73);
        org.junit.Assert.assertNotNull(errorHandler76);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(requestInterceptor85);
        org.junit.Assert.assertNotNull(gsonConverter86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(log88);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler37 = null;
        builder36.errorHandler = errorHandler37;
        retrofit.RequestInterceptor requestInterceptor39 = builder36.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder41 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        java.util.concurrent.Executor executor44 = builder42.callbackExecutor;
        builder41.callbackExecutor = executor44;
        retrofit.RestAdapter.LogLevel logLevel46 = builder41.logLevel;
        restAdapter29.setLogLevel(logLevel46);
        java.util.concurrent.Executor executor48 = restAdapter29.gethttpExecutor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(requestInterceptor39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor48);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString13();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.mime.TypedString typedString5 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(typedString5);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.converter.Converter converter4 = null;
        builder0.converter = converter4;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor7 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder8 = builder0.setRequestInterceptor(requestInterceptor7);
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.Server server10 = null;
        retrofit.client.Client.Provider provider11 = null;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler13 = null;
        builder12.errorHandler = errorHandler13;
        retrofit.Server server15 = null;
        builder12.server = server15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        builder12.setcallbackExecutor(executor21);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        java.util.concurrent.Executor executor27 = builder23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor29 = serializedObjectSupporter28.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter5();
        retrofit.Profiler profiler33 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler35 = serializedObjectSupporter34.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean38 = logLevel37.log();
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server10, provider11, executor21, executor27, requestInterceptor29, (retrofit.converter.Converter) gsonConverter32, profiler33, errorHandler35, log36, logLevel37);
        retrofit.ErrorHandler errorHandler40 = restAdapter39.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter39.logLevel;
        java.util.concurrent.Executor executor43 = restAdapter39.gethttpExecutor();
        builder8.sethttpExecutor(executor43);
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNotNull(requestInterceptor7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(errorHandler35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor43);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel3 = builder0.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler5 = serializedObjectSupporter4.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter6();
        builder0.converter = gsonConverter6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        java.util.concurrent.Executor executor11 = builder8.gethttpExecutor();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        java.util.concurrent.Executor executor14 = builder12.callbackExecutor;
        builder8.setcallbackExecutor(executor14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter17 = builder16.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder16.serializedObjectSupporter;
        java.util.concurrent.Executor executor19 = null;
        builder16.sethttpExecutor(executor19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler22 = null;
        builder21.errorHandler = errorHandler22;
        retrofit.Server server24 = null;
        builder21.server = server24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        java.util.concurrent.Executor executor30 = builder26.getcallbackExecutor();
        builder21.setcallbackExecutor(executor30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor33 = null;
        builder32.setcallbackExecutor(executor33);
        retrofit.client.Client.Provider provider35 = builder32.clientProvider;
        java.util.concurrent.Executor executor36 = builder32.gethttpExecutor();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        java.util.concurrent.Executor executor39 = builder37.callbackExecutor;
        builder32.setcallbackExecutor(executor39);
        retrofit.RestAdapter.Builder builder41 = builder16.setExecutors(executor30, executor39);
        retrofit.RestAdapter.Builder builder42 = builder0.setExecutors(executor14, executor39);
        retrofit.Profiler profiler43 = builder0.profiler;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(profiler43);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.RequestInterceptor requestInterceptor9 = builder6.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        java.util.concurrent.Executor executor14 = builder12.callbackExecutor;
        builder11.callbackExecutor = executor14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter17 = builder16.converter;
        retrofit.ErrorHandler errorHandler18 = null;
        builder16.errorHandler = errorHandler18;
        retrofit.converter.Converter converter20 = builder16.converter;
        retrofit.client.Client.Provider provider21 = builder16.getclientProvider();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        builder16.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder34 = builder0.setExecutors(executor14, executor31);
        java.util.concurrent.Executor executor35 = builder34.callbackExecutor;
        retrofit.Profiler profiler36 = null;
        builder34.profiler = profiler36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter39 = builder38.converter;
        retrofit.ErrorHandler errorHandler40 = null;
        builder38.errorHandler = errorHandler40;
        retrofit.converter.Converter converter42 = builder38.converter;
        retrofit.client.Client.Provider provider43 = builder38.getclientProvider();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler45 = null;
        builder44.errorHandler = errorHandler45;
        retrofit.Server server47 = null;
        builder44.server = server47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        builder44.setcallbackExecutor(executor53);
        builder38.sethttpExecutor(executor53);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler57 = null;
        builder56.errorHandler = errorHandler57;
        retrofit.RequestInterceptor requestInterceptor59 = builder56.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder61 = builder56.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        java.util.concurrent.Executor executor64 = builder62.callbackExecutor;
        builder61.callbackExecutor = executor64;
        retrofit.RestAdapter.Builder builder66 = builder34.setExecutors(executor53, executor64);
        retrofit.RestAdapter.LogLevel logLevel67 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder66.setServer("Internal Server Error");
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNull(requestInterceptor59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString12();
        retrofit.mime.TypedString typedString5 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        retrofit.client.Response response6 = serializedObjectSupporter0.deserializeObjectResponse2();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Internal Server Error" + "'", str4, "Internal Server Error");
        org.junit.Assert.assertNotNull(typedString5);
        org.junit.Assert.assertNotNull(response6);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.clientProvider = provider6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response13 = serializedObjectSupporter12.deserializeObjectResponse8();
        java.lang.String str14 = serializedObjectSupporter12.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter4();
        java.lang.String str16 = serializedObjectSupporter12.deserializeObjectString3();
        retrofit.Server server17 = serializedObjectSupporter12.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder18 = builder8.setServer(server17);
        retrofit.RestAdapter.Builder builder19 = builder0.setServer(server17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor21 = null;
        builder20.setcallbackExecutor(executor21);
        retrofit.client.Client.Provider provider23 = builder20.clientProvider;
        java.util.concurrent.Executor executor24 = builder20.gethttpExecutor();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        java.util.concurrent.Executor executor27 = builder25.callbackExecutor;
        builder20.setcallbackExecutor(executor27);
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler32 = null;
        builder31.errorHandler = errorHandler32;
        retrofit.Server server34 = null;
        builder31.server = server34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        java.util.concurrent.Executor executor40 = builder36.getcallbackExecutor();
        builder31.setcallbackExecutor(executor40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        java.util.concurrent.Executor executor46 = builder42.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor48 = serializedObjectSupporter47.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor50 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter5();
        retrofit.Profiler profiler52 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler54 = serializedObjectSupporter53.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean57 = logLevel56.log();
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server29, provider30, executor40, executor46, requestInterceptor48, (retrofit.converter.Converter) gsonConverter51, profiler52, errorHandler54, log55, logLevel56);
        retrofit.ErrorHandler errorHandler59 = restAdapter58.errorHandler;
        builder20.errorHandler = errorHandler59;
        retrofit.RestAdapter.Log log61 = builder20.log;
        retrofit.Server server62 = null;
        retrofit.client.Client.Provider provider63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler65 = null;
        builder64.errorHandler = errorHandler65;
        retrofit.Server server67 = null;
        builder64.server = server67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.RestAdapter.Log log71 = null;
        builder69.log = log71;
        java.util.concurrent.Executor executor73 = builder69.getcallbackExecutor();
        builder64.setcallbackExecutor(executor73);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Log log77 = null;
        builder75.log = log77;
        java.util.concurrent.Executor executor79 = builder75.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor81 = serializedObjectSupporter80.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter82 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor83 = serializedObjectSupporter82.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter84 = serializedObjectSupporter82.deserializeObjectConverter5();
        retrofit.Profiler profiler85 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler87 = serializedObjectSupporter86.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean90 = logLevel89.log();
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server62, provider63, executor73, executor79, requestInterceptor81, (retrofit.converter.Converter) gsonConverter84, profiler85, errorHandler87, log88, logLevel89);
        retrofit.ErrorHandler errorHandler92 = restAdapter91.errorHandler;
        builder20.errorHandler = errorHandler92;
        builder19.errorHandler = errorHandler92;
        retrofit.Profiler profiler95 = builder19.profiler;
        retrofit.RestAdapter.Log log96 = builder19.log;
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(response13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(errorHandler54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(errorHandler59);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(executor79);
        org.junit.Assert.assertNotNull(requestInterceptor81);
        org.junit.Assert.assertNotNull(requestInterceptor83);
        org.junit.Assert.assertNotNull(gsonConverter84);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(errorHandler92);
        org.junit.Assert.assertNull(profiler95);
        org.junit.Assert.assertNull(log96);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        retrofit.Profiler profiler7 = null;
        builder0.profiler = profiler7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.RequestInterceptor requestInterceptor12 = builder9.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder14 = builder9.setLogLevel(logLevel13);
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.NONE;
        builder9.logLevel = logLevel15;
        builder0.logLevel = logLevel15;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.Profiler profiler35 = restAdapter29.getprofiler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNull(profiler35);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        int int3 = response2.getStatus();
        int int4 = response2.getStatus();
        java.util.List<retrofit.client.Header> headerList5 = response2.headers;
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 200 + "'", int3 == 200);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 200 + "'", int4 == 200);
        org.junit.Assert.assertNotNull(headerList5);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        java.util.concurrent.Executor executor5 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        java.util.concurrent.Executor executor9 = builder6.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response11 = serializedObjectSupporter10.deserializeObjectResponse8();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter4();
        java.lang.String str14 = serializedObjectSupporter10.deserializeObjectString3();
        retrofit.Server server15 = serializedObjectSupporter10.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder16 = builder6.setServer(server15);
        builder0.server = server15;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(response11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        java.util.concurrent.Executor executor5 = builder0.httpExecutor;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.Server server36 = restAdapter35.server;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter35.logLevel = logLevel37;
        java.lang.String str39 = restAdapter35.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor40 = restAdapter35.gethttpExecutor();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.Log log42 = restAdapter35.log;
        retrofit.converter.Converter converter43 = restAdapter35.getconverter();
        retrofit.RestAdapter.Builder builder44 = builder0.setConverter(converter43);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-Idle" + "'", str39, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(converter43);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder10.serializedObjectSupporter;
        retrofit.client.Client.Provider provider13 = builder10.clientProvider;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler17 = null;
        builder16.errorHandler = errorHandler17;
        retrofit.Server server19 = null;
        builder16.server = server19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        java.util.concurrent.Executor executor25 = builder21.getcallbackExecutor();
        builder16.setcallbackExecutor(executor25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler37 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler39 = serializedObjectSupporter38.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean42 = logLevel41.log();
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server14, provider15, executor25, executor31, requestInterceptor33, (retrofit.converter.Converter) gsonConverter36, profiler37, errorHandler39, log40, logLevel41);
        retrofit.Server server44 = restAdapter43.server;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter43.logLevel = logLevel45;
        retrofit.client.Client.Provider provider47 = restAdapter43.getclientProvider();
        retrofit.RestAdapter.Log log48 = restAdapter43.log;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter43.getrequestInterceptor();
        retrofit.RequestInterceptor requestInterceptor50 = restAdapter43.getrequestInterceptor();
        retrofit.ErrorHandler errorHandler51 = restAdapter43.geterrorHandler();
        retrofit.RestAdapter.Builder builder52 = builder10.setErrorHandler(errorHandler51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = builder53.serializedObjectSupporter;
        retrofit.client.Client.Provider provider56 = null;
        builder53.setclientProvider(provider56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        builder58.requestInterceptor = requestInterceptor60;
        retrofit.RestAdapter.Builder builder63 = builder58.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler65 = null;
        builder64.errorHandler = errorHandler65;
        retrofit.RequestInterceptor requestInterceptor67 = builder64.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder69 = builder64.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        builder70.ensureSaneDefaults();
        java.util.concurrent.Executor executor72 = builder70.callbackExecutor;
        builder69.callbackExecutor = executor72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter75 = builder74.converter;
        retrofit.ErrorHandler errorHandler76 = null;
        builder74.errorHandler = errorHandler76;
        retrofit.converter.Converter converter78 = builder74.converter;
        retrofit.client.Client.Provider provider79 = builder74.getclientProvider();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler81 = null;
        builder80.errorHandler = errorHandler81;
        retrofit.Server server83 = null;
        builder80.server = server83;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        builder85.ensureSaneDefaults();
        retrofit.RestAdapter.Log log87 = null;
        builder85.log = log87;
        java.util.concurrent.Executor executor89 = builder85.getcallbackExecutor();
        builder80.setcallbackExecutor(executor89);
        builder74.sethttpExecutor(executor89);
        retrofit.RestAdapter.Builder builder92 = builder58.setExecutors(executor72, executor89);
        builder53.setcallbackExecutor(executor72);
        builder52.httpExecutor = executor72;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(serializedObjectSupporter55);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(requestInterceptor67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertNull(converter75);
        org.junit.Assert.assertNull(converter78);
        org.junit.Assert.assertNull(provider79);
        org.junit.Assert.assertNotNull(executor89);
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str34 = restAdapter29.getTHREAD_PREFIX();
        retrofit.converter.Converter converter35 = restAdapter29.getconverter();
        java.lang.Throwable throwable36 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter29.logException(throwable36, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Retrofit-" + "'", str34, "Retrofit-");
        org.junit.Assert.assertNotNull(converter35);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response3 = serializedObjectSupporter2.deserializeObjectResponse7();
        retrofit.Server server4 = serializedObjectSupporter2.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder5 = builder0.setServer(server4);
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        java.util.concurrent.Executor executor9 = builder6.gethttpExecutor();
        retrofit.Server server10 = null;
        builder6.server = server10;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler15 = null;
        builder14.errorHandler = errorHandler15;
        retrofit.Server server17 = null;
        builder14.server = server17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        builder14.setcallbackExecutor(executor23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        java.util.concurrent.Executor executor29 = builder25.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.Profiler profiler35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler37 = serializedObjectSupporter36.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean40 = logLevel39.log();
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server12, provider13, executor23, executor29, requestInterceptor31, (retrofit.converter.Converter) gsonConverter34, profiler35, errorHandler37, log38, logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder6.setRequestInterceptor(requestInterceptor31);
        builder0.requestInterceptor = requestInterceptor31;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response9 = serializedObjectSupporter8.deserializeObjectResponse8();
        java.lang.String str10 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter4();
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder14 = builder0.setServer(server13);
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter18 = builder17.converter;
        retrofit.ErrorHandler errorHandler19 = null;
        builder17.errorHandler = errorHandler19;
        retrofit.converter.Converter converter21 = builder17.converter;
        retrofit.client.Client.Provider provider22 = builder17.getclientProvider();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler24 = null;
        builder23.errorHandler = errorHandler24;
        retrofit.Server server26 = null;
        builder23.server = server26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        java.util.concurrent.Executor executor32 = builder28.getcallbackExecutor();
        builder23.setcallbackExecutor(executor32);
        builder17.sethttpExecutor(executor32);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        java.util.concurrent.Executor executor37 = builder35.callbackExecutor;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = builder38.serializedObjectSupporter;
        retrofit.client.Client.Provider provider41 = null;
        builder38.setclientProvider(provider41);
        retrofit.RequestInterceptor requestInterceptor43 = builder38.requestInterceptor;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        java.util.concurrent.Executor executor46 = null;
        builder44.callbackExecutor = executor46;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response49 = serializedObjectSupporter48.deserializeObjectResponse8();
        java.lang.String str50 = serializedObjectSupporter48.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter48.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder52 = builder44.setConverter((retrofit.converter.Converter) gsonConverter51);
        retrofit.Profiler profiler53 = null;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        java.util.concurrent.Executor executor56 = null;
        builder54.callbackExecutor = executor56;
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response59 = serializedObjectSupporter58.deserializeObjectResponse8();
        java.lang.String str60 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder62 = builder54.setConverter((retrofit.converter.Converter) gsonConverter61);
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler64 = serializedObjectSupporter63.deserializeObjectErrorHandler1();
        builder62.errorHandler = errorHandler64;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server15, provider16, executor32, executor37, requestInterceptor43, (retrofit.converter.Converter) gsonConverter51, profiler53, errorHandler64, log66, logLevel67);
        java.lang.String str69 = restAdapter68.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider70 = restAdapter68.clientProvider;
        retrofit.Profiler profiler71 = restAdapter68.profiler;
        retrofit.Profiler profiler72 = restAdapter68.getprofiler();
        retrofit.converter.Converter converter73 = restAdapter68.converter;
        java.util.concurrent.Executor executor74 = restAdapter68.httpExecutor;
        builder14.sethttpExecutor(executor74);
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(response9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNull(serializedObjectSupporter40);
        org.junit.Assert.assertNotNull(requestInterceptor43);
        org.junit.Assert.assertNotNull(response49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(response59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(errorHandler64);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Retrofit-" + "'", str69, "Retrofit-");
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(profiler71);
        org.junit.Assert.assertNull(profiler72);
        org.junit.Assert.assertNotNull(converter73);
        org.junit.Assert.assertNotNull(executor74);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter29.setLogLevel(logLevel32);
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter29.logLevel;
        boolean boolean35 = logLevel34.log();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel3 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response7 = serializedObjectSupporter6.deserializeObjectResponse7();
        retrofit.Server server8 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder9 = builder4.setServer(server8);
        builder0.server = server8;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        java.util.concurrent.Executor executor14 = builder11.gethttpExecutor();
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler18 = null;
        builder17.errorHandler = errorHandler18;
        retrofit.Server server20 = null;
        builder17.server = server20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        builder17.setcallbackExecutor(executor26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        java.util.concurrent.Executor executor32 = builder28.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter33.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor36 = serializedObjectSupporter35.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter5();
        retrofit.Profiler profiler38 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler40 = serializedObjectSupporter39.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean43 = logLevel42.log();
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server15, provider16, executor26, executor32, requestInterceptor34, (retrofit.converter.Converter) gsonConverter37, profiler38, errorHandler40, log41, logLevel42);
        retrofit.ErrorHandler errorHandler45 = restAdapter44.errorHandler;
        retrofit.ErrorHandler errorHandler46 = restAdapter44.geterrorHandler();
        retrofit.Server server47 = restAdapter44.server;
        retrofit.RestAdapter.Log log48 = restAdapter44.log;
        retrofit.RestAdapter.Builder builder49 = builder11.setLog(log48);
        builder0.log = log48;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(errorHandler45);
        org.junit.Assert.assertNotNull(errorHandler46);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.Class<?> wildcardClass8 = gsonConverter7.getClass();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder2.errorHandler = errorHandler4;
        retrofit.converter.Converter converter6 = builder2.converter;
        retrofit.client.Client.Provider provider7 = builder2.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        builder2.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder23.setclientProvider(provider26);
        retrofit.RequestInterceptor requestInterceptor28 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = null;
        builder29.callbackExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response34 = serializedObjectSupporter33.deserializeObjectResponse8();
        java.lang.String str35 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder37 = builder29.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = null;
        builder39.callbackExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response44 = serializedObjectSupporter43.deserializeObjectResponse8();
        java.lang.String str45 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder47 = builder39.setConverter((retrofit.converter.Converter) gsonConverter46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        builder47.errorHandler = errorHandler49;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server0, provider1, executor17, executor22, requestInterceptor28, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler49, log51, logLevel52);
        java.lang.String str54 = restAdapter53.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider55 = restAdapter53.clientProvider;
        retrofit.Profiler profiler56 = restAdapter53.profiler;
        retrofit.Profiler profiler57 = restAdapter53.getprofiler();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter53.getLogLevel();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(response34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNull(profiler56);
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.client.Client.Provider provider4 = null;
        builder0.clientProvider = provider4;
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        java.util.concurrent.Executor executor9 = null;
        builder7.callbackExecutor = executor9;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response12 = serializedObjectSupporter11.deserializeObjectResponse8();
        java.lang.String str13 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder15 = builder7.setConverter((retrofit.converter.Converter) gsonConverter14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("OK");
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.client.Client.Provider provider20 = builder18.clientProvider;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler25 = null;
        builder24.errorHandler = errorHandler25;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = builder24.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder29 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler34 = null;
        builder33.errorHandler = errorHandler34;
        retrofit.Server server36 = null;
        builder33.server = server36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        java.util.concurrent.Executor executor42 = builder38.getcallbackExecutor();
        builder33.setcallbackExecutor(executor42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        java.util.concurrent.Executor executor48 = builder44.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor50 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor52 = serializedObjectSupporter51.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter51.deserializeObjectConverter5();
        retrofit.Profiler profiler54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler56 = serializedObjectSupporter55.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean59 = logLevel58.log();
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server31, provider32, executor42, executor48, requestInterceptor50, (retrofit.converter.Converter) gsonConverter53, profiler54, errorHandler56, log57, logLevel58);
        retrofit.ErrorHandler errorHandler61 = restAdapter60.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter60.logLevel;
        retrofit.RestAdapter.Log log63 = restAdapter60.log;
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter60.getLogLevel();
        restAdapter30.logLevel = logLevel64;
        retrofit.converter.Converter converter66 = restAdapter30.converter;
        retrofit.converter.Converter converter67 = restAdapter30.getconverter();
        retrofit.client.Client.Provider provider68 = restAdapter30.getclientProvider();
        builder21.setclientProvider(provider68);
        builder18.setclientProvider(provider68);
        retrofit.RestAdapter.Builder builder71 = builder17.setClient(provider68);
        builder0.clientProvider = provider68;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(response12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(requestInterceptor52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(errorHandler56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter66);
        org.junit.Assert.assertNotNull(converter67);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(builder71);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        retrofit.Profiler profiler36 = restAdapter29.getprofiler();
        retrofit.converter.Converter converter37 = restAdapter29.converter;
        java.util.concurrent.Executor executor38 = restAdapter29.httpExecutor;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.ErrorHandler errorHandler41 = null;
        builder39.errorHandler = errorHandler41;
        java.util.concurrent.Executor executor43 = null;
        builder39.sethttpExecutor(executor43);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel45);
        retrofit.RestAdapter.LogLevel logLevel47 = builder39.logLevel;
        restAdapter29.setLogLevel(logLevel47);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNotNull(converter37);
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler38 = serializedObjectSupporter37.deserializeObjectErrorHandler1();
        retrofit.client.Response response39 = serializedObjectSupporter37.deserializeObjectResponse2();
        retrofit.mime.TypedInput typedInput40 = response39.getBody();
        retrofit.mime.TypedInput typedInput41 = response39.body;
        retrofit.client.Response response43 = restAdapter29.logAndReplaceResponse("OK", response39, (long) 500);
        retrofit.mime.TypedInput typedInput44 = response39.getBody();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(response39);
        org.junit.Assert.assertNotNull(typedInput40);
        org.junit.Assert.assertNotNull(typedInput41);
        org.junit.Assert.assertNotNull(response43);
        org.junit.Assert.assertNotNull(typedInput44);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        retrofit.Profiler profiler36 = restAdapter29.getprofiler();
        java.lang.String str37 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RequestInterceptor requestInterceptor38 = restAdapter29.getrequestInterceptor();
        retrofit.ErrorHandler errorHandler39 = restAdapter29.errorHandler;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(errorHandler39);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.client.Client.Provider provider2 = null;
        builder0.clientProvider = provider2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        java.util.concurrent.Executor executor5 = builder0.httpExecutor;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.ErrorHandler errorHandler36 = restAdapter35.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter37.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        restAdapter35.serializedObjectSupporter = serializedObjectSupporter37;
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = restAdapter35.serializedObjectSupporter;
        retrofit.Profiler profiler42 = restAdapter35.getprofiler();
        java.lang.String str43 = restAdapter35.getTHREAD_PREFIX();
        retrofit.RestAdapter.Log log44 = restAdapter35.log;
        retrofit.RestAdapter.Builder builder45 = builder0.setLog(log44);
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = null;
        builder45.serializedObjectSupporter = serializedObjectSupporter46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.ErrorHandler errorHandler50 = null;
        builder48.errorHandler = errorHandler50;
        retrofit.client.Client.Provider provider52 = builder48.getclientProvider();
        retrofit.Server server53 = null;
        retrofit.client.Client.Provider provider54 = null;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler56 = null;
        builder55.errorHandler = errorHandler56;
        retrofit.Server server58 = null;
        builder55.server = server58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        java.util.concurrent.Executor executor64 = builder60.getcallbackExecutor();
        builder55.setcallbackExecutor(executor64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        java.util.concurrent.Executor executor70 = builder66.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter71 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor72 = serializedObjectSupporter71.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter73 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor74 = serializedObjectSupporter73.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter75 = serializedObjectSupporter73.deserializeObjectConverter5();
        retrofit.Profiler profiler76 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter77 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler78 = serializedObjectSupporter77.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean81 = logLevel80.log();
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter(server53, provider54, executor64, executor70, requestInterceptor72, (retrofit.converter.Converter) gsonConverter75, profiler76, errorHandler78, log79, logLevel80);
        retrofit.Server server83 = restAdapter82.server;
        retrofit.ErrorHandler errorHandler84 = restAdapter82.errorHandler;
        builder48.errorHandler = errorHandler84;
        builder45.errorHandler = errorHandler84;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(serializedObjectSupporter41);
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-" + "'", str43, "Retrofit-");
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNotNull(executor70);
        org.junit.Assert.assertNotNull(requestInterceptor72);
        org.junit.Assert.assertNotNull(requestInterceptor74);
        org.junit.Assert.assertNotNull(gsonConverter75);
        org.junit.Assert.assertNotNull(errorHandler78);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(server83);
        org.junit.Assert.assertNotNull(errorHandler84);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.Server server38 = null;
        builder35.server = server38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        java.util.concurrent.Executor executor44 = builder40.getcallbackExecutor();
        builder35.setcallbackExecutor(executor44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        java.util.concurrent.Executor executor50 = builder46.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor52 = serializedObjectSupporter51.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor54 = serializedObjectSupporter53.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter53.deserializeObjectConverter5();
        retrofit.Profiler profiler56 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler58 = serializedObjectSupporter57.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean61 = logLevel60.log();
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server33, provider34, executor44, executor50, requestInterceptor52, (retrofit.converter.Converter) gsonConverter55, profiler56, errorHandler58, log59, logLevel60);
        retrofit.ErrorHandler errorHandler63 = restAdapter62.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter62.logLevel;
        restAdapter29.logLevel = logLevel64;
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter29.getLogLevel();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNotNull(requestInterceptor52);
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.ErrorHandler errorHandler36 = restAdapter35.errorHandler;
        retrofit.RestAdapter.Builder builder37 = builder5.setErrorHandler(errorHandler36);
        retrofit.RestAdapter.LogLevel logLevel38 = builder37.logLevel;
        boolean boolean39 = logLevel38.log();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.errorHandler;
        java.lang.String str32 = restAdapter29.getTHREAD_PREFIX();
        retrofit.ErrorHandler errorHandler33 = restAdapter29.errorHandler;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter35 = builder34.converter;
        retrofit.ErrorHandler errorHandler36 = null;
        builder34.errorHandler = errorHandler36;
        retrofit.converter.Converter converter38 = builder34.converter;
        retrofit.RestAdapter.LogLevel logLevel39 = builder34.logLevel;
        restAdapter29.setLogLevel(logLevel39);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler39 = null;
        builder38.errorHandler = errorHandler39;
        retrofit.Server server41 = null;
        builder38.server = server41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        java.util.concurrent.Executor executor47 = builder43.getcallbackExecutor();
        builder38.setcallbackExecutor(executor47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter54.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler59 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler61 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean64 = logLevel63.log();
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server36, provider37, executor47, executor53, requestInterceptor55, (retrofit.converter.Converter) gsonConverter58, profiler59, errorHandler61, log62, logLevel63);
        retrofit.Server server66 = restAdapter65.server;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter65.logLevel = logLevel67;
        retrofit.client.Client.Provider provider69 = restAdapter65.getclientProvider();
        retrofit.client.Client.Provider provider70 = restAdapter65.clientProvider;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler72 = null;
        builder71.errorHandler = errorHandler72;
        retrofit.RequestInterceptor requestInterceptor74 = builder71.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder76 = builder71.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        builder71.logLevel = logLevel77;
        restAdapter65.setLogLevel(logLevel77);
        restAdapter29.setLogLevel(logLevel77);
        boolean boolean81 = logLevel77.log();
        boolean boolean82 = logLevel77.log();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter29.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.client.Response response37 = serializedObjectSupporter35.deserializeObjectResponse2();
        restHandler34.serializedObjectSupporter = serializedObjectSupporter35;
        java.lang.String str39 = serializedObjectSupporter35.deserializeObjectString2();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(response37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-Idle" + "'", str39, "Retrofit-Idle");
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.Server server39 = restAdapter38.server;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter38.logLevel = logLevel40;
        retrofit.RequestInterceptor requestInterceptor42 = restAdapter38.requestInterceptor;
        retrofit.RestAdapter.Builder builder43 = builder0.setRequestInterceptor(requestInterceptor42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        java.util.concurrent.Executor executor46 = null;
        builder44.callbackExecutor = executor46;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response49 = serializedObjectSupporter48.deserializeObjectResponse8();
        java.lang.String str50 = serializedObjectSupporter48.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter48.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder52 = builder44.setConverter((retrofit.converter.Converter) gsonConverter51);
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler54 = serializedObjectSupporter53.deserializeObjectErrorHandler1();
        builder52.errorHandler = errorHandler54;
        retrofit.Server server56 = builder52.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler58 = serializedObjectSupporter57.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter6();
        java.lang.String str60 = serializedObjectSupporter57.deserializeObjectString3();
        retrofit.Server server61 = serializedObjectSupporter57.deserializeObjectServer1();
        builder52.server = server61;
        builder43.server = server61;
        retrofit.Profiler profiler64 = null;
        builder43.profiler = profiler64;
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(response49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(errorHandler54);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(server61);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        java.util.concurrent.Executor executor4 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RequestInterceptor requestInterceptor7 = null;
        builder5.requestInterceptor = requestInterceptor7;
        retrofit.RestAdapter.Builder builder10 = builder5.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.RequestInterceptor requestInterceptor14 = builder11.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder16 = builder11.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        java.util.concurrent.Executor executor19 = builder17.callbackExecutor;
        builder16.callbackExecutor = executor19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter22 = builder21.converter;
        retrofit.ErrorHandler errorHandler23 = null;
        builder21.errorHandler = errorHandler23;
        retrofit.converter.Converter converter25 = builder21.converter;
        retrofit.client.Client.Provider provider26 = builder21.getclientProvider();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler28 = null;
        builder27.errorHandler = errorHandler28;
        retrofit.Server server30 = null;
        builder27.server = server30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        java.util.concurrent.Executor executor36 = builder32.getcallbackExecutor();
        builder27.setcallbackExecutor(executor36);
        builder21.sethttpExecutor(executor36);
        retrofit.RestAdapter.Builder builder39 = builder5.setExecutors(executor19, executor36);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        java.util.concurrent.Executor executor44 = builder40.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder45 = builder0.setExecutors(executor19, executor44);
        java.util.concurrent.Executor executor46 = builder45.gethttpExecutor();
        org.junit.Assert.assertNotNull(executor4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNull(converter22);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(executor46);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Profiler profiler34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean39 = logLevel38.log();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server11, provider12, executor22, executor28, requestInterceptor30, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler36, log37, logLevel38);
        retrofit.Server server41 = restAdapter40.server;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder0.setLogLevel(logLevel42);
        retrofit.Server server45 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor46 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNull(requestInterceptor46);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString10();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString8();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Forbidden" + "'", str3, "Forbidden");
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str34 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str35 = restAdapter29.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor36 = restAdapter29.httpExecutor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Retrofit-" + "'", str34, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-" + "'", str35, "Retrofit-");
        org.junit.Assert.assertNotNull(executor36);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.RequestInterceptor requestInterceptor9 = builder6.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        java.util.concurrent.Executor executor14 = builder12.callbackExecutor;
        builder11.callbackExecutor = executor14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter17 = builder16.converter;
        retrofit.ErrorHandler errorHandler18 = null;
        builder16.errorHandler = errorHandler18;
        retrofit.converter.Converter converter20 = builder16.converter;
        retrofit.client.Client.Provider provider21 = builder16.getclientProvider();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        builder16.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder34 = builder0.setExecutors(executor14, executor31);
        java.util.concurrent.Executor executor35 = builder34.callbackExecutor;
        retrofit.RestAdapter.Builder builder37 = builder34.setServer("hi!");
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler41 = null;
        builder40.errorHandler = errorHandler41;
        retrofit.Server server43 = null;
        builder40.server = server43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        java.util.concurrent.Executor executor49 = builder45.getcallbackExecutor();
        builder40.setcallbackExecutor(executor49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        java.util.concurrent.Executor executor55 = builder51.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor59 = serializedObjectSupporter58.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter58.deserializeObjectConverter5();
        retrofit.Profiler profiler61 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler63 = serializedObjectSupporter62.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean66 = logLevel65.log();
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server38, provider39, executor49, executor55, requestInterceptor57, (retrofit.converter.Converter) gsonConverter60, profiler61, errorHandler63, log64, logLevel65);
        retrofit.ErrorHandler errorHandler68 = restAdapter67.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter67.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder34.setLogLevel(logLevel69);
        retrofit.RestAdapter.Log log71 = builder34.log;
        retrofit.ErrorHandler errorHandler72 = builder34.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertNull(errorHandler72);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler39 = null;
        builder38.errorHandler = errorHandler39;
        retrofit.Server server41 = null;
        builder38.server = server41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        java.util.concurrent.Executor executor47 = builder43.getcallbackExecutor();
        builder38.setcallbackExecutor(executor47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter54.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler59 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler61 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean64 = logLevel63.log();
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server36, provider37, executor47, executor53, requestInterceptor55, (retrofit.converter.Converter) gsonConverter58, profiler59, errorHandler61, log62, logLevel63);
        retrofit.Server server66 = restAdapter65.server;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter65.logLevel = logLevel67;
        retrofit.client.Client.Provider provider69 = restAdapter65.getclientProvider();
        retrofit.client.Client.Provider provider70 = restAdapter65.clientProvider;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler72 = null;
        builder71.errorHandler = errorHandler72;
        retrofit.RequestInterceptor requestInterceptor74 = builder71.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder76 = builder71.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        builder71.logLevel = logLevel77;
        restAdapter65.setLogLevel(logLevel77);
        restAdapter29.setLogLevel(logLevel77);
        retrofit.Profiler profiler81 = restAdapter29.getprofiler();
        retrofit.RestAdapter.RestHandler restHandler82 = restAdapter29.new RestHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler81);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.Class class5 = serializedObjectSupporter0.deserializeObjectClass1();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(class5);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.RequestInterceptor requestInterceptor9 = builder8.requestInterceptor;
        java.util.concurrent.Executor executor10 = builder8.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor11 = builder8.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter12.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter12.deserializeObjectConverter8();
        retrofit.Server server15 = serializedObjectSupporter12.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder16 = builder8.setServer(server15);
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        log17.log("hi!");
        retrofit.RestAdapter.Builder builder20 = builder16.setLog(log17);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertNotNull(requestInterceptor11);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.ErrorHandler errorHandler36 = restAdapter35.errorHandler;
        retrofit.RestAdapter.Builder builder37 = builder5.setErrorHandler(errorHandler36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler39 = null;
        builder38.errorHandler = errorHandler39;
        java.util.concurrent.Executor executor41 = builder38.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response43 = serializedObjectSupporter42.deserializeObjectResponse8();
        java.lang.String str44 = serializedObjectSupporter42.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter42.deserializeObjectConverter4();
        java.lang.String str46 = serializedObjectSupporter42.deserializeObjectString3();
        retrofit.Server server47 = serializedObjectSupporter42.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder48 = builder38.setServer(server47);
        retrofit.Server server49 = null;
        retrofit.client.Client.Provider provider50 = null;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler52 = null;
        builder51.errorHandler = errorHandler52;
        retrofit.Server server54 = null;
        builder51.server = server54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        java.util.concurrent.Executor executor60 = builder56.getcallbackExecutor();
        builder51.setcallbackExecutor(executor60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        java.util.concurrent.Executor executor66 = builder62.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor68 = serializedObjectSupporter67.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor70 = serializedObjectSupporter69.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter71 = serializedObjectSupporter69.deserializeObjectConverter5();
        retrofit.Profiler profiler72 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter73 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler74 = serializedObjectSupporter73.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean77 = logLevel76.log();
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server49, provider50, executor60, executor66, requestInterceptor68, (retrofit.converter.Converter) gsonConverter71, profiler72, errorHandler74, log75, logLevel76);
        retrofit.Server server79 = restAdapter78.server;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter78.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = builder38.setLogLevel(logLevel80);
        retrofit.Server server83 = builder38.server;
        builder37.server = server83;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter86 = builder85.converter;
        retrofit.ErrorHandler errorHandler87 = null;
        builder85.errorHandler = errorHandler87;
        retrofit.converter.Converter converter89 = builder85.converter;
        retrofit.RestAdapter.Builder builder90 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel91 = builder90.logLevel;
        builder85.logLevel = logLevel91;
        boolean boolean93 = logLevel91.log();
        retrofit.RestAdapter.Builder builder94 = builder37.setLogLevel(logLevel91);
        boolean boolean95 = logLevel91.log();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNotNull(response43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com/" + "'", str46, "http://example.com/");
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(requestInterceptor68);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(gsonConverter71);
        org.junit.Assert.assertNotNull(errorHandler74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(server83);
        org.junit.Assert.assertNull(converter86);
        org.junit.Assert.assertNull(converter89);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.converter.Converter converter36 = restAdapter29.converter;
        retrofit.RequestInterceptor requestInterceptor37 = restAdapter29.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = restAdapter29.serializedObjectSupporter;
        java.util.concurrent.Executor executor39 = restAdapter29.httpExecutor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(converter36);
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(serializedObjectSupporter38);
        org.junit.Assert.assertNotNull(executor39);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log38 = builder0.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = null;
        builder0.serializedObjectSupporter = serializedObjectSupporter40;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel3 = builder2.logLevel;
        retrofit.client.Client.Provider provider4 = null;
        builder2.setclientProvider(provider4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler7 = serializedObjectSupporter6.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter6();
        java.lang.String str9 = serializedObjectSupporter6.deserializeObjectString3();
        retrofit.Server server10 = serializedObjectSupporter6.deserializeObjectServer1();
        builder2.server = server10;
        retrofit.RestAdapter.Builder builder12 = builder0.setServer(server10);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RequestInterceptor requestInterceptor15 = null;
        builder13.requestInterceptor = requestInterceptor15;
        retrofit.RestAdapter.Builder builder18 = builder13.setServer("Retrofit-");
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler22 = null;
        builder21.errorHandler = errorHandler22;
        retrofit.Server server24 = null;
        builder21.server = server24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        java.util.concurrent.Executor executor30 = builder26.getcallbackExecutor();
        builder21.setcallbackExecutor(executor30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        java.util.concurrent.Executor executor36 = builder32.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter37.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor40 = serializedObjectSupporter39.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter39.deserializeObjectConverter5();
        retrofit.Profiler profiler42 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler44 = serializedObjectSupporter43.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean47 = logLevel46.log();
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server19, provider20, executor30, executor36, requestInterceptor38, (retrofit.converter.Converter) gsonConverter41, profiler42, errorHandler44, log45, logLevel46);
        retrofit.ErrorHandler errorHandler49 = restAdapter48.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter48.logLevel;
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        builder18.log = log51;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        log53.log("Internal Server Error");
        retrofit.RestAdapter.Builder builder56 = builder18.setLog(log53);
        retrofit.Server server57 = null;
        retrofit.client.Client.Provider provider58 = null;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler60 = null;
        builder59.errorHandler = errorHandler60;
        retrofit.Server server62 = null;
        builder59.server = server62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        java.util.concurrent.Executor executor68 = builder64.getcallbackExecutor();
        builder59.setcallbackExecutor(executor68);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        builder70.ensureSaneDefaults();
        retrofit.RestAdapter.Log log72 = null;
        builder70.log = log72;
        java.util.concurrent.Executor executor74 = builder70.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor76 = serializedObjectSupporter75.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter77 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter77.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter79 = serializedObjectSupporter77.deserializeObjectConverter5();
        retrofit.Profiler profiler80 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter81 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler82 = serializedObjectSupporter81.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean85 = logLevel84.log();
        retrofit.RestAdapter restAdapter86 = new retrofit.RestAdapter(server57, provider58, executor68, executor74, requestInterceptor76, (retrofit.converter.Converter) gsonConverter79, profiler80, errorHandler82, log83, logLevel84);
        retrofit.ErrorHandler errorHandler87 = restAdapter86.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter86.getLogLevel();
        retrofit.Server server89 = restAdapter86.server;
        retrofit.RequestInterceptor requestInterceptor90 = restAdapter86.requestInterceptor;
        retrofit.RestAdapter.Builder builder91 = builder56.setRequestInterceptor(requestInterceptor90);
        builder0.requestInterceptor = requestInterceptor90;
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(errorHandler44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(executor74);
        org.junit.Assert.assertNotNull(requestInterceptor76);
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertNotNull(gsonConverter79);
        org.junit.Assert.assertNotNull(errorHandler82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server89);
        org.junit.Assert.assertNotNull(requestInterceptor90);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.Server server3 = null;
        retrofit.client.Client.Provider provider4 = null;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler6 = null;
        builder5.errorHandler = errorHandler6;
        retrofit.Server server8 = null;
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        java.util.concurrent.Executor executor14 = builder10.getcallbackExecutor();
        builder5.setcallbackExecutor(executor14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter21.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor24 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.Profiler profiler26 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler28 = serializedObjectSupporter27.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean31 = logLevel30.log();
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server3, provider4, executor14, executor20, requestInterceptor22, (retrofit.converter.Converter) gsonConverter25, profiler26, errorHandler28, log29, logLevel30);
        retrofit.Server server33 = restAdapter32.server;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter32.logLevel = logLevel34;
        java.util.concurrent.Executor executor36 = restAdapter32.gethttpExecutor();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        builder37.requestInterceptor = requestInterceptor39;
        retrofit.RestAdapter.Builder builder42 = builder37.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler44 = null;
        builder43.errorHandler = errorHandler44;
        retrofit.RequestInterceptor requestInterceptor46 = builder43.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder48 = builder43.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        java.util.concurrent.Executor executor51 = builder49.callbackExecutor;
        builder48.callbackExecutor = executor51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter54 = builder53.converter;
        retrofit.ErrorHandler errorHandler55 = null;
        builder53.errorHandler = errorHandler55;
        retrofit.converter.Converter converter57 = builder53.converter;
        retrofit.client.Client.Provider provider58 = builder53.getclientProvider();
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler60 = null;
        builder59.errorHandler = errorHandler60;
        retrofit.Server server62 = null;
        builder59.server = server62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        java.util.concurrent.Executor executor68 = builder64.getcallbackExecutor();
        builder59.setcallbackExecutor(executor68);
        builder53.sethttpExecutor(executor68);
        retrofit.RestAdapter.Builder builder71 = builder37.setExecutors(executor51, executor68);
        retrofit.RestAdapter.Builder builder72 = builder0.setExecutors(executor36, executor51);
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(requestInterceptor46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.geterrorHandler();
        retrofit.Server server32 = restAdapter29.server;
        retrofit.client.Client.Provider provider33 = restAdapter29.clientProvider;
        java.lang.String str34 = restAdapter29.getIDLE_THREAD_NAME();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Retrofit-Idle" + "'", str34, "Retrofit-Idle");
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        retrofit.converter.Converter converter37 = restAdapter29.converter;
        java.lang.String str38 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter40 = builder39.converter;
        retrofit.ErrorHandler errorHandler41 = null;
        builder39.errorHandler = errorHandler41;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler46 = null;
        builder45.errorHandler = errorHandler46;
        retrofit.Server server48 = null;
        builder45.server = server48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        java.util.concurrent.Executor executor54 = builder50.getcallbackExecutor();
        builder45.setcallbackExecutor(executor54);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        java.util.concurrent.Executor executor60 = builder56.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor62 = serializedObjectSupporter61.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor64 = serializedObjectSupporter63.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.Profiler profiler66 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler68 = serializedObjectSupporter67.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean71 = logLevel70.log();
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server43, provider44, executor54, executor60, requestInterceptor62, (retrofit.converter.Converter) gsonConverter65, profiler66, errorHandler68, log69, logLevel70);
        retrofit.Server server73 = restAdapter72.server;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter72.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder39.setLogLevel(logLevel74);
        restAdapter29.setLogLevel(logLevel74);
        retrofit.ErrorHandler errorHandler78 = restAdapter29.geterrorHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Retrofit-" + "'", str38, "Retrofit-");
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(errorHandler78);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.RequestInterceptor requestInterceptor9 = builder6.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        java.util.concurrent.Executor executor14 = builder12.callbackExecutor;
        builder11.callbackExecutor = executor14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter17 = builder16.converter;
        retrofit.ErrorHandler errorHandler18 = null;
        builder16.errorHandler = errorHandler18;
        retrofit.converter.Converter converter20 = builder16.converter;
        retrofit.client.Client.Provider provider21 = builder16.getclientProvider();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        builder16.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder34 = builder0.setExecutors(executor14, executor31);
        java.util.concurrent.Executor executor35 = builder34.callbackExecutor;
        retrofit.RestAdapter.Builder builder37 = builder34.setServer("hi!");
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler41 = null;
        builder40.errorHandler = errorHandler41;
        retrofit.Server server43 = null;
        builder40.server = server43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        java.util.concurrent.Executor executor49 = builder45.getcallbackExecutor();
        builder40.setcallbackExecutor(executor49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        java.util.concurrent.Executor executor55 = builder51.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor59 = serializedObjectSupporter58.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter58.deserializeObjectConverter5();
        retrofit.Profiler profiler61 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler63 = serializedObjectSupporter62.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean66 = logLevel65.log();
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server38, provider39, executor49, executor55, requestInterceptor57, (retrofit.converter.Converter) gsonConverter60, profiler61, errorHandler63, log64, logLevel65);
        retrofit.ErrorHandler errorHandler68 = restAdapter67.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter67.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder34.setLogLevel(logLevel69);
        retrofit.RestAdapter.Log log71 = builder34.log;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass72 = log71.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(log71);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.client.Client.Provider provider3 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter5 = builder4.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder4.serializedObjectSupporter;
        java.util.concurrent.Executor executor7 = null;
        builder4.sethttpExecutor(executor7);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.Server server12 = null;
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        java.util.concurrent.Executor executor18 = builder14.getcallbackExecutor();
        builder9.setcallbackExecutor(executor18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor21 = null;
        builder20.setcallbackExecutor(executor21);
        retrofit.client.Client.Provider provider23 = builder20.clientProvider;
        java.util.concurrent.Executor executor24 = builder20.gethttpExecutor();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        java.util.concurrent.Executor executor27 = builder25.callbackExecutor;
        builder20.setcallbackExecutor(executor27);
        retrofit.RestAdapter.Builder builder29 = builder4.setExecutors(executor18, executor27);
        builder0.setcallbackExecutor(executor27);
        retrofit.RequestInterceptor requestInterceptor31 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(requestInterceptor31);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.Server server36 = restAdapter35.server;
        retrofit.ErrorHandler errorHandler37 = restAdapter35.errorHandler;
        builder0.errorHandler = errorHandler37;
        retrofit.RestAdapter.Log log39 = builder0.log;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler43 = null;
        builder42.errorHandler = errorHandler43;
        retrofit.Server server45 = null;
        builder42.server = server45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        java.util.concurrent.Executor executor51 = builder47.getcallbackExecutor();
        builder42.setcallbackExecutor(executor51);
        builder40.setcallbackExecutor(executor51);
        retrofit.Server server54 = null;
        retrofit.client.Client.Provider provider55 = null;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler57 = null;
        builder56.errorHandler = errorHandler57;
        retrofit.Server server59 = null;
        builder56.server = server59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.RestAdapter.Log log63 = null;
        builder61.log = log63;
        java.util.concurrent.Executor executor65 = builder61.getcallbackExecutor();
        builder56.setcallbackExecutor(executor65);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Log log69 = null;
        builder67.log = log69;
        java.util.concurrent.Executor executor71 = builder67.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor73 = serializedObjectSupporter72.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor75 = serializedObjectSupporter74.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter76 = serializedObjectSupporter74.deserializeObjectConverter5();
        retrofit.Profiler profiler77 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler79 = serializedObjectSupporter78.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean82 = logLevel81.log();
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter(server54, provider55, executor65, executor71, requestInterceptor73, (retrofit.converter.Converter) gsonConverter76, profiler77, errorHandler79, log80, logLevel81);
        retrofit.Server server84 = restAdapter83.server;
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter83.logLevel = logLevel85;
        retrofit.client.Client.Provider provider87 = restAdapter83.getclientProvider();
        retrofit.client.Client.Provider provider88 = restAdapter83.clientProvider;
        retrofit.RestAdapter.Builder builder89 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler90 = null;
        builder89.errorHandler = errorHandler90;
        retrofit.RequestInterceptor requestInterceptor92 = builder89.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder94 = builder89.setLogLevel(logLevel93);
        retrofit.RestAdapter.LogLevel logLevel95 = retrofit.RestAdapter.LogLevel.NONE;
        builder89.logLevel = logLevel95;
        restAdapter83.setLogLevel(logLevel95);
        retrofit.RestAdapter.Builder builder98 = builder40.setLogLevel(logLevel95);
        builder0.logLevel = logLevel95;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNull(log39);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNotNull(executor65);
        org.junit.Assert.assertNotNull(executor71);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(gsonConverter76);
        org.junit.Assert.assertNotNull(errorHandler79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(server84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider87);
        org.junit.Assert.assertNull(provider88);
        org.junit.Assert.assertNull(requestInterceptor92);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder98);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.client.Client.Provider provider4 = null;
        builder0.clientProvider = provider4;
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.RestAdapter.Log log8 = builder0.log;
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.RestAdapter.Builder builder39 = builder0.setConverter((retrofit.converter.Converter) gsonConverter31);
        retrofit.converter.Converter converter40 = builder0.converter;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(converter40);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.sethttpExecutor(executor3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler6 = null;
        builder5.errorHandler = errorHandler6;
        retrofit.Server server8 = null;
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        java.util.concurrent.Executor executor14 = builder10.getcallbackExecutor();
        builder5.setcallbackExecutor(executor14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor17 = null;
        builder16.setcallbackExecutor(executor17);
        retrofit.client.Client.Provider provider19 = builder16.clientProvider;
        java.util.concurrent.Executor executor20 = builder16.gethttpExecutor();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        java.util.concurrent.Executor executor23 = builder21.callbackExecutor;
        builder16.setcallbackExecutor(executor23);
        retrofit.RestAdapter.Builder builder25 = builder0.setExecutors(executor14, executor23);
        retrofit.Server server26 = null;
        retrofit.client.Client.Provider provider27 = null;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter29 = builder28.converter;
        retrofit.ErrorHandler errorHandler30 = null;
        builder28.errorHandler = errorHandler30;
        retrofit.converter.Converter converter32 = builder28.converter;
        retrofit.client.Client.Provider provider33 = builder28.getclientProvider();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler35 = null;
        builder34.errorHandler = errorHandler35;
        retrofit.Server server37 = null;
        builder34.server = server37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        java.util.concurrent.Executor executor43 = builder39.getcallbackExecutor();
        builder34.setcallbackExecutor(executor43);
        builder28.sethttpExecutor(executor43);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        java.util.concurrent.Executor executor48 = builder46.callbackExecutor;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = builder49.serializedObjectSupporter;
        retrofit.client.Client.Provider provider52 = null;
        builder49.setclientProvider(provider52);
        retrofit.RequestInterceptor requestInterceptor54 = builder49.requestInterceptor;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        java.util.concurrent.Executor executor57 = null;
        builder55.callbackExecutor = executor57;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response60 = serializedObjectSupporter59.deserializeObjectResponse8();
        java.lang.String str61 = serializedObjectSupporter59.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter59.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder63 = builder55.setConverter((retrofit.converter.Converter) gsonConverter62);
        retrofit.Profiler profiler64 = null;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        java.util.concurrent.Executor executor67 = null;
        builder65.callbackExecutor = executor67;
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response70 = serializedObjectSupporter69.deserializeObjectResponse8();
        java.lang.String str71 = serializedObjectSupporter69.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter69.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder73 = builder65.setConverter((retrofit.converter.Converter) gsonConverter72);
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler75 = serializedObjectSupporter74.deserializeObjectErrorHandler1();
        builder73.errorHandler = errorHandler75;
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server26, provider27, executor43, executor48, requestInterceptor54, (retrofit.converter.Converter) gsonConverter62, profiler64, errorHandler75, log77, logLevel78);
        retrofit.RestAdapter.Builder builder80 = builder0.setLog(log77);
        java.util.concurrent.Executor executor81 = null;
        builder0.setcallbackExecutor(executor81);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter83 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNull(serializedObjectSupporter51);
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(response60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "http://example.com/" + "'", str61, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(response70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "http://example.com/" + "'", str71, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(errorHandler75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder80);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.converter.Converter converter4 = builder0.converter;
        retrofit.client.Client.Provider provider5 = builder0.getclientProvider();
        retrofit.RestAdapter.Builder builder7 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter9 = builder8.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder8.serializedObjectSupporter;
        java.util.concurrent.Executor executor11 = null;
        builder8.sethttpExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = null;
        builder24.setcallbackExecutor(executor25);
        retrofit.client.Client.Provider provider27 = builder24.clientProvider;
        java.util.concurrent.Executor executor28 = builder24.gethttpExecutor();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = builder29.callbackExecutor;
        builder24.setcallbackExecutor(executor31);
        retrofit.RestAdapter.Builder builder33 = builder8.setExecutors(executor22, executor31);
        builder0.setcallbackExecutor(executor31);
        retrofit.client.Client client35 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder36 = builder0.setClient(client35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        retrofit.Profiler profiler34 = restAdapter29.getprofiler();
        retrofit.client.Client.Provider provider35 = restAdapter29.getclientProvider();
        retrofit.Server server36 = restAdapter29.server;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertNull(profiler34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(server36);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.sethttpExecutor(executor3);
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler6 = null;
        builder5.errorHandler = errorHandler6;
        retrofit.Server server8 = null;
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        java.util.concurrent.Executor executor14 = builder10.getcallbackExecutor();
        builder5.setcallbackExecutor(executor14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor17 = null;
        builder16.setcallbackExecutor(executor17);
        retrofit.client.Client.Provider provider19 = builder16.clientProvider;
        java.util.concurrent.Executor executor20 = builder16.gethttpExecutor();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        java.util.concurrent.Executor executor23 = builder21.callbackExecutor;
        builder16.setcallbackExecutor(executor23);
        retrofit.RestAdapter.Builder builder25 = builder0.setExecutors(executor14, executor23);
        retrofit.Server server26 = null;
        retrofit.client.Client.Provider provider27 = null;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter29 = builder28.converter;
        retrofit.ErrorHandler errorHandler30 = null;
        builder28.errorHandler = errorHandler30;
        retrofit.converter.Converter converter32 = builder28.converter;
        retrofit.client.Client.Provider provider33 = builder28.getclientProvider();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler35 = null;
        builder34.errorHandler = errorHandler35;
        retrofit.Server server37 = null;
        builder34.server = server37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        java.util.concurrent.Executor executor43 = builder39.getcallbackExecutor();
        builder34.setcallbackExecutor(executor43);
        builder28.sethttpExecutor(executor43);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        java.util.concurrent.Executor executor48 = builder46.callbackExecutor;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = builder49.serializedObjectSupporter;
        retrofit.client.Client.Provider provider52 = null;
        builder49.setclientProvider(provider52);
        retrofit.RequestInterceptor requestInterceptor54 = builder49.requestInterceptor;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        java.util.concurrent.Executor executor57 = null;
        builder55.callbackExecutor = executor57;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response60 = serializedObjectSupporter59.deserializeObjectResponse8();
        java.lang.String str61 = serializedObjectSupporter59.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter59.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder63 = builder55.setConverter((retrofit.converter.Converter) gsonConverter62);
        retrofit.Profiler profiler64 = null;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        java.util.concurrent.Executor executor67 = null;
        builder65.callbackExecutor = executor67;
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response70 = serializedObjectSupporter69.deserializeObjectResponse8();
        java.lang.String str71 = serializedObjectSupporter69.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter69.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder73 = builder65.setConverter((retrofit.converter.Converter) gsonConverter72);
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler75 = serializedObjectSupporter74.deserializeObjectErrorHandler1();
        builder73.errorHandler = errorHandler75;
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server26, provider27, executor43, executor48, requestInterceptor54, (retrofit.converter.Converter) gsonConverter62, profiler64, errorHandler75, log77, logLevel78);
        retrofit.RestAdapter.Builder builder80 = builder0.setLog(log77);
        java.util.concurrent.Executor executor81 = null;
        builder0.setcallbackExecutor(executor81);
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = null;
        builder0.serializedObjectSupporter = serializedObjectSupporter83;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNull(serializedObjectSupporter51);
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(response60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "http://example.com/" + "'", str61, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(response70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "http://example.com/" + "'", str71, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(errorHandler75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder80);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        java.util.concurrent.Executor executor12 = builder9.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response14 = serializedObjectSupporter13.deserializeObjectResponse8();
        java.lang.String str15 = serializedObjectSupporter13.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter13.deserializeObjectConverter4();
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder9.setServer(server18);
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        java.util.concurrent.Executor executor37 = builder33.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor41 = serializedObjectSupporter40.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler45 = serializedObjectSupporter44.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean48 = logLevel47.log();
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server20, provider21, executor31, executor37, requestInterceptor39, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler45, log46, logLevel47);
        retrofit.Server server50 = restAdapter49.server;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder9.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder0.setLogLevel(logLevel51);
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = builder0.serializedObjectSupporter;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNotNull(response14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(requestInterceptor41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(errorHandler45);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(serializedObjectSupporter55);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.client.Client.Provider provider4 = null;
        builder0.clientProvider = provider4;
        retrofit.Server server6 = builder0.server;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.Server server12 = null;
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        java.util.concurrent.Executor executor18 = builder14.getcallbackExecutor();
        builder9.setcallbackExecutor(executor18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler32 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean35 = logLevel34.log();
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server7, provider8, executor18, executor24, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler32, log33, logLevel34);
        retrofit.Server server37 = restAdapter36.server;
        retrofit.ErrorHandler errorHandler38 = restAdapter36.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter36.logLevel;
        retrofit.Server server40 = restAdapter36.server;
        java.util.concurrent.Executor executor41 = restAdapter36.gethttpExecutor();
        builder0.setcallbackExecutor(executor41);
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertNotNull(executor41);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.util.List<retrofit.client.Header> headerList4 = response3.headers;
        int int5 = response3.status;
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(headerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 200 + "'", int5 == 200);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.Server server7 = restAdapter6.getserver();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        java.util.concurrent.Executor executor11 = builder8.gethttpExecutor();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        java.util.concurrent.Executor executor14 = builder12.callbackExecutor;
        builder8.setcallbackExecutor(executor14);
        retrofit.client.Client.Provider provider16 = builder8.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = builder8.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler19 = null;
        builder18.errorHandler = errorHandler19;
        retrofit.RequestInterceptor requestInterceptor21 = builder18.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder23 = builder18.setLogLevel(logLevel22);
        builder8.logLevel = logLevel22;
        restAdapter6.logLevel = logLevel22;
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
        org.junit.Assert.assertNull(requestInterceptor21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse7();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(server3);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.ErrorHandler errorHandler11 = null;
        builder0.errorHandler = errorHandler11;
        retrofit.RestAdapter restAdapter13 = builder0.build();
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(restAdapter13);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString8();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler38 = serializedObjectSupporter37.deserializeObjectErrorHandler1();
        retrofit.client.Response response39 = serializedObjectSupporter37.deserializeObjectResponse2();
        retrofit.mime.TypedInput typedInput40 = response39.getBody();
        retrofit.mime.TypedInput typedInput41 = response39.body;
        retrofit.client.Response response43 = restAdapter29.logAndReplaceResponse("OK", response39, (long) 500);
        retrofit.mime.TypedInput typedInput44 = response43.getBody();
        retrofit.mime.TypedInput typedInput45 = response43.body;
        int int46 = response43.status;
        int int47 = response43.getStatus();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(response39);
        org.junit.Assert.assertNotNull(typedInput40);
        org.junit.Assert.assertNotNull(typedInput41);
        org.junit.Assert.assertNotNull(response43);
        org.junit.Assert.assertNotNull(typedInput44);
        org.junit.Assert.assertNotNull(typedInput45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 200 + "'", int46 == 200);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 200 + "'", int47 == 200);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.ErrorHandler errorHandler11 = null;
        builder0.errorHandler = errorHandler11;
        java.util.concurrent.Executor executor13 = builder0.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor15 = serializedObjectSupporter14.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString16 = serializedObjectSupporter14.deserializeObjectTypedInput1();
        java.lang.String str17 = serializedObjectSupporter14.deserializeObjectString13();
        java.lang.String str18 = serializedObjectSupporter14.deserializeObjectString8();
        builder0.serializedObjectSupporter = serializedObjectSupporter14;
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter14.deserializeObjectConverter8();
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(requestInterceptor15);
        org.junit.Assert.assertNotNull(typedString16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter20);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse4();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Response response9 = serializedObjectSupporter0.deserializeObjectResponse7();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(response9);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter1();
        java.lang.String str35 = serializedObjectSupporter32.deserializeObjectString11();
        restHandler31.serializedObjectSupporter = serializedObjectSupporter32;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = restHandler31.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = restHandler31.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(serializedObjectSupporter37);
        org.junit.Assert.assertNotNull(serializedObjectSupporter38);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse3();
        java.lang.String str6 = response5.getReason();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "OK" + "'", str6, "OK");
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-" + "'", str5, "Retrofit-");
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        retrofit.Profiler profiler7 = null;
        builder0.profiler = profiler7;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response10 = serializedObjectSupporter9.deserializeObjectResponse8();
        java.lang.String str11 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter4();
        builder0.converter = gsonConverter12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler15 = null;
        builder14.errorHandler = errorHandler15;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = builder14.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder19 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter20 = builder19.build();
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler24 = null;
        builder23.errorHandler = errorHandler24;
        retrofit.Server server26 = null;
        builder23.server = server26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        java.util.concurrent.Executor executor32 = builder28.getcallbackExecutor();
        builder23.setcallbackExecutor(executor32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        java.util.concurrent.Executor executor38 = builder34.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor40 = serializedObjectSupporter39.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter41.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter41.deserializeObjectConverter5();
        retrofit.Profiler profiler44 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler46 = serializedObjectSupporter45.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean49 = logLevel48.log();
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server21, provider22, executor32, executor38, requestInterceptor40, (retrofit.converter.Converter) gsonConverter43, profiler44, errorHandler46, log47, logLevel48);
        retrofit.ErrorHandler errorHandler51 = restAdapter50.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter50.logLevel;
        retrofit.RestAdapter.Log log53 = restAdapter50.log;
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter50.getLogLevel();
        restAdapter20.logLevel = logLevel54;
        retrofit.converter.Converter converter56 = restAdapter20.converter;
        retrofit.converter.Converter converter57 = restAdapter20.getconverter();
        retrofit.client.Client.Provider provider58 = restAdapter20.getclientProvider();
        builder0.setclientProvider(provider58);
        retrofit.Server server60 = builder0.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(response10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(restAdapter20);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(errorHandler46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter56);
        org.junit.Assert.assertNotNull(converter57);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNull(server60);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter34 = builder33.converter;
        retrofit.ErrorHandler errorHandler35 = null;
        builder33.errorHandler = errorHandler35;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler40 = null;
        builder39.errorHandler = errorHandler40;
        retrofit.Server server42 = null;
        builder39.server = server42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        java.util.concurrent.Executor executor48 = builder44.getcallbackExecutor();
        builder39.setcallbackExecutor(executor48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        java.util.concurrent.Executor executor54 = builder50.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor56 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor58 = serializedObjectSupporter57.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.Profiler profiler60 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler62 = serializedObjectSupporter61.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean65 = logLevel64.log();
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server37, provider38, executor48, executor54, requestInterceptor56, (retrofit.converter.Converter) gsonConverter59, profiler60, errorHandler62, log63, logLevel64);
        retrofit.Server server67 = restAdapter66.server;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter66.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder70 = builder33.setLogLevel(logLevel68);
        restAdapter29.setLogLevel(logLevel68);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(errorHandler62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder70);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder2.errorHandler = errorHandler4;
        retrofit.converter.Converter converter6 = builder2.converter;
        retrofit.client.Client.Provider provider7 = builder2.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        builder2.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder23.setclientProvider(provider26);
        retrofit.RequestInterceptor requestInterceptor28 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = null;
        builder29.callbackExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response34 = serializedObjectSupporter33.deserializeObjectResponse8();
        java.lang.String str35 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder37 = builder29.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = null;
        builder39.callbackExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response44 = serializedObjectSupporter43.deserializeObjectResponse8();
        java.lang.String str45 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder47 = builder39.setConverter((retrofit.converter.Converter) gsonConverter46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        builder47.errorHandler = errorHandler49;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server0, provider1, executor17, executor22, requestInterceptor28, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler49, log51, logLevel52);
        java.lang.String str54 = restAdapter53.getTHREAD_PREFIX();
        retrofit.Profiler profiler55 = restAdapter53.profiler;
        retrofit.converter.Converter converter56 = restAdapter53.getconverter();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter53.new RestHandler();
        retrofit.converter.Converter converter58 = restAdapter53.getconverter();
        retrofit.converter.Converter converter59 = restAdapter53.getconverter();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(response34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNotNull(converter56);
        org.junit.Assert.assertNotNull(converter58);
        org.junit.Assert.assertNotNull(converter59);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.ErrorHandler errorHandler36 = restAdapter35.errorHandler;
        retrofit.RestAdapter.Builder builder37 = builder5.setErrorHandler(errorHandler36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler39 = null;
        builder38.errorHandler = errorHandler39;
        java.util.concurrent.Executor executor41 = builder38.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response43 = serializedObjectSupporter42.deserializeObjectResponse8();
        java.lang.String str44 = serializedObjectSupporter42.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter42.deserializeObjectConverter4();
        java.lang.String str46 = serializedObjectSupporter42.deserializeObjectString3();
        retrofit.Server server47 = serializedObjectSupporter42.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder48 = builder38.setServer(server47);
        retrofit.Server server49 = null;
        retrofit.client.Client.Provider provider50 = null;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler52 = null;
        builder51.errorHandler = errorHandler52;
        retrofit.Server server54 = null;
        builder51.server = server54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        java.util.concurrent.Executor executor60 = builder56.getcallbackExecutor();
        builder51.setcallbackExecutor(executor60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        java.util.concurrent.Executor executor66 = builder62.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor68 = serializedObjectSupporter67.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor70 = serializedObjectSupporter69.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter71 = serializedObjectSupporter69.deserializeObjectConverter5();
        retrofit.Profiler profiler72 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter73 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler74 = serializedObjectSupporter73.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean77 = logLevel76.log();
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server49, provider50, executor60, executor66, requestInterceptor68, (retrofit.converter.Converter) gsonConverter71, profiler72, errorHandler74, log75, logLevel76);
        retrofit.Server server79 = restAdapter78.server;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter78.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = builder38.setLogLevel(logLevel80);
        retrofit.Server server83 = builder38.server;
        builder37.server = server83;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter86 = builder85.converter;
        retrofit.ErrorHandler errorHandler87 = null;
        builder85.errorHandler = errorHandler87;
        retrofit.converter.Converter converter89 = builder85.converter;
        retrofit.RestAdapter.Builder builder90 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel91 = builder90.logLevel;
        builder85.logLevel = logLevel91;
        boolean boolean93 = logLevel91.log();
        retrofit.RestAdapter.Builder builder94 = builder37.setLogLevel(logLevel91);
        retrofit.RestAdapter.Log log95 = builder94.log;
        java.util.concurrent.Executor executor96 = builder94.getcallbackExecutor();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNotNull(response43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com/" + "'", str46, "http://example.com/");
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(requestInterceptor68);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(gsonConverter71);
        org.junit.Assert.assertNotNull(errorHandler74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(server83);
        org.junit.Assert.assertNull(converter86);
        org.junit.Assert.assertNull(converter89);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNull(log95);
        org.junit.Assert.assertNull(executor96);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.clientProvider = provider6;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder0.serializedObjectSupporter;
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString11();
        retrofit.ErrorHandler errorHandler4 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter7();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        boolean boolean37 = logLevel36.log();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        java.lang.String str33 = restAdapter29.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor34 = restAdapter29.gethttpExecutor();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter29.getLogLevel();
        java.lang.String str36 = restAdapter29.getIDLE_THREAD_NAME();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-Idle" + "'", str33, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-Idle" + "'", str36, "Retrofit-Idle");
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.converter.Converter converter4 = null;
        builder0.converter = converter4;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor7 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder8 = builder0.setRequestInterceptor(requestInterceptor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response10 = serializedObjectSupporter9.deserializeObjectResponse8();
        java.lang.String str11 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter4();
        java.lang.String str13 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.ErrorHandler errorHandler14 = serializedObjectSupporter9.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder15 = builder0.setErrorHandler(errorHandler14);
        retrofit.Profiler profiler16 = null;
        builder0.profiler = profiler16;
        java.util.concurrent.Executor executor18 = builder0.gethttpExecutor();
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNotNull(requestInterceptor7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(response10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(executor18);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.setclientProvider(provider6);
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor9 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder10 = builder0.setRequestInterceptor(requestInterceptor9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter12 = builder11.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.sethttpExecutor(executor14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler17 = null;
        builder16.errorHandler = errorHandler17;
        retrofit.Server server19 = null;
        builder16.server = server19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        java.util.concurrent.Executor executor25 = builder21.getcallbackExecutor();
        builder16.setcallbackExecutor(executor25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor28 = null;
        builder27.setcallbackExecutor(executor28);
        retrofit.client.Client.Provider provider30 = builder27.clientProvider;
        java.util.concurrent.Executor executor31 = builder27.gethttpExecutor();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        java.util.concurrent.Executor executor34 = builder32.callbackExecutor;
        builder27.setcallbackExecutor(executor34);
        retrofit.RestAdapter.Builder builder36 = builder11.setExecutors(executor25, executor34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler38 = null;
        builder37.errorHandler = errorHandler38;
        retrofit.RequestInterceptor requestInterceptor40 = builder37.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder42 = builder37.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        java.util.concurrent.Executor executor45 = builder43.callbackExecutor;
        builder42.callbackExecutor = executor45;
        retrofit.RestAdapter.Builder builder47 = builder10.setExecutors(executor25, executor45);
        retrofit.RequestInterceptor requestInterceptor48 = builder47.requestInterceptor;
        retrofit.Server server49 = builder47.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(requestInterceptor40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNull(server49);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Profiler profiler34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean39 = logLevel38.log();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server11, provider12, executor22, executor28, requestInterceptor30, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler36, log37, logLevel38);
        retrofit.Server server41 = restAdapter40.server;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder0.setLogLevel(logLevel42);
        retrofit.RequestInterceptor requestInterceptor45 = builder44.requestInterceptor;
        retrofit.Server server46 = null;
        retrofit.client.Client.Provider provider47 = null;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler49 = null;
        builder48.errorHandler = errorHandler49;
        retrofit.Server server51 = null;
        builder48.server = server51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        java.util.concurrent.Executor executor57 = builder53.getcallbackExecutor();
        builder48.setcallbackExecutor(executor57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        builder59.ensureSaneDefaults();
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        java.util.concurrent.Executor executor63 = builder59.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor65 = serializedObjectSupporter64.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor67 = serializedObjectSupporter66.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter68 = serializedObjectSupporter66.deserializeObjectConverter5();
        retrofit.Profiler profiler69 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler71 = serializedObjectSupporter70.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean74 = logLevel73.log();
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server46, provider47, executor57, executor63, requestInterceptor65, (retrofit.converter.Converter) gsonConverter68, profiler69, errorHandler71, log72, logLevel73);
        retrofit.ErrorHandler errorHandler76 = restAdapter75.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter77 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter77.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter79 = serializedObjectSupporter77.deserializeObjectConverter5();
        restAdapter75.serializedObjectSupporter = serializedObjectSupporter77;
        retrofit.RestAdapter.Log log81 = restAdapter75.log;
        retrofit.converter.Converter converter82 = restAdapter75.converter;
        retrofit.RequestInterceptor requestInterceptor83 = restAdapter75.requestInterceptor;
        retrofit.RestAdapter.Builder builder84 = builder44.setRequestInterceptor(requestInterceptor83);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(executor57);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(requestInterceptor67);
        org.junit.Assert.assertNotNull(gsonConverter68);
        org.junit.Assert.assertNotNull(errorHandler71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(errorHandler76);
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertNotNull(gsonConverter79);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(converter82);
        org.junit.Assert.assertNotNull(requestInterceptor83);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler39 = null;
        builder38.errorHandler = errorHandler39;
        retrofit.Server server41 = null;
        builder38.server = server41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        java.util.concurrent.Executor executor47 = builder43.getcallbackExecutor();
        builder38.setcallbackExecutor(executor47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter54.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler59 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler61 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean64 = logLevel63.log();
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server36, provider37, executor47, executor53, requestInterceptor55, (retrofit.converter.Converter) gsonConverter58, profiler59, errorHandler61, log62, logLevel63);
        retrofit.Server server66 = restAdapter65.server;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter65.logLevel = logLevel67;
        retrofit.client.Client.Provider provider69 = restAdapter65.getclientProvider();
        retrofit.client.Client.Provider provider70 = restAdapter65.clientProvider;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler72 = null;
        builder71.errorHandler = errorHandler72;
        retrofit.RequestInterceptor requestInterceptor74 = builder71.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder76 = builder71.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        builder71.logLevel = logLevel77;
        restAdapter65.setLogLevel(logLevel77);
        restAdapter29.setLogLevel(logLevel77);
        retrofit.client.Request request81 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request82 = restAdapter29.logAndReplaceRequest(request81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = builder35.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel41;
        restAdapter29.setLogLevel(logLevel41);
        java.lang.String str44 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RequestInterceptor requestInterceptor45 = restAdapter29.getrequestInterceptor();
        java.lang.String str46 = restAdapter29.getTHREAD_PREFIX();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-" + "'", str44, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Retrofit-" + "'", str46, "Retrofit-");
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.String str42 = serializedObjectSupporter38.deserializeObjectString10();
        java.lang.String str43 = serializedObjectSupporter38.deserializeObjectString7();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter38.deserializeObjectConverter8();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Forbidden" + "'", str42, "Forbidden");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "http://example.com/" + "'", str43, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter44);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        java.util.concurrent.Executor executor31 = restAdapter29.gethttpExecutor();
        retrofit.Profiler profiler32 = restAdapter29.profiler;
        retrofit.Profiler profiler33 = restAdapter29.getprofiler();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter29.new RestHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(profiler33);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.setclientProvider(provider6);
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor9 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder10 = builder0.setRequestInterceptor(requestInterceptor9);
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Profiler profiler34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean39 = logLevel38.log();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server11, provider12, executor22, executor28, requestInterceptor30, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler36, log37, logLevel38);
        retrofit.Server server41 = restAdapter40.server;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter40.logLevel = logLevel42;
        retrofit.client.Client.Provider provider44 = restAdapter40.getclientProvider();
        retrofit.RestAdapter.Log log45 = restAdapter40.log;
        retrofit.RequestInterceptor requestInterceptor46 = restAdapter40.requestInterceptor;
        retrofit.RestAdapter.Builder builder47 = builder0.setRequestInterceptor(requestInterceptor46);
        builder47.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler50 = serializedObjectSupporter49.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter6();
        java.lang.String str52 = serializedObjectSupporter49.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter49.deserializeObjectConverter7();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter49.deserializeObjectConverter1();
        retrofit.Server server55 = serializedObjectSupporter49.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder56 = builder47.setServer(server55);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        retrofit.ErrorHandler errorHandler2 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse4();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse8();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertNotNull(errorHandler2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertNotNull(response5);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse3();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString10();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.Class<?> wildcardClass7 = gsonConverter6.getClass();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Forbidden" + "'", str5, "Forbidden");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.Server server6 = null;
        builder5.server = server6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.client.Client.Provider provider10 = null;
        builder8.setclientProvider(provider10);
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder8.setLog(log12);
        builder5.log = log12;
        retrofit.Server server15 = builder5.server;
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(server15);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString12();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Internal Server Error" + "'", str3, "Internal Server Error");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "OK" + "'", str5, "OK");
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Profiler profiler30 = restAdapter29.getprofiler();
        retrofit.Server server31 = restAdapter29.server;
        retrofit.converter.Converter converter32 = restAdapter29.converter;
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter29.getLogLevel();
        java.lang.String str34 = restAdapter29.getIDLE_THREAD_NAME();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertNotNull(converter32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Retrofit-Idle" + "'", str34, "Retrofit-Idle");
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString11();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-" + "'", str5, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder5 = builder0.setLog(log4);
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = null;
        builder6.setcallbackExecutor(executor7);
        retrofit.client.Client.Provider provider9 = builder6.clientProvider;
        java.util.concurrent.Executor executor10 = builder6.gethttpExecutor();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        java.util.concurrent.Executor executor13 = builder11.callbackExecutor;
        builder6.setcallbackExecutor(executor13);
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler18 = null;
        builder17.errorHandler = errorHandler18;
        retrofit.Server server20 = null;
        builder17.server = server20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        builder17.setcallbackExecutor(executor26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        java.util.concurrent.Executor executor32 = builder28.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter33.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor36 = serializedObjectSupporter35.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter35.deserializeObjectConverter5();
        retrofit.Profiler profiler38 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler40 = serializedObjectSupporter39.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean43 = logLevel42.log();
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server15, provider16, executor26, executor32, requestInterceptor34, (retrofit.converter.Converter) gsonConverter37, profiler38, errorHandler40, log41, logLevel42);
        retrofit.ErrorHandler errorHandler45 = restAdapter44.errorHandler;
        builder6.errorHandler = errorHandler45;
        builder0.errorHandler = errorHandler45;
        retrofit.RequestInterceptor requestInterceptor48 = builder0.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(executor13);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(errorHandler45);
        org.junit.Assert.assertNull(requestInterceptor48);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Server server36 = restAdapter29.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = restAdapter29.serializedObjectSupporter;
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter29.new RestHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertNotNull(serializedObjectSupporter37);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections5 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler38 = restAdapter29.geterrorHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = restAdapter29.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter41 = builder40.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder40.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        builder40.requestInterceptor = requestInterceptor43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler46 = null;
        builder45.errorHandler = errorHandler46;
        java.util.concurrent.Executor executor48 = builder45.gethttpExecutor();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        java.util.concurrent.Executor executor51 = builder49.callbackExecutor;
        builder45.setcallbackExecutor(executor51);
        builder40.callbackExecutor = executor51;
        retrofit.converter.Converter converter54 = builder40.converter;
        retrofit.client.Client.Provider provider55 = null;
        builder40.setclientProvider(provider55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = builder57.server;
        retrofit.ErrorHandler errorHandler59 = null;
        builder57.errorHandler = errorHandler59;
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor62 = serializedObjectSupporter61.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder63 = builder57.setRequestInterceptor(requestInterceptor62);
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler65 = serializedObjectSupporter64.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter64.deserializeObjectConverter6();
        java.lang.String str67 = serializedObjectSupporter64.deserializeObjectString3();
        retrofit.Server server68 = serializedObjectSupporter64.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder69 = builder63.setServer(server68);
        retrofit.RestAdapter.Builder builder70 = builder40.setServer(server68);
        retrofit.ErrorHandler errorHandler71 = builder70.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.NONE;
        builder70.logLevel = logLevel72;
        restAdapter29.logLevel = logLevel72;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(serializedObjectSupporter39);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "http://example.com/" + "'", str67, "http://example.com/");
        org.junit.Assert.assertNotNull(server68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(errorHandler71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse1();
        java.lang.String str4 = response3.getReason();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "OK" + "'", str4, "OK");
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.ErrorHandler errorHandler4 = builder0.errorHandler;
        java.util.concurrent.Executor executor5 = builder0.gethttpExecutor();
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.ErrorHandler errorHandler36 = restAdapter35.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        java.lang.String str39 = restAdapter35.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor40 = restAdapter35.gethttpExecutor();
        java.util.concurrent.Executor executor41 = restAdapter35.httpExecutor;
        builder0.httpExecutor = executor41;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-" + "'", str39, "Retrofit-");
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNotNull(executor41);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.Server server7 = builder6.server;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        builder6.requestInterceptor = requestInterceptor8;
        retrofit.RestAdapter.Builder builder11 = builder6.setServer("Retrofit-");
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler15 = null;
        builder14.errorHandler = errorHandler15;
        retrofit.Server server17 = null;
        builder14.server = server17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        builder14.setcallbackExecutor(executor23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        java.util.concurrent.Executor executor29 = builder25.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.Profiler profiler35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler37 = serializedObjectSupporter36.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean40 = logLevel39.log();
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server12, provider13, executor23, executor29, requestInterceptor31, (retrofit.converter.Converter) gsonConverter34, profiler35, errorHandler37, log38, logLevel39);
        retrofit.ErrorHandler errorHandler42 = restAdapter41.errorHandler;
        retrofit.RestAdapter.Builder builder43 = builder11.setErrorHandler(errorHandler42);
        retrofit.RestAdapter.Builder builder44 = builder0.setErrorHandler(errorHandler42);
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        log45.log("hi!");
        log45.log("Internal Server Error");
        retrofit.RestAdapter.Builder builder50 = builder44.setLog(log45);
        retrofit.Server server51 = builder50.server;
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(server51);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.Class class42 = serializedObjectSupporter38.deserializeObjectClass1();
        retrofit.client.Response response43 = serializedObjectSupporter38.deserializeObjectResponse7();
        retrofit.client.Response response44 = serializedObjectSupporter38.deserializeObjectResponse4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter45 = serializedObjectSupporter38.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertNotNull(class42);
        org.junit.Assert.assertNotNull(response43);
        org.junit.Assert.assertNotNull(response44);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.geterrorHandler();
        retrofit.Server server32 = restAdapter29.server;
        retrofit.converter.Converter converter33 = restAdapter29.getconverter();
        retrofit.converter.Converter converter34 = restAdapter29.converter;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNotNull(converter34);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        java.lang.String str32 = restAdapter29.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNull(provider33);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response4 = serializedObjectSupporter3.deserializeObjectResponse8();
        java.lang.String str5 = serializedObjectSupporter3.deserializeObjectString10();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter3.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder7 = builder0.setConverter((retrofit.converter.Converter) gsonConverter6);
        retrofit.client.Client.Provider provider8 = null;
        builder0.clientProvider = provider8;
        retrofit.Server server10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder11 = builder0.setServer(server10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Forbidden" + "'", str5, "Forbidden");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.String str42 = serializedObjectSupporter38.deserializeObjectString7();
        retrofit.client.Response response43 = serializedObjectSupporter38.deserializeObjectResponse7();
        java.lang.String str44 = response43.getReason();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(response43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Internal Server Error" + "'", str44, "Internal Server Error");
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler38 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler39 = restAdapter29.geterrorHandler();
        retrofit.ErrorHandler errorHandler40 = restAdapter29.geterrorHandler();
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler44 = null;
        builder43.errorHandler = errorHandler44;
        retrofit.Server server46 = null;
        builder43.server = server46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        java.util.concurrent.Executor executor52 = builder48.getcallbackExecutor();
        builder43.setcallbackExecutor(executor52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Log log56 = null;
        builder54.log = log56;
        java.util.concurrent.Executor executor58 = builder54.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor60 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor62 = serializedObjectSupporter61.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter61.deserializeObjectConverter5();
        retrofit.Profiler profiler64 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler66 = serializedObjectSupporter65.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean69 = logLevel68.log();
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server41, provider42, executor52, executor58, requestInterceptor60, (retrofit.converter.Converter) gsonConverter63, profiler64, errorHandler66, log67, logLevel68);
        retrofit.Server server71 = restAdapter70.server;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter70.logLevel = logLevel72;
        retrofit.client.Client.Provider provider74 = restAdapter70.getclientProvider();
        retrofit.client.Client.Provider provider75 = restAdapter70.clientProvider;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler77 = null;
        builder76.errorHandler = errorHandler77;
        retrofit.RequestInterceptor requestInterceptor79 = builder76.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder81 = builder76.setLogLevel(logLevel80);
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.NONE;
        builder76.logLevel = logLevel82;
        restAdapter70.setLogLevel(logLevel82);
        boolean boolean85 = logLevel82.log();
        restAdapter29.setLogLevel(logLevel82);
        retrofit.Server server87 = restAdapter29.server;
        java.util.concurrent.Executor executor88 = restAdapter29.getcallbackExecutor();
        java.lang.Throwable throwable89 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter29.logException(throwable89, "Forbidden");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider74);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertNull(requestInterceptor79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(server87);
        org.junit.Assert.assertNotNull(executor88);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter29.new RestHandler();
        java.lang.Object obj33 = null;
        java.lang.reflect.Method method34 = null;
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler38 = null;
        builder37.errorHandler = errorHandler38;
        retrofit.Server server40 = null;
        builder37.server = server40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        java.util.concurrent.Executor executor46 = builder42.getcallbackExecutor();
        builder37.setcallbackExecutor(executor46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        java.util.concurrent.Executor executor52 = builder48.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor54 = serializedObjectSupporter53.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor56 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter55.deserializeObjectConverter5();
        retrofit.Profiler profiler58 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler60 = serializedObjectSupporter59.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean63 = logLevel62.log();
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server35, provider36, executor46, executor52, requestInterceptor54, (retrofit.converter.Converter) gsonConverter57, profiler58, errorHandler60, log61, logLevel62);
        retrofit.Server server65 = restAdapter64.server;
        retrofit.ErrorHandler errorHandler66 = restAdapter64.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler68 = serializedObjectSupporter67.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter69 = serializedObjectSupporter67.deserializeObjectConverter6();
        java.lang.String str70 = serializedObjectSupporter67.deserializeObjectString3();
        java.lang.Object[] objArray71 = new java.lang.Object[] { errorHandler66, serializedObjectSupporter67 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = restHandler32.invoke(obj33, method34, objArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(gsonConverter69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "http://example.com/" + "'", str70, "http://example.com/");
        org.junit.Assert.assertNotNull(objArray71);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.converter.Converter converter36 = restAdapter29.converter;
        retrofit.RequestInterceptor requestInterceptor37 = restAdapter29.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = restAdapter29.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor39 = restAdapter29.requestInterceptor;
        retrofit.Profiler profiler40 = restAdapter29.getprofiler();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter29.new RestHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(converter36);
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(serializedObjectSupporter38);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNull(profiler40);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        int int2 = response1.getStatus();
        retrofit.mime.TypedInput typedInput3 = response1.getBody();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 200 + "'", int2 == 200);
        org.junit.Assert.assertNull(typedInput3);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.geterrorHandler();
        retrofit.client.Client.Provider provider32 = restAdapter29.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler35 = serializedObjectSupporter34.deserializeObjectErrorHandler1();
        retrofit.client.Response response36 = serializedObjectSupporter34.deserializeObjectResponse2();
        int int37 = response36.getStatus();
        retrofit.client.Response response39 = restAdapter29.logAndReplaceResponse("http://example.com/", response36, (long) '#');
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter41 = builder40.converter;
        retrofit.ErrorHandler errorHandler42 = null;
        builder40.errorHandler = errorHandler42;
        retrofit.converter.Converter converter44 = builder40.converter;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        builder40.logLevel = logLevel46;
        boolean boolean48 = logLevel46.log();
        restAdapter29.setLogLevel(logLevel46);
        retrofit.RequestInterceptor requestInterceptor50 = restAdapter29.requestInterceptor;
        retrofit.converter.Converter converter51 = restAdapter29.getconverter();
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler53 = null;
        builder52.errorHandler = errorHandler53;
        java.util.concurrent.Executor executor55 = builder52.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response57 = serializedObjectSupporter56.deserializeObjectResponse8();
        java.lang.String str58 = serializedObjectSupporter56.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter4();
        java.lang.String str60 = serializedObjectSupporter56.deserializeObjectString3();
        retrofit.Server server61 = serializedObjectSupporter56.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder62 = builder52.setServer(server61);
        retrofit.Server server63 = null;
        retrofit.client.Client.Provider provider64 = null;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler66 = null;
        builder65.errorHandler = errorHandler66;
        retrofit.Server server68 = null;
        builder65.server = server68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        builder70.ensureSaneDefaults();
        retrofit.RestAdapter.Log log72 = null;
        builder70.log = log72;
        java.util.concurrent.Executor executor74 = builder70.getcallbackExecutor();
        builder65.setcallbackExecutor(executor74);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.RestAdapter.Log log78 = null;
        builder76.log = log78;
        java.util.concurrent.Executor executor80 = builder76.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter81 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor82 = serializedObjectSupporter81.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor84 = serializedObjectSupporter83.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter85 = serializedObjectSupporter83.deserializeObjectConverter5();
        retrofit.Profiler profiler86 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter87 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler88 = serializedObjectSupporter87.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log89 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean91 = logLevel90.log();
        retrofit.RestAdapter restAdapter92 = new retrofit.RestAdapter(server63, provider64, executor74, executor80, requestInterceptor82, (retrofit.converter.Converter) gsonConverter85, profiler86, errorHandler88, log89, logLevel90);
        retrofit.Server server93 = restAdapter92.server;
        retrofit.RestAdapter.LogLevel logLevel94 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter92.logLevel = logLevel94;
        retrofit.RestAdapter.Builder builder96 = builder52.setLogLevel(logLevel94);
        restAdapter29.setLogLevel(logLevel94);
        retrofit.RestAdapter.LogLevel logLevel98 = restAdapter29.getLogLevel();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(errorHandler35);
        org.junit.Assert.assertNotNull(response36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 200 + "'", int37 == 200);
        org.junit.Assert.assertNotNull(response39);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(converter51);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNotNull(response57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "http://example.com/" + "'", str58, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(executor74);
        org.junit.Assert.assertNotNull(executor80);
        org.junit.Assert.assertNotNull(requestInterceptor82);
        org.junit.Assert.assertNotNull(requestInterceptor84);
        org.junit.Assert.assertNotNull(gsonConverter85);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertNotNull(log89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(server93);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertTrue("'" + logLevel98 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel98.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.logLevel;
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter29.new RestHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log32);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.converter.Converter converter4 = builder0.converter;
        retrofit.client.Client.Provider provider5 = builder0.getclientProvider();
        retrofit.RestAdapter.Builder builder7 = builder0.setServer("hi!");
        retrofit.client.Client.Provider provider8 = builder7.getclientProvider();
        retrofit.client.Client.Provider provider9 = builder7.getclientProvider();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.Server server3 = null;
        retrofit.client.Client.Provider provider4 = null;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler6 = null;
        builder5.errorHandler = errorHandler6;
        retrofit.Server server8 = null;
        builder5.server = server8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        java.util.concurrent.Executor executor14 = builder10.getcallbackExecutor();
        builder5.setcallbackExecutor(executor14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter21.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor24 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter23.deserializeObjectConverter5();
        retrofit.Profiler profiler26 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler28 = serializedObjectSupporter27.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean31 = logLevel30.log();
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server3, provider4, executor14, executor20, requestInterceptor22, (retrofit.converter.Converter) gsonConverter25, profiler26, errorHandler28, log29, logLevel30);
        retrofit.Server server33 = restAdapter32.server;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter32.logLevel = logLevel34;
        java.util.concurrent.Executor executor36 = restAdapter32.gethttpExecutor();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        builder37.requestInterceptor = requestInterceptor39;
        retrofit.RestAdapter.Builder builder42 = builder37.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler44 = null;
        builder43.errorHandler = errorHandler44;
        retrofit.RequestInterceptor requestInterceptor46 = builder43.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder48 = builder43.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        java.util.concurrent.Executor executor51 = builder49.callbackExecutor;
        builder48.callbackExecutor = executor51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter54 = builder53.converter;
        retrofit.ErrorHandler errorHandler55 = null;
        builder53.errorHandler = errorHandler55;
        retrofit.converter.Converter converter57 = builder53.converter;
        retrofit.client.Client.Provider provider58 = builder53.getclientProvider();
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler60 = null;
        builder59.errorHandler = errorHandler60;
        retrofit.Server server62 = null;
        builder59.server = server62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        java.util.concurrent.Executor executor68 = builder64.getcallbackExecutor();
        builder59.setcallbackExecutor(executor68);
        builder53.sethttpExecutor(executor68);
        retrofit.RestAdapter.Builder builder71 = builder37.setExecutors(executor51, executor68);
        retrofit.RestAdapter.Builder builder72 = builder0.setExecutors(executor36, executor51);
        retrofit.SerializedObjectSupporter serializedObjectSupporter73 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder75 = builder0.setServer("http://example.com/");
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.Server server77 = builder76.server;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler79 = null;
        builder78.errorHandler = errorHandler79;
        retrofit.Server server81 = null;
        builder78.server = server81;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        builder83.ensureSaneDefaults();
        retrofit.RestAdapter.Log log85 = null;
        builder83.log = log85;
        java.util.concurrent.Executor executor87 = builder83.getcallbackExecutor();
        builder78.setcallbackExecutor(executor87);
        builder76.setcallbackExecutor(executor87);
        builder0.httpExecutor = executor87;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(requestInterceptor46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(serializedObjectSupporter73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(server77);
        org.junit.Assert.assertNotNull(executor87);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter1();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections8 = serializedObjectSupporter0.deserializeObjectList2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder2.errorHandler = errorHandler4;
        retrofit.converter.Converter converter6 = builder2.converter;
        retrofit.client.Client.Provider provider7 = builder2.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        builder2.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder23.setclientProvider(provider26);
        retrofit.RequestInterceptor requestInterceptor28 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = null;
        builder29.callbackExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response34 = serializedObjectSupporter33.deserializeObjectResponse8();
        java.lang.String str35 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder37 = builder29.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = null;
        builder39.callbackExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response44 = serializedObjectSupporter43.deserializeObjectResponse8();
        java.lang.String str45 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder47 = builder39.setConverter((retrofit.converter.Converter) gsonConverter46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        builder47.errorHandler = errorHandler49;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server0, provider1, executor17, executor22, requestInterceptor28, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler49, log51, logLevel52);
        java.lang.String str54 = restAdapter53.getTHREAD_PREFIX();
        retrofit.Profiler profiler55 = restAdapter53.profiler;
        retrofit.converter.Converter converter56 = restAdapter53.getconverter();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter53.new RestHandler();
        retrofit.converter.Converter converter58 = restAdapter53.getconverter();
        retrofit.Server server59 = restAdapter53.getserver();
        retrofit.client.Client.Provider provider60 = restAdapter53.clientProvider;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(response34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNotNull(converter56);
        org.junit.Assert.assertNotNull(converter58);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertNull(provider60);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        java.util.concurrent.Executor executor11 = builder10.gethttpExecutor();
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler15 = null;
        builder14.errorHandler = errorHandler15;
        retrofit.Server server17 = null;
        builder14.server = server17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        builder14.setcallbackExecutor(executor23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        java.util.concurrent.Executor executor29 = builder25.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter32.deserializeObjectConverter5();
        retrofit.Profiler profiler35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler37 = serializedObjectSupporter36.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean40 = logLevel39.log();
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server12, provider13, executor23, executor29, requestInterceptor31, (retrofit.converter.Converter) gsonConverter34, profiler35, errorHandler37, log38, logLevel39);
        retrofit.ErrorHandler errorHandler42 = restAdapter41.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor44 = serializedObjectSupporter43.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        restAdapter41.serializedObjectSupporter = serializedObjectSupporter43;
        retrofit.RestAdapter.Log log47 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter41.logLevel;
        java.lang.String str49 = restAdapter41.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler50 = restAdapter41.errorHandler;
        retrofit.ErrorHandler errorHandler51 = restAdapter41.geterrorHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = restAdapter41.serializedObjectSupporter;
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter52.deserializeObjectConverter3();
        builder10.converter = gsonConverter53;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(requestInterceptor44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Retrofit-Idle" + "'", str49, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler50);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(serializedObjectSupporter52);
        org.junit.Assert.assertNotNull(gsonConverter53);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.RestAdapter.Log log34 = restAdapter29.log;
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter29.getrequestInterceptor();
        retrofit.client.Request request36 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request37 = restAdapter29.logAndReplaceRequest(request36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(requestInterceptor35);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.client.Client.Provider provider4 = builder0.clientProvider;
        retrofit.ErrorHandler errorHandler5 = builder0.errorHandler;
        org.junit.Assert.assertNotNull(provider4);
        org.junit.Assert.assertNotNull(errorHandler5);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        java.util.List<retrofit.client.Header> headerList4 = response3.getHeaders();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(headerList4);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.Server server35 = restAdapter29.server;
        retrofit.Profiler profiler36 = restAdapter29.getprofiler();
        java.lang.String str37 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str38 = restAdapter29.getIDLE_THREAD_NAME();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Retrofit-Idle" + "'", str38, "Retrofit-Idle");
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.getLogLevel();
        java.lang.String str32 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter36 = builder35.converter;
        retrofit.ErrorHandler errorHandler37 = null;
        builder35.errorHandler = errorHandler37;
        retrofit.converter.Converter converter39 = builder35.converter;
        retrofit.client.Client.Provider provider40 = builder35.getclientProvider();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler42 = null;
        builder41.errorHandler = errorHandler42;
        retrofit.Server server44 = null;
        builder41.server = server44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        java.util.concurrent.Executor executor50 = builder46.getcallbackExecutor();
        builder41.setcallbackExecutor(executor50);
        builder35.sethttpExecutor(executor50);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        java.util.concurrent.Executor executor55 = builder53.callbackExecutor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = builder56.serializedObjectSupporter;
        retrofit.client.Client.Provider provider59 = null;
        builder56.setclientProvider(provider59);
        retrofit.RequestInterceptor requestInterceptor61 = builder56.requestInterceptor;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        java.util.concurrent.Executor executor64 = null;
        builder62.callbackExecutor = executor64;
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response67 = serializedObjectSupporter66.deserializeObjectResponse8();
        java.lang.String str68 = serializedObjectSupporter66.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter69 = serializedObjectSupporter66.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder70 = builder62.setConverter((retrofit.converter.Converter) gsonConverter69);
        retrofit.Profiler profiler71 = null;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        java.util.concurrent.Executor executor74 = null;
        builder72.callbackExecutor = executor74;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response77 = serializedObjectSupporter76.deserializeObjectResponse8();
        java.lang.String str78 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter79 = serializedObjectSupporter76.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder80 = builder72.setConverter((retrofit.converter.Converter) gsonConverter79);
        retrofit.SerializedObjectSupporter serializedObjectSupporter81 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler82 = serializedObjectSupporter81.deserializeObjectErrorHandler1();
        builder80.errorHandler = errorHandler82;
        retrofit.RestAdapter.Log log84 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter86 = new retrofit.RestAdapter(server33, provider34, executor50, executor55, requestInterceptor61, (retrofit.converter.Converter) gsonConverter69, profiler71, errorHandler82, log84, logLevel85);
        restAdapter29.setLogLevel(logLevel85);
        retrofit.RestAdapter.LogLevel logLevel88 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel88;
        retrofit.client.Client.Provider provider90 = restAdapter29.getclientProvider();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-Idle" + "'", str32, "Retrofit-Idle");
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNull(serializedObjectSupporter58);
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertNotNull(response67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://example.com/" + "'", str68, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(response77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "http://example.com/" + "'", str78, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(errorHandler82);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider90);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        java.util.concurrent.Executor executor6 = builder4.callbackExecutor;
        builder0.setcallbackExecutor(executor6);
        retrofit.RestAdapter.LogLevel logLevel8 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.RequestInterceptor requestInterceptor12 = builder9.requestInterceptor;
        retrofit.converter.Converter converter13 = null;
        builder9.converter = converter13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor16 = serializedObjectSupporter15.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder17 = builder9.setRequestInterceptor(requestInterceptor16);
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response19 = serializedObjectSupporter18.deserializeObjectResponse8();
        java.lang.String str20 = serializedObjectSupporter18.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter4();
        java.lang.String str22 = serializedObjectSupporter18.deserializeObjectString3();
        retrofit.ErrorHandler errorHandler23 = serializedObjectSupporter18.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder24 = builder9.setErrorHandler(errorHandler23);
        builder0.errorHandler = errorHandler23;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter27 = builder26.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder26.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        builder26.requestInterceptor = requestInterceptor29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler32 = null;
        builder31.errorHandler = errorHandler32;
        java.util.concurrent.Executor executor34 = builder31.gethttpExecutor();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        java.util.concurrent.Executor executor37 = builder35.callbackExecutor;
        builder31.setcallbackExecutor(executor37);
        builder26.callbackExecutor = executor37;
        retrofit.converter.Converter converter40 = builder26.converter;
        retrofit.client.Client.Provider provider41 = null;
        builder26.setclientProvider(provider41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.Server server44 = builder43.server;
        retrofit.ErrorHandler errorHandler45 = null;
        builder43.errorHandler = errorHandler45;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor48 = serializedObjectSupporter47.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder49 = builder43.setRequestInterceptor(requestInterceptor48);
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler51 = serializedObjectSupporter50.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter50.deserializeObjectConverter6();
        java.lang.String str53 = serializedObjectSupporter50.deserializeObjectString3();
        retrofit.Server server54 = serializedObjectSupporter50.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder55 = builder49.setServer(server54);
        retrofit.RestAdapter.Builder builder56 = builder26.setServer(server54);
        retrofit.RestAdapter.Builder builder57 = builder0.setServer(server54);
        java.util.concurrent.Executor executor58 = builder57.gethttpExecutor();
        java.util.concurrent.Executor executor59 = builder57.callbackExecutor;
        retrofit.RestAdapter.Log log60 = builder57.log;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNotNull(requestInterceptor16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(response19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com/" + "'", str53, "http://example.com/");
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(executor58);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNull(log60);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Profiler profiler36 = restAdapter29.profiler;
        retrofit.converter.Converter converter37 = restAdapter29.getconverter();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNotNull(converter37);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder2.errorHandler = errorHandler4;
        retrofit.converter.Converter converter6 = builder2.converter;
        retrofit.client.Client.Provider provider7 = builder2.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        builder2.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder23.setclientProvider(provider26);
        retrofit.RequestInterceptor requestInterceptor28 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = null;
        builder29.callbackExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response34 = serializedObjectSupporter33.deserializeObjectResponse8();
        java.lang.String str35 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder37 = builder29.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = null;
        builder39.callbackExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response44 = serializedObjectSupporter43.deserializeObjectResponse8();
        java.lang.String str45 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder47 = builder39.setConverter((retrofit.converter.Converter) gsonConverter46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        builder47.errorHandler = errorHandler49;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server0, provider1, executor17, executor22, requestInterceptor28, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler49, log51, logLevel52);
        java.lang.String str54 = restAdapter53.getTHREAD_PREFIX();
        retrofit.Profiler profiler55 = restAdapter53.profiler;
        retrofit.RequestInterceptor requestInterceptor56 = restAdapter53.getrequestInterceptor();
        java.lang.Throwable throwable57 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter53.logException(throwable57, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(response34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNotNull(requestInterceptor56);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response9 = serializedObjectSupporter8.deserializeObjectResponse8();
        java.lang.String str10 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter4();
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder14 = builder0.setServer(server13);
        retrofit.RestAdapter restAdapter15 = builder14.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.client.Client.Provider provider18 = builder16.clientProvider;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor20 = null;
        builder19.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder22.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder27 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter28 = builder27.build();
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler32 = null;
        builder31.errorHandler = errorHandler32;
        retrofit.Server server34 = null;
        builder31.server = server34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        java.util.concurrent.Executor executor40 = builder36.getcallbackExecutor();
        builder31.setcallbackExecutor(executor40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        java.util.concurrent.Executor executor46 = builder42.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor48 = serializedObjectSupporter47.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor50 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter5();
        retrofit.Profiler profiler52 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler54 = serializedObjectSupporter53.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean57 = logLevel56.log();
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server29, provider30, executor40, executor46, requestInterceptor48, (retrofit.converter.Converter) gsonConverter51, profiler52, errorHandler54, log55, logLevel56);
        retrofit.ErrorHandler errorHandler59 = restAdapter58.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter58.logLevel;
        retrofit.RestAdapter.Log log61 = restAdapter58.log;
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter58.getLogLevel();
        restAdapter28.logLevel = logLevel62;
        retrofit.converter.Converter converter64 = restAdapter28.converter;
        retrofit.converter.Converter converter65 = restAdapter28.getconverter();
        retrofit.client.Client.Provider provider66 = restAdapter28.getclientProvider();
        builder19.setclientProvider(provider66);
        builder16.setclientProvider(provider66);
        retrofit.RestAdapter.Builder builder69 = builder14.setClient(provider66);
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(response9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(restAdapter28);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(errorHandler54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(errorHandler59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter64);
        org.junit.Assert.assertNotNull(converter65);
        org.junit.Assert.assertNotNull(provider66);
        org.junit.Assert.assertNotNull(builder69);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler10 = serializedObjectSupporter9.deserializeObjectErrorHandler1();
        builder8.errorHandler = errorHandler10;
        retrofit.Server server12 = builder8.server;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler16 = null;
        builder15.errorHandler = errorHandler16;
        retrofit.Server server18 = null;
        builder15.server = server18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        builder15.setcallbackExecutor(executor24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        java.util.concurrent.Executor executor30 = builder26.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter33.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.Profiler profiler36 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler38 = serializedObjectSupporter37.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean41 = logLevel40.log();
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server13, provider14, executor24, executor30, requestInterceptor32, (retrofit.converter.Converter) gsonConverter35, profiler36, errorHandler38, log39, logLevel40);
        retrofit.ErrorHandler errorHandler43 = restAdapter42.errorHandler;
        java.util.concurrent.Executor executor44 = restAdapter42.gethttpExecutor();
        retrofit.Server server45 = null;
        retrofit.client.Client.Provider provider46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler48 = null;
        builder47.errorHandler = errorHandler48;
        retrofit.Server server50 = null;
        builder47.server = server50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        java.util.concurrent.Executor executor56 = builder52.getcallbackExecutor();
        builder47.setcallbackExecutor(executor56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        java.util.concurrent.Executor executor62 = builder58.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor64 = serializedObjectSupporter63.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor66 = serializedObjectSupporter65.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter65.deserializeObjectConverter5();
        retrofit.Profiler profiler68 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter69.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean73 = logLevel72.log();
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server45, provider46, executor56, executor62, requestInterceptor64, (retrofit.converter.Converter) gsonConverter67, profiler68, errorHandler70, log71, logLevel72);
        retrofit.ErrorHandler errorHandler75 = restAdapter74.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler76 = restAdapter74.new RestHandler();
        retrofit.RestAdapter.Log log77 = restAdapter74.log;
        java.lang.String str78 = restAdapter74.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider79 = restAdapter74.clientProvider;
        retrofit.Server server80 = restAdapter74.server;
        java.util.concurrent.Executor executor81 = restAdapter74.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder82 = builder8.setExecutors(executor44, executor81);
        retrofit.RestAdapter.LogLevel logLevel83 = builder8.logLevel;
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(errorHandler10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(errorHandler75);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Retrofit-" + "'", str78, "Retrofit-");
        org.junit.Assert.assertNull(provider79);
        org.junit.Assert.assertNull(server80);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter6 = builder5.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder5.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel8 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder9 = builder0.setLogLevel(logLevel8);
        retrofit.converter.Converter converter10 = builder0.converter;
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(converter10);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        java.lang.String str36 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler40 = null;
        builder39.errorHandler = errorHandler40;
        retrofit.Server server42 = null;
        builder39.server = server42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        java.util.concurrent.Executor executor48 = builder44.getcallbackExecutor();
        builder39.setcallbackExecutor(executor48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        java.util.concurrent.Executor executor54 = builder50.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor56 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor58 = serializedObjectSupporter57.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.Profiler profiler60 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler62 = serializedObjectSupporter61.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean65 = logLevel64.log();
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server37, provider38, executor48, executor54, requestInterceptor56, (retrofit.converter.Converter) gsonConverter59, profiler60, errorHandler62, log63, logLevel64);
        retrofit.ErrorHandler errorHandler67 = restAdapter66.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor69 = serializedObjectSupporter68.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter68.deserializeObjectConverter5();
        restAdapter66.serializedObjectSupporter = serializedObjectSupporter68;
        retrofit.RestAdapter.Log log72 = restAdapter66.log;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler74 = null;
        builder73.errorHandler = errorHandler74;
        retrofit.RequestInterceptor requestInterceptor76 = builder73.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder78 = builder73.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        java.util.concurrent.Executor executor81 = builder79.callbackExecutor;
        builder78.callbackExecutor = executor81;
        retrofit.RestAdapter.LogLevel logLevel83 = builder78.logLevel;
        restAdapter66.setLogLevel(logLevel83);
        restAdapter29.logLevel = logLevel83;
        retrofit.converter.Converter converter86 = restAdapter29.converter;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-Idle" + "'", str36, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(errorHandler62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(errorHandler67);
        org.junit.Assert.assertNotNull(requestInterceptor69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNull(requestInterceptor76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(converter86);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = null;
        retrofit.client.Client.Provider provider31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler33 = null;
        builder32.errorHandler = errorHandler33;
        retrofit.Server server35 = null;
        builder32.server = server35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        java.util.concurrent.Executor executor41 = builder37.getcallbackExecutor();
        builder32.setcallbackExecutor(executor41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        java.util.concurrent.Executor executor47 = builder43.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor49 = serializedObjectSupporter48.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor51 = serializedObjectSupporter50.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter50.deserializeObjectConverter5();
        retrofit.Profiler profiler53 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler55 = serializedObjectSupporter54.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean58 = logLevel57.log();
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server30, provider31, executor41, executor47, requestInterceptor49, (retrofit.converter.Converter) gsonConverter52, profiler53, errorHandler55, log56, logLevel57);
        retrofit.ErrorHandler errorHandler60 = restAdapter59.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter59.logLevel;
        restAdapter29.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter29.getLogLevel();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(errorHandler55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.RestAdapter.Log log34 = restAdapter29.log;
        java.lang.String str35 = restAdapter29.getIDLE_THREAD_NAME();
        java.lang.String str36 = restAdapter29.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor37 = restAdapter29.httpExecutor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNotNull(executor37);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.gethttpExecutor();
        retrofit.Profiler profiler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder5 = builder0.setProfiler(profiler4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor3);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter6 = builder5.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder5.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel8 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder9 = builder0.setLogLevel(logLevel8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler11 = serializedObjectSupporter10.deserializeObjectErrorHandler1();
        retrofit.client.Response response12 = serializedObjectSupporter10.deserializeObjectResponse2();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString13();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter10.deserializeObjectConverter5();
        retrofit.RestAdapter.Builder builder15 = builder9.setConverter((retrofit.converter.Converter) gsonConverter14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        java.util.concurrent.Executor executor18 = null;
        builder16.callbackExecutor = executor18;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response21 = serializedObjectSupporter20.deserializeObjectResponse8();
        java.lang.String str22 = serializedObjectSupporter20.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter20.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder24 = builder16.setConverter((retrofit.converter.Converter) gsonConverter23);
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler26 = serializedObjectSupporter25.deserializeObjectErrorHandler1();
        builder24.errorHandler = errorHandler26;
        retrofit.Server server28 = builder24.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler30 = serializedObjectSupporter29.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter6();
        java.lang.String str32 = serializedObjectSupporter29.deserializeObjectString3();
        retrofit.Server server33 = serializedObjectSupporter29.deserializeObjectServer1();
        builder24.server = server33;
        retrofit.RestAdapter.Builder builder35 = builder15.setServer(server33);
        retrofit.client.Client.Provider provider36 = builder15.getclientProvider();
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(errorHandler11);
        org.junit.Assert.assertNotNull(response12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(response21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(errorHandler26);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(provider36);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.logLevel;
        retrofit.Profiler profiler32 = restAdapter29.getprofiler();
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        java.util.concurrent.Executor executor34 = restAdapter29.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter29.getrequestInterceptor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(requestInterceptor35);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder6 = builder0.setServer("http://example.com/");
        retrofit.client.Client client7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder0.setClient(client7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.client.Client.Provider provider3 = builder0.clientProvider;
        java.util.concurrent.Executor executor4 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor7 = builder5.callbackExecutor;
        builder0.setcallbackExecutor(executor7);
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.ErrorHandler errorHandler39 = restAdapter38.errorHandler;
        builder0.errorHandler = errorHandler39;
        retrofit.RestAdapter.Log log41 = builder0.log;
        retrofit.client.Client client42 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder43 = builder0.setClient(client42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNull(log41);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor38 = restAdapter29.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = restAdapter29.serializedObjectSupporter;
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString10();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(serializedObjectSupporter39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Forbidden" + "'", str40, "Forbidden");
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler6 = serializedObjectSupporter5.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter5.deserializeObjectConverter6();
        java.lang.String str8 = serializedObjectSupporter5.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter5.deserializeObjectConverter7();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter5.deserializeObjectConverter5();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter12 = serializedObjectSupporter5.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(errorHandler6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(gsonConverter10);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.client.Client.Provider provider3 = null;
        builder0.setclientProvider(provider3);
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter8 = builder7.converter;
        retrofit.ErrorHandler errorHandler9 = null;
        builder7.errorHandler = errorHandler9;
        retrofit.converter.Converter converter11 = builder7.converter;
        retrofit.client.Client.Provider provider12 = builder7.getclientProvider();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        builder7.sethttpExecutor(executor22);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        java.util.concurrent.Executor executor27 = builder25.callbackExecutor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = builder28.serializedObjectSupporter;
        retrofit.client.Client.Provider provider31 = null;
        builder28.setclientProvider(provider31);
        retrofit.RequestInterceptor requestInterceptor33 = builder28.requestInterceptor;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        java.util.concurrent.Executor executor36 = null;
        builder34.callbackExecutor = executor36;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response39 = serializedObjectSupporter38.deserializeObjectResponse8();
        java.lang.String str40 = serializedObjectSupporter38.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter38.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder42 = builder34.setConverter((retrofit.converter.Converter) gsonConverter41);
        retrofit.Profiler profiler43 = null;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        java.util.concurrent.Executor executor46 = null;
        builder44.callbackExecutor = executor46;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response49 = serializedObjectSupporter48.deserializeObjectResponse8();
        java.lang.String str50 = serializedObjectSupporter48.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter48.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder52 = builder44.setConverter((retrofit.converter.Converter) gsonConverter51);
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler54 = serializedObjectSupporter53.deserializeObjectErrorHandler1();
        builder52.errorHandler = errorHandler54;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server5, provider6, executor22, executor27, requestInterceptor33, (retrofit.converter.Converter) gsonConverter41, profiler43, errorHandler54, log56, logLevel57);
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler62 = null;
        builder61.errorHandler = errorHandler62;
        retrofit.Server server64 = null;
        builder61.server = server64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        java.util.concurrent.Executor executor70 = builder66.getcallbackExecutor();
        builder61.setcallbackExecutor(executor70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        java.util.concurrent.Executor executor76 = builder72.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter77 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter77.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor80 = serializedObjectSupporter79.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter79.deserializeObjectConverter5();
        retrofit.Profiler profiler82 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler84 = serializedObjectSupporter83.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean87 = logLevel86.log();
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server59, provider60, executor70, executor76, requestInterceptor78, (retrofit.converter.Converter) gsonConverter81, profiler82, errorHandler84, log85, logLevel86);
        retrofit.Server server89 = restAdapter88.server;
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter88.logLevel = logLevel90;
        retrofit.client.Client.Provider provider92 = restAdapter88.getclientProvider();
        retrofit.client.Client.Provider provider93 = restAdapter88.clientProvider;
        java.util.concurrent.Executor executor94 = restAdapter88.httpExecutor;
        retrofit.RestAdapter.Builder builder95 = builder0.setExecutors(executor27, executor94);
        retrofit.RestAdapter.Log log96 = builder0.log;
        retrofit.Profiler profiler97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder0.setProfiler(profiler97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(response39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http://example.com/" + "'", str40, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(response49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(errorHandler54);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor70);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertNotNull(requestInterceptor80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(errorHandler84);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(server89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider92);
        org.junit.Assert.assertNull(provider93);
        org.junit.Assert.assertNotNull(executor94);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(log96);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.ErrorHandler errorHandler36 = restAdapter35.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter35.logLevel;
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        builder5.log = log38;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        log40.log("Internal Server Error");
        retrofit.RestAdapter.Builder builder43 = builder5.setLog(log40);
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler47 = null;
        builder46.errorHandler = errorHandler47;
        retrofit.Server server49 = null;
        builder46.server = server49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        java.util.concurrent.Executor executor55 = builder51.getcallbackExecutor();
        builder46.setcallbackExecutor(executor55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        java.util.concurrent.Executor executor61 = builder57.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor63 = serializedObjectSupporter62.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor65 = serializedObjectSupporter64.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter64.deserializeObjectConverter5();
        retrofit.Profiler profiler67 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler69 = serializedObjectSupporter68.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean72 = logLevel71.log();
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server44, provider45, executor55, executor61, requestInterceptor63, (retrofit.converter.Converter) gsonConverter66, profiler67, errorHandler69, log70, logLevel71);
        retrofit.ErrorHandler errorHandler74 = restAdapter73.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter73.getLogLevel();
        retrofit.Server server76 = restAdapter73.server;
        retrofit.RequestInterceptor requestInterceptor77 = restAdapter73.requestInterceptor;
        retrofit.RestAdapter.Builder builder78 = builder43.setRequestInterceptor(requestInterceptor77);
        retrofit.RestAdapter restAdapter79 = builder78.build();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(requestInterceptor63);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(errorHandler69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(errorHandler74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server76);
        org.junit.Assert.assertNotNull(requestInterceptor77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        builder0.requestInterceptor = requestInterceptor4;
        retrofit.converter.Converter converter6 = builder0.converter;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(converter6);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        builder0.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor5 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.Server server7 = builder6.server;
        retrofit.ErrorHandler errorHandler8 = null;
        builder6.errorHandler = errorHandler8;
        java.util.concurrent.Executor executor10 = null;
        builder6.sethttpExecutor(executor10);
        java.util.concurrent.Executor executor12 = builder6.httpExecutor;
        retrofit.Profiler profiler13 = null;
        builder6.profiler = profiler13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response16 = serializedObjectSupporter15.deserializeObjectResponse8();
        java.lang.String str17 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter4();
        builder6.converter = gsonConverter18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler21 = null;
        builder20.errorHandler = errorHandler21;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder25 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = builder25.build();
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler30 = null;
        builder29.errorHandler = errorHandler30;
        retrofit.Server server32 = null;
        builder29.server = server32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        java.util.concurrent.Executor executor38 = builder34.getcallbackExecutor();
        builder29.setcallbackExecutor(executor38);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        java.util.concurrent.Executor executor44 = builder40.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor46 = serializedObjectSupporter45.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor48 = serializedObjectSupporter47.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter5();
        retrofit.Profiler profiler50 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler52 = serializedObjectSupporter51.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean55 = logLevel54.log();
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server27, provider28, executor38, executor44, requestInterceptor46, (retrofit.converter.Converter) gsonConverter49, profiler50, errorHandler52, log53, logLevel54);
        retrofit.ErrorHandler errorHandler57 = restAdapter56.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter56.logLevel;
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter56.getLogLevel();
        restAdapter26.logLevel = logLevel60;
        retrofit.converter.Converter converter62 = restAdapter26.converter;
        retrofit.converter.Converter converter63 = restAdapter26.getconverter();
        retrofit.client.Client.Provider provider64 = restAdapter26.getclientProvider();
        builder6.setclientProvider(provider64);
        builder0.setclientProvider(provider64);
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = builder0.serializedObjectSupporter;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNotNull(response16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNull(serializedObjectSupporter23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter62);
        org.junit.Assert.assertNotNull(converter63);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNull(serializedObjectSupporter67);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.ErrorHandler errorHandler7 = restAdapter6.geterrorHandler();
        retrofit.Server server8 = restAdapter6.server;
        retrofit.converter.Converter converter9 = restAdapter6.getconverter();
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNotNull(errorHandler7);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNotNull(converter9);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString8();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString10();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse7();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Forbidden" + "'", str5, "Forbidden");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "OK" + "'", str6, "OK");
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "OK" + "'", str8, "OK");
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter4();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.setclientProvider(provider6);
        retrofit.RequestInterceptor requestInterceptor8 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter10 = builder9.converter;
        retrofit.ErrorHandler errorHandler11 = null;
        builder9.errorHandler = errorHandler11;
        retrofit.converter.Converter converter13 = builder9.converter;
        retrofit.client.Client.Provider provider14 = builder9.getclientProvider();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler16 = null;
        builder15.errorHandler = errorHandler16;
        retrofit.Server server18 = null;
        builder15.server = server18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        builder15.setcallbackExecutor(executor24);
        builder9.sethttpExecutor(executor24);
        builder0.callbackExecutor = executor24;
        retrofit.ErrorHandler errorHandler28 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.ErrorHandler errorHandler31 = null;
        builder29.errorHandler = errorHandler31;
        java.util.concurrent.Executor executor33 = null;
        builder29.sethttpExecutor(executor33);
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder29.setLogLevel(logLevel35);
        retrofit.RestAdapter.LogLevel logLevel37 = builder29.logLevel;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler41 = null;
        builder40.errorHandler = errorHandler41;
        retrofit.Server server43 = null;
        builder40.server = server43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        java.util.concurrent.Executor executor49 = builder45.getcallbackExecutor();
        builder40.setcallbackExecutor(executor49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        java.util.concurrent.Executor executor55 = builder51.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor59 = serializedObjectSupporter58.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter58.deserializeObjectConverter5();
        retrofit.Profiler profiler61 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler63 = serializedObjectSupporter62.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean66 = logLevel65.log();
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server38, provider39, executor49, executor55, requestInterceptor57, (retrofit.converter.Converter) gsonConverter60, profiler61, errorHandler63, log64, logLevel65);
        retrofit.ErrorHandler errorHandler68 = restAdapter67.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.Builder builder71 = builder29.setLog(log70);
        retrofit.RestAdapter.Builder builder72 = builder0.setLog(log70);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter73 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNull(errorHandler28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.Server server3 = null;
        builder0.server = server3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.ErrorHandler errorHandler36 = restAdapter35.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter35.logLevel;
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter35.getLogLevel();
        builder0.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler42 = null;
        builder41.errorHandler = errorHandler42;
        java.util.concurrent.Executor executor44 = builder41.gethttpExecutor();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        java.util.concurrent.Executor executor47 = builder45.callbackExecutor;
        builder41.setcallbackExecutor(executor47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.ErrorHandler errorHandler51 = null;
        builder49.errorHandler = errorHandler51;
        retrofit.RequestInterceptor requestInterceptor53 = builder49.requestInterceptor;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.Server server55 = builder54.server;
        retrofit.ErrorHandler errorHandler56 = null;
        builder54.errorHandler = errorHandler56;
        java.util.concurrent.Executor executor58 = null;
        builder54.sethttpExecutor(executor58);
        java.util.concurrent.Executor executor60 = builder54.httpExecutor;
        retrofit.Profiler profiler61 = null;
        builder54.profiler = profiler61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor64 = null;
        builder63.setcallbackExecutor(executor64);
        retrofit.client.Client.Provider provider66 = builder63.clientProvider;
        java.util.concurrent.Executor executor67 = builder63.gethttpExecutor();
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        builder68.ensureSaneDefaults();
        java.util.concurrent.Executor executor70 = builder68.callbackExecutor;
        builder63.setcallbackExecutor(executor70);
        builder54.callbackExecutor = executor70;
        builder49.sethttpExecutor(executor70);
        builder41.setcallbackExecutor(executor70);
        builder0.sethttpExecutor(executor70);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor53);
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertNull(executor67);
        org.junit.Assert.assertNotNull(executor70);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.client.Client.Provider provider2 = null;
        builder0.clientProvider = provider2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.Server server5 = builder0.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(server5);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response35 = serializedObjectSupporter34.deserializeObjectResponse8();
        java.lang.String str36 = serializedObjectSupporter34.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter4();
        java.lang.String str38 = serializedObjectSupporter34.deserializeObjectString3();
        retrofit.Server server39 = serializedObjectSupporter34.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter34.deserializeObjectConverter8();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter34;
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(response35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(requestInterceptor42);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder5.serializedObjectSupporter;
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        java.lang.String str33 = restAdapter29.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor34 = restAdapter29.gethttpExecutor();
        retrofit.Profiler profiler35 = restAdapter29.profiler;
        java.util.concurrent.Executor executor36 = restAdapter29.getcallbackExecutor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-Idle" + "'", str33, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNotNull(executor36);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.setclientProvider(provider6);
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor9 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder10 = builder0.setRequestInterceptor(requestInterceptor9);
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Profiler profiler34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean39 = logLevel38.log();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server11, provider12, executor22, executor28, requestInterceptor30, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler36, log37, logLevel38);
        retrofit.Server server41 = restAdapter40.server;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter40.logLevel = logLevel42;
        retrofit.client.Client.Provider provider44 = restAdapter40.getclientProvider();
        retrofit.RestAdapter.Log log45 = restAdapter40.log;
        retrofit.RequestInterceptor requestInterceptor46 = restAdapter40.requestInterceptor;
        retrofit.RestAdapter.Builder builder47 = builder0.setRequestInterceptor(requestInterceptor46);
        retrofit.Server server48 = null;
        retrofit.client.Client.Provider provider49 = null;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler51 = null;
        builder50.errorHandler = errorHandler51;
        retrofit.Server server53 = null;
        builder50.server = server53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        java.util.concurrent.Executor executor59 = builder55.getcallbackExecutor();
        builder50.setcallbackExecutor(executor59);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.RestAdapter.Log log63 = null;
        builder61.log = log63;
        java.util.concurrent.Executor executor65 = builder61.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor67 = serializedObjectSupporter66.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor69 = serializedObjectSupporter68.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter68.deserializeObjectConverter5();
        retrofit.Profiler profiler71 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler73 = serializedObjectSupporter72.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean76 = logLevel75.log();
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server48, provider49, executor59, executor65, requestInterceptor67, (retrofit.converter.Converter) gsonConverter70, profiler71, errorHandler73, log74, logLevel75);
        retrofit.Server server78 = restAdapter77.server;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter77.logLevel = logLevel79;
        retrofit.RestAdapter.Builder builder81 = builder47.setLogLevel(logLevel79);
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler83 = null;
        builder82.errorHandler = errorHandler83;
        java.util.concurrent.Executor executor85 = builder82.gethttpExecutor();
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        builder86.ensureSaneDefaults();
        java.util.concurrent.Executor executor88 = builder86.callbackExecutor;
        builder82.setcallbackExecutor(executor88);
        java.util.concurrent.Executor executor90 = builder82.callbackExecutor;
        builder81.sethttpExecutor(executor90);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(executor65);
        org.junit.Assert.assertNotNull(requestInterceptor67);
        org.junit.Assert.assertNotNull(requestInterceptor69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(errorHandler73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(server78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertNotNull(executor88);
        org.junit.Assert.assertNotNull(executor90);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.converter.Converter converter36 = restAdapter29.converter;
        retrofit.RequestInterceptor requestInterceptor37 = restAdapter29.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = restAdapter29.serializedObjectSupporter;
        retrofit.RestAdapter.Log log39 = restAdapter29.log;
        retrofit.RequestInterceptor requestInterceptor40 = restAdapter29.getrequestInterceptor();
        retrofit.converter.Converter converter41 = restAdapter29.converter;
        java.lang.String str42 = restAdapter29.getTHREAD_PREFIX();
        retrofit.Profiler profiler43 = restAdapter29.profiler;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(converter36);
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(serializedObjectSupporter38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(converter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-" + "'", str42, "Retrofit-");
        org.junit.Assert.assertNull(profiler43);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.RequestInterceptor requestInterceptor9 = builder8.requestInterceptor;
        java.util.concurrent.Executor executor10 = builder8.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor11 = builder8.requestInterceptor;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        builder12.clientProvider = provider14;
        retrofit.RequestInterceptor requestInterceptor16 = builder12.requestInterceptor;
        java.util.concurrent.Executor executor17 = builder12.httpExecutor;
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler21 = null;
        builder20.errorHandler = errorHandler21;
        retrofit.Server server23 = null;
        builder20.server = server23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        java.util.concurrent.Executor executor29 = builder25.getcallbackExecutor();
        builder20.setcallbackExecutor(executor29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        java.util.concurrent.Executor executor35 = builder31.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor37 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter38.deserializeObjectConverter5();
        retrofit.Profiler profiler41 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler43 = serializedObjectSupporter42.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean46 = logLevel45.log();
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server18, provider19, executor29, executor35, requestInterceptor37, (retrofit.converter.Converter) gsonConverter40, profiler41, errorHandler43, log44, logLevel45);
        retrofit.ErrorHandler errorHandler48 = restAdapter47.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor50 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter5();
        restAdapter47.serializedObjectSupporter = serializedObjectSupporter49;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = restAdapter47.serializedObjectSupporter;
        retrofit.Profiler profiler54 = restAdapter47.getprofiler();
        java.lang.String str55 = restAdapter47.getTHREAD_PREFIX();
        retrofit.RestAdapter.Log log56 = restAdapter47.log;
        retrofit.RestAdapter.Builder builder57 = builder12.setLog(log56);
        builder8.log = log56;
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertNotNull(requestInterceptor11);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(serializedObjectSupporter53);
        org.junit.Assert.assertNull(profiler54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Retrofit-" + "'", str55, "Retrofit-");
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        java.util.concurrent.Executor executor5 = builder0.httpExecutor;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.ErrorHandler errorHandler36 = restAdapter35.errorHandler;
        retrofit.ErrorHandler errorHandler37 = restAdapter35.geterrorHandler();
        retrofit.client.Client.Provider provider38 = restAdapter35.getclientProvider();
        retrofit.RequestInterceptor requestInterceptor39 = restAdapter35.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder40 = builder0.setRequestInterceptor(requestInterceptor39);
        retrofit.Profiler profiler41 = builder0.profiler;
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter45 = builder44.converter;
        retrofit.ErrorHandler errorHandler46 = null;
        builder44.errorHandler = errorHandler46;
        retrofit.converter.Converter converter48 = builder44.converter;
        retrofit.client.Client.Provider provider49 = builder44.getclientProvider();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler51 = null;
        builder50.errorHandler = errorHandler51;
        retrofit.Server server53 = null;
        builder50.server = server53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        java.util.concurrent.Executor executor59 = builder55.getcallbackExecutor();
        builder50.setcallbackExecutor(executor59);
        builder44.sethttpExecutor(executor59);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        java.util.concurrent.Executor executor64 = builder62.callbackExecutor;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = builder65.serializedObjectSupporter;
        retrofit.client.Client.Provider provider68 = null;
        builder65.setclientProvider(provider68);
        retrofit.RequestInterceptor requestInterceptor70 = builder65.requestInterceptor;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        java.util.concurrent.Executor executor73 = null;
        builder71.callbackExecutor = executor73;
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response76 = serializedObjectSupporter75.deserializeObjectResponse8();
        java.lang.String str77 = serializedObjectSupporter75.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter75.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder79 = builder71.setConverter((retrofit.converter.Converter) gsonConverter78);
        retrofit.Profiler profiler80 = null;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        builder81.ensureSaneDefaults();
        java.util.concurrent.Executor executor83 = null;
        builder81.callbackExecutor = executor83;
        retrofit.SerializedObjectSupporter serializedObjectSupporter85 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response86 = serializedObjectSupporter85.deserializeObjectResponse8();
        java.lang.String str87 = serializedObjectSupporter85.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter88 = serializedObjectSupporter85.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder89 = builder81.setConverter((retrofit.converter.Converter) gsonConverter88);
        retrofit.SerializedObjectSupporter serializedObjectSupporter90 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler91 = serializedObjectSupporter90.deserializeObjectErrorHandler1();
        builder89.errorHandler = errorHandler91;
        retrofit.RestAdapter.Log log93 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel94 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter95 = new retrofit.RestAdapter(server42, provider43, executor59, executor64, requestInterceptor70, (retrofit.converter.Converter) gsonConverter78, profiler80, errorHandler91, log93, logLevel94);
        java.lang.String str96 = restAdapter95.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider97 = restAdapter95.clientProvider;
        retrofit.converter.Converter converter98 = restAdapter95.getconverter();
        builder0.converter = converter98;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNull(serializedObjectSupporter67);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(response76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(response86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "http://example.com/" + "'", str87, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(errorHandler91);
        org.junit.Assert.assertNotNull(log93);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Retrofit-" + "'", str96, "Retrofit-");
        org.junit.Assert.assertNull(provider97);
        org.junit.Assert.assertNotNull(converter98);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder2.errorHandler = errorHandler4;
        retrofit.converter.Converter converter6 = builder2.converter;
        retrofit.client.Client.Provider provider7 = builder2.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        builder2.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder23.setclientProvider(provider26);
        retrofit.RequestInterceptor requestInterceptor28 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = null;
        builder29.callbackExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response34 = serializedObjectSupporter33.deserializeObjectResponse8();
        java.lang.String str35 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder37 = builder29.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = null;
        builder39.callbackExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response44 = serializedObjectSupporter43.deserializeObjectResponse8();
        java.lang.String str45 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder47 = builder39.setConverter((retrofit.converter.Converter) gsonConverter46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        builder47.errorHandler = errorHandler49;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server0, provider1, executor17, executor22, requestInterceptor28, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler49, log51, logLevel52);
        java.util.concurrent.Executor executor54 = restAdapter53.gethttpExecutor();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.client.Request request56 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request57 = restAdapter53.logAndReplaceRequest(request56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(response34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor54);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString7();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.Server server7 = restAdapter6.getserver();
        retrofit.ErrorHandler errorHandler8 = restAdapter6.errorHandler;
        retrofit.Server server9 = restAdapter6.server;
        java.util.concurrent.Executor executor10 = restAdapter6.callbackExecutor;
        retrofit.Profiler profiler11 = restAdapter6.profiler;
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertNull(profiler11);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.client.Client.Provider provider4 = null;
        builder0.clientProvider = provider4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.ErrorHandler errorHandler36 = restAdapter35.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        java.util.concurrent.Executor executor38 = restAdapter35.httpExecutor;
        builder0.httpExecutor = executor38;
        retrofit.client.Client client40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder41 = builder0.setClient(client40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(executor38);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString7();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString10();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Forbidden" + "'", str7, "Forbidden");
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.setclientProvider(provider6);
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor9 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder10 = builder0.setRequestInterceptor(requestInterceptor9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter12 = builder11.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.sethttpExecutor(executor14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler17 = null;
        builder16.errorHandler = errorHandler17;
        retrofit.Server server19 = null;
        builder16.server = server19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        java.util.concurrent.Executor executor25 = builder21.getcallbackExecutor();
        builder16.setcallbackExecutor(executor25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor28 = null;
        builder27.setcallbackExecutor(executor28);
        retrofit.client.Client.Provider provider30 = builder27.clientProvider;
        java.util.concurrent.Executor executor31 = builder27.gethttpExecutor();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        java.util.concurrent.Executor executor34 = builder32.callbackExecutor;
        builder27.setcallbackExecutor(executor34);
        retrofit.RestAdapter.Builder builder36 = builder11.setExecutors(executor25, executor34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler38 = null;
        builder37.errorHandler = errorHandler38;
        retrofit.RequestInterceptor requestInterceptor40 = builder37.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder42 = builder37.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        java.util.concurrent.Executor executor45 = builder43.callbackExecutor;
        builder42.callbackExecutor = executor45;
        retrofit.RestAdapter.Builder builder47 = builder10.setExecutors(executor25, executor45);
        retrofit.ErrorHandler errorHandler48 = null;
        builder10.errorHandler = errorHandler48;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(requestInterceptor40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(builder47);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler10 = serializedObjectSupporter9.deserializeObjectErrorHandler1();
        builder8.errorHandler = errorHandler10;
        retrofit.Server server12 = builder8.server;
        retrofit.RestAdapter.LogLevel logLevel13 = builder8.logLevel;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder15 = builder8.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(errorHandler10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.client.Client.Provider provider3 = builder0.clientProvider;
        java.util.concurrent.Executor executor4 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor7 = builder5.callbackExecutor;
        builder0.setcallbackExecutor(executor7);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        builder9.requestInterceptor = requestInterceptor11;
        retrofit.RestAdapter.Builder builder14 = builder9.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        retrofit.ErrorHandler errorHandler17 = null;
        builder15.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = builder15.requestInterceptor;
        retrofit.ErrorHandler errorHandler20 = null;
        builder15.errorHandler = errorHandler20;
        retrofit.Profiler profiler22 = builder15.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response24 = serializedObjectSupporter23.deserializeObjectResponse8();
        java.lang.String str25 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter4();
        java.lang.String str27 = serializedObjectSupporter23.deserializeObjectString3();
        retrofit.Server server28 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder29 = builder15.setServer(server28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.setcallbackExecutor(executor31);
        retrofit.client.Client.Provider provider33 = builder30.clientProvider;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter35 = builder34.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = builder34.serializedObjectSupporter;
        java.util.concurrent.Executor executor37 = null;
        builder34.sethttpExecutor(executor37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler40 = null;
        builder39.errorHandler = errorHandler40;
        retrofit.Server server42 = null;
        builder39.server = server42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        java.util.concurrent.Executor executor48 = builder44.getcallbackExecutor();
        builder39.setcallbackExecutor(executor48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = null;
        builder50.setcallbackExecutor(executor51);
        retrofit.client.Client.Provider provider53 = builder50.clientProvider;
        java.util.concurrent.Executor executor54 = builder50.gethttpExecutor();
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        java.util.concurrent.Executor executor57 = builder55.callbackExecutor;
        builder50.setcallbackExecutor(executor57);
        retrofit.RestAdapter.Builder builder59 = builder34.setExecutors(executor48, executor57);
        builder30.setcallbackExecutor(executor57);
        builder15.callbackExecutor = executor57;
        retrofit.Server server62 = null;
        retrofit.client.Client.Provider provider63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler65 = null;
        builder64.errorHandler = errorHandler65;
        retrofit.Server server67 = null;
        builder64.server = server67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.RestAdapter.Log log71 = null;
        builder69.log = log71;
        java.util.concurrent.Executor executor73 = builder69.getcallbackExecutor();
        builder64.setcallbackExecutor(executor73);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Log log77 = null;
        builder75.log = log77;
        java.util.concurrent.Executor executor79 = builder75.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor81 = serializedObjectSupporter80.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter82 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor83 = serializedObjectSupporter82.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter84 = serializedObjectSupporter82.deserializeObjectConverter5();
        retrofit.Profiler profiler85 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler87 = serializedObjectSupporter86.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log88 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean90 = logLevel89.log();
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server62, provider63, executor73, executor79, requestInterceptor81, (retrofit.converter.Converter) gsonConverter84, profiler85, errorHandler87, log88, logLevel89);
        retrofit.Server server92 = restAdapter91.server;
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter91.logLevel = logLevel93;
        retrofit.client.Client.Provider provider95 = restAdapter91.getclientProvider();
        retrofit.RestAdapter.Log log96 = restAdapter91.log;
        java.util.concurrent.Executor executor97 = restAdapter91.callbackExecutor;
        retrofit.RestAdapter.Builder builder98 = builder9.setExecutors(executor57, executor97);
        builder0.sethttpExecutor(executor97);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor19);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(response24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(serializedObjectSupporter36);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNotNull(executor57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(executor79);
        org.junit.Assert.assertNotNull(requestInterceptor81);
        org.junit.Assert.assertNotNull(requestInterceptor83);
        org.junit.Assert.assertNotNull(gsonConverter84);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(server92);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider95);
        org.junit.Assert.assertNotNull(log96);
        org.junit.Assert.assertNotNull(executor97);
        org.junit.Assert.assertNotNull(builder98);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.RequestInterceptor requestInterceptor5 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse4();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString4();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "OK" + "'", str6, "OK");
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "OK" + "'", str8, "OK");
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse4();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(response4);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder2.errorHandler = errorHandler4;
        retrofit.converter.Converter converter6 = builder2.converter;
        retrofit.client.Client.Provider provider7 = builder2.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        builder2.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder23.setclientProvider(provider26);
        retrofit.RequestInterceptor requestInterceptor28 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = null;
        builder29.callbackExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response34 = serializedObjectSupporter33.deserializeObjectResponse8();
        java.lang.String str35 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder37 = builder29.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = null;
        builder39.callbackExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response44 = serializedObjectSupporter43.deserializeObjectResponse8();
        java.lang.String str45 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder47 = builder39.setConverter((retrofit.converter.Converter) gsonConverter46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        builder47.errorHandler = errorHandler49;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server0, provider1, executor17, executor22, requestInterceptor28, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler49, log51, logLevel52);
        java.lang.String str54 = restAdapter53.getTHREAD_PREFIX();
        retrofit.Profiler profiler55 = restAdapter53.profiler;
        retrofit.converter.Converter converter56 = restAdapter53.getconverter();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter53.new RestHandler();
        retrofit.converter.Converter converter58 = restAdapter53.getconverter();
        java.lang.String str59 = restAdapter53.getIDLE_THREAD_NAME();
        retrofit.Profiler profiler60 = restAdapter53.profiler;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(response34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNotNull(converter56);
        org.junit.Assert.assertNotNull(converter58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Retrofit-Idle" + "'", str59, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler60);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str34 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str35 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RequestInterceptor requestInterceptor36 = restAdapter29.requestInterceptor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Retrofit-" + "'", str34, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-" + "'", str35, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor36);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString13();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString11();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str34 = restAdapter29.getTHREAD_PREFIX();
        retrofit.converter.Converter converter35 = restAdapter29.getconverter();
        retrofit.Server server36 = restAdapter29.getserver();
        java.lang.String str37 = restAdapter29.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider38 = restAdapter29.getclientProvider();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Retrofit-" + "'", str34, "Retrofit-");
        org.junit.Assert.assertNotNull(converter35);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNull(provider38);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response9 = serializedObjectSupporter8.deserializeObjectResponse8();
        java.lang.String str10 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter4();
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder14 = builder0.setServer(server13);
        java.util.concurrent.Executor executor15 = builder14.gethttpExecutor();
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler19 = null;
        builder18.errorHandler = errorHandler19;
        retrofit.Server server21 = null;
        builder18.server = server21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        java.util.concurrent.Executor executor27 = builder23.getcallbackExecutor();
        builder18.setcallbackExecutor(executor27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        java.util.concurrent.Executor executor33 = builder29.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor37 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter5();
        retrofit.Profiler profiler39 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler41 = serializedObjectSupporter40.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean44 = logLevel43.log();
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server16, provider17, executor27, executor33, requestInterceptor35, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler41, log42, logLevel43);
        retrofit.Server server46 = restAdapter45.server;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter45.logLevel = logLevel47;
        retrofit.client.Client.Provider provider49 = restAdapter45.getclientProvider();
        retrofit.RestAdapter.Log log50 = restAdapter45.log;
        retrofit.RequestInterceptor requestInterceptor51 = restAdapter45.getrequestInterceptor();
        retrofit.RequestInterceptor requestInterceptor52 = restAdapter45.getrequestInterceptor();
        builder14.requestInterceptor = requestInterceptor52;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(response9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNotNull(requestInterceptor52);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler39 = null;
        builder38.errorHandler = errorHandler39;
        retrofit.Server server41 = null;
        builder38.server = server41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        java.util.concurrent.Executor executor47 = builder43.getcallbackExecutor();
        builder38.setcallbackExecutor(executor47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter54.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler59 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler61 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean64 = logLevel63.log();
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server36, provider37, executor47, executor53, requestInterceptor55, (retrofit.converter.Converter) gsonConverter58, profiler59, errorHandler61, log62, logLevel63);
        retrofit.Server server66 = restAdapter65.server;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter65.logLevel = logLevel67;
        retrofit.client.Client.Provider provider69 = restAdapter65.getclientProvider();
        retrofit.client.Client.Provider provider70 = restAdapter65.clientProvider;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler72 = null;
        builder71.errorHandler = errorHandler72;
        retrofit.RequestInterceptor requestInterceptor74 = builder71.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder76 = builder71.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        builder71.logLevel = logLevel77;
        restAdapter65.setLogLevel(logLevel77);
        restAdapter29.setLogLevel(logLevel77);
        retrofit.client.Client.Provider provider81 = restAdapter29.clientProvider;
        retrofit.SerializedObjectSupporter serializedObjectSupporter82 = restAdapter29.serializedObjectSupporter;
        retrofit.Server server83 = restAdapter29.server;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider81);
        org.junit.Assert.assertNotNull(serializedObjectSupporter82);
        org.junit.Assert.assertNull(server83);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler38 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler39 = restAdapter29.geterrorHandler();
        retrofit.Profiler profiler40 = restAdapter29.profiler;
        java.util.concurrent.Executor executor41 = restAdapter29.gethttpExecutor();
        java.util.concurrent.Executor executor42 = restAdapter29.getcallbackExecutor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(executor42);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString8();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString5 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        retrofit.mime.TypedString typedString6 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter2();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString13();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(typedString5);
        org.junit.Assert.assertNotNull(typedString6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter29.setLogLevel(logLevel32);
        retrofit.client.Client.Provider provider34 = restAdapter29.getclientProvider();
        retrofit.Server server35 = restAdapter29.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = restAdapter29.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertNull(serializedObjectSupporter36);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str34 = restAdapter29.getTHREAD_PREFIX();
        retrofit.converter.Converter converter35 = restAdapter29.getconverter();
        java.util.concurrent.Executor executor36 = restAdapter29.callbackExecutor;
        retrofit.ErrorHandler errorHandler37 = restAdapter29.geterrorHandler();
        retrofit.ErrorHandler errorHandler38 = restAdapter29.geterrorHandler();
        retrofit.Profiler profiler39 = restAdapter29.profiler;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Retrofit-" + "'", str34, "Retrofit-");
        org.junit.Assert.assertNotNull(converter35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNull(profiler39);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter29.getLogLevel();
        retrofit.Server server36 = restAdapter29.getserver();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server36);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder2.errorHandler = errorHandler4;
        retrofit.converter.Converter converter6 = builder2.converter;
        retrofit.client.Client.Provider provider7 = builder2.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        builder2.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder23.setclientProvider(provider26);
        retrofit.RequestInterceptor requestInterceptor28 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = null;
        builder29.callbackExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response34 = serializedObjectSupporter33.deserializeObjectResponse8();
        java.lang.String str35 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder37 = builder29.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = null;
        builder39.callbackExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response44 = serializedObjectSupporter43.deserializeObjectResponse8();
        java.lang.String str45 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder47 = builder39.setConverter((retrofit.converter.Converter) gsonConverter46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        builder47.errorHandler = errorHandler49;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server0, provider1, executor17, executor22, requestInterceptor28, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler49, log51, logLevel52);
        java.lang.String str54 = restAdapter53.getTHREAD_PREFIX();
        retrofit.Profiler profiler55 = restAdapter53.profiler;
        retrofit.converter.Converter converter56 = restAdapter53.getconverter();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter53.new RestHandler();
        java.util.concurrent.Executor executor58 = restAdapter53.callbackExecutor;
        java.lang.Throwable throwable59 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter53.logException(throwable59, "OK");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(response34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNotNull(converter56);
        org.junit.Assert.assertNotNull(executor58);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder6.serializedObjectSupporter;
        retrofit.client.Client.Provider provider9 = null;
        builder6.setclientProvider(provider9);
        retrofit.RequestInterceptor requestInterceptor11 = builder6.requestInterceptor;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = builder12.serializedObjectSupporter;
        retrofit.client.Client.Provider provider15 = null;
        builder12.setclientProvider(provider15);
        retrofit.RequestInterceptor requestInterceptor17 = builder12.requestInterceptor;
        retrofit.RestAdapter.Builder builder18 = builder6.setRequestInterceptor(requestInterceptor17);
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor20 = serializedObjectSupporter19.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter19.deserializeObjectConverter5();
        retrofit.client.Response response22 = serializedObjectSupporter19.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter19.deserializeObjectConverter5();
        builder18.converter = gsonConverter23;
        builder0.converter = gsonConverter23;
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNotNull(requestInterceptor11);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(requestInterceptor17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(requestInterceptor20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(response22);
        org.junit.Assert.assertNotNull(gsonConverter23);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter29.logLevel;
        retrofit.client.Request request33 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request34 = restAdapter29.logAndReplaceRequest(request33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str34 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str35 = restAdapter29.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor36 = restAdapter29.gethttpExecutor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Retrofit-" + "'", str34, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-" + "'", str35, "Retrofit-");
        org.junit.Assert.assertNotNull(executor36);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        retrofit.Profiler profiler36 = restAdapter29.profiler;
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter29.new RestHandler();
        retrofit.client.Client.Provider provider38 = restAdapter29.getclientProvider();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNull(provider38);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        java.lang.String str33 = restAdapter29.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor34 = restAdapter29.gethttpExecutor();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.Log log36 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel37 = null;
        restAdapter29.setLogLevel(logLevel37);
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler41 = serializedObjectSupporter40.deserializeObjectErrorHandler1();
        retrofit.client.Response response42 = serializedObjectSupporter40.deserializeObjectResponse2();
        java.util.List<retrofit.client.Header> headerList43 = response42.getHeaders();
        java.util.List<retrofit.client.Header> headerList44 = response42.headers;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response46 = restAdapter29.logAndReplaceResponse("hi!", response42, (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-Idle" + "'", str33, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(response42);
        org.junit.Assert.assertNotNull(headerList43);
        org.junit.Assert.assertNotNull(headerList44);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = builder35.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel41;
        restAdapter29.setLogLevel(logLevel41);
        java.lang.String str44 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str45 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.Profiler profiler46 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter29.getLogLevel();
        retrofit.client.Client.Provider provider48 = restAdapter29.clientProvider;
        retrofit.client.Client.Provider provider49 = restAdapter29.getclientProvider();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-" + "'", str44, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-Idle" + "'", str45, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNull(provider49);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter8();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString7();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.setclientProvider(provider6);
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor9 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder10 = builder0.setRequestInterceptor(requestInterceptor9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter12 = builder11.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder11.serializedObjectSupporter;
        java.util.concurrent.Executor executor14 = null;
        builder11.sethttpExecutor(executor14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler17 = null;
        builder16.errorHandler = errorHandler17;
        retrofit.Server server19 = null;
        builder16.server = server19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        java.util.concurrent.Executor executor25 = builder21.getcallbackExecutor();
        builder16.setcallbackExecutor(executor25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor28 = null;
        builder27.setcallbackExecutor(executor28);
        retrofit.client.Client.Provider provider30 = builder27.clientProvider;
        java.util.concurrent.Executor executor31 = builder27.gethttpExecutor();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        java.util.concurrent.Executor executor34 = builder32.callbackExecutor;
        builder27.setcallbackExecutor(executor34);
        retrofit.RestAdapter.Builder builder36 = builder11.setExecutors(executor25, executor34);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler38 = null;
        builder37.errorHandler = errorHandler38;
        retrofit.RequestInterceptor requestInterceptor40 = builder37.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder42 = builder37.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        java.util.concurrent.Executor executor45 = builder43.callbackExecutor;
        builder42.callbackExecutor = executor45;
        retrofit.RestAdapter.Builder builder47 = builder10.setExecutors(executor25, executor45);
        java.util.concurrent.Executor executor48 = builder47.gethttpExecutor();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(requestInterceptor40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(executor48);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString12();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString7();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Internal Server Error" + "'", str6, "Internal Server Error");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.Server server36 = restAdapter35.server;
        retrofit.ErrorHandler errorHandler37 = restAdapter35.errorHandler;
        builder0.errorHandler = errorHandler37;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response40 = serializedObjectSupporter39.deserializeObjectResponse8();
        retrofit.ErrorHandler errorHandler41 = serializedObjectSupporter39.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder42 = builder0.setErrorHandler(errorHandler41);
        java.util.concurrent.Executor executor43 = builder42.gethttpExecutor();
        retrofit.Profiler profiler44 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder45 = builder42.setProfiler(profiler44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(response40);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor43);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.RequestInterceptor requestInterceptor5 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString10();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Forbidden" + "'", str6, "Forbidden");
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse4();
        java.util.List<retrofit.client.Header> headerList6 = response5.getHeaders();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertNotNull(headerList6);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.Server server12 = null;
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        java.util.concurrent.Executor executor18 = builder14.getcallbackExecutor();
        builder9.setcallbackExecutor(executor18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler32 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean35 = logLevel34.log();
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server7, provider8, executor18, executor24, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler32, log33, logLevel34);
        retrofit.ErrorHandler errorHandler37 = restAdapter36.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter36.logLevel;
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter36.getLogLevel();
        restAdapter6.logLevel = logLevel40;
        retrofit.converter.Converter converter42 = restAdapter6.converter;
        retrofit.converter.Converter converter43 = restAdapter6.getconverter();
        retrofit.client.Client.Provider provider44 = restAdapter6.clientProvider;
        java.util.concurrent.Executor executor45 = restAdapter6.callbackExecutor;
        retrofit.client.Request request46 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request47 = restAdapter6.logAndReplaceRequest(request46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNotNull(converter43);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNotNull(executor45);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter29.new RestHandler();
        retrofit.converter.Converter converter33 = restAdapter29.getconverter();
        retrofit.Server server34 = restAdapter29.getserver();
        java.util.concurrent.Executor executor35 = restAdapter29.callbackExecutor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNotNull(executor35);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.converter.Converter converter4 = builder0.converter;
        java.util.concurrent.Executor executor5 = builder0.httpExecutor;
        retrofit.client.Client.Provider provider6 = null;
        builder0.setclientProvider(provider6);
        java.util.concurrent.Executor executor8 = builder0.gethttpExecutor();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response4 = serializedObjectSupporter3.deserializeObjectResponse8();
        java.lang.String str5 = serializedObjectSupporter3.deserializeObjectString10();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter3.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder7 = builder0.setConverter((retrofit.converter.Converter) gsonConverter6);
        retrofit.client.Client.Provider provider8 = null;
        builder0.clientProvider = provider8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.ErrorHandler errorHandler12 = null;
        builder10.errorHandler = errorHandler12;
        java.util.concurrent.Executor executor14 = null;
        builder10.sethttpExecutor(executor14);
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel16);
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler21 = null;
        builder20.errorHandler = errorHandler21;
        retrofit.Server server23 = null;
        builder20.server = server23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        java.util.concurrent.Executor executor29 = builder25.getcallbackExecutor();
        builder20.setcallbackExecutor(executor29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        java.util.concurrent.Executor executor35 = builder31.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor37 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter38.deserializeObjectConverter5();
        retrofit.Profiler profiler41 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler43 = serializedObjectSupporter42.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean46 = logLevel45.log();
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server18, provider19, executor29, executor35, requestInterceptor37, (retrofit.converter.Converter) gsonConverter40, profiler41, errorHandler43, log44, logLevel45);
        retrofit.Server server48 = restAdapter47.server;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter47.logLevel = logLevel49;
        retrofit.client.Client.Provider provider51 = restAdapter47.getclientProvider();
        retrofit.RestAdapter.Log log52 = restAdapter47.log;
        retrofit.RestAdapter.Builder builder53 = builder10.setLog(log52);
        builder0.log = log52;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Forbidden" + "'", str5, "Forbidden");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.String str42 = serializedObjectSupporter38.deserializeObjectString7();
        retrofit.client.Response response43 = serializedObjectSupporter38.deserializeObjectResponse7();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter38.deserializeObjectConverter5();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(response43);
        org.junit.Assert.assertNotNull(gsonConverter44);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.Server server12 = null;
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        java.util.concurrent.Executor executor18 = builder14.getcallbackExecutor();
        builder9.setcallbackExecutor(executor18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler32 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean35 = logLevel34.log();
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server7, provider8, executor18, executor24, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler32, log33, logLevel34);
        retrofit.ErrorHandler errorHandler37 = restAdapter36.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter36.logLevel;
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter36.getLogLevel();
        restAdapter6.logLevel = logLevel40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.converter.Converter converter44 = builder42.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response46 = serializedObjectSupporter45.deserializeObjectResponse8();
        java.lang.String str47 = serializedObjectSupporter45.deserializeObjectString10();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter45.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder49 = builder42.setConverter((retrofit.converter.Converter) gsonConverter48);
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler53 = null;
        builder52.errorHandler = errorHandler53;
        retrofit.Server server55 = null;
        builder52.server = server55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        java.util.concurrent.Executor executor61 = builder57.getcallbackExecutor();
        builder52.setcallbackExecutor(executor61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        java.util.concurrent.Executor executor67 = builder63.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor69 = serializedObjectSupporter68.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor71 = serializedObjectSupporter70.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter70.deserializeObjectConverter5();
        retrofit.Profiler profiler73 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler75 = serializedObjectSupporter74.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean78 = logLevel77.log();
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server50, provider51, executor61, executor67, requestInterceptor69, (retrofit.converter.Converter) gsonConverter72, profiler73, errorHandler75, log76, logLevel77);
        retrofit.Server server80 = restAdapter79.server;
        retrofit.ErrorHandler errorHandler81 = restAdapter79.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter79.logLevel;
        retrofit.Server server83 = restAdapter79.server;
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter79.getLogLevel();
        builder49.logLevel = logLevel84;
        restAdapter6.setLogLevel(logLevel84);
        retrofit.SerializedObjectSupporter serializedObjectSupporter87 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor88 = serializedObjectSupporter87.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter89 = serializedObjectSupporter87.deserializeObjectConverter7();
        java.lang.String str90 = serializedObjectSupporter87.deserializeObjectString12();
        java.lang.String str91 = serializedObjectSupporter87.deserializeObjectString5();
        java.lang.String str92 = serializedObjectSupporter87.deserializeObjectString7();
        java.lang.String str93 = serializedObjectSupporter87.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler94 = serializedObjectSupporter87.deserializeObjectErrorHandler1();
        restAdapter6.serializedObjectSupporter = serializedObjectSupporter87;
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNotNull(response46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Forbidden" + "'", str47, "Forbidden");
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNotNull(requestInterceptor69);
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(errorHandler75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(server80);
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(requestInterceptor88);
        org.junit.Assert.assertNotNull(gsonConverter89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Internal Server Error" + "'", str90, "Internal Server Error");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "http://example.com/" + "'", str91, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "http://example.com/" + "'", str92, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "OK" + "'", str93, "OK");
        org.junit.Assert.assertNotNull(errorHandler94);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter6 = builder5.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder5.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel8 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder9 = builder0.setLogLevel(logLevel8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder9.serializedObjectSupporter;
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Profiler profiler34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean39 = logLevel38.log();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server11, provider12, executor22, executor28, requestInterceptor30, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler36, log37, logLevel38);
        retrofit.ErrorHandler errorHandler41 = restAdapter40.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter40.logLevel;
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        builder9.log = log43;
        java.util.concurrent.Executor executor45 = builder9.httpExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNull(executor45);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.Server server6 = null;
        builder5.server = server6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.client.Client.Provider provider10 = null;
        builder8.setclientProvider(provider10);
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder8.setLog(log12);
        builder5.log = log12;
        retrofit.Profiler profiler15 = builder5.profiler;
        retrofit.RequestInterceptor requestInterceptor16 = builder5.requestInterceptor;
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(requestInterceptor16);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.Profiler profiler4 = builder0.profiler;
        retrofit.Profiler profiler5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder6 = builder0.setProfiler(profiler5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(profiler4);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.mime.TypedString typedString3 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse4();
        java.util.List<retrofit.client.Header> headerList6 = response5.getHeaders();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(typedString3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-" + "'", str4, "Retrofit-");
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertNotNull(headerList6);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler6 = null;
        builder5.errorHandler = errorHandler6;
        java.util.concurrent.Executor executor8 = builder5.gethttpExecutor();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        java.util.concurrent.Executor executor11 = builder9.callbackExecutor;
        builder5.setcallbackExecutor(executor11);
        builder0.callbackExecutor = executor11;
        retrofit.converter.Converter converter14 = builder0.converter;
        retrofit.client.Client.Provider provider15 = null;
        builder0.setclientProvider(provider15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.ErrorHandler errorHandler19 = null;
        builder17.errorHandler = errorHandler19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter21.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder23 = builder17.setRequestInterceptor(requestInterceptor22);
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter6();
        java.lang.String str27 = serializedObjectSupporter24.deserializeObjectString3();
        retrofit.Server server28 = serializedObjectSupporter24.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder29 = builder23.setServer(server28);
        retrofit.RestAdapter.Builder builder30 = builder0.setServer(server28);
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler34 = null;
        builder33.errorHandler = errorHandler34;
        retrofit.Server server36 = null;
        builder33.server = server36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        java.util.concurrent.Executor executor42 = builder38.getcallbackExecutor();
        builder33.setcallbackExecutor(executor42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        java.util.concurrent.Executor executor48 = builder44.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor50 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor52 = serializedObjectSupporter51.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter51.deserializeObjectConverter5();
        retrofit.Profiler profiler54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler56 = serializedObjectSupporter55.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean59 = logLevel58.log();
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server31, provider32, executor42, executor48, requestInterceptor50, (retrofit.converter.Converter) gsonConverter53, profiler54, errorHandler56, log57, logLevel58);
        retrofit.ErrorHandler errorHandler61 = restAdapter60.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor63 = serializedObjectSupporter62.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter64 = serializedObjectSupporter62.deserializeObjectConverter5();
        restAdapter60.serializedObjectSupporter = serializedObjectSupporter62;
        retrofit.RestAdapter.Log log66 = restAdapter60.log;
        builder0.log = log66;
        log66.log("");
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(requestInterceptor52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(errorHandler56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(requestInterceptor63);
        org.junit.Assert.assertNotNull(gsonConverter64);
        org.junit.Assert.assertNotNull(log66);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.Server server12 = null;
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        java.util.concurrent.Executor executor18 = builder14.getcallbackExecutor();
        builder9.setcallbackExecutor(executor18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler32 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean35 = logLevel34.log();
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server7, provider8, executor18, executor24, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler32, log33, logLevel34);
        retrofit.ErrorHandler errorHandler37 = restAdapter36.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter36.logLevel;
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter36.getLogLevel();
        restAdapter6.logLevel = logLevel40;
        java.lang.String str42 = restAdapter6.getTHREAD_PREFIX();
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-" + "'", str42, "Retrofit-");
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response4 = serializedObjectSupporter3.deserializeObjectResponse8();
        java.lang.String str5 = serializedObjectSupporter3.deserializeObjectString10();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter3.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder7 = builder0.setConverter((retrofit.converter.Converter) gsonConverter6);
        retrofit.client.Client.Provider provider8 = null;
        builder0.clientProvider = provider8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.ErrorHandler errorHandler12 = null;
        builder10.errorHandler = errorHandler12;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor15 = serializedObjectSupporter14.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder16 = builder10.setRequestInterceptor(requestInterceptor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler18 = null;
        builder17.errorHandler = errorHandler18;
        retrofit.Server server20 = null;
        builder17.server = server20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        builder17.setcallbackExecutor(executor26);
        retrofit.Server server28 = null;
        retrofit.client.Client.Provider provider29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler31 = null;
        builder30.errorHandler = errorHandler31;
        retrofit.Server server33 = null;
        builder30.server = server33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        java.util.concurrent.Executor executor39 = builder35.getcallbackExecutor();
        builder30.setcallbackExecutor(executor39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        java.util.concurrent.Executor executor45 = builder41.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor47 = serializedObjectSupporter46.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor49 = serializedObjectSupporter48.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter48.deserializeObjectConverter5();
        retrofit.Profiler profiler51 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler53 = serializedObjectSupporter52.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean56 = logLevel55.log();
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server28, provider29, executor39, executor45, requestInterceptor47, (retrofit.converter.Converter) gsonConverter50, profiler51, errorHandler53, log54, logLevel55);
        retrofit.ErrorHandler errorHandler58 = restAdapter57.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor60 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter59.deserializeObjectConverter5();
        restAdapter57.serializedObjectSupporter = serializedObjectSupporter59;
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = restAdapter57.serializedObjectSupporter;
        retrofit.Profiler profiler64 = restAdapter57.getprofiler();
        retrofit.converter.Converter converter65 = restAdapter57.converter;
        java.util.concurrent.Executor executor66 = restAdapter57.httpExecutor;
        retrofit.RestAdapter.Builder builder67 = builder10.setExecutors(executor26, executor66);
        builder0.sethttpExecutor(executor26);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter69 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Forbidden" + "'", str5, "Forbidden");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertNotNull(requestInterceptor15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(serializedObjectSupporter63);
        org.junit.Assert.assertNull(profiler64);
        org.junit.Assert.assertNotNull(converter65);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(builder67);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        builder0.setcallbackExecutor(executor11);
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler17 = null;
        builder16.errorHandler = errorHandler17;
        retrofit.Server server19 = null;
        builder16.server = server19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        java.util.concurrent.Executor executor25 = builder21.getcallbackExecutor();
        builder16.setcallbackExecutor(executor25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler37 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler39 = serializedObjectSupporter38.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean42 = logLevel41.log();
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server14, provider15, executor25, executor31, requestInterceptor33, (retrofit.converter.Converter) gsonConverter36, profiler37, errorHandler39, log40, logLevel41);
        retrofit.Server server44 = restAdapter43.server;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter43.logLevel = logLevel45;
        retrofit.client.Client.Provider provider47 = restAdapter43.getclientProvider();
        retrofit.client.Client.Provider provider48 = restAdapter43.clientProvider;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler50 = null;
        builder49.errorHandler = errorHandler50;
        retrofit.RequestInterceptor requestInterceptor52 = builder49.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder54 = builder49.setLogLevel(logLevel53);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.NONE;
        builder49.logLevel = logLevel55;
        restAdapter43.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder0.setLogLevel(logLevel55);
        java.util.concurrent.Executor executor59 = builder58.getcallbackExecutor();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNull(requestInterceptor52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(executor59);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.ErrorHandler errorHandler11 = null;
        builder0.errorHandler = errorHandler11;
        java.util.concurrent.Executor executor13 = builder0.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor15 = serializedObjectSupporter14.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString16 = serializedObjectSupporter14.deserializeObjectTypedInput1();
        java.lang.String str17 = serializedObjectSupporter14.deserializeObjectString13();
        java.lang.String str18 = serializedObjectSupporter14.deserializeObjectString8();
        builder0.serializedObjectSupporter = serializedObjectSupporter14;
        retrofit.ErrorHandler errorHandler20 = builder0.errorHandler;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(requestInterceptor15);
        org.junit.Assert.assertNotNull(typedString16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNull(errorHandler20);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel3 = builder0.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler5 = serializedObjectSupporter4.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter6();
        builder0.converter = gsonConverter6;
        retrofit.client.Client.Provider provider8 = builder0.clientProvider;
        retrofit.client.Client.Provider provider9 = null;
        builder0.clientProvider = provider9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.ErrorHandler errorHandler13 = null;
        builder11.errorHandler = errorHandler13;
        retrofit.client.Client.Provider provider15 = null;
        builder11.clientProvider = provider15;
        retrofit.RequestInterceptor requestInterceptor17 = builder11.requestInterceptor;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler19 = null;
        builder18.errorHandler = errorHandler19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder18.serializedObjectSupporter;
        retrofit.Server server22 = builder18.server;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter24 = builder23.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel26 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder27 = builder18.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = builder11.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder0.setLogLevel(logLevel26);
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertNull(converter24);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str34 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.Server server38 = null;
        builder35.server = server38;
        java.util.concurrent.Executor executor40 = builder35.callbackExecutor;
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler44 = null;
        builder43.errorHandler = errorHandler44;
        retrofit.Server server46 = null;
        builder43.server = server46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        java.util.concurrent.Executor executor52 = builder48.getcallbackExecutor();
        builder43.setcallbackExecutor(executor52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Log log56 = null;
        builder54.log = log56;
        java.util.concurrent.Executor executor58 = builder54.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor60 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor62 = serializedObjectSupporter61.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter61.deserializeObjectConverter5();
        retrofit.Profiler profiler64 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler66 = serializedObjectSupporter65.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean69 = logLevel68.log();
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server41, provider42, executor52, executor58, requestInterceptor60, (retrofit.converter.Converter) gsonConverter63, profiler64, errorHandler66, log67, logLevel68);
        retrofit.ErrorHandler errorHandler71 = restAdapter70.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter70.logLevel;
        retrofit.RestAdapter.Log log73 = restAdapter70.log;
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter70.getLogLevel();
        builder35.logLevel = logLevel74;
        restAdapter29.setLogLevel(logLevel74);
        retrofit.ErrorHandler errorHandler77 = restAdapter29.errorHandler;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Retrofit-" + "'", str34, "Retrofit-");
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(errorHandler71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(errorHandler77);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString5();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response9 = serializedObjectSupporter8.deserializeObjectResponse8();
        java.lang.String str10 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter4();
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder14 = builder0.setServer(server13);
        retrofit.RestAdapter restAdapter15 = builder14.build();
        java.util.concurrent.Executor executor16 = builder14.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(response9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(executor16);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.RestAdapter.Builder builder10 = builder8.setServer("OK");
        retrofit.client.Client.Provider provider11 = builder8.getclientProvider();
        retrofit.RestAdapter.LogLevel logLevel12 = builder8.logLevel;
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString11();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString12();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.Class class6 = serializedObjectSupporter0.deserializeObjectClass1();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Internal Server Error" + "'", str4, "Internal Server Error");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(class6);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.sethttpExecutor(executor3);
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler8 = null;
        builder7.errorHandler = errorHandler8;
        retrofit.Server server10 = null;
        builder7.server = server10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        java.util.concurrent.Executor executor16 = builder12.getcallbackExecutor();
        builder7.setcallbackExecutor(executor16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor24 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter5();
        retrofit.Profiler profiler28 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler30 = serializedObjectSupporter29.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean33 = logLevel32.log();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server5, provider6, executor16, executor22, requestInterceptor24, (retrofit.converter.Converter) gsonConverter27, profiler28, errorHandler30, log31, logLevel32);
        retrofit.ErrorHandler errorHandler35 = restAdapter34.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter34.logLevel;
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        builder0.log = log37;
        retrofit.RestAdapter.LogLevel logLevel39 = builder0.logLevel;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(errorHandler35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        builder0.ensureSaneDefaults();
        retrofit.Server server5 = builder0.server;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(server5);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.getLogLevel();
        java.lang.String str32 = restAdapter29.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor33 = restAdapter29.getcallbackExecutor();
        retrofit.ErrorHandler errorHandler34 = restAdapter29.geterrorHandler();
        java.util.concurrent.Executor executor35 = restAdapter29.callbackExecutor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-Idle" + "'", str32, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(executor35);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor5 = serializedObjectSupporter4.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder6 = builder0.setRequestInterceptor(requestInterceptor5);
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString3();
        retrofit.Server server11 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder12 = builder6.setServer(server11);
        retrofit.ErrorHandler errorHandler13 = builder12.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(errorHandler13);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response9 = serializedObjectSupporter8.deserializeObjectResponse8();
        java.lang.String str10 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter4();
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder14 = builder0.setServer(server13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = null;
        builder15.setcallbackExecutor(executor16);
        retrofit.client.Client.Provider provider18 = builder15.clientProvider;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter20 = builder19.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder19.serializedObjectSupporter;
        java.util.concurrent.Executor executor22 = null;
        builder19.sethttpExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler25 = null;
        builder24.errorHandler = errorHandler25;
        retrofit.Server server27 = null;
        builder24.server = server27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        java.util.concurrent.Executor executor33 = builder29.getcallbackExecutor();
        builder24.setcallbackExecutor(executor33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.setcallbackExecutor(executor36);
        retrofit.client.Client.Provider provider38 = builder35.clientProvider;
        java.util.concurrent.Executor executor39 = builder35.gethttpExecutor();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        java.util.concurrent.Executor executor42 = builder40.callbackExecutor;
        builder35.setcallbackExecutor(executor42);
        retrofit.RestAdapter.Builder builder44 = builder19.setExecutors(executor33, executor42);
        builder15.setcallbackExecutor(executor42);
        builder0.callbackExecutor = executor42;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler48 = serializedObjectSupporter47.deserializeObjectErrorHandler1();
        retrofit.client.Response response49 = serializedObjectSupporter47.deserializeObjectResponse2();
        builder0.serializedObjectSupporter = serializedObjectSupporter47;
        java.lang.String str51 = serializedObjectSupporter47.deserializeObjectString7();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter47.deserializeObjectConverter1();
        java.lang.String str53 = serializedObjectSupporter47.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter47.deserializeObjectConverter5();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(response9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(response49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "OK" + "'", str53, "OK");
        org.junit.Assert.assertNotNull(gsonConverter54);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.client.Client.Provider provider3 = builder0.clientProvider;
        java.util.concurrent.Executor executor4 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor7 = builder5.callbackExecutor;
        builder0.setcallbackExecutor(executor7);
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.ErrorHandler errorHandler39 = restAdapter38.errorHandler;
        builder0.errorHandler = errorHandler39;
        retrofit.RequestInterceptor requestInterceptor41 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNull(requestInterceptor41);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = restAdapter29.serializedObjectSupporter;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        retrofit.Server server34 = restAdapter29.getserver();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(serializedObjectSupporter32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertNull(server34);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.converter.Converter converter4 = builder0.converter;
        retrofit.client.Client.Provider provider5 = builder0.getclientProvider();
        retrofit.RestAdapter.LogLevel logLevel6 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        java.util.concurrent.Executor executor9 = null;
        builder7.callbackExecutor = executor9;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response12 = serializedObjectSupporter11.deserializeObjectResponse8();
        java.lang.String str13 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder15 = builder7.setConverter((retrofit.converter.Converter) gsonConverter14);
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler19 = null;
        builder18.errorHandler = errorHandler19;
        retrofit.Server server21 = null;
        builder18.server = server21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        java.util.concurrent.Executor executor27 = builder23.getcallbackExecutor();
        builder18.setcallbackExecutor(executor27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        java.util.concurrent.Executor executor33 = builder29.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor37 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter5();
        retrofit.Profiler profiler39 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler41 = serializedObjectSupporter40.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean44 = logLevel43.log();
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server16, provider17, executor27, executor33, requestInterceptor35, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler41, log42, logLevel43);
        retrofit.Server server46 = restAdapter45.server;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter45.logLevel = logLevel47;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter45.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = builder7.setRequestInterceptor(requestInterceptor49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        java.util.concurrent.Executor executor53 = null;
        builder51.callbackExecutor = executor53;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response56 = serializedObjectSupporter55.deserializeObjectResponse8();
        java.lang.String str57 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter55.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder59 = builder51.setConverter((retrofit.converter.Converter) gsonConverter58);
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler61 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        builder59.errorHandler = errorHandler61;
        retrofit.Server server63 = builder59.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler65 = serializedObjectSupporter64.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter64.deserializeObjectConverter6();
        java.lang.String str67 = serializedObjectSupporter64.deserializeObjectString3();
        retrofit.Server server68 = serializedObjectSupporter64.deserializeObjectServer1();
        builder59.server = server68;
        builder50.server = server68;
        builder0.server = server68;
        retrofit.RestAdapter.Builder builder73 = builder0.setServer("Internal Server Error");
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(response12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(response56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "http://example.com/" + "'", str57, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "http://example.com/" + "'", str67, "http://example.com/");
        org.junit.Assert.assertNotNull(server68);
        org.junit.Assert.assertNotNull(builder73);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        java.util.concurrent.Executor executor5 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter7 = builder6.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder6.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel9 = builder6.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler11 = serializedObjectSupporter10.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter10.deserializeObjectConverter6();
        builder6.converter = gsonConverter12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler15 = null;
        builder14.errorHandler = errorHandler15;
        java.util.concurrent.Executor executor17 = builder14.gethttpExecutor();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        java.util.concurrent.Executor executor20 = builder18.callbackExecutor;
        builder14.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter23 = builder22.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = builder22.serializedObjectSupporter;
        java.util.concurrent.Executor executor25 = null;
        builder22.sethttpExecutor(executor25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler28 = null;
        builder27.errorHandler = errorHandler28;
        retrofit.Server server30 = null;
        builder27.server = server30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        java.util.concurrent.Executor executor36 = builder32.getcallbackExecutor();
        builder27.setcallbackExecutor(executor36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = null;
        builder38.setcallbackExecutor(executor39);
        retrofit.client.Client.Provider provider41 = builder38.clientProvider;
        java.util.concurrent.Executor executor42 = builder38.gethttpExecutor();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        java.util.concurrent.Executor executor45 = builder43.callbackExecutor;
        builder38.setcallbackExecutor(executor45);
        retrofit.RestAdapter.Builder builder47 = builder22.setExecutors(executor36, executor45);
        retrofit.RestAdapter.Builder builder48 = builder6.setExecutors(executor20, executor45);
        builder0.sethttpExecutor(executor20);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(serializedObjectSupporter24);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter29.setLogLevel(logLevel32);
        retrofit.client.Client.Provider provider34 = restAdapter29.getclientProvider();
        java.util.concurrent.Executor executor35 = restAdapter29.gethttpExecutor();
        retrofit.RequestInterceptor requestInterceptor36 = restAdapter29.getrequestInterceptor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(requestInterceptor36);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.converter.Converter converter11 = builder10.converter;
        retrofit.Profiler profiler12 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder13 = builder10.setProfiler(profiler12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(converter11);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        java.util.concurrent.Executor executor8 = builder4.getcallbackExecutor();
        builder0.httpExecutor = executor8;
        retrofit.RestAdapter.Log log10 = builder0.log;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertNull(log10);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder2.errorHandler = errorHandler4;
        retrofit.converter.Converter converter6 = builder2.converter;
        retrofit.client.Client.Provider provider7 = builder2.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        builder2.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder23.setclientProvider(provider26);
        retrofit.RequestInterceptor requestInterceptor28 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = null;
        builder29.callbackExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response34 = serializedObjectSupporter33.deserializeObjectResponse8();
        java.lang.String str35 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder37 = builder29.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = null;
        builder39.callbackExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response44 = serializedObjectSupporter43.deserializeObjectResponse8();
        java.lang.String str45 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder47 = builder39.setConverter((retrofit.converter.Converter) gsonConverter46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        builder47.errorHandler = errorHandler49;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server0, provider1, executor17, executor22, requestInterceptor28, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler49, log51, logLevel52);
        java.util.concurrent.Executor executor54 = restAdapter53.gethttpExecutor();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(response34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(log56);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler39 = null;
        builder38.errorHandler = errorHandler39;
        retrofit.Server server41 = null;
        builder38.server = server41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        java.util.concurrent.Executor executor47 = builder43.getcallbackExecutor();
        builder38.setcallbackExecutor(executor47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter54.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler59 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler61 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean64 = logLevel63.log();
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server36, provider37, executor47, executor53, requestInterceptor55, (retrofit.converter.Converter) gsonConverter58, profiler59, errorHandler61, log62, logLevel63);
        retrofit.Server server66 = restAdapter65.server;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter65.logLevel = logLevel67;
        retrofit.client.Client.Provider provider69 = restAdapter65.getclientProvider();
        retrofit.client.Client.Provider provider70 = restAdapter65.clientProvider;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler72 = null;
        builder71.errorHandler = errorHandler72;
        retrofit.RequestInterceptor requestInterceptor74 = builder71.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder76 = builder71.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        builder71.logLevel = logLevel77;
        restAdapter65.setLogLevel(logLevel77);
        restAdapter29.setLogLevel(logLevel77);
        retrofit.client.Client.Provider provider81 = restAdapter29.clientProvider;
        retrofit.client.Client.Provider provider82 = restAdapter29.clientProvider;
        java.lang.String str83 = restAdapter29.getIDLE_THREAD_NAME();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider81);
        org.junit.Assert.assertNull(provider82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Retrofit-Idle" + "'", str83, "Retrofit-Idle");
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString12();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString7();
        retrofit.mime.TypedString typedString6 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Internal Server Error" + "'", str3, "Internal Server Error");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(typedString6);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse4();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(response4);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter2.deserializeObjectErrorHandler1();
        retrofit.client.Response response4 = serializedObjectSupporter2.deserializeObjectResponse2();
        java.lang.String str5 = response4.getReason();
        java.util.List<retrofit.client.Header> headerList6 = response4.headers;
        int int7 = response4.getStatus();
        int int8 = response4.getStatus();
        java.lang.String str9 = response4.reason;
        java.util.List<retrofit.client.Header> headerList10 = response4.getHeaders();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor12 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString14 = serializedObjectSupporter11.deserializeObjectTypedInput1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response15 = new retrofit.client.Response((int) '#', "hi!", headerList10, (retrofit.mime.TypedInput) typedString14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 35");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "OK" + "'", str5, "OK");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 200 + "'", int7 == 200);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 200 + "'", int8 == 200);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "OK" + "'", str9, "OK");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(requestInterceptor12);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(typedString14);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        java.lang.String str36 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler40 = null;
        builder39.errorHandler = errorHandler40;
        retrofit.Server server42 = null;
        builder39.server = server42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        java.util.concurrent.Executor executor48 = builder44.getcallbackExecutor();
        builder39.setcallbackExecutor(executor48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        java.util.concurrent.Executor executor54 = builder50.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor56 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor58 = serializedObjectSupporter57.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.Profiler profiler60 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler62 = serializedObjectSupporter61.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean65 = logLevel64.log();
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server37, provider38, executor48, executor54, requestInterceptor56, (retrofit.converter.Converter) gsonConverter59, profiler60, errorHandler62, log63, logLevel64);
        retrofit.ErrorHandler errorHandler67 = restAdapter66.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor69 = serializedObjectSupporter68.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter68.deserializeObjectConverter5();
        restAdapter66.serializedObjectSupporter = serializedObjectSupporter68;
        retrofit.RestAdapter.Log log72 = restAdapter66.log;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler74 = null;
        builder73.errorHandler = errorHandler74;
        retrofit.RequestInterceptor requestInterceptor76 = builder73.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder78 = builder73.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        java.util.concurrent.Executor executor81 = builder79.callbackExecutor;
        builder78.callbackExecutor = executor81;
        retrofit.RestAdapter.LogLevel logLevel83 = builder78.logLevel;
        restAdapter66.setLogLevel(logLevel83);
        restAdapter29.logLevel = logLevel83;
        java.lang.String str86 = restAdapter29.getTHREAD_PREFIX();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-Idle" + "'", str36, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(errorHandler62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(errorHandler67);
        org.junit.Assert.assertNotNull(requestInterceptor69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNull(requestInterceptor76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Retrofit-" + "'", str86, "Retrofit-");
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.Server server4 = builder3.server;
        retrofit.ErrorHandler errorHandler5 = null;
        builder3.errorHandler = errorHandler5;
        java.util.concurrent.Executor executor7 = null;
        builder3.sethttpExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder3.setclientProvider(provider9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor12 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder13 = builder3.setRequestInterceptor(requestInterceptor12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter15 = builder14.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder14.serializedObjectSupporter;
        java.util.concurrent.Executor executor17 = null;
        builder14.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler20 = null;
        builder19.errorHandler = errorHandler20;
        retrofit.Server server22 = null;
        builder19.server = server22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        builder19.setcallbackExecutor(executor28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.setcallbackExecutor(executor31);
        retrofit.client.Client.Provider provider33 = builder30.clientProvider;
        java.util.concurrent.Executor executor34 = builder30.gethttpExecutor();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        java.util.concurrent.Executor executor37 = builder35.callbackExecutor;
        builder30.setcallbackExecutor(executor37);
        retrofit.RestAdapter.Builder builder39 = builder14.setExecutors(executor28, executor37);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler41 = null;
        builder40.errorHandler = errorHandler41;
        retrofit.RequestInterceptor requestInterceptor43 = builder40.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder45 = builder40.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        java.util.concurrent.Executor executor48 = builder46.callbackExecutor;
        builder45.callbackExecutor = executor48;
        retrofit.RestAdapter.Builder builder50 = builder13.setExecutors(executor28, executor48);
        builder0.httpExecutor = executor48;
        retrofit.client.Client.Provider provider52 = builder0.getclientProvider();
        java.util.concurrent.Executor executor53 = builder0.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = builder0.serializedObjectSupporter;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNotNull(requestInterceptor12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(requestInterceptor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertNull(serializedObjectSupporter54);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString8();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter3();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter8);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = builder35.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel41;
        restAdapter29.setLogLevel(logLevel41);
        java.util.concurrent.Executor executor44 = restAdapter29.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter29.new RestHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor44);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.client.Client.Provider provider6 = builder0.clientProvider;
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(provider6);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler38 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler39 = restAdapter29.geterrorHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = restAdapter29.serializedObjectSupporter;
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter40.deserializeObjectConverter3();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections42 = serializedObjectSupporter40.deserializeObjectList2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(serializedObjectSupporter40);
        org.junit.Assert.assertNotNull(gsonConverter41);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler35 = null;
        builder34.errorHandler = errorHandler35;
        retrofit.Server server37 = null;
        builder34.server = server37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        java.util.concurrent.Executor executor43 = builder39.getcallbackExecutor();
        builder34.setcallbackExecutor(executor43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        java.util.concurrent.Executor executor49 = builder45.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor51 = serializedObjectSupporter50.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor53 = serializedObjectSupporter52.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter52.deserializeObjectConverter5();
        retrofit.Profiler profiler55 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler57 = serializedObjectSupporter56.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean60 = logLevel59.log();
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server32, provider33, executor43, executor49, requestInterceptor51, (retrofit.converter.Converter) gsonConverter54, profiler55, errorHandler57, log58, logLevel59);
        retrofit.Server server62 = restAdapter61.server;
        retrofit.ErrorHandler errorHandler63 = restAdapter61.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter61.logLevel;
        restAdapter29.logLevel = logLevel64;
        java.util.concurrent.Executor executor66 = restAdapter29.gethttpExecutor();
        java.lang.Throwable throwable67 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter29.logException(throwable67, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNotNull(requestInterceptor53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(server62);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor66);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.converter.Converter converter4 = builder0.converter;
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler8 = null;
        builder7.errorHandler = errorHandler8;
        retrofit.Server server10 = null;
        builder7.server = server10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        java.util.concurrent.Executor executor16 = builder12.getcallbackExecutor();
        builder7.setcallbackExecutor(executor16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor24 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter5();
        retrofit.Profiler profiler28 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler30 = serializedObjectSupporter29.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean33 = logLevel32.log();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server5, provider6, executor16, executor22, requestInterceptor24, (retrofit.converter.Converter) gsonConverter27, profiler28, errorHandler30, log31, logLevel32);
        retrofit.Server server35 = restAdapter34.server;
        retrofit.ErrorHandler errorHandler36 = restAdapter34.errorHandler;
        java.lang.String str37 = restAdapter34.getTHREAD_PREFIX();
        retrofit.Profiler profiler38 = restAdapter34.profiler;
        java.util.concurrent.Executor executor39 = restAdapter34.httpExecutor;
        builder0.httpExecutor = executor39;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertNotNull(executor39);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse7();
        retrofit.mime.TypedInput typedInput2 = response1.getBody();
        retrofit.mime.TypedInput typedInput3 = response1.body;
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertNull(typedInput2);
        org.junit.Assert.assertNull(typedInput3);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString8();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter1();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections9 = serializedObjectSupporter0.deserializeObjectList2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter8);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response33 = serializedObjectSupporter32.deserializeObjectResponse8();
        java.lang.String str34 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter4();
        java.lang.String str36 = serializedObjectSupporter32.deserializeObjectString3();
        restHandler31.serializedObjectSupporter = serializedObjectSupporter32;
        java.lang.String str38 = serializedObjectSupporter32.deserializeObjectString3();
        java.lang.String str39 = serializedObjectSupporter32.deserializeObjectString10();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(response33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Forbidden" + "'", str39, "Forbidden");
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = builder35.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel41;
        restAdapter29.setLogLevel(logLevel41);
        java.lang.String str44 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str45 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.Profiler profiler46 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter29.getLogLevel();
        java.lang.String str48 = restAdapter29.getIDLE_THREAD_NAME();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-" + "'", str44, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-Idle" + "'", str45, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Retrofit-Idle" + "'", str48, "Retrofit-Idle");
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.Class class42 = serializedObjectSupporter38.deserializeObjectClass1();
        retrofit.client.Response response43 = serializedObjectSupporter38.deserializeObjectResponse7();
        int int44 = response43.getStatus();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertNotNull(class42);
        org.junit.Assert.assertNotNull(response43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 500 + "'", int44 == 500);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.getLogLevel();
        retrofit.Server server32 = restAdapter29.server;
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter29.new RestHandler();
        retrofit.converter.Converter converter34 = restAdapter29.getconverter();
        retrofit.client.Request request35 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request36 = restAdapter29.logAndReplaceRequest(request35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNotNull(converter34);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString11();
        retrofit.ErrorHandler errorHandler4 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString9();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse7();
        retrofit.client.Response response8 = serializedObjectSupporter0.deserializeObjectResponse8();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertNotNull(response8);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel3 = builder0.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler5 = serializedObjectSupporter4.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter6();
        builder0.converter = gsonConverter6;
        retrofit.ErrorHandler errorHandler8 = builder0.errorHandler;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNull(errorHandler8);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.RestAdapter.Log log7 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder8 = builder0.setLog(log7);
        java.util.concurrent.Executor executor9 = builder8.httpExecutor;
        retrofit.converter.Converter converter10 = builder8.converter;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.client.Client.Provider provider13 = null;
        builder11.clientProvider = provider13;
        retrofit.RequestInterceptor requestInterceptor15 = builder11.requestInterceptor;
        java.util.concurrent.Executor executor16 = builder11.httpExecutor;
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler20 = null;
        builder19.errorHandler = errorHandler20;
        retrofit.Server server22 = null;
        builder19.server = server22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        builder19.setcallbackExecutor(executor28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        java.util.concurrent.Executor executor34 = builder30.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor36 = serializedObjectSupporter35.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter37.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter37.deserializeObjectConverter5();
        retrofit.Profiler profiler40 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler42 = serializedObjectSupporter41.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean45 = logLevel44.log();
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server17, provider18, executor28, executor34, requestInterceptor36, (retrofit.converter.Converter) gsonConverter39, profiler40, errorHandler42, log43, logLevel44);
        retrofit.ErrorHandler errorHandler47 = restAdapter46.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor49 = serializedObjectSupporter48.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter48.deserializeObjectConverter5();
        restAdapter46.serializedObjectSupporter = serializedObjectSupporter48;
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = restAdapter46.serializedObjectSupporter;
        retrofit.Profiler profiler53 = restAdapter46.getprofiler();
        java.lang.String str54 = restAdapter46.getTHREAD_PREFIX();
        retrofit.RestAdapter.Log log55 = restAdapter46.log;
        retrofit.RestAdapter.Builder builder56 = builder11.setLog(log55);
        builder8.log = log55;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNull(requestInterceptor15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(errorHandler47);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(serializedObjectSupporter52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.client.Client.Provider provider3 = builder0.clientProvider;
        java.util.concurrent.Executor executor4 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor7 = builder5.callbackExecutor;
        builder0.setcallbackExecutor(executor7);
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.ErrorHandler errorHandler11 = null;
        builder9.errorHandler = errorHandler11;
        retrofit.RequestInterceptor requestInterceptor13 = builder9.requestInterceptor;
        retrofit.ErrorHandler errorHandler14 = null;
        builder9.errorHandler = errorHandler14;
        retrofit.Profiler profiler16 = builder9.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response18 = serializedObjectSupporter17.deserializeObjectResponse8();
        java.lang.String str19 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter4();
        java.lang.String str21 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.Server server22 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder9.setServer(server22);
        retrofit.RestAdapter.Builder builder24 = builder0.setServer(server22);
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder24.serializedObjectSupporter;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNotNull(response18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http://example.com/" + "'", str19, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http://example.com/" + "'", str21, "http://example.com/");
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        java.util.concurrent.Executor executor12 = builder9.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response14 = serializedObjectSupporter13.deserializeObjectResponse8();
        java.lang.String str15 = serializedObjectSupporter13.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter13.deserializeObjectConverter4();
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString3();
        retrofit.Server server18 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder19 = builder9.setServer(server18);
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        java.util.concurrent.Executor executor37 = builder33.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor41 = serializedObjectSupporter40.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler45 = serializedObjectSupporter44.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean48 = logLevel47.log();
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server20, provider21, executor31, executor37, requestInterceptor39, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler45, log46, logLevel47);
        retrofit.Server server50 = restAdapter49.server;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder9.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder0.setLogLevel(logLevel51);
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = builder54.serializedObjectSupporter;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNotNull(response14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(requestInterceptor41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(errorHandler45);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(serializedObjectSupporter55);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString2();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-Idle" + "'", str36, "Retrofit-Idle");
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.RequestInterceptor requestInterceptor9 = builder6.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        java.util.concurrent.Executor executor14 = builder12.callbackExecutor;
        builder11.callbackExecutor = executor14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter17 = builder16.converter;
        retrofit.ErrorHandler errorHandler18 = null;
        builder16.errorHandler = errorHandler18;
        retrofit.converter.Converter converter20 = builder16.converter;
        retrofit.client.Client.Provider provider21 = builder16.getclientProvider();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        builder16.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder34 = builder0.setExecutors(executor14, executor31);
        retrofit.Profiler profiler35 = builder34.profiler;
        java.util.concurrent.Executor executor36 = builder34.callbackExecutor;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler40 = null;
        builder39.errorHandler = errorHandler40;
        retrofit.Server server42 = null;
        builder39.server = server42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        java.util.concurrent.Executor executor48 = builder44.getcallbackExecutor();
        builder39.setcallbackExecutor(executor48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        java.util.concurrent.Executor executor54 = builder50.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor56 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor58 = serializedObjectSupporter57.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter57.deserializeObjectConverter5();
        retrofit.Profiler profiler60 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler62 = serializedObjectSupporter61.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean65 = logLevel64.log();
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server37, provider38, executor48, executor54, requestInterceptor56, (retrofit.converter.Converter) gsonConverter59, profiler60, errorHandler62, log63, logLevel64);
        retrofit.Server server67 = restAdapter66.server;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter66.logLevel = logLevel68;
        retrofit.client.Client.Provider provider70 = restAdapter66.getclientProvider();
        retrofit.RestAdapter.Log log71 = restAdapter66.log;
        java.lang.String str72 = restAdapter66.getIDLE_THREAD_NAME();
        java.lang.String str73 = restAdapter66.getTHREAD_PREFIX();
        retrofit.RestAdapter.Log log74 = restAdapter66.log;
        builder34.log = log74;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(errorHandler62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Retrofit-Idle" + "'", str72, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Retrofit-" + "'", str73, "Retrofit-");
        org.junit.Assert.assertNotNull(log74);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler39 = null;
        builder38.errorHandler = errorHandler39;
        retrofit.Server server41 = null;
        builder38.server = server41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        java.util.concurrent.Executor executor47 = builder43.getcallbackExecutor();
        builder38.setcallbackExecutor(executor47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter54.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler59 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler61 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean64 = logLevel63.log();
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server36, provider37, executor47, executor53, requestInterceptor55, (retrofit.converter.Converter) gsonConverter58, profiler59, errorHandler61, log62, logLevel63);
        retrofit.Server server66 = restAdapter65.server;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter65.logLevel = logLevel67;
        retrofit.client.Client.Provider provider69 = restAdapter65.getclientProvider();
        retrofit.client.Client.Provider provider70 = restAdapter65.clientProvider;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler72 = null;
        builder71.errorHandler = errorHandler72;
        retrofit.RequestInterceptor requestInterceptor74 = builder71.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder76 = builder71.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        builder71.logLevel = logLevel77;
        restAdapter65.setLogLevel(logLevel77);
        restAdapter29.setLogLevel(logLevel77);
        retrofit.client.Client.Provider provider81 = restAdapter29.clientProvider;
        retrofit.ErrorHandler errorHandler82 = restAdapter29.geterrorHandler();
        retrofit.RequestInterceptor requestInterceptor83 = restAdapter29.requestInterceptor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider81);
        org.junit.Assert.assertNotNull(errorHandler82);
        org.junit.Assert.assertNotNull(requestInterceptor83);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.logLevel;
        retrofit.Server server32 = restAdapter29.getserver();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server32);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.Server server39 = restAdapter38.server;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter38.logLevel = logLevel40;
        retrofit.RequestInterceptor requestInterceptor42 = restAdapter38.requestInterceptor;
        retrofit.RestAdapter.Builder builder43 = builder0.setRequestInterceptor(requestInterceptor42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        java.util.concurrent.Executor executor48 = builder44.getcallbackExecutor();
        builder0.callbackExecutor = executor48;
        retrofit.ErrorHandler errorHandler50 = builder0.errorHandler;
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(errorHandler50);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder7 = builder0.setLogLevel(logLevel6);
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler9 = serializedObjectSupporter8.deserializeObjectErrorHandler1();
        java.lang.String str10 = serializedObjectSupporter8.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter1();
        retrofit.ErrorHandler errorHandler12 = serializedObjectSupporter8.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder13 = builder0.setErrorHandler(errorHandler12);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(errorHandler9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(errorHandler12);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.Server server11 = null;
        builder10.server = server11;
        retrofit.client.Client.Provider provider13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder14 = builder10.setClient(provider13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = response2.getReason();
        java.util.List<retrofit.client.Header> headerList4 = response2.headers;
        int int5 = response2.getStatus();
        int int6 = response2.getStatus();
        java.util.List<retrofit.client.Header> headerList7 = response2.headers;
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "OK" + "'", str3, "OK");
        org.junit.Assert.assertNotNull(headerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 200 + "'", int5 == 200);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 200 + "'", int6 == 200);
        org.junit.Assert.assertNotNull(headerList7);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        java.lang.String str33 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor34 = restAdapter29.requestInterceptor;
        retrofit.Server server35 = restAdapter29.getserver();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-Idle" + "'", str33, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertNull(server35);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.ErrorHandler errorHandler36 = restAdapter35.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter35.logLevel;
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        builder5.log = log38;
        log38.log("hi!");
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log38);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel3 = builder0.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler5 = serializedObjectSupporter4.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter6();
        builder0.converter = gsonConverter6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        java.util.concurrent.Executor executor11 = builder8.gethttpExecutor();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        java.util.concurrent.Executor executor14 = builder12.callbackExecutor;
        builder8.setcallbackExecutor(executor14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter17 = builder16.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder16.serializedObjectSupporter;
        java.util.concurrent.Executor executor19 = null;
        builder16.sethttpExecutor(executor19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler22 = null;
        builder21.errorHandler = errorHandler22;
        retrofit.Server server24 = null;
        builder21.server = server24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        java.util.concurrent.Executor executor30 = builder26.getcallbackExecutor();
        builder21.setcallbackExecutor(executor30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor33 = null;
        builder32.setcallbackExecutor(executor33);
        retrofit.client.Client.Provider provider35 = builder32.clientProvider;
        java.util.concurrent.Executor executor36 = builder32.gethttpExecutor();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        java.util.concurrent.Executor executor39 = builder37.callbackExecutor;
        builder32.setcallbackExecutor(executor39);
        retrofit.RestAdapter.Builder builder41 = builder16.setExecutors(executor30, executor39);
        retrofit.RestAdapter.Builder builder42 = builder0.setExecutors(executor14, executor39);
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler46 = null;
        builder45.errorHandler = errorHandler46;
        retrofit.Server server48 = null;
        builder45.server = server48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        java.util.concurrent.Executor executor54 = builder50.getcallbackExecutor();
        builder45.setcallbackExecutor(executor54);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        java.util.concurrent.Executor executor60 = builder56.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor62 = serializedObjectSupporter61.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor64 = serializedObjectSupporter63.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.Profiler profiler66 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler68 = serializedObjectSupporter67.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean71 = logLevel70.log();
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server43, provider44, executor54, executor60, requestInterceptor62, (retrofit.converter.Converter) gsonConverter65, profiler66, errorHandler68, log69, logLevel70);
        retrofit.Server server73 = restAdapter72.server;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter72.logLevel = logLevel74;
        java.lang.String str76 = restAdapter72.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor77 = restAdapter72.gethttpExecutor();
        retrofit.RequestInterceptor requestInterceptor78 = restAdapter72.requestInterceptor;
        retrofit.RestAdapter.Builder builder79 = builder42.setRequestInterceptor(requestInterceptor78);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter80 = builder79.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Retrofit-Idle" + "'", str76, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(executor77);
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertNotNull(builder79);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = builder35.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel41;
        restAdapter29.setLogLevel(logLevel41);
        java.lang.String str44 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RequestInterceptor requestInterceptor45 = restAdapter29.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        java.util.concurrent.Executor executor49 = null;
        builder47.callbackExecutor = executor49;
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response52 = serializedObjectSupporter51.deserializeObjectResponse8();
        java.lang.String str53 = serializedObjectSupporter51.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter51.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder55 = builder47.setConverter((retrofit.converter.Converter) gsonConverter54);
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler57 = serializedObjectSupporter56.deserializeObjectErrorHandler1();
        builder55.errorHandler = errorHandler57;
        retrofit.Server server59 = null;
        builder55.server = server59;
        retrofit.RestAdapter.LogLevel logLevel61 = builder55.logLevel;
        restAdapter29.logLevel = logLevel61;
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter29.getLogLevel();
        retrofit.ErrorHandler errorHandler64 = restAdapter29.geterrorHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-" + "'", str44, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(response52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com/" + "'", str53, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler64);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.LogLevel logLevel5 = null;
        builder0.logLevel = logLevel5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter7.deserializeObjectRequestInterceptor1();
        retrofit.RequestInterceptor requestInterceptor9 = serializedObjectSupporter7.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder10 = builder0.setRequestInterceptor(requestInterceptor9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder10.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.ErrorHandler errorHandler15 = null;
        builder13.errorHandler = errorHandler15;
        java.util.concurrent.Executor executor17 = null;
        builder13.sethttpExecutor(executor17);
        retrofit.client.Client.Provider provider19 = null;
        builder13.setclientProvider(provider19);
        retrofit.RequestInterceptor requestInterceptor21 = builder13.requestInterceptor;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter23 = builder22.converter;
        retrofit.ErrorHandler errorHandler24 = null;
        builder22.errorHandler = errorHandler24;
        retrofit.converter.Converter converter26 = builder22.converter;
        retrofit.client.Client.Provider provider27 = builder22.getclientProvider();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler29 = null;
        builder28.errorHandler = errorHandler29;
        retrofit.Server server31 = null;
        builder28.server = server31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        java.util.concurrent.Executor executor37 = builder33.getcallbackExecutor();
        builder28.setcallbackExecutor(executor37);
        builder22.sethttpExecutor(executor37);
        builder13.callbackExecutor = executor37;
        builder10.sethttpExecutor(executor37);
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler45 = null;
        builder44.errorHandler = errorHandler45;
        retrofit.Server server47 = null;
        builder44.server = server47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        builder44.setcallbackExecutor(executor53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        java.util.concurrent.Executor executor59 = builder55.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor61 = serializedObjectSupporter60.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor63 = serializedObjectSupporter62.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter64 = serializedObjectSupporter62.deserializeObjectConverter5();
        retrofit.Profiler profiler65 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler67 = serializedObjectSupporter66.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean70 = logLevel69.log();
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server42, provider43, executor53, executor59, requestInterceptor61, (retrofit.converter.Converter) gsonConverter64, profiler65, errorHandler67, log68, logLevel69);
        retrofit.ErrorHandler errorHandler72 = restAdapter71.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.Log log74 = restAdapter71.log;
        retrofit.RequestInterceptor requestInterceptor75 = restAdapter71.requestInterceptor;
        retrofit.RestAdapter.Builder builder76 = builder10.setRequestInterceptor(requestInterceptor75);
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(requestInterceptor21);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(converter26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertNotNull(requestInterceptor63);
        org.junit.Assert.assertNotNull(gsonConverter64);
        org.junit.Assert.assertNotNull(errorHandler67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(errorHandler72);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.RequestInterceptor requestInterceptor9 = builder6.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        java.util.concurrent.Executor executor14 = builder12.callbackExecutor;
        builder11.callbackExecutor = executor14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter17 = builder16.converter;
        retrofit.ErrorHandler errorHandler18 = null;
        builder16.errorHandler = errorHandler18;
        retrofit.converter.Converter converter20 = builder16.converter;
        retrofit.client.Client.Provider provider21 = builder16.getclientProvider();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        builder16.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder34 = builder0.setExecutors(executor14, executor31);
        java.util.concurrent.Executor executor35 = builder34.callbackExecutor;
        retrofit.Profiler profiler36 = null;
        builder34.profiler = profiler36;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler41 = null;
        builder40.errorHandler = errorHandler41;
        retrofit.Server server43 = null;
        builder40.server = server43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        java.util.concurrent.Executor executor49 = builder45.getcallbackExecutor();
        builder40.setcallbackExecutor(executor49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        java.util.concurrent.Executor executor55 = builder51.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor59 = serializedObjectSupporter58.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter58.deserializeObjectConverter5();
        retrofit.Profiler profiler61 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler63 = serializedObjectSupporter62.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean66 = logLevel65.log();
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server38, provider39, executor49, executor55, requestInterceptor57, (retrofit.converter.Converter) gsonConverter60, profiler61, errorHandler63, log64, logLevel65);
        retrofit.Server server68 = restAdapter67.server;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter67.logLevel = logLevel69;
        retrofit.client.Client.Provider provider71 = restAdapter67.getclientProvider();
        retrofit.RestAdapter.Log log72 = restAdapter67.log;
        java.lang.String str73 = restAdapter67.getIDLE_THREAD_NAME();
        java.lang.String str74 = restAdapter67.getTHREAD_PREFIX();
        retrofit.RestAdapter.Log log75 = restAdapter67.log;
        log75.log("Forbidden");
        retrofit.RestAdapter.Builder builder78 = builder34.setLog(log75);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Retrofit-Idle" + "'", str73, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Retrofit-" + "'", str74, "Retrofit-");
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder78);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = builder35.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel41;
        restAdapter29.setLogLevel(logLevel41);
        java.util.concurrent.Executor executor44 = restAdapter29.httpExecutor;
        retrofit.Profiler profiler45 = restAdapter29.getprofiler();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter29.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = restHandler46.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertNull(serializedObjectSupporter47);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString13();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "OK" + "'", str1, "OK");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        java.util.concurrent.Executor executor9 = builder6.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response11 = serializedObjectSupporter10.deserializeObjectResponse8();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter4();
        java.lang.String str14 = serializedObjectSupporter10.deserializeObjectString3();
        retrofit.Server server15 = serializedObjectSupporter10.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder16 = builder6.setServer(server15);
        builder0.server = server15;
        retrofit.converter.Converter converter18 = builder0.converter;
        retrofit.client.Client client19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder20 = builder0.setClient(client19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(response11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(converter18);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        builder0.requestInterceptor = requestInterceptor4;
        retrofit.RestAdapter.Log log6 = builder0.log;
        retrofit.Server server7 = builder0.server;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(log6);
        org.junit.Assert.assertNull(server7);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel3 = builder2.logLevel;
        retrofit.client.Client.Provider provider4 = null;
        builder2.setclientProvider(provider4);
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler7 = serializedObjectSupporter6.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter6.deserializeObjectConverter6();
        java.lang.String str9 = serializedObjectSupporter6.deserializeObjectString3();
        retrofit.Server server10 = serializedObjectSupporter6.deserializeObjectServer1();
        builder2.server = server10;
        retrofit.RestAdapter.Builder builder12 = builder0.setServer(server10);
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder12.serializedObjectSupporter;
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.RestAdapter.Log log34 = restAdapter29.log;
        java.lang.String str35 = restAdapter29.getIDLE_THREAD_NAME();
        java.lang.String str36 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RestAdapter.Log log37 = restAdapter29.log;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        builder38.requestInterceptor = requestInterceptor40;
        retrofit.RestAdapter.Builder builder43 = builder38.setServer("Retrofit-");
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler47 = null;
        builder46.errorHandler = errorHandler47;
        retrofit.Server server49 = null;
        builder46.server = server49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        java.util.concurrent.Executor executor55 = builder51.getcallbackExecutor();
        builder46.setcallbackExecutor(executor55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        java.util.concurrent.Executor executor61 = builder57.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor63 = serializedObjectSupporter62.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor65 = serializedObjectSupporter64.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter64.deserializeObjectConverter5();
        retrofit.Profiler profiler67 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler69 = serializedObjectSupporter68.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean72 = logLevel71.log();
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server44, provider45, executor55, executor61, requestInterceptor63, (retrofit.converter.Converter) gsonConverter66, profiler67, errorHandler69, log70, logLevel71);
        retrofit.ErrorHandler errorHandler74 = restAdapter73.errorHandler;
        retrofit.RestAdapter.Builder builder75 = builder43.setErrorHandler(errorHandler74);
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        restAdapter29.setLogLevel(logLevel76);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(requestInterceptor63);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(errorHandler69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(errorHandler74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response4 = serializedObjectSupporter3.deserializeObjectResponse8();
        java.lang.String str5 = serializedObjectSupporter3.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter3.deserializeObjectConverter4();
        java.lang.String str7 = serializedObjectSupporter3.deserializeObjectString3();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter3.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder9 = builder0.setRequestInterceptor(requestInterceptor8);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor5 = serializedObjectSupporter4.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder6 = builder0.setRequestInterceptor(requestInterceptor5);
        retrofit.RestAdapter.LogLevel logLevel7 = builder6.logLevel;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.client.Client.Provider provider10 = builder8.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel11 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder12 = builder6.setLogLevel(logLevel11);
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler16 = null;
        builder15.errorHandler = errorHandler16;
        retrofit.Server server18 = null;
        builder15.server = server18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        builder15.setcallbackExecutor(executor24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        java.util.concurrent.Executor executor30 = builder26.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter33.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter33.deserializeObjectConverter5();
        retrofit.Profiler profiler36 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler38 = serializedObjectSupporter37.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean41 = logLevel40.log();
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server13, provider14, executor24, executor30, requestInterceptor32, (retrofit.converter.Converter) gsonConverter35, profiler36, errorHandler38, log39, logLevel40);
        retrofit.Profiler profiler43 = restAdapter42.getprofiler();
        java.util.concurrent.Executor executor44 = restAdapter42.gethttpExecutor();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter42.getLogLevel();
        builder6.logLevel = logLevel45;
        java.util.concurrent.Executor executor47 = builder6.callbackExecutor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor47);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.geterrorHandler();
        retrofit.client.Client.Provider provider32 = restAdapter29.getclientProvider();
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter29.getrequestInterceptor();
        retrofit.converter.Converter converter34 = restAdapter29.getconverter();
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter29.requestInterceptor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(converter34);
        org.junit.Assert.assertNotNull(requestInterceptor35);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.getLogLevel();
        retrofit.RequestInterceptor requestInterceptor32 = restAdapter29.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter29.requestInterceptor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(requestInterceptor33);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString11();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString6();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        java.lang.String str36 = restAdapter29.getIDLE_THREAD_NAME();
        java.lang.String str37 = restAdapter29.getTHREAD_PREFIX();
        retrofit.client.Request request38 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request39 = restAdapter29.logAndReplaceRequest(request38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-Idle" + "'", str36, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter10 = builder9.converter;
        retrofit.ErrorHandler errorHandler11 = null;
        builder9.errorHandler = errorHandler11;
        retrofit.converter.Converter converter13 = builder9.converter;
        retrofit.client.Client.Provider provider14 = builder9.getclientProvider();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler16 = null;
        builder15.errorHandler = errorHandler16;
        retrofit.Server server18 = null;
        builder15.server = server18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        builder15.setcallbackExecutor(executor24);
        builder9.sethttpExecutor(executor24);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        java.util.concurrent.Executor executor29 = builder27.callbackExecutor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = builder30.serializedObjectSupporter;
        retrofit.client.Client.Provider provider33 = null;
        builder30.setclientProvider(provider33);
        retrofit.RequestInterceptor requestInterceptor35 = builder30.requestInterceptor;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        java.util.concurrent.Executor executor38 = null;
        builder36.callbackExecutor = executor38;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response41 = serializedObjectSupporter40.deserializeObjectResponse8();
        java.lang.String str42 = serializedObjectSupporter40.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder44 = builder36.setConverter((retrofit.converter.Converter) gsonConverter43);
        retrofit.Profiler profiler45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        java.util.concurrent.Executor executor48 = null;
        builder46.callbackExecutor = executor48;
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response51 = serializedObjectSupporter50.deserializeObjectResponse8();
        java.lang.String str52 = serializedObjectSupporter50.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder54 = builder46.setConverter((retrofit.converter.Converter) gsonConverter53);
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler56 = serializedObjectSupporter55.deserializeObjectErrorHandler1();
        builder54.errorHandler = errorHandler56;
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server7, provider8, executor24, executor29, requestInterceptor35, (retrofit.converter.Converter) gsonConverter43, profiler45, errorHandler56, log58, logLevel59);
        retrofit.RestAdapter.Builder builder61 = builder0.setLog(log58);
        retrofit.Server server62 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder64 = builder0.setRequestInterceptor(requestInterceptor63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Request interceptor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(response41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(response51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(errorHandler56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(server62);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.Server server6 = builder0.server;
        retrofit.converter.Converter converter7 = builder0.converter;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(converter7);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.Server server35 = restAdapter29.server;
        java.lang.String str36 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str37 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter29.getLogLevel();
        java.lang.String str39 = restAdapter29.getTHREAD_PREFIX();
        retrofit.converter.Converter converter40 = restAdapter29.converter;
        retrofit.ErrorHandler errorHandler41 = restAdapter29.geterrorHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-" + "'", str39, "Retrofit-");
        org.junit.Assert.assertNotNull(converter40);
        org.junit.Assert.assertNotNull(errorHandler41);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str34 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter29.logLevel;
        retrofit.Profiler profiler36 = restAdapter29.profiler;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Retrofit-" + "'", str34, "Retrofit-");
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler36);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections5 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.RestAdapter.Builder builder7 = builder0.setServer("Forbidden");
        retrofit.Profiler profiler8 = null;
        builder0.profiler = profiler8;
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Profiler profiler30 = restAdapter29.getprofiler();
        retrofit.Server server31 = restAdapter29.server;
        retrofit.converter.Converter converter32 = restAdapter29.converter;
        java.util.concurrent.Executor executor33 = restAdapter29.httpExecutor;
        java.util.concurrent.Executor executor34 = restAdapter29.callbackExecutor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertNotNull(converter32);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNotNull(executor34);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        retrofit.Profiler profiler36 = restAdapter29.profiler;
        java.util.concurrent.Executor executor37 = restAdapter29.callbackExecutor;
        retrofit.ErrorHandler errorHandler38 = restAdapter29.geterrorHandler();
        retrofit.ErrorHandler errorHandler39 = restAdapter29.geterrorHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(errorHandler39);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = null;
        retrofit.client.Client.Provider provider31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler33 = null;
        builder32.errorHandler = errorHandler33;
        retrofit.Server server35 = null;
        builder32.server = server35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        java.util.concurrent.Executor executor41 = builder37.getcallbackExecutor();
        builder32.setcallbackExecutor(executor41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        java.util.concurrent.Executor executor47 = builder43.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor49 = serializedObjectSupporter48.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor51 = serializedObjectSupporter50.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter50.deserializeObjectConverter5();
        retrofit.Profiler profiler53 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler55 = serializedObjectSupporter54.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean58 = logLevel57.log();
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server30, provider31, executor41, executor47, requestInterceptor49, (retrofit.converter.Converter) gsonConverter52, profiler53, errorHandler55, log56, logLevel57);
        retrofit.ErrorHandler errorHandler60 = restAdapter59.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter59.logLevel;
        restAdapter29.setLogLevel(logLevel61);
        retrofit.Server server63 = restAdapter29.server;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(errorHandler55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server63);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.RequestInterceptor requestInterceptor9 = builder6.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        java.util.concurrent.Executor executor14 = builder12.callbackExecutor;
        builder11.callbackExecutor = executor14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter17 = builder16.converter;
        retrofit.ErrorHandler errorHandler18 = null;
        builder16.errorHandler = errorHandler18;
        retrofit.converter.Converter converter20 = builder16.converter;
        retrofit.client.Client.Provider provider21 = builder16.getclientProvider();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        builder16.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder34 = builder0.setExecutors(executor14, executor31);
        java.util.concurrent.Executor executor35 = builder34.callbackExecutor;
        retrofit.Profiler profiler36 = null;
        builder34.profiler = profiler36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter39 = builder38.converter;
        retrofit.ErrorHandler errorHandler40 = null;
        builder38.errorHandler = errorHandler40;
        retrofit.converter.Converter converter42 = builder38.converter;
        retrofit.client.Client.Provider provider43 = builder38.getclientProvider();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler45 = null;
        builder44.errorHandler = errorHandler45;
        retrofit.Server server47 = null;
        builder44.server = server47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        builder44.setcallbackExecutor(executor53);
        builder38.sethttpExecutor(executor53);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler57 = null;
        builder56.errorHandler = errorHandler57;
        retrofit.RequestInterceptor requestInterceptor59 = builder56.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder61 = builder56.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        java.util.concurrent.Executor executor64 = builder62.callbackExecutor;
        builder61.callbackExecutor = executor64;
        retrofit.RestAdapter.Builder builder66 = builder34.setExecutors(executor53, executor64);
        retrofit.RestAdapter.Log log67 = builder66.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNull(requestInterceptor59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(log67);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder2.errorHandler = errorHandler4;
        retrofit.converter.Converter converter6 = builder2.converter;
        retrofit.client.Client.Provider provider7 = builder2.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        builder2.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder23.setclientProvider(provider26);
        retrofit.RequestInterceptor requestInterceptor28 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = null;
        builder29.callbackExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response34 = serializedObjectSupporter33.deserializeObjectResponse8();
        java.lang.String str35 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder37 = builder29.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = null;
        builder39.callbackExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response44 = serializedObjectSupporter43.deserializeObjectResponse8();
        java.lang.String str45 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder47 = builder39.setConverter((retrofit.converter.Converter) gsonConverter46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        builder47.errorHandler = errorHandler49;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server0, provider1, executor17, executor22, requestInterceptor28, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler49, log51, logLevel52);
        java.lang.String str54 = restAdapter53.getTHREAD_PREFIX();
        retrofit.Profiler profiler55 = restAdapter53.profiler;
        retrofit.client.Client.Provider provider56 = restAdapter53.getclientProvider();
        retrofit.ErrorHandler errorHandler57 = restAdapter53.errorHandler;
        retrofit.Profiler profiler58 = restAdapter53.profiler;
        java.util.concurrent.Executor executor59 = restAdapter53.getcallbackExecutor();
        java.util.concurrent.Executor executor60 = restAdapter53.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter53.logLevel;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(response34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNull(profiler58);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        java.util.concurrent.Executor executor9 = builder6.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response11 = serializedObjectSupporter10.deserializeObjectResponse8();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter4();
        java.lang.String str14 = serializedObjectSupporter10.deserializeObjectString3();
        retrofit.Server server15 = serializedObjectSupporter10.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder16 = builder6.setServer(server15);
        builder0.server = server15;
        java.util.concurrent.Executor executor18 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(response11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(executor18);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.String str42 = serializedObjectSupporter38.deserializeObjectString7();
        retrofit.client.Response response43 = serializedObjectSupporter38.deserializeObjectResponse7();
        java.lang.String str44 = serializedObjectSupporter38.deserializeObjectString10();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(response43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Forbidden" + "'", str44, "Forbidden");
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.RequestInterceptor requestInterceptor9 = builder6.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        java.util.concurrent.Executor executor14 = builder12.callbackExecutor;
        builder11.callbackExecutor = executor14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter17 = builder16.converter;
        retrofit.ErrorHandler errorHandler18 = null;
        builder16.errorHandler = errorHandler18;
        retrofit.converter.Converter converter20 = builder16.converter;
        retrofit.client.Client.Provider provider21 = builder16.getclientProvider();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        builder16.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder34 = builder0.setExecutors(executor14, executor31);
        java.util.concurrent.Executor executor35 = builder34.callbackExecutor;
        retrofit.RestAdapter.Builder builder37 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = builder37.build();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder10.serializedObjectSupporter;
        retrofit.client.Client.Provider provider13 = builder10.clientProvider;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler17 = null;
        builder16.errorHandler = errorHandler17;
        retrofit.Server server19 = null;
        builder16.server = server19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        java.util.concurrent.Executor executor25 = builder21.getcallbackExecutor();
        builder16.setcallbackExecutor(executor25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler37 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler39 = serializedObjectSupporter38.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean42 = logLevel41.log();
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server14, provider15, executor25, executor31, requestInterceptor33, (retrofit.converter.Converter) gsonConverter36, profiler37, errorHandler39, log40, logLevel41);
        retrofit.Server server44 = restAdapter43.server;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter43.logLevel = logLevel45;
        retrofit.client.Client.Provider provider47 = restAdapter43.getclientProvider();
        retrofit.RestAdapter.Log log48 = restAdapter43.log;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter43.getrequestInterceptor();
        retrofit.RequestInterceptor requestInterceptor50 = restAdapter43.getrequestInterceptor();
        retrofit.ErrorHandler errorHandler51 = restAdapter43.geterrorHandler();
        retrofit.RestAdapter.Builder builder52 = builder10.setErrorHandler(errorHandler51);
        java.util.concurrent.Executor executor53 = builder52.callbackExecutor;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(executor53);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor4 = builder0.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(executor4);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.getLogLevel();
        java.lang.String str32 = restAdapter29.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor33 = restAdapter29.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = restAdapter29.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-Idle" + "'", str32, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNull(serializedObjectSupporter34);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.converter.Converter converter4 = null;
        builder0.converter = converter4;
        java.util.concurrent.Executor executor6 = builder0.getcallbackExecutor();
        java.util.concurrent.Executor executor7 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(executor7);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.client.Client.Provider provider3 = builder0.clientProvider;
        java.util.concurrent.Executor executor4 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor7 = builder5.callbackExecutor;
        builder0.setcallbackExecutor(executor7);
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.ErrorHandler errorHandler39 = restAdapter38.errorHandler;
        builder0.errorHandler = errorHandler39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.ErrorHandler errorHandler43 = null;
        builder41.errorHandler = errorHandler43;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor46 = serializedObjectSupporter45.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder47 = builder41.setRequestInterceptor(requestInterceptor46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler49 = null;
        builder48.errorHandler = errorHandler49;
        retrofit.Server server51 = null;
        builder48.server = server51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        java.util.concurrent.Executor executor57 = builder53.getcallbackExecutor();
        builder48.setcallbackExecutor(executor57);
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler62 = null;
        builder61.errorHandler = errorHandler62;
        retrofit.Server server64 = null;
        builder61.server = server64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        java.util.concurrent.Executor executor70 = builder66.getcallbackExecutor();
        builder61.setcallbackExecutor(executor70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        java.util.concurrent.Executor executor76 = builder72.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter77 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter77.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor80 = serializedObjectSupporter79.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter79.deserializeObjectConverter5();
        retrofit.Profiler profiler82 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler84 = serializedObjectSupporter83.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean87 = logLevel86.log();
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server59, provider60, executor70, executor76, requestInterceptor78, (retrofit.converter.Converter) gsonConverter81, profiler82, errorHandler84, log85, logLevel86);
        retrofit.ErrorHandler errorHandler89 = restAdapter88.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter90 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor91 = serializedObjectSupporter90.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter92 = serializedObjectSupporter90.deserializeObjectConverter5();
        restAdapter88.serializedObjectSupporter = serializedObjectSupporter90;
        retrofit.SerializedObjectSupporter serializedObjectSupporter94 = restAdapter88.serializedObjectSupporter;
        retrofit.Profiler profiler95 = restAdapter88.getprofiler();
        retrofit.converter.Converter converter96 = restAdapter88.converter;
        java.util.concurrent.Executor executor97 = restAdapter88.httpExecutor;
        retrofit.RestAdapter.Builder builder98 = builder41.setExecutors(executor57, executor97);
        builder0.sethttpExecutor(executor97);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(executor57);
        org.junit.Assert.assertNotNull(executor70);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertNotNull(requestInterceptor80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(errorHandler84);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(errorHandler89);
        org.junit.Assert.assertNotNull(requestInterceptor91);
        org.junit.Assert.assertNotNull(gsonConverter92);
        org.junit.Assert.assertNotNull(serializedObjectSupporter94);
        org.junit.Assert.assertNull(profiler95);
        org.junit.Assert.assertNotNull(converter96);
        org.junit.Assert.assertNotNull(executor97);
        org.junit.Assert.assertNotNull(builder98);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.client.Client.Provider provider2 = null;
        builder0.clientProvider = provider2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        java.util.concurrent.Executor executor5 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter7 = builder6.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder6.serializedObjectSupporter;
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.ErrorHandler errorHandler39 = restAdapter38.errorHandler;
        retrofit.ErrorHandler errorHandler40 = restAdapter38.geterrorHandler();
        retrofit.client.Client.Provider provider41 = restAdapter38.getclientProvider();
        retrofit.RequestInterceptor requestInterceptor42 = restAdapter38.getrequestInterceptor();
        builder6.requestInterceptor = requestInterceptor42;
        builder0.requestInterceptor = requestInterceptor42;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler46 = null;
        builder45.errorHandler = errorHandler46;
        java.util.concurrent.Executor executor48 = builder45.gethttpExecutor();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        builder45.httpExecutor = executor53;
        builder0.httpExecutor = executor53;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNotNull(executor53);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString10();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Forbidden" + "'", str1, "Forbidden");
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder10.serializedObjectSupporter;
        retrofit.client.Client.Provider provider13 = builder10.clientProvider;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler17 = null;
        builder16.errorHandler = errorHandler17;
        retrofit.Server server19 = null;
        builder16.server = server19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        java.util.concurrent.Executor executor25 = builder21.getcallbackExecutor();
        builder16.setcallbackExecutor(executor25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler37 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler39 = serializedObjectSupporter38.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean42 = logLevel41.log();
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server14, provider15, executor25, executor31, requestInterceptor33, (retrofit.converter.Converter) gsonConverter36, profiler37, errorHandler39, log40, logLevel41);
        retrofit.Server server44 = restAdapter43.server;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter43.logLevel = logLevel45;
        retrofit.client.Client.Provider provider47 = restAdapter43.getclientProvider();
        retrofit.RestAdapter.Log log48 = restAdapter43.log;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter43.getrequestInterceptor();
        retrofit.RequestInterceptor requestInterceptor50 = restAdapter43.getrequestInterceptor();
        retrofit.ErrorHandler errorHandler51 = restAdapter43.geterrorHandler();
        retrofit.RestAdapter.Builder builder52 = builder10.setErrorHandler(errorHandler51);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter54 = builder53.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = builder53.serializedObjectSupporter;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler59 = null;
        builder58.errorHandler = errorHandler59;
        retrofit.Server server61 = null;
        builder58.server = server61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        java.util.concurrent.Executor executor67 = builder63.getcallbackExecutor();
        builder58.setcallbackExecutor(executor67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.RestAdapter.Log log71 = null;
        builder69.log = log71;
        java.util.concurrent.Executor executor73 = builder69.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor75 = serializedObjectSupporter74.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor77 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter76.deserializeObjectConverter5();
        retrofit.Profiler profiler79 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler81 = serializedObjectSupporter80.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean84 = logLevel83.log();
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server56, provider57, executor67, executor73, requestInterceptor75, (retrofit.converter.Converter) gsonConverter78, profiler79, errorHandler81, log82, logLevel83);
        retrofit.ErrorHandler errorHandler86 = restAdapter85.errorHandler;
        retrofit.ErrorHandler errorHandler87 = restAdapter85.geterrorHandler();
        retrofit.client.Client.Provider provider88 = restAdapter85.getclientProvider();
        retrofit.RequestInterceptor requestInterceptor89 = restAdapter85.getrequestInterceptor();
        builder53.requestInterceptor = requestInterceptor89;
        builder52.requestInterceptor = requestInterceptor89;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNull(serializedObjectSupporter55);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(requestInterceptor77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertNull(provider88);
        org.junit.Assert.assertNotNull(requestInterceptor89);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.LogLevel logLevel5 = null;
        builder0.logLevel = logLevel5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter7.deserializeObjectRequestInterceptor1();
        retrofit.RequestInterceptor requestInterceptor9 = serializedObjectSupporter7.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder10 = builder0.setRequestInterceptor(requestInterceptor9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        java.util.concurrent.Executor executor13 = null;
        builder11.callbackExecutor = executor13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response16 = serializedObjectSupporter15.deserializeObjectResponse8();
        java.lang.String str17 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder19 = builder11.setConverter((retrofit.converter.Converter) gsonConverter18);
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler21 = serializedObjectSupporter20.deserializeObjectErrorHandler1();
        builder19.errorHandler = errorHandler21;
        retrofit.Server server23 = builder19.server;
        retrofit.RestAdapter.LogLevel logLevel24 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        retrofit.client.Client.Provider provider27 = builder25.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel28 = builder25.logLevel;
        builder19.logLevel = logLevel28;
        builder10.logLevel = logLevel28;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler34 = null;
        builder33.errorHandler = errorHandler34;
        retrofit.Server server36 = null;
        builder33.server = server36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        java.util.concurrent.Executor executor42 = builder38.getcallbackExecutor();
        builder33.setcallbackExecutor(executor42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        java.util.concurrent.Executor executor48 = builder44.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor50 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor52 = serializedObjectSupporter51.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter51.deserializeObjectConverter5();
        retrofit.Profiler profiler54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler56 = serializedObjectSupporter55.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean59 = logLevel58.log();
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server31, provider32, executor42, executor48, requestInterceptor50, (retrofit.converter.Converter) gsonConverter53, profiler54, errorHandler56, log57, logLevel58);
        retrofit.ErrorHandler errorHandler61 = restAdapter60.errorHandler;
        retrofit.ErrorHandler errorHandler62 = restAdapter60.geterrorHandler();
        retrofit.client.Client.Provider provider63 = restAdapter60.getclientProvider();
        retrofit.RequestInterceptor requestInterceptor64 = restAdapter60.getrequestInterceptor();
        retrofit.RestAdapter.Log log65 = restAdapter60.log;
        builder10.log = log65;
        log65.log("Forbidden");
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(response16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(requestInterceptor52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(errorHandler56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(errorHandler62);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNotNull(log65);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        retrofit.Profiler profiler36 = restAdapter29.profiler;
        java.util.concurrent.Executor executor37 = restAdapter29.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter29.logLevel;
        java.util.concurrent.Executor executor39 = restAdapter29.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter29.logLevel;
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter29.new RestHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder10.serializedObjectSupporter;
        retrofit.client.Client.Provider provider13 = builder10.clientProvider;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler17 = null;
        builder16.errorHandler = errorHandler17;
        retrofit.Server server19 = null;
        builder16.server = server19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        java.util.concurrent.Executor executor25 = builder21.getcallbackExecutor();
        builder16.setcallbackExecutor(executor25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter34.deserializeObjectConverter5();
        retrofit.Profiler profiler37 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler39 = serializedObjectSupporter38.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean42 = logLevel41.log();
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server14, provider15, executor25, executor31, requestInterceptor33, (retrofit.converter.Converter) gsonConverter36, profiler37, errorHandler39, log40, logLevel41);
        retrofit.Server server44 = restAdapter43.server;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter43.logLevel = logLevel45;
        retrofit.client.Client.Provider provider47 = restAdapter43.getclientProvider();
        retrofit.RestAdapter.Log log48 = restAdapter43.log;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter43.getrequestInterceptor();
        retrofit.RequestInterceptor requestInterceptor50 = restAdapter43.getrequestInterceptor();
        retrofit.ErrorHandler errorHandler51 = restAdapter43.geterrorHandler();
        retrofit.RestAdapter.Builder builder52 = builder10.setErrorHandler(errorHandler51);
        retrofit.client.Client.Provider provider53 = builder52.getclientProvider();
        java.util.concurrent.Executor executor54 = builder52.httpExecutor;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNull(executor54);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.mime.TypedInput typedInput3 = response2.getBody();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertNotNull(typedInput3);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.converter.Converter converter4 = builder0.converter;
        retrofit.client.Client.Provider provider5 = builder0.getclientProvider();
        retrofit.RestAdapter.LogLevel logLevel6 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        java.util.concurrent.Executor executor9 = null;
        builder7.callbackExecutor = executor9;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response12 = serializedObjectSupporter11.deserializeObjectResponse8();
        java.lang.String str13 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder15 = builder7.setConverter((retrofit.converter.Converter) gsonConverter14);
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler19 = null;
        builder18.errorHandler = errorHandler19;
        retrofit.Server server21 = null;
        builder18.server = server21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        java.util.concurrent.Executor executor27 = builder23.getcallbackExecutor();
        builder18.setcallbackExecutor(executor27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        java.util.concurrent.Executor executor33 = builder29.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor37 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter36.deserializeObjectConverter5();
        retrofit.Profiler profiler39 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler41 = serializedObjectSupporter40.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean44 = logLevel43.log();
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server16, provider17, executor27, executor33, requestInterceptor35, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler41, log42, logLevel43);
        retrofit.Server server46 = restAdapter45.server;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter45.logLevel = logLevel47;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter45.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = builder7.setRequestInterceptor(requestInterceptor49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        java.util.concurrent.Executor executor53 = null;
        builder51.callbackExecutor = executor53;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response56 = serializedObjectSupporter55.deserializeObjectResponse8();
        java.lang.String str57 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter55.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder59 = builder51.setConverter((retrofit.converter.Converter) gsonConverter58);
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler61 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        builder59.errorHandler = errorHandler61;
        retrofit.Server server63 = builder59.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler65 = serializedObjectSupporter64.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter64.deserializeObjectConverter6();
        java.lang.String str67 = serializedObjectSupporter64.deserializeObjectString3();
        retrofit.Server server68 = serializedObjectSupporter64.deserializeObjectServer1();
        builder59.server = server68;
        builder50.server = server68;
        builder0.server = server68;
        retrofit.RestAdapter restAdapter72 = builder0.build();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(response12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(response56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "http://example.com/" + "'", str57, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "http://example.com/" + "'", str67, "http://example.com/");
        org.junit.Assert.assertNotNull(server68);
        org.junit.Assert.assertNotNull(restAdapter72);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.Server server35 = restAdapter29.server;
        java.lang.String str36 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str37 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str38 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler39 = restAdapter29.errorHandler;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-" + "'", str37, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Retrofit-Idle" + "'", str38, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler39);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        java.lang.String str33 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter29.logLevel;
        java.lang.String str35 = restAdapter29.getTHREAD_PREFIX();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-Idle" + "'", str33, "Retrofit-Idle");
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-" + "'", str35, "Retrofit-");
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter5();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler10 = serializedObjectSupporter9.deserializeObjectErrorHandler1();
        builder8.errorHandler = errorHandler10;
        retrofit.Server server12 = null;
        builder8.server = server12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = null;
        builder14.setcallbackExecutor(executor15);
        retrofit.client.Client.Provider provider17 = builder14.clientProvider;
        java.util.concurrent.Executor executor18 = builder14.gethttpExecutor();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        java.util.concurrent.Executor executor21 = builder19.callbackExecutor;
        builder14.setcallbackExecutor(executor21);
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler26 = null;
        builder25.errorHandler = errorHandler26;
        retrofit.Server server28 = null;
        builder25.server = server28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        java.util.concurrent.Executor executor34 = builder30.getcallbackExecutor();
        builder25.setcallbackExecutor(executor34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        java.util.concurrent.Executor executor40 = builder36.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter41.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor44 = serializedObjectSupporter43.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        retrofit.Profiler profiler46 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler48 = serializedObjectSupporter47.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean51 = logLevel50.log();
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server23, provider24, executor34, executor40, requestInterceptor42, (retrofit.converter.Converter) gsonConverter45, profiler46, errorHandler48, log49, logLevel50);
        retrofit.ErrorHandler errorHandler53 = restAdapter52.errorHandler;
        builder14.errorHandler = errorHandler53;
        retrofit.RestAdapter.Log log55 = builder14.log;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler59 = null;
        builder58.errorHandler = errorHandler59;
        retrofit.Server server61 = null;
        builder58.server = server61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        java.util.concurrent.Executor executor67 = builder63.getcallbackExecutor();
        builder58.setcallbackExecutor(executor67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.RestAdapter.Log log71 = null;
        builder69.log = log71;
        java.util.concurrent.Executor executor73 = builder69.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor75 = serializedObjectSupporter74.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor77 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter76.deserializeObjectConverter5();
        retrofit.Profiler profiler79 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler81 = serializedObjectSupporter80.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean84 = logLevel83.log();
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server56, provider57, executor67, executor73, requestInterceptor75, (retrofit.converter.Converter) gsonConverter78, profiler79, errorHandler81, log82, logLevel83);
        retrofit.ErrorHandler errorHandler86 = restAdapter85.errorHandler;
        builder14.errorHandler = errorHandler86;
        retrofit.RestAdapter.Builder builder88 = builder8.setErrorHandler(errorHandler86);
        retrofit.RestAdapter.Builder builder89 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler90 = null;
        builder89.errorHandler = errorHandler90;
        retrofit.SerializedObjectSupporter serializedObjectSupporter92 = builder89.serializedObjectSupporter;
        builder89.ensureSaneDefaults();
        retrofit.RestAdapter.Log log94 = builder89.log;
        builder8.log = log94;
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(errorHandler10);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(requestInterceptor44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(requestInterceptor77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(serializedObjectSupporter92);
        org.junit.Assert.assertNotNull(log94);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response4 = serializedObjectSupporter3.deserializeObjectResponse8();
        java.lang.String str5 = serializedObjectSupporter3.deserializeObjectString10();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter3.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder7 = builder0.setConverter((retrofit.converter.Converter) gsonConverter6);
        retrofit.converter.Converter converter8 = builder0.converter;
        retrofit.ErrorHandler errorHandler9 = builder0.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Forbidden" + "'", str5, "Forbidden");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(converter8);
        org.junit.Assert.assertNull(errorHandler9);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter29.logLevel;
        retrofit.ErrorHandler errorHandler39 = restAdapter29.geterrorHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(errorHandler39);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = builder35.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel41;
        restAdapter29.setLogLevel(logLevel41);
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter29.getLogLevel();
        java.lang.String str45 = restAdapter29.getIDLE_THREAD_NAME();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-Idle" + "'", str45, "Retrofit-Idle");
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse7();
        java.lang.Class class2 = serializedObjectSupporter0.deserializeObjectClass1();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse8();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertNotNull(class2);
        org.junit.Assert.assertNotNull(response3);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString10();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse8();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse8();
        retrofit.RequestInterceptor requestInterceptor6 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse8();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Forbidden" + "'", str3, "Forbidden");
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertNotNull(gsonConverter8);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString7();
        retrofit.Server server7 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString11();
        retrofit.RequestInterceptor requestInterceptor9 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor9);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        java.util.concurrent.Executor executor31 = restAdapter29.gethttpExecutor();
        retrofit.Profiler profiler32 = restAdapter29.profiler;
        retrofit.Profiler profiler33 = restAdapter29.getprofiler();
        retrofit.Server server34 = restAdapter29.getserver();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        java.util.concurrent.Executor executor36 = restAdapter29.callbackExecutor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(serializedObjectSupporter35);
        org.junit.Assert.assertNotNull(executor36);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.LogLevel logLevel5 = null;
        builder0.logLevel = logLevel5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter7.deserializeObjectRequestInterceptor1();
        retrofit.RequestInterceptor requestInterceptor9 = serializedObjectSupporter7.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder10 = builder0.setRequestInterceptor(requestInterceptor9);
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.ErrorHandler errorHandler14 = null;
        builder12.errorHandler = errorHandler14;
        java.util.concurrent.Executor executor16 = null;
        builder12.sethttpExecutor(executor16);
        java.util.concurrent.Executor executor18 = builder12.httpExecutor;
        retrofit.Profiler profiler19 = null;
        builder12.profiler = profiler19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = null;
        builder21.setcallbackExecutor(executor22);
        retrofit.client.Client.Provider provider24 = builder21.clientProvider;
        java.util.concurrent.Executor executor25 = builder21.gethttpExecutor();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor28 = builder26.callbackExecutor;
        builder21.setcallbackExecutor(executor28);
        builder12.callbackExecutor = executor28;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RestAdapter.Builder builder32 = builder0.setExecutors(executor28, executor31);
        retrofit.RestAdapter.Log log33 = builder32.log;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        builder0.ensureSaneDefaults();
        retrofit.converter.Converter converter5 = builder0.converter;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(converter5);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = builder35.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel41;
        restAdapter29.setLogLevel(logLevel41);
        java.lang.String str44 = restAdapter29.getTHREAD_PREFIX();
        retrofit.ErrorHandler errorHandler45 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler46 = restAdapter29.geterrorHandler();
        retrofit.client.Request request47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request48 = restAdapter29.logAndReplaceRequest(request47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-" + "'", str44, "Retrofit-");
        org.junit.Assert.assertNotNull(errorHandler45);
        org.junit.Assert.assertNotNull(errorHandler46);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.converter.Converter converter11 = builder10.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder10.serializedObjectSupporter;
        retrofit.Server server13 = builder10.server;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNotNull(server13);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.RestAdapter.Log log38 = builder0.log;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler42 = null;
        builder41.errorHandler = errorHandler42;
        retrofit.Server server44 = null;
        builder41.server = server44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        java.util.concurrent.Executor executor50 = builder46.getcallbackExecutor();
        builder41.setcallbackExecutor(executor50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        java.util.concurrent.Executor executor56 = builder52.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor58 = serializedObjectSupporter57.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor60 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter59.deserializeObjectConverter5();
        retrofit.Profiler profiler62 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler64 = serializedObjectSupporter63.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean67 = logLevel66.log();
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server39, provider40, executor50, executor56, requestInterceptor58, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler64, log65, logLevel66);
        retrofit.Server server69 = restAdapter68.server;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter68.logLevel = logLevel70;
        retrofit.client.Client.Provider provider72 = restAdapter68.getclientProvider();
        retrofit.client.Client.Provider provider73 = restAdapter68.clientProvider;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler75 = null;
        builder74.errorHandler = errorHandler75;
        retrofit.RequestInterceptor requestInterceptor77 = builder74.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder79 = builder74.setLogLevel(logLevel78);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.NONE;
        builder74.logLevel = logLevel80;
        restAdapter68.setLogLevel(logLevel80);
        java.lang.String str83 = restAdapter68.getTHREAD_PREFIX();
        retrofit.RequestInterceptor requestInterceptor84 = restAdapter68.getrequestInterceptor();
        retrofit.RestAdapter.Builder builder85 = builder0.setRequestInterceptor(requestInterceptor84);
        retrofit.ErrorHandler errorHandler86 = builder0.errorHandler;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(errorHandler64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNull(requestInterceptor77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Retrofit-" + "'", str83, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNull(errorHandler86);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.RequestInterceptor requestInterceptor9 = builder6.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        java.util.concurrent.Executor executor14 = builder12.callbackExecutor;
        builder11.callbackExecutor = executor14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter17 = builder16.converter;
        retrofit.ErrorHandler errorHandler18 = null;
        builder16.errorHandler = errorHandler18;
        retrofit.converter.Converter converter20 = builder16.converter;
        retrofit.client.Client.Provider provider21 = builder16.getclientProvider();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        builder16.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder34 = builder0.setExecutors(executor14, executor31);
        java.util.concurrent.Executor executor35 = builder34.callbackExecutor;
        java.util.concurrent.Executor executor36 = builder34.getcallbackExecutor();
        retrofit.converter.Converter converter37 = builder34.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = builder34.serializedObjectSupporter;
        retrofit.Server server39 = builder34.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertNull(serializedObjectSupporter38);
        org.junit.Assert.assertNotNull(server39);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        java.util.concurrent.Executor executor5 = builder0.httpExecutor;
        retrofit.Profiler profiler6 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder7 = builder0.setProfiler(profiler6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(executor5);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.RestAdapter.Log log34 = restAdapter29.log;
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter29.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler38 = null;
        builder37.errorHandler = errorHandler38;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = builder37.serializedObjectSupporter;
        retrofit.Server server41 = builder37.server;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter43 = builder42.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = builder42.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel45 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder37.setLogLevel(logLevel45);
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = builder46.serializedObjectSupporter;
        java.lang.reflect.Method method48 = null;
        java.lang.Object[] objArray49 = new java.lang.Object[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = restHandler36.invoke((java.lang.Object) builder46, method48, objArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNull(serializedObjectSupporter40);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(serializedObjectSupporter44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(serializedObjectSupporter47);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.LogLevel logLevel5 = null;
        builder0.logLevel = logLevel5;
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("Forbidden");
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.ErrorHandler errorHandler11 = null;
        builder9.errorHandler = errorHandler11;
        retrofit.RequestInterceptor requestInterceptor13 = builder9.requestInterceptor;
        retrofit.ErrorHandler errorHandler14 = null;
        builder9.errorHandler = errorHandler14;
        retrofit.Profiler profiler16 = builder9.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response18 = serializedObjectSupporter17.deserializeObjectResponse8();
        java.lang.String str19 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter4();
        java.lang.String str21 = serializedObjectSupporter17.deserializeObjectString3();
        retrofit.Server server22 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder23 = builder9.setServer(server22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = null;
        builder24.setcallbackExecutor(executor25);
        retrofit.client.Client.Provider provider27 = builder24.clientProvider;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter29 = builder28.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = builder28.serializedObjectSupporter;
        java.util.concurrent.Executor executor31 = null;
        builder28.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler34 = null;
        builder33.errorHandler = errorHandler34;
        retrofit.Server server36 = null;
        builder33.server = server36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        java.util.concurrent.Executor executor42 = builder38.getcallbackExecutor();
        builder33.setcallbackExecutor(executor42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor45 = null;
        builder44.setcallbackExecutor(executor45);
        retrofit.client.Client.Provider provider47 = builder44.clientProvider;
        java.util.concurrent.Executor executor48 = builder44.gethttpExecutor();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        java.util.concurrent.Executor executor51 = builder49.callbackExecutor;
        builder44.setcallbackExecutor(executor51);
        retrofit.RestAdapter.Builder builder53 = builder28.setExecutors(executor42, executor51);
        builder24.setcallbackExecutor(executor51);
        builder9.callbackExecutor = executor51;
        builder0.callbackExecutor = executor51;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNotNull(response18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http://example.com/" + "'", str19, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http://example.com/" + "'", str21, "http://example.com/");
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Profiler profiler30 = restAdapter29.getprofiler();
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler34 = null;
        builder33.errorHandler = errorHandler34;
        retrofit.Server server36 = null;
        builder33.server = server36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        java.util.concurrent.Executor executor42 = builder38.getcallbackExecutor();
        builder33.setcallbackExecutor(executor42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        java.util.concurrent.Executor executor48 = builder44.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor50 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor52 = serializedObjectSupporter51.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter51.deserializeObjectConverter5();
        retrofit.Profiler profiler54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler56 = serializedObjectSupporter55.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean59 = logLevel58.log();
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server31, provider32, executor42, executor48, requestInterceptor50, (retrofit.converter.Converter) gsonConverter53, profiler54, errorHandler56, log57, logLevel58);
        retrofit.ErrorHandler errorHandler61 = restAdapter60.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter60.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor64 = serializedObjectSupporter63.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter1();
        java.lang.String str66 = serializedObjectSupporter63.deserializeObjectString11();
        restHandler62.serializedObjectSupporter = serializedObjectSupporter63;
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter63;
        java.util.concurrent.Executor executor69 = restAdapter29.httpExecutor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(requestInterceptor52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(errorHandler56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "http://example.com/" + "'", str66, "http://example.com/");
        org.junit.Assert.assertNotNull(executor69);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = builder35.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel41;
        restAdapter29.setLogLevel(logLevel41);
        java.lang.String str44 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RequestInterceptor requestInterceptor45 = restAdapter29.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter29.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor48 = serializedObjectSupporter47.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter47.deserializeObjectConverter1();
        java.lang.String str50 = serializedObjectSupporter47.deserializeObjectString11();
        java.lang.String str51 = serializedObjectSupporter47.deserializeObjectString12();
        restHandler46.serializedObjectSupporter = serializedObjectSupporter47;
        java.lang.String str53 = serializedObjectSupporter47.deserializeObjectString2();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-" + "'", str44, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Internal Server Error" + "'", str51, "Internal Server Error");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Retrofit-Idle" + "'", str53, "Retrofit-Idle");
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.Server server3 = null;
        builder0.server = server3;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        retrofit.ErrorHandler errorHandler7 = builder0.errorHandler;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(errorHandler7);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor38 = builder37.httpExecutor;
        retrofit.converter.Converter converter39 = builder37.converter;
        java.util.concurrent.Executor executor40 = builder37.getcallbackExecutor();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(executor40);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter4();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler39 = null;
        builder38.errorHandler = errorHandler39;
        retrofit.Server server41 = null;
        builder38.server = server41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        java.util.concurrent.Executor executor47 = builder43.getcallbackExecutor();
        builder38.setcallbackExecutor(executor47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter54.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler59 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler61 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean64 = logLevel63.log();
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server36, provider37, executor47, executor53, requestInterceptor55, (retrofit.converter.Converter) gsonConverter58, profiler59, errorHandler61, log62, logLevel63);
        retrofit.Server server66 = restAdapter65.server;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter65.logLevel = logLevel67;
        retrofit.client.Client.Provider provider69 = restAdapter65.getclientProvider();
        retrofit.client.Client.Provider provider70 = restAdapter65.clientProvider;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler72 = null;
        builder71.errorHandler = errorHandler72;
        retrofit.RequestInterceptor requestInterceptor74 = builder71.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder76 = builder71.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        builder71.logLevel = logLevel77;
        restAdapter65.setLogLevel(logLevel77);
        restAdapter29.setLogLevel(logLevel77);
        retrofit.converter.Converter converter81 = restAdapter29.getconverter();
        java.util.concurrent.Executor executor82 = restAdapter29.httpExecutor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(converter81);
        org.junit.Assert.assertNotNull(executor82);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor3 = null;
        builder0.requestInterceptor = requestInterceptor3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler6 = null;
        builder5.errorHandler = errorHandler6;
        java.util.concurrent.Executor executor8 = builder5.gethttpExecutor();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        java.util.concurrent.Executor executor11 = builder9.callbackExecutor;
        builder5.setcallbackExecutor(executor11);
        builder0.callbackExecutor = executor11;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.client.Client.Provider provider16 = builder14.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel17 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder0.setLogLevel(logLevel17);
        java.util.concurrent.Executor executor19 = builder0.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter7();
        java.lang.String str23 = serializedObjectSupporter20.deserializeObjectString12();
        java.lang.String str24 = serializedObjectSupporter20.deserializeObjectString5();
        java.lang.String str25 = serializedObjectSupporter20.deserializeObjectString7();
        java.lang.String str26 = serializedObjectSupporter20.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler27 = serializedObjectSupporter20.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder28 = builder0.setErrorHandler(errorHandler27);
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Internal Server Error" + "'", str23, "Internal Server Error");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "OK" + "'", str26, "OK");
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        java.util.concurrent.Executor executor9 = builder6.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response11 = serializedObjectSupporter10.deserializeObjectResponse8();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter4();
        java.lang.String str14 = serializedObjectSupporter10.deserializeObjectString3();
        retrofit.Server server15 = serializedObjectSupporter10.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder16 = builder6.setServer(server15);
        builder0.server = server15;
        retrofit.RestAdapter restAdapter18 = builder0.build();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler20 = null;
        builder19.errorHandler = errorHandler20;
        retrofit.RequestInterceptor requestInterceptor22 = builder19.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder24 = builder19.setLogLevel(logLevel23);
        retrofit.Server server25 = null;
        builder24.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.client.Client.Provider provider29 = null;
        builder27.setclientProvider(provider29);
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = builder27.setLog(log31);
        builder24.log = log31;
        builder0.log = log31;
        log31.log("Forbidden");
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(response11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(restAdapter18);
        org.junit.Assert.assertNull(requestInterceptor22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
    }
}

