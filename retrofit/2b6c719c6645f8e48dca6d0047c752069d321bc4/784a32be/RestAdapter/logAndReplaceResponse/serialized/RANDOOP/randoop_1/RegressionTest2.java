import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.Server server4 = builder3.server;
        retrofit.ErrorHandler errorHandler5 = null;
        builder3.errorHandler = errorHandler5;
        java.util.concurrent.Executor executor7 = null;
        builder3.sethttpExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder3.setclientProvider(provider9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor12 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder13 = builder3.setRequestInterceptor(requestInterceptor12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter15 = builder14.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder14.serializedObjectSupporter;
        java.util.concurrent.Executor executor17 = null;
        builder14.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler20 = null;
        builder19.errorHandler = errorHandler20;
        retrofit.Server server22 = null;
        builder19.server = server22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        builder19.setcallbackExecutor(executor28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.setcallbackExecutor(executor31);
        retrofit.client.Client.Provider provider33 = builder30.clientProvider;
        java.util.concurrent.Executor executor34 = builder30.gethttpExecutor();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        java.util.concurrent.Executor executor37 = builder35.callbackExecutor;
        builder30.setcallbackExecutor(executor37);
        retrofit.RestAdapter.Builder builder39 = builder14.setExecutors(executor28, executor37);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler41 = null;
        builder40.errorHandler = errorHandler41;
        retrofit.RequestInterceptor requestInterceptor43 = builder40.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder45 = builder40.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        java.util.concurrent.Executor executor48 = builder46.callbackExecutor;
        builder45.callbackExecutor = executor48;
        retrofit.RestAdapter.Builder builder50 = builder13.setExecutors(executor28, executor48);
        builder0.httpExecutor = executor48;
        retrofit.client.Client.Provider provider52 = builder0.getclientProvider();
        retrofit.client.Client client53 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder54 = builder0.setClient(client53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNotNull(requestInterceptor12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(requestInterceptor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(provider52);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.Server server3 = null;
        builder0.server = server3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        java.util.concurrent.Executor executor9 = builder5.getcallbackExecutor();
        builder0.setcallbackExecutor(executor9);
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Profiler profiler34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean39 = logLevel38.log();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server11, provider12, executor22, executor28, requestInterceptor30, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler36, log37, logLevel38);
        retrofit.ErrorHandler errorHandler41 = restAdapter40.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter40.getLogLevel();
        java.lang.String str43 = restAdapter40.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor44 = restAdapter40.getcallbackExecutor();
        builder0.callbackExecutor = executor44;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        java.util.concurrent.Executor executor49 = null;
        builder47.callbackExecutor = executor49;
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response52 = serializedObjectSupporter51.deserializeObjectResponse8();
        java.lang.String str53 = serializedObjectSupporter51.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter51.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder55 = builder47.setConverter((retrofit.converter.Converter) gsonConverter54);
        retrofit.RequestInterceptor requestInterceptor56 = builder55.requestInterceptor;
        java.util.concurrent.Executor executor57 = builder55.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor58 = builder55.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor60 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter59.deserializeObjectConverter8();
        retrofit.Server server62 = serializedObjectSupporter59.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder63 = builder55.setServer(server62);
        builder0.server = server62;
        java.lang.Class<?> wildcardClass65 = server62.getClass();
        org.junit.Assert.assertNotNull(executor9);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(response52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com/" + "'", str53, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(executor57);
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Server server36 = restAdapter29.server;
        retrofit.Profiler profiler37 = restAdapter29.profiler;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        java.util.concurrent.Executor executor40 = null;
        builder38.callbackExecutor = executor40;
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response43 = serializedObjectSupporter42.deserializeObjectResponse8();
        java.lang.String str44 = serializedObjectSupporter42.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter42.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder46 = builder38.setConverter((retrofit.converter.Converter) gsonConverter45);
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler50 = null;
        builder49.errorHandler = errorHandler50;
        retrofit.Server server52 = null;
        builder49.server = server52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Log log56 = null;
        builder54.log = log56;
        java.util.concurrent.Executor executor58 = builder54.getcallbackExecutor();
        builder49.setcallbackExecutor(executor58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        java.util.concurrent.Executor executor64 = builder60.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor66 = serializedObjectSupporter65.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor68 = serializedObjectSupporter67.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter69 = serializedObjectSupporter67.deserializeObjectConverter5();
        retrofit.Profiler profiler70 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter71 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler72 = serializedObjectSupporter71.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean75 = logLevel74.log();
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server47, provider48, executor58, executor64, requestInterceptor66, (retrofit.converter.Converter) gsonConverter69, profiler70, errorHandler72, log73, logLevel74);
        retrofit.Server server77 = restAdapter76.server;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter76.logLevel = logLevel78;
        retrofit.RequestInterceptor requestInterceptor80 = restAdapter76.requestInterceptor;
        retrofit.RestAdapter.Builder builder81 = builder38.setRequestInterceptor(requestInterceptor80);
        retrofit.SerializedObjectSupporter serializedObjectSupporter82 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor83 = serializedObjectSupporter82.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter84 = serializedObjectSupporter82.deserializeObjectConverter1();
        retrofit.mime.TypedString typedString85 = serializedObjectSupporter82.deserializeObjectTypedInput1();
        retrofit.converter.GsonConverter gsonConverter86 = serializedObjectSupporter82.deserializeObjectConverter4();
        retrofit.RequestInterceptor requestInterceptor87 = serializedObjectSupporter82.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder88 = builder38.setRequestInterceptor(requestInterceptor87);
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder88.logLevel = logLevel89;
        restAdapter29.setLogLevel(logLevel89);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNotNull(response43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(requestInterceptor68);
        org.junit.Assert.assertNotNull(gsonConverter69);
        org.junit.Assert.assertNotNull(errorHandler72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(server77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(requestInterceptor83);
        org.junit.Assert.assertNotNull(gsonConverter84);
        org.junit.Assert.assertNotNull(typedString85);
        org.junit.Assert.assertNotNull(gsonConverter86);
        org.junit.Assert.assertNotNull(requestInterceptor87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.Profiler profiler7 = restAdapter6.profiler;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter6.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor9 = restAdapter6.requestInterceptor;
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(requestInterceptor9);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        retrofit.converter.Converter converter37 = restAdapter29.getconverter();
        retrofit.client.Client.Provider provider38 = restAdapter29.clientProvider;
        retrofit.client.Client.Provider provider39 = restAdapter29.getclientProvider();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter37);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(provider39);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Profiler profiler34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean39 = logLevel38.log();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server11, provider12, executor22, executor28, requestInterceptor30, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler36, log37, logLevel38);
        retrofit.Server server41 = restAdapter40.server;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder0.setLogLevel(logLevel42);
        retrofit.Server server45 = builder0.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler47 = serializedObjectSupporter46.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder48 = builder0.setErrorHandler(errorHandler47);
        retrofit.RequestInterceptor requestInterceptor49 = null;
        builder0.requestInterceptor = requestInterceptor49;
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor52 = serializedObjectSupporter51.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter51.deserializeObjectConverter5();
        retrofit.client.Response response54 = serializedObjectSupporter51.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter51.deserializeObjectConverter2();
        retrofit.Server server56 = serializedObjectSupporter51.deserializeObjectServer1();
        builder0.server = server56;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(errorHandler47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(requestInterceptor52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(response54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(server56);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString11();
        retrofit.ErrorHandler errorHandler4 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Response response6 = serializedObjectSupporter0.deserializeObjectResponse2();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(response6);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler38 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler39 = restAdapter29.geterrorHandler();
        retrofit.Profiler profiler40 = restAdapter29.profiler;
        java.util.concurrent.Executor executor41 = restAdapter29.gethttpExecutor();
        retrofit.Profiler profiler42 = restAdapter29.profiler;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNull(profiler42);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        java.util.concurrent.Executor executor31 = restAdapter29.gethttpExecutor();
        retrofit.client.Client.Provider provider32 = restAdapter29.getclientProvider();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(provider32);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.LogLevel logLevel5 = null;
        builder0.logLevel = logLevel5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter7.deserializeObjectRequestInterceptor1();
        retrofit.RequestInterceptor requestInterceptor9 = serializedObjectSupporter7.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder10 = builder0.setRequestInterceptor(requestInterceptor9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.client.Client.Provider provider14 = builder12.clientProvider;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = null;
        builder15.setcallbackExecutor(executor16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler19 = null;
        builder18.errorHandler = errorHandler19;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder18.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder23 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = builder23.build();
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler28 = null;
        builder27.errorHandler = errorHandler28;
        retrofit.Server server30 = null;
        builder27.server = server30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        java.util.concurrent.Executor executor36 = builder32.getcallbackExecutor();
        builder27.setcallbackExecutor(executor36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        java.util.concurrent.Executor executor42 = builder38.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor44 = serializedObjectSupporter43.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor46 = serializedObjectSupporter45.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter45.deserializeObjectConverter5();
        retrofit.Profiler profiler48 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler50 = serializedObjectSupporter49.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean53 = logLevel52.log();
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server25, provider26, executor36, executor42, requestInterceptor44, (retrofit.converter.Converter) gsonConverter47, profiler48, errorHandler50, log51, logLevel52);
        retrofit.ErrorHandler errorHandler55 = restAdapter54.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter54.logLevel;
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter54.getLogLevel();
        restAdapter24.logLevel = logLevel58;
        retrofit.converter.Converter converter60 = restAdapter24.converter;
        retrofit.converter.Converter converter61 = restAdapter24.getconverter();
        retrofit.client.Client.Provider provider62 = restAdapter24.getclientProvider();
        builder15.setclientProvider(provider62);
        builder12.setclientProvider(provider62);
        retrofit.RestAdapter.Builder builder65 = builder10.setClient(provider62);
        retrofit.client.Client.Provider provider66 = builder10.clientProvider;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(restAdapter24);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(requestInterceptor44);
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(errorHandler50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(errorHandler55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter60);
        org.junit.Assert.assertNotNull(converter61);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(provider66);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString12();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString9();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse2();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Internal Server Error" + "'", str3, "Internal Server Error");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(response7);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.Server server35 = restAdapter29.server;
        java.lang.String str36 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RequestInterceptor requestInterceptor37 = restAdapter29.requestInterceptor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor37);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.client.Client.Provider provider3 = builder0.clientProvider;
        java.util.concurrent.Executor executor4 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor7 = builder5.callbackExecutor;
        builder0.setcallbackExecutor(executor7);
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.ErrorHandler errorHandler39 = restAdapter38.errorHandler;
        builder0.errorHandler = errorHandler39;
        retrofit.converter.Converter converter41 = builder0.converter;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler43 = null;
        builder42.errorHandler = errorHandler43;
        java.util.concurrent.Executor executor45 = builder42.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response47 = serializedObjectSupporter46.deserializeObjectResponse8();
        java.lang.String str48 = serializedObjectSupporter46.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter4();
        java.lang.String str50 = serializedObjectSupporter46.deserializeObjectString3();
        retrofit.Server server51 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder52 = builder42.setServer(server51);
        retrofit.RestAdapter.Builder builder53 = builder0.setServer(server51);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = null;
        builder54.setcallbackExecutor(executor55);
        retrofit.client.Client.Provider provider57 = builder54.clientProvider;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter59 = builder58.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = builder58.serializedObjectSupporter;
        java.util.concurrent.Executor executor61 = null;
        builder58.sethttpExecutor(executor61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler64 = null;
        builder63.errorHandler = errorHandler64;
        retrofit.Server server66 = null;
        builder63.server = server66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        builder68.ensureSaneDefaults();
        retrofit.RestAdapter.Log log70 = null;
        builder68.log = log70;
        java.util.concurrent.Executor executor72 = builder68.getcallbackExecutor();
        builder63.setcallbackExecutor(executor72);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor75 = null;
        builder74.setcallbackExecutor(executor75);
        retrofit.client.Client.Provider provider77 = builder74.clientProvider;
        java.util.concurrent.Executor executor78 = builder74.gethttpExecutor();
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        java.util.concurrent.Executor executor81 = builder79.callbackExecutor;
        builder74.setcallbackExecutor(executor81);
        retrofit.RestAdapter.Builder builder83 = builder58.setExecutors(executor72, executor81);
        builder54.setcallbackExecutor(executor81);
        builder53.setcallbackExecutor(executor81);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(response47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertNull(serializedObjectSupporter60);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertNull(provider77);
        org.junit.Assert.assertNull(executor78);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter6 = builder5.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder5.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel8 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder9 = builder0.setLogLevel(logLevel8);
        retrofit.Server server10 = null;
        retrofit.client.Client.Provider provider11 = null;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler13 = null;
        builder12.errorHandler = errorHandler13;
        retrofit.Server server15 = null;
        builder12.server = server15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        builder12.setcallbackExecutor(executor21);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        java.util.concurrent.Executor executor27 = builder23.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor29 = serializedObjectSupporter28.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor31 = serializedObjectSupporter30.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter30.deserializeObjectConverter5();
        retrofit.Profiler profiler33 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler35 = serializedObjectSupporter34.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean38 = logLevel37.log();
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server10, provider11, executor21, executor27, requestInterceptor29, (retrofit.converter.Converter) gsonConverter32, profiler33, errorHandler35, log36, logLevel37);
        retrofit.Profiler profiler40 = restAdapter39.getprofiler();
        java.util.concurrent.Executor executor41 = restAdapter39.gethttpExecutor();
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler43 = null;
        builder42.errorHandler = errorHandler43;
        java.util.concurrent.Executor executor45 = builder42.gethttpExecutor();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        java.util.concurrent.Executor executor48 = builder46.callbackExecutor;
        builder42.setcallbackExecutor(executor48);
        retrofit.RestAdapter.Builder builder50 = builder0.setExecutors(executor41, executor48);
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler52 = serializedObjectSupporter51.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter51.deserializeObjectConverter6();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter51.deserializeObjectConverter3();
        builder50.converter = gsonConverter54;
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(errorHandler35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(gsonConverter54);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter29.setLogLevel(logLevel32);
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler35 = serializedObjectSupporter34.deserializeObjectErrorHandler1();
        retrofit.client.Response response36 = serializedObjectSupporter34.deserializeObjectResponse2();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter34;
        retrofit.RequestInterceptor requestInterceptor38 = restAdapter29.getrequestInterceptor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(errorHandler35);
        org.junit.Assert.assertNotNull(response36);
        org.junit.Assert.assertNotNull(requestInterceptor38);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler39 = null;
        builder38.errorHandler = errorHandler39;
        retrofit.Server server41 = null;
        builder38.server = server41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        java.util.concurrent.Executor executor47 = builder43.getcallbackExecutor();
        builder38.setcallbackExecutor(executor47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        java.util.concurrent.Executor executor53 = builder49.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter54.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter58 = serializedObjectSupporter56.deserializeObjectConverter5();
        retrofit.Profiler profiler59 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler61 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean64 = logLevel63.log();
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server36, provider37, executor47, executor53, requestInterceptor55, (retrofit.converter.Converter) gsonConverter58, profiler59, errorHandler61, log62, logLevel63);
        retrofit.Server server66 = restAdapter65.server;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter65.logLevel = logLevel67;
        retrofit.client.Client.Provider provider69 = restAdapter65.getclientProvider();
        retrofit.client.Client.Provider provider70 = restAdapter65.clientProvider;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler72 = null;
        builder71.errorHandler = errorHandler72;
        retrofit.RequestInterceptor requestInterceptor74 = builder71.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder76 = builder71.setLogLevel(logLevel75);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        builder71.logLevel = logLevel77;
        restAdapter65.setLogLevel(logLevel77);
        restAdapter29.setLogLevel(logLevel77);
        retrofit.Profiler profiler81 = restAdapter29.getprofiler();
        retrofit.client.Client.Provider provider82 = restAdapter29.getclientProvider();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(gsonConverter58);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler81);
        org.junit.Assert.assertNull(provider82);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Profiler profiler34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean39 = logLevel38.log();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server11, provider12, executor22, executor28, requestInterceptor30, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler36, log37, logLevel38);
        retrofit.Server server41 = restAdapter40.server;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder0.setLogLevel(logLevel42);
        retrofit.RequestInterceptor requestInterceptor45 = builder44.requestInterceptor;
        retrofit.RestAdapter.Builder builder47 = builder44.setServer("http://example.com/");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.client.Client.Provider provider50 = null;
        builder48.setclientProvider(provider50);
        builder48.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response54 = serializedObjectSupporter53.deserializeObjectResponse8();
        java.lang.String str55 = serializedObjectSupporter53.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter53.deserializeObjectConverter4();
        java.lang.String str57 = serializedObjectSupporter53.deserializeObjectString3();
        retrofit.Server server58 = serializedObjectSupporter53.deserializeObjectServer1();
        builder48.server = server58;
        retrofit.RestAdapter.Builder builder60 = builder44.setServer(server58);
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        java.util.concurrent.Executor executor62 = builder60.gethttpExecutor();
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(response54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "http://example.com/" + "'", str55, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "http://example.com/" + "'", str57, "http://example.com/");
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(executor62);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "OK" + "'", str1, "OK");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = builder35.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel41;
        restAdapter29.setLogLevel(logLevel41);
        java.lang.String str44 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str45 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.Profiler profiler46 = restAdapter29.profiler;
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter29.getLogLevel();
        retrofit.client.Client.Provider provider48 = restAdapter29.clientProvider;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter29.getrequestInterceptor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-" + "'", str44, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-Idle" + "'", str45, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        java.util.concurrent.Executor executor6 = builder4.callbackExecutor;
        builder0.setcallbackExecutor(executor6);
        retrofit.RestAdapter.LogLevel logLevel8 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.RequestInterceptor requestInterceptor12 = builder9.requestInterceptor;
        retrofit.converter.Converter converter13 = null;
        builder9.converter = converter13;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor16 = serializedObjectSupporter15.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder17 = builder9.setRequestInterceptor(requestInterceptor16);
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response19 = serializedObjectSupporter18.deserializeObjectResponse8();
        java.lang.String str20 = serializedObjectSupporter18.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter4();
        java.lang.String str22 = serializedObjectSupporter18.deserializeObjectString3();
        retrofit.ErrorHandler errorHandler23 = serializedObjectSupporter18.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder24 = builder9.setErrorHandler(errorHandler23);
        builder0.errorHandler = errorHandler23;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter27 = builder26.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder26.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        builder26.requestInterceptor = requestInterceptor29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler32 = null;
        builder31.errorHandler = errorHandler32;
        java.util.concurrent.Executor executor34 = builder31.gethttpExecutor();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        java.util.concurrent.Executor executor37 = builder35.callbackExecutor;
        builder31.setcallbackExecutor(executor37);
        builder26.callbackExecutor = executor37;
        retrofit.converter.Converter converter40 = builder26.converter;
        retrofit.client.Client.Provider provider41 = null;
        builder26.setclientProvider(provider41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.Server server44 = builder43.server;
        retrofit.ErrorHandler errorHandler45 = null;
        builder43.errorHandler = errorHandler45;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor48 = serializedObjectSupporter47.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder49 = builder43.setRequestInterceptor(requestInterceptor48);
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler51 = serializedObjectSupporter50.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter50.deserializeObjectConverter6();
        java.lang.String str53 = serializedObjectSupporter50.deserializeObjectString3();
        retrofit.Server server54 = serializedObjectSupporter50.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder55 = builder49.setServer(server54);
        retrofit.RestAdapter.Builder builder56 = builder26.setServer(server54);
        retrofit.RestAdapter.Builder builder57 = builder0.setServer(server54);
        retrofit.Profiler profiler58 = null;
        builder57.profiler = profiler58;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNotNull(requestInterceptor16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(response19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com/" + "'", str53, "http://example.com/");
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        retrofit.Profiler profiler7 = null;
        builder0.profiler = profiler7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor10 = null;
        builder9.setcallbackExecutor(executor10);
        retrofit.client.Client.Provider provider12 = builder9.clientProvider;
        java.util.concurrent.Executor executor13 = builder9.gethttpExecutor();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.callbackExecutor;
        builder9.setcallbackExecutor(executor16);
        builder0.callbackExecutor = executor16;
        builder0.ensureSaneDefaults();
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        java.util.concurrent.Executor executor37 = builder33.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor41 = serializedObjectSupporter40.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler45 = serializedObjectSupporter44.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean48 = logLevel47.log();
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server20, provider21, executor31, executor37, requestInterceptor39, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler45, log46, logLevel47);
        retrofit.ErrorHandler errorHandler50 = restAdapter49.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter49.getLogLevel();
        java.lang.String str52 = restAdapter49.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor53 = restAdapter49.getcallbackExecutor();
        builder0.httpExecutor = executor53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler56 = null;
        builder55.errorHandler = errorHandler56;
        retrofit.RequestInterceptor requestInterceptor58 = builder55.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder60 = builder55.setLogLevel(logLevel59);
        retrofit.Server server61 = null;
        builder60.server = server61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = builder63.logLevel;
        retrofit.client.Client.Provider provider65 = null;
        builder63.setclientProvider(provider65);
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder63.setLog(log67);
        builder60.log = log67;
        builder0.log = log67;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(requestInterceptor41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(errorHandler45);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(errorHandler50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Retrofit-Idle" + "'", str52, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNull(requestInterceptor58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        java.util.concurrent.Executor executor31 = restAdapter29.gethttpExecutor();
        retrofit.Profiler profiler32 = restAdapter29.profiler;
        retrofit.Profiler profiler33 = restAdapter29.getprofiler();
        retrofit.Server server34 = restAdapter29.getserver();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        retrofit.Server server36 = restAdapter29.server;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(server36);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter29.requestInterceptor;
        java.util.concurrent.Executor executor34 = restAdapter29.httpExecutor;
        retrofit.Profiler profiler35 = restAdapter29.getprofiler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNull(profiler35);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString2 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        retrofit.Server server3 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString6();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(typedString2);
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log3 = null;
        builder0.log = log3;
        retrofit.RestAdapter.LogLevel logLevel5 = null;
        builder0.logLevel = logLevel5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.Server server9 = builder8.server;
        retrofit.converter.Converter converter10 = builder8.converter;
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Profiler profiler34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean39 = logLevel38.log();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server11, provider12, executor22, executor28, requestInterceptor30, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler36, log37, logLevel38);
        retrofit.Server server41 = restAdapter40.server;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter40.logLevel = logLevel42;
        java.util.concurrent.Executor executor44 = restAdapter40.gethttpExecutor();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        builder45.requestInterceptor = requestInterceptor47;
        retrofit.RestAdapter.Builder builder50 = builder45.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler52 = null;
        builder51.errorHandler = errorHandler52;
        retrofit.RequestInterceptor requestInterceptor54 = builder51.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder56 = builder51.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        java.util.concurrent.Executor executor59 = builder57.callbackExecutor;
        builder56.callbackExecutor = executor59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter62 = builder61.converter;
        retrofit.ErrorHandler errorHandler63 = null;
        builder61.errorHandler = errorHandler63;
        retrofit.converter.Converter converter65 = builder61.converter;
        retrofit.client.Client.Provider provider66 = builder61.getclientProvider();
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler68 = null;
        builder67.errorHandler = errorHandler68;
        retrofit.Server server70 = null;
        builder67.server = server70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        java.util.concurrent.Executor executor76 = builder72.getcallbackExecutor();
        builder67.setcallbackExecutor(executor76);
        builder61.sethttpExecutor(executor76);
        retrofit.RestAdapter.Builder builder79 = builder45.setExecutors(executor59, executor76);
        retrofit.RestAdapter.Builder builder80 = builder8.setExecutors(executor44, executor59);
        builder0.setcallbackExecutor(executor44);
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(requestInterceptor54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNull(converter62);
        org.junit.Assert.assertNull(converter65);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = builder35.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel41;
        restAdapter29.setLogLevel(logLevel41);
        java.lang.String str44 = restAdapter29.getTHREAD_PREFIX();
        java.lang.String str45 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor46 = restAdapter29.getrequestInterceptor();
        retrofit.RequestInterceptor requestInterceptor47 = restAdapter29.getrequestInterceptor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-" + "'", str44, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-Idle" + "'", str45, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(requestInterceptor47);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse1();
        retrofit.mime.TypedInput typedInput6 = response5.getBody();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertNotNull(typedInput6);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.Server server12 = null;
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        java.util.concurrent.Executor executor18 = builder14.getcallbackExecutor();
        builder9.setcallbackExecutor(executor18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler32 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean35 = logLevel34.log();
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server7, provider8, executor18, executor24, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler32, log33, logLevel34);
        retrofit.ErrorHandler errorHandler37 = restAdapter36.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter36.logLevel;
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter36.getLogLevel();
        restAdapter6.logLevel = logLevel40;
        retrofit.converter.Converter converter42 = restAdapter6.converter;
        retrofit.converter.Converter converter43 = restAdapter6.getconverter();
        retrofit.converter.Converter converter44 = restAdapter6.converter;
        retrofit.RestAdapter.Log log45 = restAdapter6.log;
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNotNull(converter43);
        org.junit.Assert.assertNotNull(converter44);
        org.junit.Assert.assertNotNull(log45);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString13();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertNotNull(server5);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.Profiler profiler7 = restAdapter6.profiler;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter6.new RestHandler();
        java.util.concurrent.Executor executor10 = restAdapter6.httpExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(executor10);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.setclientProvider(provider6);
        retrofit.Profiler profiler8 = null;
        builder0.profiler = profiler8;
        retrofit.RestAdapter.Builder builder11 = builder0.setServer("Internal Server Error");
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter31.deserializeObjectConverter4();
        retrofit.Server server36 = serializedObjectSupporter31.deserializeObjectServer1();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(server36);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder2.errorHandler = errorHandler4;
        retrofit.converter.Converter converter6 = builder2.converter;
        retrofit.client.Client.Provider provider7 = builder2.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        builder2.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder23.setclientProvider(provider26);
        retrofit.RequestInterceptor requestInterceptor28 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = null;
        builder29.callbackExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response34 = serializedObjectSupporter33.deserializeObjectResponse8();
        java.lang.String str35 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder37 = builder29.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = null;
        builder39.callbackExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response44 = serializedObjectSupporter43.deserializeObjectResponse8();
        java.lang.String str45 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder47 = builder39.setConverter((retrofit.converter.Converter) gsonConverter46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        builder47.errorHandler = errorHandler49;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server0, provider1, executor17, executor22, requestInterceptor28, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler49, log51, logLevel52);
        java.lang.String str54 = restAdapter53.getTHREAD_PREFIX();
        retrofit.Profiler profiler55 = restAdapter53.profiler;
        retrofit.converter.Converter converter56 = restAdapter53.getconverter();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter53.new RestHandler();
        retrofit.converter.Converter converter58 = restAdapter53.getconverter();
        retrofit.Server server59 = restAdapter53.getserver();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter61 = builder60.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = builder60.serializedObjectSupporter;
        retrofit.RestAdapter.Log log63 = null;
        builder60.log = log63;
        retrofit.RestAdapter.LogLevel logLevel65 = null;
        builder60.logLevel = logLevel65;
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor68 = serializedObjectSupporter67.deserializeObjectRequestInterceptor1();
        retrofit.RequestInterceptor requestInterceptor69 = serializedObjectSupporter67.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder70 = builder60.setRequestInterceptor(requestInterceptor69);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        java.util.concurrent.Executor executor73 = null;
        builder71.callbackExecutor = executor73;
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response76 = serializedObjectSupporter75.deserializeObjectResponse8();
        java.lang.String str77 = serializedObjectSupporter75.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter75.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder79 = builder71.setConverter((retrofit.converter.Converter) gsonConverter78);
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler81 = serializedObjectSupporter80.deserializeObjectErrorHandler1();
        builder79.errorHandler = errorHandler81;
        retrofit.Server server83 = builder79.server;
        retrofit.RestAdapter.LogLevel logLevel84 = builder79.logLevel;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel86 = builder85.logLevel;
        retrofit.client.Client.Provider provider87 = builder85.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel88 = builder85.logLevel;
        builder79.logLevel = logLevel88;
        builder70.logLevel = logLevel88;
        restAdapter53.setLogLevel(logLevel88);
        retrofit.ErrorHandler errorHandler92 = restAdapter53.errorHandler;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(response34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNotNull(converter56);
        org.junit.Assert.assertNotNull(converter58);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(serializedObjectSupporter62);
        org.junit.Assert.assertNotNull(requestInterceptor68);
        org.junit.Assert.assertNotNull(requestInterceptor69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(response76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNull(server83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler92);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.ErrorHandler errorHandler5 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(errorHandler5);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler10 = null;
        builder9.errorHandler = errorHandler10;
        retrofit.Server server12 = null;
        builder9.server = server12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        java.util.concurrent.Executor executor18 = builder14.getcallbackExecutor();
        builder9.setcallbackExecutor(executor18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter27.deserializeObjectConverter5();
        retrofit.Profiler profiler30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler32 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean35 = logLevel34.log();
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server7, provider8, executor18, executor24, requestInterceptor26, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler32, log33, logLevel34);
        retrofit.ErrorHandler errorHandler37 = restAdapter36.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter36.logLevel;
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter36.getLogLevel();
        restAdapter6.logLevel = logLevel40;
        retrofit.converter.Converter converter42 = restAdapter6.converter;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler46 = null;
        builder45.errorHandler = errorHandler46;
        retrofit.Server server48 = null;
        builder45.server = server48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        java.util.concurrent.Executor executor54 = builder50.getcallbackExecutor();
        builder45.setcallbackExecutor(executor54);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        java.util.concurrent.Executor executor60 = builder56.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor62 = serializedObjectSupporter61.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor64 = serializedObjectSupporter63.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter63.deserializeObjectConverter5();
        retrofit.Profiler profiler66 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler68 = serializedObjectSupporter67.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean71 = logLevel70.log();
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server43, provider44, executor54, executor60, requestInterceptor62, (retrofit.converter.Converter) gsonConverter65, profiler66, errorHandler68, log69, logLevel70);
        retrofit.Profiler profiler73 = restAdapter72.getprofiler();
        retrofit.Server server74 = restAdapter72.server;
        retrofit.converter.Converter converter75 = restAdapter72.converter;
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter72.getLogLevel();
        restAdapter6.setLogLevel(logLevel76);
        retrofit.Profiler profiler78 = restAdapter6.getprofiler();
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(profiler73);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertNotNull(converter75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler78);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.client.Client.Provider provider6 = null;
        builder0.setclientProvider(provider6);
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor9 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder10 = builder0.setRequestInterceptor(requestInterceptor9);
        retrofit.RestAdapter.LogLevel logLevel11 = builder0.logLevel;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        retrofit.client.Response response42 = serializedObjectSupporter38.deserializeObjectResponse4();
        retrofit.mime.TypedString typedString43 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertNotNull(response42);
        org.junit.Assert.assertNotNull(typedString43);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.client.Client.Provider provider3 = builder0.clientProvider;
        java.util.concurrent.Executor executor4 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor7 = builder5.callbackExecutor;
        builder0.setcallbackExecutor(executor7);
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.ErrorHandler errorHandler39 = restAdapter38.errorHandler;
        builder0.errorHandler = errorHandler39;
        retrofit.converter.Converter converter41 = builder0.converter;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler43 = null;
        builder42.errorHandler = errorHandler43;
        java.util.concurrent.Executor executor45 = builder42.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response47 = serializedObjectSupporter46.deserializeObjectResponse8();
        java.lang.String str48 = serializedObjectSupporter46.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter4();
        java.lang.String str50 = serializedObjectSupporter46.deserializeObjectString3();
        retrofit.Server server51 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder52 = builder42.setServer(server51);
        retrofit.RestAdapter.Builder builder53 = builder0.setServer(server51);
        retrofit.client.Client.Provider provider54 = builder53.clientProvider;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(response47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(provider54);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.converter.Converter converter4 = null;
        builder0.converter = converter4;
        retrofit.client.Client client6 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder7 = builder0.setClient(client6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(requestInterceptor3);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.RequestInterceptor requestInterceptor9 = builder6.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder11 = builder6.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        java.util.concurrent.Executor executor14 = builder12.callbackExecutor;
        builder11.callbackExecutor = executor14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter17 = builder16.converter;
        retrofit.ErrorHandler errorHandler18 = null;
        builder16.errorHandler = errorHandler18;
        retrofit.converter.Converter converter20 = builder16.converter;
        retrofit.client.Client.Provider provider21 = builder16.getclientProvider();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        builder16.sethttpExecutor(executor31);
        retrofit.RestAdapter.Builder builder34 = builder0.setExecutors(executor14, executor31);
        java.util.concurrent.Executor executor35 = builder34.callbackExecutor;
        retrofit.RestAdapter.Builder builder37 = builder34.setServer("hi!");
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler41 = null;
        builder40.errorHandler = errorHandler41;
        retrofit.Server server43 = null;
        builder40.server = server43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        java.util.concurrent.Executor executor49 = builder45.getcallbackExecutor();
        builder40.setcallbackExecutor(executor49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        java.util.concurrent.Executor executor55 = builder51.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor59 = serializedObjectSupporter58.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter58.deserializeObjectConverter5();
        retrofit.Profiler profiler61 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler63 = serializedObjectSupporter62.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean66 = logLevel65.log();
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server38, provider39, executor49, executor55, requestInterceptor57, (retrofit.converter.Converter) gsonConverter60, profiler61, errorHandler63, log64, logLevel65);
        retrofit.ErrorHandler errorHandler68 = restAdapter67.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter67.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder34.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider71 = builder70.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(provider71);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.converter.Converter converter4 = null;
        builder0.converter = converter4;
        java.util.concurrent.Executor executor6 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler8 = null;
        builder7.errorHandler = errorHandler8;
        java.util.concurrent.Executor executor10 = builder7.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        builder7.requestInterceptor = requestInterceptor11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        builder18.requestInterceptor = requestInterceptor20;
        retrofit.RestAdapter.Builder builder23 = builder18.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler25 = null;
        builder24.errorHandler = errorHandler25;
        retrofit.RequestInterceptor requestInterceptor27 = builder24.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder29 = builder24.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        java.util.concurrent.Executor executor32 = builder30.callbackExecutor;
        builder29.callbackExecutor = executor32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter35 = builder34.converter;
        retrofit.ErrorHandler errorHandler36 = null;
        builder34.errorHandler = errorHandler36;
        retrofit.converter.Converter converter38 = builder34.converter;
        retrofit.client.Client.Provider provider39 = builder34.getclientProvider();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler41 = null;
        builder40.errorHandler = errorHandler41;
        retrofit.Server server43 = null;
        builder40.server = server43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        java.util.concurrent.Executor executor49 = builder45.getcallbackExecutor();
        builder40.setcallbackExecutor(executor49);
        builder34.sethttpExecutor(executor49);
        retrofit.RestAdapter.Builder builder52 = builder18.setExecutors(executor32, executor49);
        retrofit.RestAdapter.Builder builder53 = builder7.setExecutors(executor17, executor49);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.client.Client.Provider provider56 = null;
        builder54.setclientProvider(provider56);
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = builder54.setLog(log58);
        retrofit.Server server60 = null;
        retrofit.client.Client.Provider provider61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler63 = null;
        builder62.errorHandler = errorHandler63;
        retrofit.Server server65 = null;
        builder62.server = server65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Log log69 = null;
        builder67.log = log69;
        java.util.concurrent.Executor executor71 = builder67.getcallbackExecutor();
        builder62.setcallbackExecutor(executor71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.RestAdapter.Log log75 = null;
        builder73.log = log75;
        java.util.concurrent.Executor executor77 = builder73.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor79 = serializedObjectSupporter78.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor81 = serializedObjectSupporter80.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter80.deserializeObjectConverter5();
        retrofit.Profiler profiler83 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter84 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler85 = serializedObjectSupporter84.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean88 = logLevel87.log();
        retrofit.RestAdapter restAdapter89 = new retrofit.RestAdapter(server60, provider61, executor71, executor77, requestInterceptor79, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler85, log86, logLevel87);
        builder54.setcallbackExecutor(executor77);
        retrofit.RestAdapter.Builder builder91 = builder0.setExecutors(executor49, executor77);
        java.util.concurrent.Executor executor92 = builder0.httpExecutor;
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(requestInterceptor27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(executor71);
        org.junit.Assert.assertNotNull(executor77);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(requestInterceptor81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNotNull(errorHandler85);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(executor92);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.Server server39 = restAdapter38.server;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter38.logLevel = logLevel40;
        retrofit.RequestInterceptor requestInterceptor42 = restAdapter38.requestInterceptor;
        retrofit.RestAdapter.Builder builder43 = builder0.setRequestInterceptor(requestInterceptor42);
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler47 = null;
        builder46.errorHandler = errorHandler47;
        retrofit.Server server49 = null;
        builder46.server = server49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        java.util.concurrent.Executor executor55 = builder51.getcallbackExecutor();
        builder46.setcallbackExecutor(executor55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        java.util.concurrent.Executor executor61 = builder57.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor63 = serializedObjectSupporter62.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor65 = serializedObjectSupporter64.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter64.deserializeObjectConverter5();
        retrofit.Profiler profiler67 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler69 = serializedObjectSupporter68.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean72 = logLevel71.log();
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server44, provider45, executor55, executor61, requestInterceptor63, (retrofit.converter.Converter) gsonConverter66, profiler67, errorHandler69, log70, logLevel71);
        retrofit.ErrorHandler errorHandler74 = restAdapter73.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter73.getLogLevel();
        java.lang.String str76 = restAdapter73.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor77 = restAdapter73.getcallbackExecutor();
        builder0.sethttpExecutor(executor77);
        retrofit.client.Client.Provider provider79 = builder0.clientProvider;
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(requestInterceptor63);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(errorHandler69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(errorHandler74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Retrofit-Idle" + "'", str76, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(executor77);
        org.junit.Assert.assertNotNull(provider79);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.client.Client.Provider provider2 = null;
        builder0.clientProvider = provider2;
        java.util.concurrent.Executor executor4 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter6 = builder5.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder5.serializedObjectSupporter;
        retrofit.Server server8 = null;
        retrofit.client.Client.Provider provider9 = null;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler11 = null;
        builder10.errorHandler = errorHandler11;
        retrofit.Server server13 = null;
        builder10.server = server13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        java.util.concurrent.Executor executor19 = builder15.getcallbackExecutor();
        builder10.setcallbackExecutor(executor19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        java.util.concurrent.Executor executor25 = builder21.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor29 = serializedObjectSupporter28.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.Profiler profiler31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler33 = serializedObjectSupporter32.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean36 = logLevel35.log();
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server8, provider9, executor19, executor25, requestInterceptor27, (retrofit.converter.Converter) gsonConverter30, profiler31, errorHandler33, log34, logLevel35);
        retrofit.ErrorHandler errorHandler38 = restAdapter37.errorHandler;
        retrofit.ErrorHandler errorHandler39 = restAdapter37.geterrorHandler();
        retrofit.client.Client.Provider provider40 = restAdapter37.getclientProvider();
        retrofit.RequestInterceptor requestInterceptor41 = restAdapter37.getrequestInterceptor();
        builder5.requestInterceptor = requestInterceptor41;
        java.util.concurrent.Executor executor43 = builder5.gethttpExecutor();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        builder44.requestInterceptor = requestInterceptor46;
        retrofit.RestAdapter.Builder builder49 = builder44.setServer("Retrofit-");
        retrofit.Server server50 = null;
        retrofit.client.Client.Provider provider51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler53 = null;
        builder52.errorHandler = errorHandler53;
        retrofit.Server server55 = null;
        builder52.server = server55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        java.util.concurrent.Executor executor61 = builder57.getcallbackExecutor();
        builder52.setcallbackExecutor(executor61);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        java.util.concurrent.Executor executor67 = builder63.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor69 = serializedObjectSupporter68.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor71 = serializedObjectSupporter70.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter70.deserializeObjectConverter5();
        retrofit.Profiler profiler73 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler75 = serializedObjectSupporter74.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean78 = logLevel77.log();
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server50, provider51, executor61, executor67, requestInterceptor69, (retrofit.converter.Converter) gsonConverter72, profiler73, errorHandler75, log76, logLevel77);
        retrofit.ErrorHandler errorHandler80 = restAdapter79.errorHandler;
        retrofit.RestAdapter.Builder builder81 = builder49.setErrorHandler(errorHandler80);
        builder5.errorHandler = errorHandler80;
        retrofit.RestAdapter.Builder builder83 = builder0.setErrorHandler(errorHandler80);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNotNull(requestInterceptor41);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNotNull(requestInterceptor69);
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(errorHandler75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(errorHandler80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.converter.Converter converter4 = null;
        builder0.converter = converter4;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor7 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder8 = builder0.setRequestInterceptor(requestInterceptor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response10 = serializedObjectSupporter9.deserializeObjectResponse8();
        java.lang.String str11 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter4();
        java.lang.String str13 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.ErrorHandler errorHandler14 = serializedObjectSupporter9.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder15 = builder0.setErrorHandler(errorHandler14);
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter19 = builder18.converter;
        retrofit.ErrorHandler errorHandler20 = null;
        builder18.errorHandler = errorHandler20;
        retrofit.converter.Converter converter22 = builder18.converter;
        retrofit.client.Client.Provider provider23 = builder18.getclientProvider();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler25 = null;
        builder24.errorHandler = errorHandler25;
        retrofit.Server server27 = null;
        builder24.server = server27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        java.util.concurrent.Executor executor33 = builder29.getcallbackExecutor();
        builder24.setcallbackExecutor(executor33);
        builder18.sethttpExecutor(executor33);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        java.util.concurrent.Executor executor38 = builder36.callbackExecutor;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = builder39.serializedObjectSupporter;
        retrofit.client.Client.Provider provider42 = null;
        builder39.setclientProvider(provider42);
        retrofit.RequestInterceptor requestInterceptor44 = builder39.requestInterceptor;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        java.util.concurrent.Executor executor47 = null;
        builder45.callbackExecutor = executor47;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response50 = serializedObjectSupporter49.deserializeObjectResponse8();
        java.lang.String str51 = serializedObjectSupporter49.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter49.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder53 = builder45.setConverter((retrofit.converter.Converter) gsonConverter52);
        retrofit.Profiler profiler54 = null;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        java.util.concurrent.Executor executor57 = null;
        builder55.callbackExecutor = executor57;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response60 = serializedObjectSupporter59.deserializeObjectResponse8();
        java.lang.String str61 = serializedObjectSupporter59.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter59.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder63 = builder55.setConverter((retrofit.converter.Converter) gsonConverter62);
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler65 = serializedObjectSupporter64.deserializeObjectErrorHandler1();
        builder63.errorHandler = errorHandler65;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server16, provider17, executor33, executor38, requestInterceptor44, (retrofit.converter.Converter) gsonConverter52, profiler54, errorHandler65, log67, logLevel68);
        java.lang.String str70 = restAdapter69.getTHREAD_PREFIX();
        retrofit.Profiler profiler71 = restAdapter69.profiler;
        retrofit.converter.Converter converter72 = restAdapter69.getconverter();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter69.new RestHandler();
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler75 = null;
        builder74.errorHandler = errorHandler75;
        retrofit.RequestInterceptor requestInterceptor77 = builder74.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder79 = builder74.setLogLevel(logLevel78);
        restAdapter69.logLevel = logLevel78;
        builder15.logLevel = logLevel78;
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNotNull(requestInterceptor7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(response10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(converter22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNull(serializedObjectSupporter41);
        org.junit.Assert.assertNotNull(requestInterceptor44);
        org.junit.Assert.assertNotNull(response50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(response60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "http://example.com/" + "'", str61, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Retrofit-" + "'", str70, "Retrofit-");
        org.junit.Assert.assertNull(profiler71);
        org.junit.Assert.assertNotNull(converter72);
        org.junit.Assert.assertNull(requestInterceptor77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder79);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor2 = null;
        builder0.requestInterceptor = requestInterceptor2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("Retrofit-");
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.ErrorHandler errorHandler36 = restAdapter35.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter35.logLevel;
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        builder5.log = log38;
        log38.log("Internal Server Error");
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log38);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder2.errorHandler = errorHandler4;
        retrofit.converter.Converter converter6 = builder2.converter;
        retrofit.client.Client.Provider provider7 = builder2.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        builder2.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder23.setclientProvider(provider26);
        retrofit.RequestInterceptor requestInterceptor28 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = null;
        builder29.callbackExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response34 = serializedObjectSupporter33.deserializeObjectResponse8();
        java.lang.String str35 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder37 = builder29.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = null;
        builder39.callbackExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response44 = serializedObjectSupporter43.deserializeObjectResponse8();
        java.lang.String str45 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder47 = builder39.setConverter((retrofit.converter.Converter) gsonConverter46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        builder47.errorHandler = errorHandler49;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server0, provider1, executor17, executor22, requestInterceptor28, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler49, log51, logLevel52);
        java.lang.String str54 = restAdapter53.getTHREAD_PREFIX();
        retrofit.Profiler profiler55 = restAdapter53.profiler;
        retrofit.converter.Converter converter56 = restAdapter53.getconverter();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter53.new RestHandler();
        retrofit.Profiler profiler58 = restAdapter53.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = restAdapter53.serializedObjectSupporter;
        retrofit.converter.Converter converter60 = restAdapter53.getconverter();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(response34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNotNull(converter56);
        org.junit.Assert.assertNull(profiler58);
        org.junit.Assert.assertNull(serializedObjectSupporter59);
        org.junit.Assert.assertNotNull(converter60);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response10 = serializedObjectSupporter9.deserializeObjectResponse8();
        retrofit.ErrorHandler errorHandler11 = serializedObjectSupporter9.deserializeObjectErrorHandler1();
        builder8.errorHandler = errorHandler11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        java.util.concurrent.Executor executor15 = null;
        builder13.callbackExecutor = executor15;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response18 = serializedObjectSupporter17.deserializeObjectResponse8();
        java.lang.String str19 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder21 = builder13.setConverter((retrofit.converter.Converter) gsonConverter20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("OK");
        retrofit.client.Client.Provider provider24 = builder21.getclientProvider();
        builder8.clientProvider = provider24;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler27 = serializedObjectSupporter26.deserializeObjectErrorHandler1();
        java.lang.String str28 = serializedObjectSupporter26.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter1();
        retrofit.Server server30 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder31 = builder8.setServer(server30);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(response10);
        org.junit.Assert.assertNotNull(errorHandler11);
        org.junit.Assert.assertNotNull(response18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http://example.com/" + "'", str19, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(provider24);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        java.lang.String str33 = restAdapter29.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor34 = restAdapter29.gethttpExecutor();
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter29.getrequestInterceptor();
        retrofit.RequestInterceptor requestInterceptor36 = restAdapter29.requestInterceptor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-" + "'", str33, "Retrofit-");
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(requestInterceptor36);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.ErrorHandler errorHandler7 = restAdapter6.geterrorHandler();
        retrofit.ErrorHandler errorHandler8 = restAdapter6.geterrorHandler();
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNotNull(errorHandler7);
        org.junit.Assert.assertNotNull(errorHandler8);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler10 = serializedObjectSupporter9.deserializeObjectErrorHandler1();
        builder8.errorHandler = errorHandler10;
        retrofit.Server server12 = builder8.server;
        retrofit.Profiler profiler13 = builder8.profiler;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter14 = builder8.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(errorHandler10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNull(profiler13);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        java.util.concurrent.Executor executor6 = builder4.callbackExecutor;
        builder0.setcallbackExecutor(executor6);
        retrofit.client.Client.Provider provider8 = builder0.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler11 = null;
        builder10.errorHandler = errorHandler11;
        retrofit.RequestInterceptor requestInterceptor13 = builder10.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder15 = builder10.setLogLevel(logLevel14);
        builder0.logLevel = logLevel14;
        boolean boolean17 = logLevel14.log();
        boolean boolean18 = logLevel14.log();
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.Server server36 = restAdapter35.server;
        retrofit.ErrorHandler errorHandler37 = restAdapter35.errorHandler;
        builder0.errorHandler = errorHandler37;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response40 = serializedObjectSupporter39.deserializeObjectResponse8();
        retrofit.ErrorHandler errorHandler41 = serializedObjectSupporter39.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder42 = builder0.setErrorHandler(errorHandler41);
        java.util.concurrent.Executor executor43 = builder42.gethttpExecutor();
        retrofit.Profiler profiler44 = null;
        builder42.profiler = profiler44;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = builder42.serializedObjectSupporter;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(response40);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(serializedObjectSupporter46);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString12();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString7();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter5();
        java.lang.Class class8 = serializedObjectSupporter0.deserializeObjectClass1();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Internal Server Error" + "'", str3, "Internal Server Error");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "OK" + "'", str6, "OK");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(class8);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString12();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString7();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse7();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter3();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Internal Server Error" + "'", str3, "Internal Server Error");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.RestAdapter.Builder builder10 = builder8.setServer("OK");
        retrofit.RestAdapter.LogLevel logLevel11 = builder8.logLevel;
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse4();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse8();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse8();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertNotNull(response5);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.logLevel;
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter29.getLogLevel();
        retrofit.client.Client.Provider provider34 = restAdapter29.getclientProvider();
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter29.requestInterceptor;
        retrofit.Profiler profiler36 = restAdapter29.profiler;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNull(profiler36);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler37 = null;
        builder36.errorHandler = errorHandler37;
        retrofit.RequestInterceptor requestInterceptor39 = builder36.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder41 = builder36.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        java.util.concurrent.Executor executor44 = builder42.callbackExecutor;
        builder41.callbackExecutor = executor44;
        retrofit.RestAdapter.LogLevel logLevel46 = builder41.logLevel;
        restAdapter29.setLogLevel(logLevel46);
        boolean boolean48 = logLevel46.log();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(requestInterceptor39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder7.serializedObjectSupporter;
        retrofit.client.Client.Provider provider10 = null;
        builder7.setclientProvider(provider10);
        retrofit.RequestInterceptor requestInterceptor12 = builder7.requestInterceptor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder13.serializedObjectSupporter;
        retrofit.client.Client.Provider provider16 = null;
        builder13.setclientProvider(provider16);
        retrofit.RequestInterceptor requestInterceptor18 = builder13.requestInterceptor;
        retrofit.RestAdapter.Builder builder19 = builder7.setRequestInterceptor(requestInterceptor18);
        retrofit.RestAdapter.Builder builder20 = builder0.setRequestInterceptor(requestInterceptor18);
        retrofit.client.Client.Provider provider21 = builder20.clientProvider;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(requestInterceptor12);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(provider21);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response33 = serializedObjectSupporter32.deserializeObjectResponse8();
        java.lang.String str34 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter4();
        java.lang.String str36 = serializedObjectSupporter32.deserializeObjectString3();
        restHandler31.serializedObjectSupporter = serializedObjectSupporter32;
        java.lang.String str38 = serializedObjectSupporter32.deserializeObjectString3();
        java.lang.String str39 = serializedObjectSupporter32.deserializeObjectString2();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(response33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-Idle" + "'", str39, "Retrofit-Idle");
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Profiler profiler34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean39 = logLevel38.log();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server11, provider12, executor22, executor28, requestInterceptor30, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler36, log37, logLevel38);
        retrofit.Server server41 = restAdapter40.server;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder0.setLogLevel(logLevel42);
        retrofit.Server server45 = builder0.server;
        retrofit.client.Client.Provider provider46 = builder0.getclientProvider();
        retrofit.Profiler profiler47 = null;
        builder0.profiler = profiler47;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNull(provider46);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.converter.Converter converter4 = null;
        builder0.converter = converter4;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor7 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder8 = builder0.setRequestInterceptor(requestInterceptor7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response10 = serializedObjectSupporter9.deserializeObjectResponse8();
        java.lang.String str11 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter4();
        java.lang.String str13 = serializedObjectSupporter9.deserializeObjectString3();
        retrofit.ErrorHandler errorHandler14 = serializedObjectSupporter9.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder15 = builder0.setErrorHandler(errorHandler14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler17 = null;
        builder16.errorHandler = errorHandler17;
        retrofit.RequestInterceptor requestInterceptor19 = builder16.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder21 = builder16.setLogLevel(logLevel20);
        retrofit.Server server22 = null;
        builder21.server = server22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.client.Client.Provider provider26 = null;
        builder24.setclientProvider(provider26);
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder24.setLog(log28);
        builder21.log = log28;
        retrofit.RestAdapter.Builder builder31 = builder0.setLog(log28);
        retrofit.Profiler profiler32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder33 = builder31.setProfiler(profiler32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNotNull(requestInterceptor7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(response10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(requestInterceptor19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString13();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse7();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.errorHandler;
        java.lang.String str32 = restAdapter29.getTHREAD_PREFIX();
        retrofit.Profiler profiler33 = restAdapter29.profiler;
        retrofit.RequestInterceptor requestInterceptor34 = restAdapter29.requestInterceptor;
        retrofit.client.Client.Provider provider35 = restAdapter29.clientProvider;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertNull(provider35);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter29.requestInterceptor;
        retrofit.Server server34 = restAdapter29.server;
        retrofit.Profiler profiler35 = restAdapter29.profiler;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(profiler35);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor38 = restAdapter29.requestInterceptor;
        java.util.concurrent.Executor executor39 = restAdapter29.httpExecutor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(executor39);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString13();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server9 = serializedObjectSupporter4.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.ErrorHandler errorHandler11 = null;
        builder0.errorHandler = errorHandler11;
        java.util.concurrent.Executor executor13 = builder0.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor15 = serializedObjectSupporter14.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString16 = serializedObjectSupporter14.deserializeObjectTypedInput1();
        java.lang.String str17 = serializedObjectSupporter14.deserializeObjectString13();
        java.lang.String str18 = serializedObjectSupporter14.deserializeObjectString8();
        builder0.serializedObjectSupporter = serializedObjectSupporter14;
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter14.deserializeObjectConverter5();
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(requestInterceptor15);
        org.junit.Assert.assertNotNull(typedString16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter20);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = builder0.serializedObjectSupporter;
        java.util.concurrent.Executor executor3 = null;
        builder0.sethttpExecutor(executor3);
        retrofit.client.Client.Provider provider5 = builder0.clientProvider;
        retrofit.client.Client client6 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder7 = builder0.setClient(client6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter2);
        org.junit.Assert.assertNull(provider5);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        builder0.requestInterceptor = requestInterceptor4;
        retrofit.RestAdapter.Log log6 = builder0.log;
        java.util.concurrent.Executor executor7 = builder0.getcallbackExecutor();
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(log6);
        org.junit.Assert.assertNull(executor7);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        retrofit.mime.TypedInput typedInput2 = response1.getBody();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertNull(typedInput2);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.converter.Converter converter36 = restAdapter29.converter;
        retrofit.RequestInterceptor requestInterceptor37 = restAdapter29.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = restAdapter29.serializedObjectSupporter;
        retrofit.RestAdapter.Log log39 = restAdapter29.log;
        retrofit.RequestInterceptor requestInterceptor40 = restAdapter29.getrequestInterceptor();
        retrofit.converter.Converter converter41 = restAdapter29.converter;
        java.lang.String str42 = restAdapter29.getTHREAD_PREFIX();
        retrofit.Server server43 = restAdapter29.server;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(converter36);
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(serializedObjectSupporter38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(converter41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-" + "'", str42, "Retrofit-");
        org.junit.Assert.assertNull(server43);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString10();
        retrofit.mime.TypedString typedString4 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        retrofit.mime.TypedString typedString5 = serializedObjectSupporter0.deserializeObjectTypedInput1();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Forbidden" + "'", str3, "Forbidden");
        org.junit.Assert.assertNotNull(typedString4);
        org.junit.Assert.assertNotNull(typedString5);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString11();
        retrofit.ErrorHandler errorHandler4 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString9();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse7();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertNotNull(gsonConverter8);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter6 = builder5.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder5.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel8 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder9 = builder0.setLogLevel(logLevel8);
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder9.serializedObjectSupporter;
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler14 = null;
        builder13.errorHandler = errorHandler14;
        retrofit.Server server16 = null;
        builder13.server = server16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        builder13.setcallbackExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        retrofit.Profiler profiler34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler36 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean39 = logLevel38.log();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server11, provider12, executor22, executor28, requestInterceptor30, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler36, log37, logLevel38);
        retrofit.ErrorHandler errorHandler41 = restAdapter40.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter40.logLevel;
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        builder9.log = log43;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = builder9.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter46 = builder9.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNull(serializedObjectSupporter45);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        retrofit.Profiler profiler7 = null;
        builder0.profiler = profiler7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor10 = null;
        builder9.setcallbackExecutor(executor10);
        retrofit.client.Client.Provider provider12 = builder9.clientProvider;
        java.util.concurrent.Executor executor13 = builder9.gethttpExecutor();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.callbackExecutor;
        builder9.setcallbackExecutor(executor16);
        builder0.callbackExecutor = executor16;
        builder0.ensureSaneDefaults();
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler23 = null;
        builder22.errorHandler = errorHandler23;
        retrofit.Server server25 = null;
        builder22.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        java.util.concurrent.Executor executor31 = builder27.getcallbackExecutor();
        builder22.setcallbackExecutor(executor31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        java.util.concurrent.Executor executor37 = builder33.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor41 = serializedObjectSupporter40.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter40.deserializeObjectConverter5();
        retrofit.Profiler profiler43 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler45 = serializedObjectSupporter44.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean48 = logLevel47.log();
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server20, provider21, executor31, executor37, requestInterceptor39, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler45, log46, logLevel47);
        retrofit.Server server50 = restAdapter49.server;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter49.logLevel = logLevel51;
        retrofit.client.Client.Provider provider53 = restAdapter49.getclientProvider();
        retrofit.client.Client.Provider provider54 = restAdapter49.clientProvider;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler56 = null;
        builder55.errorHandler = errorHandler56;
        retrofit.RequestInterceptor requestInterceptor58 = builder55.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder60 = builder55.setLogLevel(logLevel59);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.NONE;
        builder55.logLevel = logLevel61;
        restAdapter49.setLogLevel(logLevel61);
        java.util.concurrent.Executor executor64 = restAdapter49.httpExecutor;
        builder0.sethttpExecutor(executor64);
        retrofit.client.Client client66 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder67 = builder0.setClient(client66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(requestInterceptor41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(errorHandler45);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNull(requestInterceptor58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor64);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse2();
        int int5 = response4.status;
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 200 + "'", int5 == 200);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.RequestInterceptor requestInterceptor3 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        java.util.concurrent.Executor executor8 = builder6.callbackExecutor;
        builder5.callbackExecutor = executor8;
        retrofit.RestAdapter.LogLevel logLevel10 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.ErrorHandler errorHandler13 = null;
        builder11.errorHandler = errorHandler13;
        retrofit.RequestInterceptor requestInterceptor15 = builder11.requestInterceptor;
        retrofit.ErrorHandler errorHandler16 = null;
        builder11.errorHandler = errorHandler16;
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder11.setLog(log18);
        java.util.concurrent.Executor executor20 = builder19.httpExecutor;
        retrofit.client.Client.Provider provider21 = builder19.getclientProvider();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.ErrorHandler errorHandler24 = null;
        builder22.errorHandler = errorHandler24;
        java.util.concurrent.Executor executor26 = null;
        builder22.sethttpExecutor(executor26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder29 = builder22.setLogLevel(logLevel28);
        retrofit.Server server30 = null;
        retrofit.client.Client.Provider provider31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler33 = null;
        builder32.errorHandler = errorHandler33;
        retrofit.Server server35 = null;
        builder32.server = server35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        java.util.concurrent.Executor executor41 = builder37.getcallbackExecutor();
        builder32.setcallbackExecutor(executor41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        java.util.concurrent.Executor executor47 = builder43.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor49 = serializedObjectSupporter48.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor51 = serializedObjectSupporter50.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter50.deserializeObjectConverter5();
        retrofit.Profiler profiler53 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler55 = serializedObjectSupporter54.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean58 = logLevel57.log();
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server30, provider31, executor41, executor47, requestInterceptor49, (retrofit.converter.Converter) gsonConverter52, profiler53, errorHandler55, log56, logLevel57);
        retrofit.Server server60 = restAdapter59.server;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter59.logLevel = logLevel61;
        retrofit.client.Client.Provider provider63 = restAdapter59.getclientProvider();
        retrofit.RestAdapter.Log log64 = restAdapter59.log;
        retrofit.RestAdapter.Builder builder65 = builder22.setLog(log64);
        builder19.log = log64;
        builder5.log = log64;
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor15);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertNotNull(errorHandler55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.Class class42 = serializedObjectSupporter38.deserializeObjectClass1();
        retrofit.client.Response response43 = serializedObjectSupporter38.deserializeObjectResponse7();
        retrofit.client.Response response44 = serializedObjectSupporter38.deserializeObjectResponse4();
        retrofit.client.Response response45 = serializedObjectSupporter38.deserializeObjectResponse1();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertNotNull(class42);
        org.junit.Assert.assertNotNull(response43);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertNotNull(response45);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler10 = serializedObjectSupporter9.deserializeObjectErrorHandler1();
        builder8.errorHandler = errorHandler10;
        retrofit.Server server12 = null;
        builder8.server = server12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = null;
        builder14.setcallbackExecutor(executor15);
        retrofit.client.Client.Provider provider17 = builder14.clientProvider;
        java.util.concurrent.Executor executor18 = builder14.gethttpExecutor();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        java.util.concurrent.Executor executor21 = builder19.callbackExecutor;
        builder14.setcallbackExecutor(executor21);
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler26 = null;
        builder25.errorHandler = errorHandler26;
        retrofit.Server server28 = null;
        builder25.server = server28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        java.util.concurrent.Executor executor34 = builder30.getcallbackExecutor();
        builder25.setcallbackExecutor(executor34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        java.util.concurrent.Executor executor40 = builder36.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor42 = serializedObjectSupporter41.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor44 = serializedObjectSupporter43.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter43.deserializeObjectConverter5();
        retrofit.Profiler profiler46 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler48 = serializedObjectSupporter47.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean51 = logLevel50.log();
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server23, provider24, executor34, executor40, requestInterceptor42, (retrofit.converter.Converter) gsonConverter45, profiler46, errorHandler48, log49, logLevel50);
        retrofit.ErrorHandler errorHandler53 = restAdapter52.errorHandler;
        builder14.errorHandler = errorHandler53;
        retrofit.RestAdapter.Log log55 = builder14.log;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler59 = null;
        builder58.errorHandler = errorHandler59;
        retrofit.Server server61 = null;
        builder58.server = server61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        java.util.concurrent.Executor executor67 = builder63.getcallbackExecutor();
        builder58.setcallbackExecutor(executor67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.RestAdapter.Log log71 = null;
        builder69.log = log71;
        java.util.concurrent.Executor executor73 = builder69.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor75 = serializedObjectSupporter74.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor77 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter76.deserializeObjectConverter5();
        retrofit.Profiler profiler79 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler81 = serializedObjectSupporter80.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean84 = logLevel83.log();
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server56, provider57, executor67, executor73, requestInterceptor75, (retrofit.converter.Converter) gsonConverter78, profiler79, errorHandler81, log82, logLevel83);
        retrofit.ErrorHandler errorHandler86 = restAdapter85.errorHandler;
        builder14.errorHandler = errorHandler86;
        retrofit.RestAdapter.Builder builder88 = builder8.setErrorHandler(errorHandler86);
        retrofit.RequestInterceptor requestInterceptor89 = builder88.requestInterceptor;
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(errorHandler10);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(requestInterceptor44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(requestInterceptor77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(requestInterceptor89);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.client.Client.Provider provider3 = builder0.clientProvider;
        java.util.concurrent.Executor executor4 = builder0.gethttpExecutor();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor7 = builder5.callbackExecutor;
        builder0.setcallbackExecutor(executor7);
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler12 = null;
        builder11.errorHandler = errorHandler12;
        retrofit.Server server14 = null;
        builder11.server = server14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        java.util.concurrent.Executor executor20 = builder16.getcallbackExecutor();
        builder11.setcallbackExecutor(executor20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        java.util.concurrent.Executor executor26 = builder22.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter29.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter29.deserializeObjectConverter5();
        retrofit.Profiler profiler32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean37 = logLevel36.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server9, provider10, executor20, executor26, requestInterceptor28, (retrofit.converter.Converter) gsonConverter31, profiler32, errorHandler34, log35, logLevel36);
        retrofit.ErrorHandler errorHandler39 = restAdapter38.errorHandler;
        builder0.errorHandler = errorHandler39;
        retrofit.converter.Converter converter41 = builder0.converter;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler43 = null;
        builder42.errorHandler = errorHandler43;
        java.util.concurrent.Executor executor45 = builder42.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response47 = serializedObjectSupporter46.deserializeObjectResponse8();
        java.lang.String str48 = serializedObjectSupporter46.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter4();
        java.lang.String str50 = serializedObjectSupporter46.deserializeObjectString3();
        retrofit.Server server51 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder52 = builder42.setServer(server51);
        retrofit.RestAdapter.Builder builder53 = builder0.setServer(server51);
        retrofit.Profiler profiler54 = builder0.profiler;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNotNull(executor7);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(response47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(profiler54);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.Server server36 = restAdapter35.server;
        retrofit.ErrorHandler errorHandler37 = restAdapter35.errorHandler;
        builder0.errorHandler = errorHandler37;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response40 = serializedObjectSupporter39.deserializeObjectResponse8();
        retrofit.ErrorHandler errorHandler41 = serializedObjectSupporter39.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder42 = builder0.setErrorHandler(errorHandler41);
        retrofit.RestAdapter.Builder builder44 = builder0.setServer("OK");
        retrofit.RestAdapter restAdapter45 = builder44.build();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.client.Client.Provider provider48 = builder46.clientProvider;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor50 = null;
        builder49.setcallbackExecutor(executor50);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler53 = null;
        builder52.errorHandler = errorHandler53;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = builder52.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder57 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler62 = null;
        builder61.errorHandler = errorHandler62;
        retrofit.Server server64 = null;
        builder61.server = server64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        java.util.concurrent.Executor executor70 = builder66.getcallbackExecutor();
        builder61.setcallbackExecutor(executor70);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        java.util.concurrent.Executor executor76 = builder72.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter77 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter77.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor80 = serializedObjectSupporter79.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter79.deserializeObjectConverter5();
        retrofit.Profiler profiler82 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler84 = serializedObjectSupporter83.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean87 = logLevel86.log();
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server59, provider60, executor70, executor76, requestInterceptor78, (retrofit.converter.Converter) gsonConverter81, profiler82, errorHandler84, log85, logLevel86);
        retrofit.ErrorHandler errorHandler89 = restAdapter88.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel90 = restAdapter88.logLevel;
        retrofit.RestAdapter.Log log91 = restAdapter88.log;
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter88.getLogLevel();
        restAdapter58.logLevel = logLevel92;
        retrofit.converter.Converter converter94 = restAdapter58.converter;
        retrofit.converter.Converter converter95 = restAdapter58.getconverter();
        retrofit.client.Client.Provider provider96 = restAdapter58.getclientProvider();
        builder49.setclientProvider(provider96);
        builder46.setclientProvider(provider96);
        builder44.clientProvider = provider96;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(response40);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNull(serializedObjectSupporter55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(executor70);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertNotNull(requestInterceptor80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(errorHandler84);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(errorHandler89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter94);
        org.junit.Assert.assertNotNull(converter95);
        org.junit.Assert.assertNotNull(provider96);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.client.Client.Provider provider4 = builder0.getclientProvider();
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler8 = null;
        builder7.errorHandler = errorHandler8;
        retrofit.Server server10 = null;
        builder7.server = server10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        java.util.concurrent.Executor executor16 = builder12.getcallbackExecutor();
        builder7.setcallbackExecutor(executor16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        java.util.concurrent.Executor executor22 = builder18.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor24 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter25.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter25.deserializeObjectConverter5();
        retrofit.Profiler profiler28 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler30 = serializedObjectSupporter29.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean33 = logLevel32.log();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server5, provider6, executor16, executor22, requestInterceptor24, (retrofit.converter.Converter) gsonConverter27, profiler28, errorHandler30, log31, logLevel32);
        retrofit.Server server35 = restAdapter34.server;
        retrofit.ErrorHandler errorHandler36 = restAdapter34.errorHandler;
        builder0.errorHandler = errorHandler36;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler41 = null;
        builder40.errorHandler = errorHandler41;
        retrofit.Server server43 = null;
        builder40.server = server43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        java.util.concurrent.Executor executor49 = builder45.getcallbackExecutor();
        builder40.setcallbackExecutor(executor49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        java.util.concurrent.Executor executor55 = builder51.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter56.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor59 = serializedObjectSupporter58.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter58.deserializeObjectConverter5();
        retrofit.Profiler profiler61 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler63 = serializedObjectSupporter62.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean66 = logLevel65.log();
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server38, provider39, executor49, executor55, requestInterceptor57, (retrofit.converter.Converter) gsonConverter60, profiler61, errorHandler63, log64, logLevel65);
        retrofit.ErrorHandler errorHandler68 = restAdapter67.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor71 = serializedObjectSupporter70.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter70.deserializeObjectConverter1();
        java.lang.String str73 = serializedObjectSupporter70.deserializeObjectString11();
        restHandler69.serializedObjectSupporter = serializedObjectSupporter70;
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler76 = serializedObjectSupporter75.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter77 = serializedObjectSupporter75.deserializeObjectConverter6();
        retrofit.mime.TypedString typedString78 = serializedObjectSupporter75.deserializeObjectTypedInput1();
        restHandler69.serializedObjectSupporter = serializedObjectSupporter75;
        retrofit.converter.GsonConverter gsonConverter80 = serializedObjectSupporter75.deserializeObjectConverter6();
        builder0.converter = gsonConverter80;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "http://example.com/" + "'", str73, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler76);
        org.junit.Assert.assertNotNull(gsonConverter77);
        org.junit.Assert.assertNotNull(typedString78);
        org.junit.Assert.assertNotNull(gsonConverter80);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString11();
        retrofit.ErrorHandler errorHandler4 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections collections6 = serializedObjectSupporter0.deserializeObjectList1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$UnmodifiableRandomAccessList cannot be cast to java.util.Collections");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.Class class42 = serializedObjectSupporter38.deserializeObjectClass1();
        retrofit.client.Response response43 = serializedObjectSupporter38.deserializeObjectResponse7();
        retrofit.client.Response response44 = serializedObjectSupporter38.deserializeObjectResponse3();
        java.lang.Class class45 = serializedObjectSupporter38.deserializeObjectClass1();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertNotNull(class42);
        org.junit.Assert.assertNotNull(response43);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertNotNull(class45);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse4();
        retrofit.Server server6 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.ErrorHandler errorHandler7 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(errorHandler7);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.Class class42 = serializedObjectSupporter38.deserializeObjectClass1();
        retrofit.client.Response response43 = serializedObjectSupporter38.deserializeObjectResponse7();
        retrofit.client.Response response44 = serializedObjectSupporter38.deserializeObjectResponse3();
        java.lang.String str45 = serializedObjectSupporter38.deserializeObjectString12();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertNotNull(class42);
        org.junit.Assert.assertNotNull(response43);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Internal Server Error" + "'", str45, "Internal Server Error");
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor2 = null;
        builder0.callbackExecutor = executor2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response5 = serializedObjectSupporter4.deserializeObjectResponse8();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter4.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder8 = builder0.setConverter((retrofit.converter.Converter) gsonConverter7);
        retrofit.RestAdapter.Builder builder10 = builder8.setServer("OK");
        retrofit.client.Client.Provider provider11 = builder8.getclientProvider();
        java.util.concurrent.Executor executor12 = builder8.gethttpExecutor();
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(executor12);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse3();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString10();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString9();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Forbidden" + "'", str5, "Forbidden");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString13();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse2();
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(response7);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.Profiler profiler7 = builder0.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response9 = serializedObjectSupporter8.deserializeObjectResponse8();
        java.lang.String str10 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter8.deserializeObjectConverter4();
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString3();
        retrofit.Server server13 = serializedObjectSupporter8.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder14 = builder0.setServer(server13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = null;
        builder15.setcallbackExecutor(executor16);
        retrofit.client.Client.Provider provider18 = builder15.clientProvider;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter20 = builder19.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder19.serializedObjectSupporter;
        java.util.concurrent.Executor executor22 = null;
        builder19.sethttpExecutor(executor22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler25 = null;
        builder24.errorHandler = errorHandler25;
        retrofit.Server server27 = null;
        builder24.server = server27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        java.util.concurrent.Executor executor33 = builder29.getcallbackExecutor();
        builder24.setcallbackExecutor(executor33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor36 = null;
        builder35.setcallbackExecutor(executor36);
        retrofit.client.Client.Provider provider38 = builder35.clientProvider;
        java.util.concurrent.Executor executor39 = builder35.gethttpExecutor();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        java.util.concurrent.Executor executor42 = builder40.callbackExecutor;
        builder35.setcallbackExecutor(executor42);
        retrofit.RestAdapter.Builder builder44 = builder19.setExecutors(executor33, executor42);
        builder15.setcallbackExecutor(executor42);
        builder0.callbackExecutor = executor42;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler48 = serializedObjectSupporter47.deserializeObjectErrorHandler1();
        retrofit.client.Response response49 = serializedObjectSupporter47.deserializeObjectResponse2();
        builder0.serializedObjectSupporter = serializedObjectSupporter47;
        java.lang.Class class51 = serializedObjectSupporter47.deserializeObjectClass1();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(response9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(response49);
        org.junit.Assert.assertNotNull(class51);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder2.errorHandler = errorHandler4;
        retrofit.converter.Converter converter6 = builder2.converter;
        retrofit.client.Client.Provider provider7 = builder2.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        builder2.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder23.setclientProvider(provider26);
        retrofit.RequestInterceptor requestInterceptor28 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = null;
        builder29.callbackExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response34 = serializedObjectSupporter33.deserializeObjectResponse8();
        java.lang.String str35 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder37 = builder29.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = null;
        builder39.callbackExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response44 = serializedObjectSupporter43.deserializeObjectResponse8();
        java.lang.String str45 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder47 = builder39.setConverter((retrofit.converter.Converter) gsonConverter46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        builder47.errorHandler = errorHandler49;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server0, provider1, executor17, executor22, requestInterceptor28, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler49, log51, logLevel52);
        java.lang.String str54 = restAdapter53.getTHREAD_PREFIX();
        retrofit.Profiler profiler55 = restAdapter53.profiler;
        retrofit.client.Client.Provider provider56 = restAdapter53.getclientProvider();
        retrofit.converter.Converter converter57 = restAdapter53.getconverter();
        retrofit.Profiler profiler58 = restAdapter53.getprofiler();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(response34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(converter57);
        org.junit.Assert.assertNull(profiler58);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler1 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response2 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString13();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse2();
        int int5 = response4.status;
        org.junit.Assert.assertNotNull(errorHandler1);
        org.junit.Assert.assertNotNull(response2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 200 + "'", int5 == 200);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.client.Client.Provider provider33 = restAdapter29.getclientProvider();
        retrofit.client.Client.Provider provider34 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler36 = null;
        builder35.errorHandler = errorHandler36;
        retrofit.RequestInterceptor requestInterceptor38 = builder35.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel41;
        restAdapter29.setLogLevel(logLevel41);
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler47 = null;
        builder46.errorHandler = errorHandler47;
        retrofit.Server server49 = null;
        builder46.server = server49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        java.util.concurrent.Executor executor55 = builder51.getcallbackExecutor();
        builder46.setcallbackExecutor(executor55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        java.util.concurrent.Executor executor61 = builder57.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor63 = serializedObjectSupporter62.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor65 = serializedObjectSupporter64.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter64.deserializeObjectConverter5();
        retrofit.Profiler profiler67 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler69 = serializedObjectSupporter68.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean72 = logLevel71.log();
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server44, provider45, executor55, executor61, requestInterceptor63, (retrofit.converter.Converter) gsonConverter66, profiler67, errorHandler69, log70, logLevel71);
        retrofit.ErrorHandler errorHandler74 = restAdapter73.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler75 = restAdapter73.new RestHandler();
        retrofit.RestAdapter.Log log76 = restAdapter73.log;
        java.lang.String str77 = restAdapter73.getTHREAD_PREFIX();
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter73.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler80 = serializedObjectSupporter79.deserializeObjectErrorHandler1();
        retrofit.client.Response response81 = serializedObjectSupporter79.deserializeObjectResponse2();
        restHandler78.serializedObjectSupporter = serializedObjectSupporter79;
        retrofit.converter.GsonConverter gsonConverter83 = serializedObjectSupporter79.deserializeObjectConverter8();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter79;
        retrofit.Profiler profiler85 = restAdapter29.profiler;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(requestInterceptor63);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(errorHandler69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(errorHandler74);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Retrofit-" + "'", str77, "Retrofit-");
        org.junit.Assert.assertNotNull(errorHandler80);
        org.junit.Assert.assertNotNull(response81);
        org.junit.Assert.assertNotNull(gsonConverter83);
        org.junit.Assert.assertNull(profiler85);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        java.util.concurrent.Executor executor23 = builder19.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter26.deserializeObjectConverter5();
        retrofit.Profiler profiler29 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler31 = serializedObjectSupporter30.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server6, provider7, executor17, executor23, requestInterceptor25, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler31, log32, logLevel33);
        retrofit.Server server36 = restAdapter35.server;
        retrofit.ErrorHandler errorHandler37 = restAdapter35.errorHandler;
        builder0.errorHandler = errorHandler37;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response40 = serializedObjectSupporter39.deserializeObjectResponse8();
        retrofit.ErrorHandler errorHandler41 = serializedObjectSupporter39.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder42 = builder0.setErrorHandler(errorHandler41);
        retrofit.RestAdapter.Builder builder44 = builder0.setServer("OK");
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        builder0.logLevel = logLevel45;
        retrofit.client.Client.Provider provider47 = builder0.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(response40);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(provider47);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        java.lang.String str33 = restAdapter29.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor34 = restAdapter29.gethttpExecutor();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.Log log36 = restAdapter29.log;
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = restAdapter29.serializedObjectSupporter;
        java.util.concurrent.Executor executor38 = restAdapter29.httpExecutor;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Retrofit-Idle" + "'", str33, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNull(serializedObjectSupporter37);
        org.junit.Assert.assertNotNull(executor38);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter29.setLogLevel(logLevel37);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString12();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString7();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse7();
        java.lang.String str8 = response7.reason;
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Internal Server Error" + "'", str3, "Internal Server Error");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Internal Server Error" + "'", str8, "Internal Server Error");
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter29.logLevel = logLevel31;
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter29.requestInterceptor;
        java.util.concurrent.Executor executor34 = restAdapter29.httpExecutor;
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler38 = null;
        builder37.errorHandler = errorHandler38;
        retrofit.Server server40 = null;
        builder37.server = server40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        java.util.concurrent.Executor executor46 = builder42.getcallbackExecutor();
        builder37.setcallbackExecutor(executor46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        java.util.concurrent.Executor executor52 = builder48.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor54 = serializedObjectSupporter53.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor56 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter55.deserializeObjectConverter5();
        retrofit.Profiler profiler58 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler60 = serializedObjectSupporter59.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean63 = logLevel62.log();
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server35, provider36, executor46, executor52, requestInterceptor54, (retrofit.converter.Converter) gsonConverter57, profiler58, errorHandler60, log61, logLevel62);
        retrofit.ErrorHandler errorHandler65 = restAdapter64.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor67 = serializedObjectSupporter66.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter68 = serializedObjectSupporter66.deserializeObjectConverter5();
        restAdapter64.serializedObjectSupporter = serializedObjectSupporter66;
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = restAdapter64.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler73 = serializedObjectSupporter72.deserializeObjectErrorHandler1();
        retrofit.client.Response response74 = serializedObjectSupporter72.deserializeObjectResponse2();
        retrofit.mime.TypedInput typedInput75 = response74.getBody();
        retrofit.mime.TypedInput typedInput76 = response74.body;
        retrofit.client.Response response78 = restAdapter64.logAndReplaceResponse("OK", response74, (long) 500);
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter64.getLogLevel();
        restAdapter29.logLevel = logLevel79;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(requestInterceptor67);
        org.junit.Assert.assertNotNull(gsonConverter68);
        org.junit.Assert.assertNotNull(serializedObjectSupporter70);
        org.junit.Assert.assertNotNull(errorHandler73);
        org.junit.Assert.assertNotNull(response74);
        org.junit.Assert.assertNotNull(typedInput75);
        org.junit.Assert.assertNotNull(typedInput76);
        org.junit.Assert.assertNotNull(response78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.RestAdapter.Log log35 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter29.logLevel;
        java.lang.String str37 = restAdapter29.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler38 = restAdapter29.errorHandler;
        retrofit.ErrorHandler errorHandler39 = restAdapter29.geterrorHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = restAdapter29.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        restAdapter29.setLogLevel(logLevel42);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(serializedObjectSupporter40);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.client.Client.Provider provider4 = null;
        builder0.clientProvider = provider4;
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.RestAdapter.Log log8 = builder0.log;
        retrofit.Profiler profiler9 = null;
        builder0.profiler = profiler9;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(log8);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response1 = serializedObjectSupporter0.deserializeObjectResponse8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        org.junit.Assert.assertNotNull(response1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(server4);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = null;
        builder2.errorHandler = errorHandler4;
        retrofit.converter.Converter converter6 = builder2.converter;
        retrofit.client.Client.Provider provider7 = builder2.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler9 = null;
        builder8.errorHandler = errorHandler9;
        retrofit.Server server11 = null;
        builder8.server = server11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        builder8.setcallbackExecutor(executor17);
        builder2.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder23.serializedObjectSupporter;
        retrofit.client.Client.Provider provider26 = null;
        builder23.setclientProvider(provider26);
        retrofit.RequestInterceptor requestInterceptor28 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = null;
        builder29.callbackExecutor = executor31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response34 = serializedObjectSupporter33.deserializeObjectResponse8();
        java.lang.String str35 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder37 = builder29.setConverter((retrofit.converter.Converter) gsonConverter36);
        retrofit.Profiler profiler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor41 = null;
        builder39.callbackExecutor = executor41;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response44 = serializedObjectSupporter43.deserializeObjectResponse8();
        java.lang.String str45 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder47 = builder39.setConverter((retrofit.converter.Converter) gsonConverter46);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter48.deserializeObjectErrorHandler1();
        builder47.errorHandler = errorHandler49;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server0, provider1, executor17, executor22, requestInterceptor28, (retrofit.converter.Converter) gsonConverter36, profiler38, errorHandler49, log51, logLevel52);
        java.lang.String str54 = restAdapter53.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider55 = restAdapter53.clientProvider;
        retrofit.Profiler profiler56 = restAdapter53.profiler;
        java.util.concurrent.Executor executor57 = restAdapter53.httpExecutor;
        java.lang.String str58 = restAdapter53.getTHREAD_PREFIX();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(response34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-" + "'", str54, "Retrofit-");
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNull(profiler56);
        org.junit.Assert.assertNotNull(executor57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Retrofit-" + "'", str58, "Retrofit-");
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter29.logLevel;
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter29.getLogLevel();
        retrofit.Server server34 = restAdapter29.server;
        java.util.concurrent.Executor executor35 = restAdapter29.callbackExecutor;
        retrofit.ErrorHandler errorHandler36 = restAdapter29.geterrorHandler();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(errorHandler36);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = null;
        builder0.setcallbackExecutor(executor1);
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider5 = null;
        builder4.setclientProvider(provider5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        java.util.concurrent.Executor executor9 = null;
        builder7.callbackExecutor = executor9;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response12 = serializedObjectSupporter11.deserializeObjectResponse8();
        java.lang.String str13 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder15 = builder7.setConverter((retrofit.converter.Converter) gsonConverter14);
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response17 = serializedObjectSupporter16.deserializeObjectResponse8();
        retrofit.ErrorHandler errorHandler18 = serializedObjectSupporter16.deserializeObjectErrorHandler1();
        builder15.errorHandler = errorHandler18;
        retrofit.RestAdapter.Builder builder20 = builder4.setErrorHandler(errorHandler18);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(response12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(response17);
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor5 = serializedObjectSupporter4.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder6 = builder0.setRequestInterceptor(requestInterceptor5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler8 = null;
        builder7.errorHandler = errorHandler8;
        retrofit.Server server10 = null;
        builder7.server = server10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        java.util.concurrent.Executor executor16 = builder12.getcallbackExecutor();
        builder7.setcallbackExecutor(executor16);
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler21 = null;
        builder20.errorHandler = errorHandler21;
        retrofit.Server server23 = null;
        builder20.server = server23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        java.util.concurrent.Executor executor29 = builder25.getcallbackExecutor();
        builder20.setcallbackExecutor(executor29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        java.util.concurrent.Executor executor35 = builder31.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor37 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter38.deserializeObjectConverter5();
        retrofit.Profiler profiler41 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler43 = serializedObjectSupporter42.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean46 = logLevel45.log();
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server18, provider19, executor29, executor35, requestInterceptor37, (retrofit.converter.Converter) gsonConverter40, profiler41, errorHandler43, log44, logLevel45);
        retrofit.ErrorHandler errorHandler48 = restAdapter47.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor50 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter49.deserializeObjectConverter5();
        restAdapter47.serializedObjectSupporter = serializedObjectSupporter49;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = restAdapter47.serializedObjectSupporter;
        retrofit.Profiler profiler54 = restAdapter47.getprofiler();
        retrofit.converter.Converter converter55 = restAdapter47.converter;
        java.util.concurrent.Executor executor56 = restAdapter47.httpExecutor;
        retrofit.RestAdapter.Builder builder57 = builder0.setExecutors(executor16, executor56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler59 = null;
        builder58.errorHandler = errorHandler59;
        retrofit.RequestInterceptor requestInterceptor61 = builder58.requestInterceptor;
        retrofit.converter.Converter converter62 = null;
        builder58.converter = converter62;
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor65 = serializedObjectSupporter64.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder66 = builder58.setRequestInterceptor(requestInterceptor65);
        builder0.requestInterceptor = requestInterceptor65;
        retrofit.Profiler profiler68 = builder0.profiler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(serializedObjectSupporter53);
        org.junit.Assert.assertNull(profiler54);
        org.junit.Assert.assertNotNull(converter55);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(requestInterceptor61);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(profiler68);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = null;
        builder6.errorHandler = errorHandler7;
        retrofit.Server server9 = null;
        builder6.server = server9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        java.util.concurrent.Executor executor15 = builder11.getcallbackExecutor();
        builder6.setcallbackExecutor(executor15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        java.util.concurrent.Executor executor21 = builder17.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor23 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter24.deserializeObjectConverter5();
        retrofit.Profiler profiler27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean32 = logLevel31.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server4, provider5, executor15, executor21, requestInterceptor23, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler29, log30, logLevel31);
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder0.setLogLevel(logLevel35);
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor39 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.mime.TypedString typedString40 = serializedObjectSupporter38.deserializeObjectTypedInput1();
        builder0.serializedObjectSupporter = serializedObjectSupporter38;
        java.lang.Class class42 = serializedObjectSupporter38.deserializeObjectClass1();
        retrofit.client.Response response43 = serializedObjectSupporter38.deserializeObjectResponse7();
        retrofit.client.Response response44 = serializedObjectSupporter38.deserializeObjectResponse4();
        java.lang.String str45 = serializedObjectSupporter38.deserializeObjectString12();
        retrofit.client.Response response46 = serializedObjectSupporter38.deserializeObjectResponse3();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(typedString40);
        org.junit.Assert.assertNotNull(class42);
        org.junit.Assert.assertNotNull(response43);
        org.junit.Assert.assertNotNull(response44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Internal Server Error" + "'", str45, "Internal Server Error");
        org.junit.Assert.assertNotNull(response46);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor1 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString11();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse4();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse8();
        retrofit.mime.TypedInput typedInput6 = response5.getBody();
        org.junit.Assert.assertNotNull(requestInterceptor1);
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertNull(typedInput6);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = null;
        builder0.errorHandler = errorHandler1;
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder5.build();
        retrofit.ErrorHandler errorHandler7 = restAdapter6.geterrorHandler();
        java.util.concurrent.Executor executor8 = restAdapter6.httpExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNotNull(errorHandler7);
        org.junit.Assert.assertNotNull(executor8);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler5 = null;
        builder0.errorHandler = errorHandler5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder7.serializedObjectSupporter;
        retrofit.client.Client.Provider provider10 = null;
        builder7.setclientProvider(provider10);
        retrofit.RequestInterceptor requestInterceptor12 = builder7.requestInterceptor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = builder13.serializedObjectSupporter;
        retrofit.client.Client.Provider provider16 = null;
        builder13.setclientProvider(provider16);
        retrofit.RequestInterceptor requestInterceptor18 = builder13.requestInterceptor;
        retrofit.RestAdapter.Builder builder19 = builder7.setRequestInterceptor(requestInterceptor18);
        retrofit.RestAdapter.Builder builder20 = builder0.setRequestInterceptor(requestInterceptor18);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response23 = serializedObjectSupporter22.deserializeObjectResponse8();
        java.lang.String str24 = serializedObjectSupporter22.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter22.deserializeObjectConverter4();
        java.lang.String str26 = serializedObjectSupporter22.deserializeObjectString3();
        retrofit.Server server27 = serializedObjectSupporter22.deserializeObjectServer1();
        java.lang.String str28 = serializedObjectSupporter22.deserializeObjectString3();
        builder0.serializedObjectSupporter = serializedObjectSupporter22;
        java.lang.String str30 = serializedObjectSupporter22.deserializeObjectString11();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(requestInterceptor12);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(response23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "http://example.com/" + "'", str30, "http://example.com/");
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.client.Client.Provider provider2 = null;
        builder0.setclientProvider(provider2);
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler5 = serializedObjectSupporter4.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter4.deserializeObjectConverter6();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString3();
        retrofit.Server server8 = serializedObjectSupporter4.deserializeObjectServer1();
        builder0.server = server8;
        retrofit.Profiler profiler10 = null;
        builder0.profiler = profiler10;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.Server server30 = restAdapter29.server;
        retrofit.ErrorHandler errorHandler31 = restAdapter29.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter29.setLogLevel(logLevel32);
        retrofit.client.Client.Provider provider34 = restAdapter29.getclientProvider();
        retrofit.Server server35 = restAdapter29.server;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.setLogLevel(logLevel36);
        java.util.concurrent.Executor executor38 = restAdapter29.gethttpExecutor();
        retrofit.converter.Converter converter39 = restAdapter29.converter;
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNotNull(converter39);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.converter.Converter converter33 = restAdapter29.getconverter();
        java.lang.String str34 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter29.getrequestInterceptor();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Retrofit-" + "'", str34, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor35);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler3 = null;
        builder2.errorHandler = errorHandler3;
        retrofit.Server server5 = null;
        builder2.server = server5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        java.util.concurrent.Executor executor11 = builder7.getcallbackExecutor();
        builder2.setcallbackExecutor(executor11);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        java.util.concurrent.Executor executor17 = builder13.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter20.deserializeObjectConverter5();
        retrofit.Profiler profiler23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean28 = logLevel27.log();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server0, provider1, executor11, executor17, requestInterceptor19, (retrofit.converter.Converter) gsonConverter22, profiler23, errorHandler25, log26, logLevel27);
        retrofit.ErrorHandler errorHandler30 = restAdapter29.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor32 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter31.deserializeObjectConverter5();
        restAdapter29.serializedObjectSupporter = serializedObjectSupporter31;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = restAdapter29.serializedObjectSupporter;
        retrofit.Profiler profiler36 = restAdapter29.profiler;
        java.util.concurrent.Executor executor37 = restAdapter29.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter29.logLevel;
        java.util.concurrent.Executor executor39 = restAdapter29.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter29.logLevel;
        retrofit.Server server41 = restAdapter29.getserver();
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server41);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter10 = builder9.converter;
        retrofit.ErrorHandler errorHandler11 = null;
        builder9.errorHandler = errorHandler11;
        retrofit.converter.Converter converter13 = builder9.converter;
        retrofit.client.Client.Provider provider14 = builder9.getclientProvider();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler16 = null;
        builder15.errorHandler = errorHandler16;
        retrofit.Server server18 = null;
        builder15.server = server18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        builder15.setcallbackExecutor(executor24);
        builder9.sethttpExecutor(executor24);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        java.util.concurrent.Executor executor29 = builder27.callbackExecutor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = builder30.serializedObjectSupporter;
        retrofit.client.Client.Provider provider33 = null;
        builder30.setclientProvider(provider33);
        retrofit.RequestInterceptor requestInterceptor35 = builder30.requestInterceptor;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        java.util.concurrent.Executor executor38 = null;
        builder36.callbackExecutor = executor38;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response41 = serializedObjectSupporter40.deserializeObjectResponse8();
        java.lang.String str42 = serializedObjectSupporter40.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder44 = builder36.setConverter((retrofit.converter.Converter) gsonConverter43);
        retrofit.Profiler profiler45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        java.util.concurrent.Executor executor48 = null;
        builder46.callbackExecutor = executor48;
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response51 = serializedObjectSupporter50.deserializeObjectResponse8();
        java.lang.String str52 = serializedObjectSupporter50.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder54 = builder46.setConverter((retrofit.converter.Converter) gsonConverter53);
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler56 = serializedObjectSupporter55.deserializeObjectErrorHandler1();
        builder54.errorHandler = errorHandler56;
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server7, provider8, executor24, executor29, requestInterceptor35, (retrofit.converter.Converter) gsonConverter43, profiler45, errorHandler56, log58, logLevel59);
        retrofit.RestAdapter.Builder builder61 = builder0.setLog(log58);
        retrofit.Server server62 = builder0.server;
        retrofit.Server server63 = null;
        retrofit.client.Client.Provider provider64 = null;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler66 = null;
        builder65.errorHandler = errorHandler66;
        retrofit.Server server68 = null;
        builder65.server = server68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        builder70.ensureSaneDefaults();
        retrofit.RestAdapter.Log log72 = null;
        builder70.log = log72;
        java.util.concurrent.Executor executor74 = builder70.getcallbackExecutor();
        builder65.setcallbackExecutor(executor74);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.RestAdapter.Log log78 = null;
        builder76.log = log78;
        java.util.concurrent.Executor executor80 = builder76.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter81 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor82 = serializedObjectSupporter81.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor84 = serializedObjectSupporter83.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter85 = serializedObjectSupporter83.deserializeObjectConverter5();
        retrofit.Profiler profiler86 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter87 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler88 = serializedObjectSupporter87.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log89 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean91 = logLevel90.log();
        retrofit.RestAdapter restAdapter92 = new retrofit.RestAdapter(server63, provider64, executor74, executor80, requestInterceptor82, (retrofit.converter.Converter) gsonConverter85, profiler86, errorHandler88, log89, logLevel90);
        retrofit.Server server93 = restAdapter92.server;
        retrofit.ErrorHandler errorHandler94 = restAdapter92.errorHandler;
        java.lang.String str95 = restAdapter92.getTHREAD_PREFIX();
        retrofit.ErrorHandler errorHandler96 = restAdapter92.errorHandler;
        retrofit.ErrorHandler errorHandler97 = restAdapter92.geterrorHandler();
        retrofit.RestAdapter.Builder builder98 = builder0.setErrorHandler(errorHandler97);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(response41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(response51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(errorHandler56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(server62);
        org.junit.Assert.assertNotNull(executor74);
        org.junit.Assert.assertNotNull(executor80);
        org.junit.Assert.assertNotNull(requestInterceptor82);
        org.junit.Assert.assertNotNull(requestInterceptor84);
        org.junit.Assert.assertNotNull(gsonConverter85);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertNotNull(log89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(server93);
        org.junit.Assert.assertNotNull(errorHandler94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Retrofit-" + "'", str95, "Retrofit-");
        org.junit.Assert.assertNotNull(errorHandler96);
        org.junit.Assert.assertNotNull(errorHandler97);
        org.junit.Assert.assertNotNull(builder98);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        java.util.concurrent.Executor executor4 = null;
        builder0.sethttpExecutor(executor4);
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter10 = builder9.converter;
        retrofit.ErrorHandler errorHandler11 = null;
        builder9.errorHandler = errorHandler11;
        retrofit.converter.Converter converter13 = builder9.converter;
        retrofit.client.Client.Provider provider14 = builder9.getclientProvider();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler16 = null;
        builder15.errorHandler = errorHandler16;
        retrofit.Server server18 = null;
        builder15.server = server18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        java.util.concurrent.Executor executor24 = builder20.getcallbackExecutor();
        builder15.setcallbackExecutor(executor24);
        builder9.sethttpExecutor(executor24);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        java.util.concurrent.Executor executor29 = builder27.callbackExecutor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = builder30.serializedObjectSupporter;
        retrofit.client.Client.Provider provider33 = null;
        builder30.setclientProvider(provider33);
        retrofit.RequestInterceptor requestInterceptor35 = builder30.requestInterceptor;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        java.util.concurrent.Executor executor38 = null;
        builder36.callbackExecutor = executor38;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response41 = serializedObjectSupporter40.deserializeObjectResponse8();
        java.lang.String str42 = serializedObjectSupporter40.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder44 = builder36.setConverter((retrofit.converter.Converter) gsonConverter43);
        retrofit.Profiler profiler45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        java.util.concurrent.Executor executor48 = null;
        builder46.callbackExecutor = executor48;
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response51 = serializedObjectSupporter50.deserializeObjectResponse8();
        java.lang.String str52 = serializedObjectSupporter50.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder54 = builder46.setConverter((retrofit.converter.Converter) gsonConverter53);
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler56 = serializedObjectSupporter55.deserializeObjectErrorHandler1();
        builder54.errorHandler = errorHandler56;
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server7, provider8, executor24, executor29, requestInterceptor35, (retrofit.converter.Converter) gsonConverter43, profiler45, errorHandler56, log58, logLevel59);
        retrofit.RestAdapter.Builder builder61 = builder0.setLog(log58);
        retrofit.client.Client client62 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder63 = builder0.setClient(client62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(response41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(response51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(errorHandler56);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder61);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response3 = serializedObjectSupporter2.deserializeObjectResponse8();
        java.lang.String str4 = serializedObjectSupporter2.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter2.deserializeObjectConverter4();
        retrofit.client.Response response6 = serializedObjectSupporter2.deserializeObjectResponse3();
        java.util.List<retrofit.client.Header> headerList7 = response6.headers;
        retrofit.Server server8 = null;
        retrofit.client.Client.Provider provider9 = null;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler11 = null;
        builder10.errorHandler = errorHandler11;
        retrofit.Server server13 = null;
        builder10.server = server13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        java.util.concurrent.Executor executor19 = builder15.getcallbackExecutor();
        builder10.setcallbackExecutor(executor19);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        java.util.concurrent.Executor executor25 = builder21.getcallbackExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter26.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor29 = serializedObjectSupporter28.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter28.deserializeObjectConverter5();
        retrofit.Profiler profiler31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        retrofit.ErrorHandler errorHandler33 = serializedObjectSupporter32.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean36 = logLevel35.log();
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server8, provider9, executor19, executor25, requestInterceptor27, (retrofit.converter.Converter) gsonConverter30, profiler31, errorHandler33, log34, logLevel35);
        retrofit.ErrorHandler errorHandler38 = restAdapter37.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        retrofit.client.Response response41 = serializedObjectSupporter40.deserializeObjectResponse8();
        java.lang.String str42 = serializedObjectSupporter40.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter4();
        java.lang.String str44 = serializedObjectSupporter40.deserializeObjectString3();
        restHandler39.serializedObjectSupporter = serializedObjectSupporter40;
        retrofit.client.Response response46 = serializedObjectSupporter40.deserializeObjectResponse2();
        int int47 = response46.getStatus();
        retrofit.mime.TypedInput typedInput48 = response46.getBody();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response49 = new retrofit.client.Response(1, "Retrofit-", headerList7, typedInput48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(response6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(response41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(response46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 200 + "'", int47 == 200);
        org.junit.Assert.assertNotNull(typedInput48);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.Server server4 = builder3.server;
        retrofit.ErrorHandler errorHandler5 = null;
        builder3.errorHandler = errorHandler5;
        java.util.concurrent.Executor executor7 = null;
        builder3.sethttpExecutor(executor7);
        retrofit.client.Client.Provider provider9 = null;
        builder3.setclientProvider(provider9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        retrofit.RequestInterceptor requestInterceptor12 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder13 = builder3.setRequestInterceptor(requestInterceptor12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter15 = builder14.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder14.serializedObjectSupporter;
        java.util.concurrent.Executor executor17 = null;
        builder14.sethttpExecutor(executor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler20 = null;
        builder19.errorHandler = errorHandler20;
        retrofit.Server server22 = null;
        builder19.server = server22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        java.util.concurrent.Executor executor28 = builder24.getcallbackExecutor();
        builder19.setcallbackExecutor(executor28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = null;
        builder30.setcallbackExecutor(executor31);
        retrofit.client.Client.Provider provider33 = builder30.clientProvider;
        java.util.concurrent.Executor executor34 = builder30.gethttpExecutor();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        java.util.concurrent.Executor executor37 = builder35.callbackExecutor;
        builder30.setcallbackExecutor(executor37);
        retrofit.RestAdapter.Builder builder39 = builder14.setExecutors(executor28, executor37);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler41 = null;
        builder40.errorHandler = errorHandler41;
        retrofit.RequestInterceptor requestInterceptor43 = builder40.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder45 = builder40.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        java.util.concurrent.Executor executor48 = builder46.callbackExecutor;
        builder45.callbackExecutor = executor48;
        retrofit.RestAdapter.Builder builder50 = builder13.setExecutors(executor28, executor48);
        builder0.httpExecutor = executor48;
        retrofit.client.Client.Provider provider52 = builder0.getclientProvider();
        retrofit.client.Client.Provider provider53 = builder0.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNotNull(requestInterceptor12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(requestInterceptor43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNull(provider53);
    }
}

