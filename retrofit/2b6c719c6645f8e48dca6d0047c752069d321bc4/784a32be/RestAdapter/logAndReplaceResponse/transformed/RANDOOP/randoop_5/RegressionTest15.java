import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest15 {

    public static boolean debug = false;

    @Test
    public void test07501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07501");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor4 = builder0.callbackExecutor;
        retrofit.ErrorHandler errorHandler5 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        java.util.concurrent.Executor executor8 = builder6.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor9 = builder6.requestInterceptor;
        java.util.concurrent.Executor executor10 = builder6.httpExecutor;
        retrofit.RestAdapter.Log log11 = builder6.log;
        retrofit.RestAdapter.Builder builder12 = builder0.setLog(log11);
        retrofit.RestAdapter restAdapter13 = builder0.build();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter13.requestInterceptor;
        retrofit.Profiler profiler15 = null;
        restAdapter13.profiler = profiler15;
        retrofit.converter.Converter converter17 = restAdapter13.converter;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(executor4);
        org.junit.Assert.assertNotNull(errorHandler5);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(executor10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(restAdapter13);
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(converter17);
    }

    @Test
    public void test07502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07502");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter0.getLogLevel();
        retrofit.Profiler profiler6 = restAdapter0.profiler;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNull(converter7);
    }

    @Test
    public void test07503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07503");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter9.logLevel = logLevel11;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel11);
        retrofit.Profiler profiler14 = restAdapter13.profiler;
        retrofit.ErrorHandler errorHandler15 = restAdapter13.errorHandler;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder19 = builder16.setServer("hi!");
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter20.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.Log log23 = restAdapter20.log;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter20.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = builder19.setLogLevel(logLevel24);
        retrofit.client.Client.Provider provider27 = null;
        builder19.clientProvider = provider27;
        retrofit.RequestInterceptor requestInterceptor29 = builder19.requestInterceptor;
        retrofit.RestAdapter restAdapter30 = builder19.build();
        retrofit.Profiler profiler31 = builder19.profiler;
        retrofit.ErrorHandler errorHandler32 = builder19.errorHandler;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter48.logLevel = logLevel50;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel50);
        restAdapter33.log = log47;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter54.logLevel = logLevel56;
        retrofit.ErrorHandler errorHandler58 = null;
        restAdapter54.errorHandler = errorHandler58;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.Server server61 = restAdapter60.server;
        retrofit.RequestInterceptor requestInterceptor62 = restAdapter60.requestInterceptor;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter67.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder66.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("hi!");
        retrofit.client.Client.Provider provider76 = builder75.clientProvider;
        restAdapter60.clientProvider = provider76;
        restAdapter54.clientProvider = provider76;
        restAdapter33.clientProvider = provider76;
        retrofit.RestAdapter.Builder builder80 = builder19.setClient(provider76);
        retrofit.converter.Converter converter81 = builder80.converter;
        restAdapter13.converter = converter81;
        retrofit.RequestInterceptor requestInterceptor83 = restAdapter13.requestInterceptor;
        retrofit.Profiler profiler84 = null;
        restAdapter13.profiler = profiler84;
        java.util.concurrent.Executor executor86 = restAdapter13.httpExecutor;
        retrofit.client.Client.Provider provider87 = restAdapter13.clientProvider;
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(provider76);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(converter81);
        org.junit.Assert.assertNull(requestInterceptor83);
        org.junit.Assert.assertNull(executor86);
        org.junit.Assert.assertNull(provider87);
    }

    @Test
    public void test07504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07504");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.Profiler profiler5 = null;
        restAdapter0.profiler = profiler5;
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.ErrorHandler errorHandler11 = null;
        restAdapter7.errorHandler = errorHandler11;
        java.util.concurrent.Executor executor13 = restAdapter7.httpExecutor;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.ErrorHandler errorHandler16 = null;
        restAdapter14.errorHandler = errorHandler16;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.Server server19 = restAdapter18.server;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.logLevel = logLevel33;
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter44.logLevel = logLevel46;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel46);
        restAdapter29.log = log43;
        builder28.log = log43;
        retrofit.Server server51 = null;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter60.logLevel = logLevel62;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel62);
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log43, logLevel62);
        restAdapter18.log = log43;
        restAdapter14.log = log43;
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder72 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter73.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler75 = restAdapter73.new RestHandler();
        retrofit.RestAdapter.Log log76 = restAdapter73.log;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter73.logLevel = logLevel77;
        retrofit.RestAdapter.Builder builder79 = builder72.setLogLevel(logLevel77);
        retrofit.Server server80 = builder72.server;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        builder81.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder84 = builder81.setServer("hi!");
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter85.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler87 = restAdapter85.new RestHandler();
        retrofit.RestAdapter.Log log88 = restAdapter85.log;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter85.logLevel = logLevel89;
        retrofit.RestAdapter.Builder builder91 = builder84.setLogLevel(logLevel89);
        retrofit.client.Client.Provider provider92 = builder91.clientProvider;
        builder72.clientProvider = provider92;
        restAdapter14.clientProvider = provider92;
        restAdapter7.clientProvider = provider92;
        restAdapter0.clientProvider = provider92;
        java.util.concurrent.Executor executor97 = restAdapter0.callbackExecutor;
        retrofit.Server server98 = restAdapter0.server;
        retrofit.client.Client.Provider provider99 = restAdapter0.clientProvider;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(logLevel74);
        org.junit.Assert.assertNull(log76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNull(logLevel86);
        org.junit.Assert.assertNull(log88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(provider92);
        org.junit.Assert.assertNull(executor97);
        org.junit.Assert.assertNull(server98);
        org.junit.Assert.assertNotNull(provider99);
    }

    @Test
    public void test07505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07505");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor4 = restAdapter0.requestInterceptor;
        retrofit.converter.Converter converter5 = null;
        restAdapter0.converter = converter5;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        retrofit.converter.Converter converter8 = null;
        restAdapter0.converter = converter8;
        retrofit.client.Client.Provider provider10 = restAdapter0.clientProvider;
        retrofit.converter.Converter converter11 = null;
        restAdapter0.converter = converter11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        java.util.concurrent.Executor executor24 = builder16.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel25 = builder16.logLevel;
        retrofit.ErrorHandler errorHandler26 = builder16.errorHandler;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider38 = null;
        builder30.clientProvider = provider38;
        retrofit.ErrorHandler errorHandler40 = builder30.errorHandler;
        retrofit.Server server41 = builder30.server;
        java.util.concurrent.Executor executor42 = builder30.httpExecutor;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.client.Client.Provider provider54 = null;
        builder46.clientProvider = provider54;
        retrofit.RequestInterceptor requestInterceptor56 = builder46.requestInterceptor;
        retrofit.RestAdapter restAdapter57 = builder46.build();
        java.util.concurrent.Executor executor58 = restAdapter57.callbackExecutor;
        retrofit.RestAdapter.Builder builder59 = builder16.setExecutors(executor42, executor58);
        restAdapter0.httpExecutor = executor42;
        retrofit.RequestInterceptor requestInterceptor61 = restAdapter0.requestInterceptor;
        retrofit.Server server62 = restAdapter0.server;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(errorHandler26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(restAdapter57);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(requestInterceptor61);
        org.junit.Assert.assertNull(server62);
    }

    @Test
    public void test07506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07506");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log1 = restAdapter0.log;
        java.util.concurrent.Executor executor2 = null;
        restAdapter0.callbackExecutor = executor2;
        retrofit.RestAdapter.Log log4 = restAdapter0.log;
        retrofit.Profiler profiler5 = null;
        restAdapter0.profiler = profiler5;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        retrofit.converter.Converter converter8 = restAdapter0.converter;
        java.util.concurrent.Executor executor9 = null;
        restAdapter0.callbackExecutor = executor9;
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter0.logLevel;
        retrofit.Profiler profiler12 = restAdapter0.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter0.getLogLevel();
        retrofit.Profiler profiler14 = null;
        restAdapter0.profiler = profiler14;
        retrofit.RestAdapter.Log log16 = restAdapter0.log;
        retrofit.Server server17 = restAdapter0.server;
        org.junit.Assert.assertNull(log1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertNull(server17);
    }

    @Test
    public void test07507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07507");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter15.logLevel = logLevel17;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel17);
        restAdapter0.log = log14;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter21.logLevel = logLevel23;
        retrofit.ErrorHandler errorHandler25 = null;
        restAdapter21.errorHandler = errorHandler25;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.Server server28 = restAdapter27.server;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder33 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.RestAdapter.Builder builder40 = builder33.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.client.Client.Provider provider43 = builder42.clientProvider;
        restAdapter27.clientProvider = provider43;
        restAdapter21.clientProvider = provider43;
        restAdapter0.clientProvider = provider43;
        retrofit.client.Client.Provider provider47 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Log log48 = restAdapter0.log;
        retrofit.Server server49 = restAdapter0.server;
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter0.getLogLevel();
        retrofit.ErrorHandler errorHandler51 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder55 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter56.new RestHandler();
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter56.logLevel = logLevel60;
        retrofit.RestAdapter.Builder builder62 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider63 = null;
        builder55.clientProvider = provider63;
        retrofit.Server server65 = null;
        builder55.server = server65;
        retrofit.RequestInterceptor requestInterceptor67 = builder55.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor67;
        retrofit.converter.Converter converter69 = null;
        restAdapter0.converter = converter69;
        retrofit.Server server71 = restAdapter0.server;
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter0.logLevel;
        boolean boolean73 = logLevel72.log();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(provider43);
        org.junit.Assert.assertNotNull(provider47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(errorHandler51);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(requestInterceptor67);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test07508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07508");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.Profiler profiler15 = builder3.profiler;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.ErrorHandler errorHandler18 = null;
        restAdapter16.errorHandler = errorHandler18;
        retrofit.Profiler profiler20 = restAdapter16.profiler;
        retrofit.Profiler profiler21 = null;
        restAdapter16.profiler = profiler21;
        java.util.concurrent.Executor executor23 = restAdapter16.callbackExecutor;
        retrofit.Profiler profiler24 = null;
        restAdapter16.profiler = profiler24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder29 = builder26.setServer("hi!");
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = builder26.httpExecutor;
        restAdapter16.callbackExecutor = executor31;
        builder3.callbackExecutor = executor31;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder37 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter38.new RestHandler();
        retrofit.RestAdapter.Log log41 = restAdapter38.log;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter38.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider45 = null;
        builder37.clientProvider = provider45;
        retrofit.RequestInterceptor requestInterceptor47 = builder37.requestInterceptor;
        retrofit.RestAdapter restAdapter48 = builder37.build();
        java.util.concurrent.Executor executor49 = restAdapter48.callbackExecutor;
        retrofit.converter.Converter converter50 = restAdapter48.converter;
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder55 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter56.new RestHandler();
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter56.logLevel = logLevel60;
        retrofit.RestAdapter.Builder builder62 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider63 = builder62.clientProvider;
        restAdapter48.clientProvider = provider63;
        retrofit.ErrorHandler errorHandler65 = restAdapter48.errorHandler;
        retrofit.RestAdapter.Builder builder66 = builder3.setErrorHandler(errorHandler65);
        retrofit.RestAdapter.Log log67 = builder66.log;
        log67.log("");
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(restAdapter48);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(converter50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log67);
    }

    @Test
    public void test07509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07509");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.Profiler profiler15 = builder3.profiler;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.Log log18 = restAdapter16.log;
        retrofit.ErrorHandler errorHandler19 = restAdapter16.errorHandler;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter16.requestInterceptor;
        retrofit.converter.Converter converter21 = null;
        restAdapter16.converter = converter21;
        retrofit.converter.Converter converter23 = restAdapter16.converter;
        retrofit.converter.Converter converter24 = null;
        restAdapter16.converter = converter24;
        java.util.concurrent.Executor executor26 = restAdapter16.httpExecutor;
        retrofit.RestAdapter.Log log27 = restAdapter16.log;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter28.logLevel = logLevel30;
        retrofit.ErrorHandler errorHandler32 = null;
        restAdapter28.errorHandler = errorHandler32;
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter28.logLevel;
        restAdapter16.logLevel = logLevel34;
        retrofit.RestAdapter.Builder builder36 = builder3.setLogLevel(logLevel34);
        java.util.concurrent.Executor executor37 = builder36.httpExecutor;
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Log log39 = builder36.log;
        retrofit.client.Client.Provider provider40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder41 = builder36.setClient(provider40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNull(requestInterceptor20);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(log39);
    }

    @Test
    public void test07510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07510");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.ErrorHandler errorHandler7 = restAdapter0.errorHandler;
        retrofit.Profiler profiler8 = restAdapter0.profiler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNull(profiler8);
    }

    @Test
    public void test07511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07511");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder19 = builder14.setLogLevel(logLevel18);
        retrofit.Server server20 = null;
        builder14.server = server20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder25 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log29 = restAdapter26.log;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.logLevel = logLevel30;
        retrofit.RestAdapter.Builder builder32 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider33 = null;
        builder25.clientProvider = provider33;
        retrofit.RequestInterceptor requestInterceptor35 = builder25.requestInterceptor;
        retrofit.RestAdapter restAdapter36 = builder25.build();
        retrofit.ErrorHandler errorHandler37 = builder25.errorHandler;
        retrofit.converter.Converter converter38 = builder25.converter;
        retrofit.RestAdapter.Builder builder39 = builder14.setConverter(converter38);
        retrofit.RestAdapter.Log log40 = builder14.log;
        retrofit.RestAdapter.Builder builder41 = builder12.setLog(log40);
        retrofit.Profiler profiler42 = builder12.profiler;
        retrofit.converter.Converter converter43 = null;
        builder12.converter = converter43;
        retrofit.RequestInterceptor requestInterceptor45 = builder12.requestInterceptor;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder49 = builder46.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.Log log53 = restAdapter50.log;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter50.logLevel = logLevel54;
        retrofit.RestAdapter.Builder builder56 = builder49.setLogLevel(logLevel54);
        retrofit.client.Client.Provider provider57 = builder56.clientProvider;
        retrofit.ErrorHandler errorHandler58 = builder56.errorHandler;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter60.new RestHandler();
        retrofit.RestAdapter.Log log63 = restAdapter60.log;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter60.logLevel = logLevel64;
        retrofit.Server server66 = null;
        retrofit.client.Client.Provider provider67 = null;
        java.util.concurrent.Executor executor68 = null;
        java.util.concurrent.Executor executor69 = null;
        retrofit.RequestInterceptor requestInterceptor70 = null;
        retrofit.converter.Converter converter71 = null;
        retrofit.Profiler profiler72 = null;
        retrofit.ErrorHandler errorHandler73 = null;
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter75.logLevel = logLevel77;
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server66, provider67, executor68, executor69, requestInterceptor70, converter71, profiler72, errorHandler73, log74, logLevel77);
        restAdapter60.log = log74;
        builder59.log = log74;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder85 = builder82.setServer("hi!");
        retrofit.RestAdapter restAdapter86 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter86.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler88 = restAdapter86.new RestHandler();
        retrofit.RestAdapter.Log log89 = restAdapter86.log;
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter86.logLevel = logLevel90;
        retrofit.RestAdapter.Builder builder92 = builder85.setLogLevel(logLevel90);
        retrofit.Server server93 = builder85.server;
        builder59.server = server93;
        builder56.server = server93;
        retrofit.ErrorHandler errorHandler96 = builder56.errorHandler;
        retrofit.Server server97 = builder56.server;
        builder12.server = server97;
        builder12.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNull(log63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNull(logLevel76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNull(logLevel87);
        org.junit.Assert.assertNull(log89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertNotNull(errorHandler96);
        org.junit.Assert.assertNotNull(server97);
    }

    @Test
    public void test07512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07512");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.RequestInterceptor requestInterceptor49 = builder39.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = builder0.setRequestInterceptor(requestInterceptor49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider52 = null;
        builder51.clientProvider = provider52;
        retrofit.RestAdapter.Builder builder55 = builder51.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder59 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter60.new RestHandler();
        retrofit.RestAdapter.Log log63 = restAdapter60.log;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter60.logLevel = logLevel64;
        retrofit.RestAdapter.Builder builder66 = builder59.setLogLevel(logLevel64);
        retrofit.client.Client.Provider provider67 = null;
        builder59.clientProvider = provider67;
        retrofit.RequestInterceptor requestInterceptor69 = builder59.requestInterceptor;
        retrofit.RestAdapter restAdapter70 = builder59.build();
        retrofit.ErrorHandler errorHandler71 = builder59.errorHandler;
        retrofit.RestAdapter.Builder builder72 = builder51.setErrorHandler(errorHandler71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder76 = builder73.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter77.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler79 = restAdapter77.new RestHandler();
        retrofit.RestAdapter.Log log80 = restAdapter77.log;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter77.logLevel = logLevel81;
        retrofit.RestAdapter.Builder builder83 = builder76.setLogLevel(logLevel81);
        retrofit.client.Client.Provider provider84 = null;
        builder76.clientProvider = provider84;
        retrofit.RequestInterceptor requestInterceptor86 = builder76.requestInterceptor;
        retrofit.RestAdapter restAdapter87 = builder76.build();
        retrofit.ErrorHandler errorHandler88 = builder76.errorHandler;
        retrofit.converter.Converter converter89 = builder76.converter;
        builder72.converter = converter89;
        retrofit.RestAdapter.Builder builder91 = builder50.setConverter(converter89);
        retrofit.RequestInterceptor requestInterceptor92 = builder50.requestInterceptor;
        retrofit.ErrorHandler errorHandler93 = builder50.errorHandler;
        retrofit.RestAdapter restAdapter94 = builder50.build();
        retrofit.Profiler profiler95 = builder50.profiler;
        retrofit.converter.Converter converter96 = builder50.converter;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNull(log63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(requestInterceptor69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(errorHandler71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(logLevel78);
        org.junit.Assert.assertNull(log80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(requestInterceptor86);
        org.junit.Assert.assertNotNull(restAdapter87);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertNotNull(converter89);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(requestInterceptor92);
        org.junit.Assert.assertNull(errorHandler93);
        org.junit.Assert.assertNotNull(restAdapter94);
        org.junit.Assert.assertNull(profiler95);
        org.junit.Assert.assertNotNull(converter96);
    }

    @Test
    public void test07513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07513");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Server server1 = restAdapter0.server;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        builder2.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder5 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter6.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.Log log9 = restAdapter6.log;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter6.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = builder5.setLogLevel(logLevel10);
        java.util.concurrent.Executor executor13 = builder5.callbackExecutor;
        retrofit.Profiler profiler14 = null;
        builder5.profiler = profiler14;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder23 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.Log log27 = restAdapter24.log;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter24.logLevel = logLevel28;
        retrofit.RestAdapter.Builder builder30 = builder23.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = builder23.callbackExecutor;
        restAdapter16.callbackExecutor = executor31;
        builder5.callbackExecutor = executor31;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder41 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log45 = restAdapter42.log;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter42.logLevel = logLevel46;
        retrofit.RestAdapter.Builder builder48 = builder41.setLogLevel(logLevel46);
        java.util.concurrent.Executor executor49 = builder41.callbackExecutor;
        restAdapter34.callbackExecutor = executor49;
        builder5.httpExecutor = executor49;
        restAdapter0.callbackExecutor = executor49;
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor54 = restAdapter0.callbackExecutor;
        retrofit.converter.Converter converter55 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler57 = null;
        restAdapter0.profiler = profiler57;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(executor13);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNull(converter55);
    }

    @Test
    public void test07514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07514");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.Server server15 = builder7.server;
        builder0.server = server15;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel35);
        restAdapter18.log = log32;
        log32.log("Retrofit-Idle");
        builder0.log = log32;
        retrofit.Profiler profiler42 = null;
        builder0.profiler = profiler42;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test07515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07515");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.client.Client.Provider provider15 = null;
        builder7.clientProvider = provider15;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel34);
        restAdapter17.log = log31;
        retrofit.RestAdapter.Builder builder38 = builder7.setLog(log31);
        log31.log("hi!");
        retrofit.RestAdapter.Builder builder41 = builder3.setLog(log31);
        retrofit.RestAdapter.Log log42 = builder3.log;
        builder3.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler44 = builder3.errorHandler;
        java.lang.Class<?> wildcardClass45 = errorHandler44.getClass();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(errorHandler44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test07516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07516");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter6.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.Log log9 = restAdapter6.log;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter6.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = null;
        builder16.clientProvider = provider24;
        retrofit.ErrorHandler errorHandler26 = builder16.errorHandler;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.Server server38 = builder30.server;
        retrofit.RestAdapter.Builder builder39 = builder16.setServer(server38);
        retrofit.RestAdapter.Log log40 = builder39.log;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.Server server42 = restAdapter41.server;
        retrofit.RequestInterceptor requestInterceptor43 = restAdapter41.requestInterceptor;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder47 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter48.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder54 = builder47.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("hi!");
        retrofit.client.Client.Provider provider57 = builder56.clientProvider;
        restAdapter41.clientProvider = provider57;
        retrofit.RestAdapter.Builder builder59 = builder39.setClient(provider57);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder60.setServer("hi!");
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Builder builder65 = builder39.setServer(server64);
        builder12.server = server64;
        retrofit.RestAdapter.Log log67 = builder12.log;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(errorHandler26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertNull(requestInterceptor43);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log67);
    }

    @Test
    public void test07517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07517");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.Server server3 = restAdapter0.server;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.client.Client.Provider provider15 = builder14.clientProvider;
        retrofit.ErrorHandler errorHandler16 = builder14.errorHandler;
        retrofit.ErrorHandler errorHandler17 = builder14.errorHandler;
        restAdapter0.errorHandler = errorHandler17;
        retrofit.ErrorHandler errorHandler19 = null;
        restAdapter0.errorHandler = errorHandler19;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.Server server22 = restAdapter21.server;
        retrofit.RequestInterceptor requestInterceptor23 = restAdapter21.requestInterceptor;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder31 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.Log log35 = restAdapter32.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter32.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = builder31.setLogLevel(logLevel36);
        java.util.concurrent.Executor executor39 = builder31.callbackExecutor;
        restAdapter24.callbackExecutor = executor39;
        restAdapter21.httpExecutor = executor39;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder45 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter46.new RestHandler();
        retrofit.RestAdapter.Log log49 = restAdapter46.log;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter46.logLevel = logLevel50;
        retrofit.RestAdapter.Builder builder52 = builder45.setLogLevel(logLevel50);
        retrofit.client.Client.Provider provider53 = null;
        builder45.clientProvider = provider53;
        retrofit.RequestInterceptor requestInterceptor55 = builder45.requestInterceptor;
        retrofit.RestAdapter restAdapter56 = builder45.build();
        retrofit.ErrorHandler errorHandler57 = builder45.errorHandler;
        retrofit.ErrorHandler errorHandler58 = builder45.errorHandler;
        retrofit.Profiler profiler59 = null;
        builder45.profiler = profiler59;
        java.util.concurrent.Executor executor61 = builder45.callbackExecutor;
        restAdapter21.httpExecutor = executor61;
        restAdapter0.callbackExecutor = executor61;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNotNull(errorHandler17);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertNull(requestInterceptor23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(restAdapter56);
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNotNull(executor61);
    }

    @Test
    public void test07518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07518");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.Server server14 = builder3.server;
        java.util.concurrent.Executor executor15 = builder3.httpExecutor;
        retrofit.ErrorHandler errorHandler16 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = null;
        builder20.clientProvider = provider28;
        retrofit.RequestInterceptor requestInterceptor30 = builder20.requestInterceptor;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter restAdapter42 = builder34.build();
        retrofit.converter.Converter converter43 = builder34.converter;
        retrofit.RestAdapter.Builder builder44 = builder20.setConverter(converter43);
        retrofit.RestAdapter.Builder builder45 = builder3.setConverter(converter43);
        retrofit.RestAdapter restAdapter46 = builder3.build();
        java.util.concurrent.Executor executor47 = restAdapter46.callbackExecutor;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder51 = builder48.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.Log log55 = restAdapter52.log;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter52.logLevel = logLevel56;
        retrofit.RestAdapter.Builder builder58 = builder51.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.Profiler profiler61 = builder58.profiler;
        retrofit.ErrorHandler errorHandler62 = builder58.errorHandler;
        retrofit.RestAdapter.Log log63 = builder58.log;
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder68 = builder65.setServer("hi!");
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter69.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler71 = restAdapter69.new RestHandler();
        retrofit.RestAdapter.Log log72 = restAdapter69.log;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter69.logLevel = logLevel73;
        retrofit.RestAdapter.Builder builder75 = builder68.setLogLevel(logLevel73);
        retrofit.client.Client.Provider provider76 = builder75.clientProvider;
        retrofit.ErrorHandler errorHandler77 = builder75.errorHandler;
        retrofit.Server server78 = builder75.server;
        retrofit.RestAdapter.Log log79 = builder75.log;
        builder58.log = log79;
        restAdapter46.log = log79;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(converter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertNotNull(errorHandler62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(logLevel70);
        org.junit.Assert.assertNull(log72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(provider76);
        org.junit.Assert.assertNotNull(errorHandler77);
        org.junit.Assert.assertNotNull(server78);
        org.junit.Assert.assertNotNull(log79);
    }

    @Test
    public void test07519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07519");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel54);
        retrofit.RestAdapter.Builder builder58 = builder10.setLog(log35);
        retrofit.Profiler profiler59 = null;
        builder58.profiler = profiler59;
        retrofit.Profiler profiler61 = builder58.profiler;
        retrofit.RestAdapter.Log log62 = builder58.log;
        retrofit.Profiler profiler63 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder64 = builder58.setProfiler(profiler63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertNotNull(log62);
    }

    @Test
    public void test07520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07520");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        builder2.ensureSaneDefaults();
        java.util.concurrent.Executor executor4 = builder2.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor5 = builder2.requestInterceptor;
        java.util.concurrent.Executor executor6 = builder2.httpExecutor;
        builder0.callbackExecutor = executor6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider9 = null;
        builder8.clientProvider = provider9;
        retrofit.RestAdapter.Builder builder12 = builder8.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = null;
        builder16.clientProvider = provider24;
        retrofit.RequestInterceptor requestInterceptor26 = builder16.requestInterceptor;
        retrofit.RestAdapter restAdapter27 = builder16.build();
        retrofit.ErrorHandler errorHandler28 = builder16.errorHandler;
        retrofit.RestAdapter.Builder builder29 = builder8.setErrorHandler(errorHandler28);
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.Log log32 = restAdapter30.log;
        java.util.concurrent.Executor executor33 = restAdapter30.httpExecutor;
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter43.logLevel = logLevel45;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel45);
        restAdapter30.log = log42;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder52 = builder49.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder54 = builder49.setLogLevel(logLevel53);
        restAdapter30.logLevel = logLevel53;
        retrofit.RestAdapter.Builder builder56 = builder29.setLogLevel(logLevel53);
        retrofit.RequestInterceptor requestInterceptor57 = builder56.requestInterceptor;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder61 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter62.new RestHandler();
        retrofit.RestAdapter.Log log65 = restAdapter62.log;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter62.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder68 = builder61.setLogLevel(logLevel66);
        retrofit.client.Client.Provider provider69 = null;
        builder61.clientProvider = provider69;
        retrofit.Server server71 = null;
        builder61.server = server71;
        retrofit.RequestInterceptor requestInterceptor73 = builder61.requestInterceptor;
        builder56.requestInterceptor = requestInterceptor73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.client.Client.Provider provider86 = null;
        builder78.clientProvider = provider86;
        retrofit.RequestInterceptor requestInterceptor88 = builder78.requestInterceptor;
        retrofit.RestAdapter restAdapter89 = builder78.build();
        java.util.concurrent.Executor executor90 = restAdapter89.callbackExecutor;
        retrofit.converter.Converter converter91 = restAdapter89.converter;
        retrofit.RestAdapter.Builder builder92 = builder56.setConverter(converter91);
        builder56.ensureSaneDefaults();
        retrofit.converter.Converter converter94 = builder56.converter;
        retrofit.RestAdapter.Builder builder95 = builder0.setConverter(converter94);
        retrofit.Profiler profiler96 = builder95.profiler;
        org.junit.Assert.assertNotNull(executor4);
        org.junit.Assert.assertNotNull(requestInterceptor5);
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(restAdapter27);
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(requestInterceptor88);
        org.junit.Assert.assertNotNull(restAdapter89);
        org.junit.Assert.assertNotNull(executor90);
        org.junit.Assert.assertNotNull(converter91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(converter94);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNull(profiler96);
    }

    @Test
    public void test07521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07521");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        java.util.concurrent.Executor executor27 = builder26.httpExecutor;
        retrofit.converter.Converter converter28 = builder26.converter;
        retrofit.RestAdapter.LogLevel logLevel29 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder33 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.RestAdapter.Builder builder40 = builder33.setLogLevel(logLevel38);
        retrofit.client.Client.Provider provider41 = builder40.clientProvider;
        retrofit.ErrorHandler errorHandler42 = builder40.errorHandler;
        retrofit.Server server43 = builder40.server;
        retrofit.RestAdapter.Log log44 = builder40.log;
        builder26.log = log44;
        java.util.concurrent.Executor executor46 = builder26.callbackExecutor;
        retrofit.Profiler profiler47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder26.setProfiler(profiler47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNotNull(converter28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(provider41);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(executor46);
    }

    @Test
    public void test07522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07522");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor28 = builder27.callbackExecutor;
        retrofit.Profiler profiler29 = null;
        builder27.profiler = profiler29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        retrofit.Server server42 = builder34.server;
        builder27.server = server42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.Log log48 = restAdapter45.log;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter45.logLevel = logLevel49;
        retrofit.Server server51 = null;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter60.logLevel = logLevel62;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel62);
        restAdapter45.log = log59;
        builder44.log = log59;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.Log log74 = restAdapter71.log;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter71.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = builder70.setLogLevel(logLevel75);
        retrofit.Server server78 = builder70.server;
        builder44.server = server78;
        builder27.server = server78;
        retrofit.RestAdapter.Builder builder81 = builder24.setServer(server78);
        retrofit.RestAdapter.Builder builder82 = builder3.setServer(server78);
        retrofit.RestAdapter restAdapter83 = builder82.build();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter83.getLogLevel();
        retrofit.client.Client.Provider provider85 = restAdapter83.clientProvider;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(server78);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(restAdapter83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider85);
    }

    @Test
    public void test07523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07523");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.Profiler profiler15 = builder3.profiler;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.Log log18 = restAdapter16.log;
        retrofit.ErrorHandler errorHandler19 = restAdapter16.errorHandler;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter16.requestInterceptor;
        retrofit.converter.Converter converter21 = null;
        restAdapter16.converter = converter21;
        retrofit.converter.Converter converter23 = restAdapter16.converter;
        retrofit.converter.Converter converter24 = null;
        restAdapter16.converter = converter24;
        java.util.concurrent.Executor executor26 = restAdapter16.httpExecutor;
        retrofit.RestAdapter.Log log27 = restAdapter16.log;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter28.logLevel = logLevel30;
        retrofit.ErrorHandler errorHandler32 = null;
        restAdapter28.errorHandler = errorHandler32;
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter28.logLevel;
        restAdapter16.logLevel = logLevel34;
        retrofit.RestAdapter.Builder builder36 = builder3.setLogLevel(logLevel34);
        java.util.concurrent.Executor executor37 = builder36.httpExecutor;
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter39.logLevel = logLevel41;
        retrofit.client.Client.Provider provider43 = restAdapter39.clientProvider;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder47 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter48.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder54 = builder47.setLogLevel(logLevel52);
        java.util.concurrent.Executor executor55 = builder47.callbackExecutor;
        retrofit.Profiler profiler56 = null;
        builder47.profiler = profiler56;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder65 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter66.log;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter66.logLevel = logLevel70;
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel70);
        java.util.concurrent.Executor executor73 = builder65.callbackExecutor;
        restAdapter58.callbackExecutor = executor73;
        builder47.callbackExecutor = executor73;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter76.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        builder80.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder83 = builder80.setServer("hi!");
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel85 = restAdapter84.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler86 = restAdapter84.new RestHandler();
        retrofit.RestAdapter.Log log87 = restAdapter84.log;
        retrofit.RestAdapter.LogLevel logLevel88 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter84.logLevel = logLevel88;
        retrofit.RestAdapter.Builder builder90 = builder83.setLogLevel(logLevel88);
        java.util.concurrent.Executor executor91 = builder83.callbackExecutor;
        restAdapter76.callbackExecutor = executor91;
        builder47.httpExecutor = executor91;
        java.util.concurrent.Executor executor94 = builder47.callbackExecutor;
        restAdapter39.callbackExecutor = executor94;
        builder36.httpExecutor = executor94;
        retrofit.RestAdapter.LogLevel logLevel97 = builder36.logLevel;
        boolean boolean98 = logLevel97.log();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNull(requestInterceptor20);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNull(logLevel77);
        org.junit.Assert.assertNull(logLevel79);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNull(logLevel85);
        org.junit.Assert.assertNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(executor91);
        org.junit.Assert.assertNotNull(executor94);
        org.junit.Assert.assertTrue("'" + logLevel97 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel97.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test07524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07524");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter9.logLevel = logLevel11;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel11);
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter13.new RestHandler();
        retrofit.converter.Converter converter15 = restAdapter13.converter;
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter13.requestInterceptor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = builder27.clientProvider;
        restAdapter13.clientProvider = provider28;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter13.logLevel;
        java.util.concurrent.Executor executor31 = restAdapter13.callbackExecutor;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder35 = builder32.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter36.new RestHandler();
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter36.logLevel = logLevel40;
        retrofit.RestAdapter.Builder builder42 = builder35.setLogLevel(logLevel40);
        retrofit.client.Client.Provider provider43 = null;
        builder35.clientProvider = provider43;
        retrofit.ErrorHandler errorHandler45 = builder35.errorHandler;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder49 = builder46.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.Log log53 = restAdapter50.log;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter50.logLevel = logLevel54;
        retrofit.RestAdapter.Builder builder56 = builder49.setLogLevel(logLevel54);
        retrofit.Server server57 = builder49.server;
        retrofit.RestAdapter.Builder builder58 = builder35.setServer(server57);
        retrofit.converter.Converter converter59 = builder58.converter;
        java.util.concurrent.Executor executor60 = builder58.callbackExecutor;
        restAdapter13.callbackExecutor = executor60;
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter13.getLogLevel();
        retrofit.Server server64 = restAdapter13.server;
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(provider28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(errorHandler45);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(converter59);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server64);
    }

    @Test
    public void test07525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07525");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        java.util.concurrent.Executor executor12 = builder10.callbackExecutor;
        retrofit.ErrorHandler errorHandler13 = builder10.errorHandler;
        java.util.concurrent.Executor executor14 = builder10.callbackExecutor;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("hi!");
        retrofit.client.Client.Provider provider28 = builder27.clientProvider;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder34 = builder29.setLogLevel(logLevel33);
        retrofit.Server server35 = null;
        builder29.server = server35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder47 = builder40.setLogLevel(logLevel45);
        retrofit.client.Client.Provider provider48 = null;
        builder40.clientProvider = provider48;
        retrofit.RequestInterceptor requestInterceptor50 = builder40.requestInterceptor;
        retrofit.RestAdapter restAdapter51 = builder40.build();
        retrofit.ErrorHandler errorHandler52 = builder40.errorHandler;
        retrofit.converter.Converter converter53 = builder40.converter;
        retrofit.RestAdapter.Builder builder54 = builder29.setConverter(converter53);
        retrofit.RestAdapter.Log log55 = builder29.log;
        retrofit.RestAdapter.Builder builder56 = builder27.setLog(log55);
        retrofit.RestAdapter.Log log57 = builder56.log;
        builder56.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor59 = builder56.requestInterceptor;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder60.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder65 = builder60.setLogLevel(logLevel64);
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter66.log;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter66.logLevel = logLevel70;
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel70);
        retrofit.converter.Converter converter73 = builder65.converter;
        builder56.converter = converter73;
        retrofit.RestAdapter.Builder builder75 = builder10.setConverter(converter73);
        builder10.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(provider28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNotNull(converter53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(converter73);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test07526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07526");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel7 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder9 = builder4.setServer("hi!");
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter11.logLevel = logLevel13;
        retrofit.ErrorHandler errorHandler15 = null;
        restAdapter11.errorHandler = errorHandler15;
        retrofit.RequestInterceptor requestInterceptor17 = restAdapter11.requestInterceptor;
        retrofit.Profiler profiler18 = restAdapter11.profiler;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        restAdapter19.server = server34;
        restAdapter11.server = server34;
        java.util.concurrent.Executor executor37 = restAdapter11.callbackExecutor;
        retrofit.RestAdapter.Log log38 = restAdapter11.log;
        retrofit.RequestInterceptor requestInterceptor39 = restAdapter11.requestInterceptor;
        retrofit.Server server40 = restAdapter11.server;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder44 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.Log log48 = restAdapter45.log;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter45.logLevel = logLevel49;
        retrofit.RestAdapter.Builder builder51 = builder44.setLogLevel(logLevel49);
        retrofit.client.Client.Provider provider52 = null;
        builder44.clientProvider = provider52;
        retrofit.RequestInterceptor requestInterceptor54 = builder44.requestInterceptor;
        retrofit.RestAdapter restAdapter55 = builder44.build();
        retrofit.ErrorHandler errorHandler56 = builder44.errorHandler;
        retrofit.converter.Converter converter57 = builder44.converter;
        java.util.concurrent.Executor executor58 = builder44.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor59 = builder44.requestInterceptor;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter60.logLevel = logLevel62;
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter60.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter60.getLogLevel();
        builder44.logLevel = logLevel65;
        java.util.concurrent.Executor executor67 = builder44.callbackExecutor;
        restAdapter11.callbackExecutor = executor67;
        builder4.httpExecutor = executor67;
        retrofit.Profiler profiler70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder4.setProfiler(profiler70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor17);
        org.junit.Assert.assertNull(profiler18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(errorHandler56);
        org.junit.Assert.assertNotNull(converter57);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor67);
    }

    @Test
    public void test07527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07527");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        java.util.concurrent.Executor executor6 = restAdapter0.callbackExecutor;
        retrofit.Profiler profiler7 = null;
        restAdapter0.profiler = profiler7;
        retrofit.Profiler profiler9 = null;
        restAdapter0.profiler = profiler9;
        retrofit.ErrorHandler errorHandler11 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder17 = builder12.setLogLevel(logLevel16);
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter42.logLevel = logLevel44;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel44);
        restAdapter27.log = log41;
        builder26.log = log41;
        retrofit.Server server49 = null;
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter58.logLevel = logLevel60;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log57, logLevel60);
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log41, logLevel60);
        retrofit.RestAdapter.Builder builder64 = builder12.setLog(log41);
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.FULL;
        builder64.logLevel = logLevel65;
        retrofit.RestAdapter restAdapter67 = builder64.build();
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        builder68.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler70 = builder68.errorHandler;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        java.util.concurrent.Executor executor73 = builder71.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor74 = builder71.requestInterceptor;
        retrofit.RestAdapter.Builder builder75 = builder68.setRequestInterceptor(requestInterceptor74);
        builder64.requestInterceptor = requestInterceptor74;
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter();
        retrofit.Profiler profiler78 = restAdapter77.profiler;
        retrofit.Profiler profiler79 = restAdapter77.profiler;
        retrofit.RequestInterceptor requestInterceptor80 = restAdapter77.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean82 = logLevel81.log();
        restAdapter77.logLevel = logLevel81;
        builder64.logLevel = logLevel81;
        retrofit.client.Client.Provider provider85 = builder64.clientProvider;
        retrofit.RestAdapter.Log log86 = builder64.log;
        java.util.concurrent.Executor executor87 = builder64.httpExecutor;
        restAdapter0.callbackExecutor = executor87;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(restAdapter67);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(requestInterceptor74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(profiler78);
        org.junit.Assert.assertNull(profiler79);
        org.junit.Assert.assertNull(requestInterceptor80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(provider85);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(executor87);
    }

    @Test
    public void test07528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07528");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        restAdapter0.requestInterceptor = requestInterceptor4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.logLevel;
        retrofit.RestAdapter.Log log8 = restAdapter0.log;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.converter.Converter converter15 = restAdapter9.converter;
        java.util.concurrent.Executor executor16 = restAdapter9.callbackExecutor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = null;
        builder20.clientProvider = provider28;
        retrofit.RequestInterceptor requestInterceptor30 = builder20.requestInterceptor;
        retrofit.RestAdapter restAdapter31 = builder20.build();
        java.util.concurrent.Executor executor32 = restAdapter31.callbackExecutor;
        retrofit.converter.Converter converter33 = restAdapter31.converter;
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter31.logLevel;
        restAdapter9.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        java.util.concurrent.Executor executor41 = builder37.callbackExecutor;
        retrofit.converter.Converter converter42 = builder37.converter;
        restAdapter9.converter = converter42;
        restAdapter0.converter = converter42;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(converter42);
    }

    @Test
    public void test07529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07529");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter9.logLevel = logLevel11;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel11);
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter13.new RestHandler();
        retrofit.converter.Converter converter15 = restAdapter13.converter;
        retrofit.Profiler profiler16 = restAdapter13.profiler;
        java.util.concurrent.Executor executor17 = restAdapter13.callbackExecutor;
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNull(executor17);
    }

    @Test
    public void test07530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07530");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.converter.Converter converter7 = null;
        restAdapter0.converter = converter7;
        retrofit.converter.Converter converter9 = restAdapter0.converter;
        retrofit.Profiler profiler10 = null;
        restAdapter0.profiler = profiler10;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor13 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(executor13);
    }

    @Test
    public void test07531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07531");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder9 = builder4.setLogLevel(logLevel8);
        retrofit.converter.Converter converter10 = null;
        builder4.converter = converter10;
        java.util.concurrent.Executor executor12 = builder4.callbackExecutor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder18 = builder13.setLogLevel(logLevel17);
        retrofit.converter.Converter converter19 = null;
        builder13.converter = converter19;
        java.util.concurrent.Executor executor21 = builder13.callbackExecutor;
        retrofit.RestAdapter.Builder builder22 = builder3.setExecutors(executor12, executor21);
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter24.logLevel = logLevel26;
        retrofit.ErrorHandler errorHandler28 = null;
        restAdapter24.errorHandler = errorHandler28;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.Server server31 = restAdapter30.server;
        retrofit.RequestInterceptor requestInterceptor32 = restAdapter30.requestInterceptor;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder36 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter37.log;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter37.logLevel = logLevel41;
        retrofit.RestAdapter.Builder builder43 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.client.Client.Provider provider46 = builder45.clientProvider;
        restAdapter30.clientProvider = provider46;
        restAdapter24.clientProvider = provider46;
        retrofit.RestAdapter.Log log49 = restAdapter24.log;
        java.util.concurrent.Executor executor50 = restAdapter24.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter24.new RestHandler();
        retrofit.Profiler profiler52 = restAdapter24.profiler;
        retrofit.Profiler profiler53 = null;
        restAdapter24.profiler = profiler53;
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter24.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder22.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder22.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder60 = builder22.setConverter(converter59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(provider46);
        org.junit.Assert.assertNull(log49);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test07532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07532");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.Server server14 = restAdapter13.server;
        retrofit.RequestInterceptor requestInterceptor15 = restAdapter13.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter13.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.converter.Converter converter21 = builder18.converter;
        builder18.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(requestInterceptor15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(converter21);
    }

    @Test
    public void test07533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07533");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider7 = null;
        builder6.clientProvider = provider7;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.Server server10 = restAdapter9.server;
        retrofit.RequestInterceptor requestInterceptor11 = restAdapter9.requestInterceptor;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.client.Client.Provider provider25 = builder24.clientProvider;
        restAdapter9.clientProvider = provider25;
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter9.new RestHandler();
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.ErrorHandler errorHandler30 = null;
        restAdapter28.errorHandler = errorHandler30;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.Server server33 = restAdapter32.server;
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.Server server49 = null;
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter58.logLevel = logLevel60;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log57, logLevel60);
        restAdapter43.log = log57;
        builder42.log = log57;
        retrofit.Server server65 = null;
        retrofit.client.Client.Provider provider66 = null;
        java.util.concurrent.Executor executor67 = null;
        java.util.concurrent.Executor executor68 = null;
        retrofit.RequestInterceptor requestInterceptor69 = null;
        retrofit.converter.Converter converter70 = null;
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter74.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter74.logLevel = logLevel76;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server65, provider66, executor67, executor68, requestInterceptor69, converter70, profiler71, errorHandler72, log73, logLevel76);
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log57, logLevel76);
        restAdapter32.log = log57;
        restAdapter28.log = log57;
        restAdapter9.log = log57;
        retrofit.RestAdapter.Builder builder83 = builder6.setLog(log57);
        restAdapter0.log = log57;
        retrofit.converter.Converter converter85 = null;
        restAdapter0.converter = converter85;
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter0.getLogLevel();
        java.util.concurrent.Executor executor88 = restAdapter0.callbackExecutor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertNull(requestInterceptor11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(provider25);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNull(logLevel75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor88);
    }

    @Test
    public void test07534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07534");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter14.logLevel = logLevel16;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        restAdapter14.requestInterceptor = requestInterceptor18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.Server server54 = builder46.server;
        builder20.server = server54;
        restAdapter14.server = server54;
        retrofit.RestAdapter.Builder builder57 = builder12.setServer(server54);
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.Profiler profiler59 = restAdapter58.profiler;
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.converter.Converter converter61 = restAdapter58.converter;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder12.setLogLevel(logLevel62);
        retrofit.RestAdapter restAdapter65 = builder12.build();
        retrofit.RestAdapter.Log log66 = restAdapter65.log;
        log66.log("");
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(profiler59);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(log66);
    }

    @Test
    public void test07535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07535");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Server server1 = restAdapter0.server;
        retrofit.RequestInterceptor requestInterceptor2 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter restAdapter3 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter3.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter3.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter3.getLogLevel();
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter11.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel15);
        java.util.concurrent.Executor executor18 = builder10.callbackExecutor;
        restAdapter3.callbackExecutor = executor18;
        restAdapter0.httpExecutor = executor18;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.client.Client.Provider provider32 = null;
        builder24.clientProvider = provider32;
        retrofit.ErrorHandler errorHandler34 = builder24.errorHandler;
        retrofit.Server server35 = builder24.server;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.Server server47 = builder39.server;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.Log log50 = restAdapter48.log;
        java.util.concurrent.Executor executor51 = restAdapter48.httpExecutor;
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter61.logLevel = logLevel63;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel63);
        restAdapter48.log = log60;
        builder39.log = log60;
        retrofit.RestAdapter.Builder builder68 = builder24.setLog(log60);
        retrofit.converter.Converter converter69 = builder68.converter;
        restAdapter0.converter = converter69;
        retrofit.Profiler profiler71 = null;
        restAdapter0.profiler = profiler71;
        retrofit.client.Response response74 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response76 = restAdapter0.logAndReplaceResponse("hi!", response74, (long) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor2);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(converter69);
    }

    @Test
    public void test07536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07536");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = null;
        builder17.clientProvider = provider25;
        retrofit.RequestInterceptor requestInterceptor27 = builder17.requestInterceptor;
        retrofit.RestAdapter.Builder builder28 = builder3.setRequestInterceptor(requestInterceptor27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = builder29.callbackExecutor;
        retrofit.Profiler profiler31 = null;
        builder29.profiler = profiler31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder36 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter37.log;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter37.logLevel = logLevel41;
        retrofit.RestAdapter.Builder builder43 = builder36.setLogLevel(logLevel41);
        retrofit.Server server44 = builder36.server;
        builder29.server = server44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter48.getLogLevel();
        java.util.concurrent.Executor executor52 = restAdapter48.callbackExecutor;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Log log60 = restAdapter57.log;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter57.logLevel = logLevel61;
        retrofit.RestAdapter.Builder builder63 = builder56.setLogLevel(logLevel61);
        retrofit.client.Client.Provider provider64 = null;
        builder56.clientProvider = provider64;
        retrofit.RequestInterceptor requestInterceptor66 = builder56.requestInterceptor;
        retrofit.RestAdapter restAdapter67 = builder56.build();
        retrofit.ErrorHandler errorHandler68 = builder56.errorHandler;
        retrofit.converter.Converter converter69 = builder56.converter;
        restAdapter48.converter = converter69;
        builder46.converter = converter69;
        retrofit.RestAdapter.Builder builder72 = builder29.setConverter(converter69);
        builder28.converter = converter69;
        retrofit.converter.Converter converter74 = builder28.converter;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(restAdapter67);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(converter69);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(converter74);
    }

    @Test
    public void test07537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07537");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        restAdapter0.requestInterceptor = requestInterceptor4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter22.logLevel = logLevel24;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel24);
        restAdapter7.log = log21;
        builder6.log = log21;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.Server server40 = builder32.server;
        builder6.server = server40;
        restAdapter0.server = server40;
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter0.getLogLevel();
        retrofit.client.Client.Provider provider44 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Log log45 = restAdapter0.log;
        java.util.concurrent.Executor executor46 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor47 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNull(executor47);
    }

    @Test
    public void test07538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07538");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder9 = builder4.setLogLevel(logLevel8);
        retrofit.converter.Converter converter10 = null;
        builder4.converter = converter10;
        java.util.concurrent.Executor executor12 = builder4.callbackExecutor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder18 = builder13.setLogLevel(logLevel17);
        retrofit.converter.Converter converter19 = null;
        builder13.converter = converter19;
        java.util.concurrent.Executor executor21 = builder13.callbackExecutor;
        retrofit.RestAdapter.Builder builder22 = builder3.setExecutors(executor12, executor21);
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter24.logLevel = logLevel26;
        retrofit.ErrorHandler errorHandler28 = null;
        restAdapter24.errorHandler = errorHandler28;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.Server server31 = restAdapter30.server;
        retrofit.RequestInterceptor requestInterceptor32 = restAdapter30.requestInterceptor;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder36 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter37.log;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter37.logLevel = logLevel41;
        retrofit.RestAdapter.Builder builder43 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.client.Client.Provider provider46 = builder45.clientProvider;
        restAdapter30.clientProvider = provider46;
        restAdapter24.clientProvider = provider46;
        retrofit.RestAdapter.Log log49 = restAdapter24.log;
        java.util.concurrent.Executor executor50 = restAdapter24.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter24.new RestHandler();
        retrofit.Profiler profiler52 = restAdapter24.profiler;
        retrofit.Profiler profiler53 = null;
        restAdapter24.profiler = profiler53;
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter24.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder22.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder22.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter59 = builder22.build();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(provider46);
        org.junit.Assert.assertNull(log49);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
    }

    @Test
    public void test07539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07539");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = null;
        builder17.clientProvider = provider25;
        retrofit.ErrorHandler errorHandler27 = builder17.errorHandler;
        retrofit.Server server28 = builder17.server;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider40 = builder39.clientProvider;
        retrofit.RestAdapter.Builder builder41 = builder17.setClient(provider40);
        builder3.clientProvider = provider40;
        retrofit.ErrorHandler errorHandler43 = builder3.errorHandler;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log45 = restAdapter44.log;
        retrofit.Profiler profiler46 = restAdapter44.profiler;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.FULL;
        boolean boolean48 = logLevel47.log();
        restAdapter44.logLevel = logLevel47;
        builder3.logLevel = logLevel47;
        retrofit.RestAdapter restAdapter51 = builder3.build();
        retrofit.client.Client.Provider provider52 = restAdapter51.clientProvider;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertNull(profiler46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertNotNull(provider52);
    }

    @Test
    public void test07540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07540");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        java.util.concurrent.Executor executor15 = restAdapter14.callbackExecutor;
        retrofit.converter.Converter converter16 = restAdapter14.converter;
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.Profiler profiler18 = null;
        restAdapter14.profiler = profiler18;
        retrofit.Profiler profiler20 = restAdapter14.profiler;
        retrofit.ErrorHandler errorHandler21 = restAdapter14.errorHandler;
        retrofit.RequestInterceptor requestInterceptor22 = restAdapter14.requestInterceptor;
        java.util.concurrent.Executor executor23 = restAdapter14.callbackExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(converter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNotNull(executor23);
    }

    @Test
    public void test07541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07541");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.Server server36 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        builder0.logLevel = logLevel37;
        retrofit.converter.Converter converter39 = builder0.converter;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        retrofit.RestAdapter.Log log52 = restAdapter49.log;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter49.logLevel = logLevel53;
        retrofit.Server server55 = null;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter64.logLevel = logLevel66;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log63, logLevel66);
        restAdapter49.log = log63;
        builder48.log = log63;
        retrofit.Server server71 = null;
        retrofit.client.Client.Provider provider72 = null;
        java.util.concurrent.Executor executor73 = null;
        java.util.concurrent.Executor executor74 = null;
        retrofit.RequestInterceptor requestInterceptor75 = null;
        retrofit.converter.Converter converter76 = null;
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter80.logLevel = logLevel82;
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server71, provider72, executor73, executor74, requestInterceptor75, converter76, profiler77, errorHandler78, log79, logLevel82);
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log63, logLevel82);
        boolean boolean86 = logLevel82.log();
        boolean boolean87 = logLevel82.log();
        retrofit.RestAdapter.Builder builder88 = builder0.setLogLevel(logLevel82);
        retrofit.Profiler profiler89 = null;
        builder0.profiler = profiler89;
        retrofit.ErrorHandler errorHandler91 = builder0.errorHandler;
        retrofit.client.Client.Provider provider92 = builder0.clientProvider;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNull(logLevel81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(errorHandler91);
        org.junit.Assert.assertNull(provider92);
    }

    @Test
    public void test07542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07542");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter24.logLevel = logLevel26;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel26);
        restAdapter9.log = log23;
        builder8.log = log23;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel42);
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log23, logLevel42);
        retrofit.RestAdapter.Log log46 = restAdapter45.log;
        retrofit.converter.Converter converter47 = restAdapter45.converter;
        retrofit.client.Client.Provider provider48 = restAdapter45.clientProvider;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.Log log53 = restAdapter50.log;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter50.logLevel = logLevel54;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel67);
        restAdapter50.log = log64;
        builder49.log = log64;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder75 = builder72.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter76.new RestHandler();
        retrofit.RestAdapter.Log log79 = restAdapter76.log;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter76.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = builder75.setLogLevel(logLevel80);
        retrofit.Server server83 = builder75.server;
        builder49.server = server83;
        retrofit.Server server85 = builder49.server;
        restAdapter45.server = server85;
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter45.getLogLevel();
        retrofit.Server server89 = restAdapter45.server;
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNull(converter47);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(logLevel77);
        org.junit.Assert.assertNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(server83);
        org.junit.Assert.assertNotNull(server85);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(server89);
    }

    @Test
    public void test07543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07543");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.Server server4 = builder3.server;
        retrofit.RestAdapter.Builder builder6 = builder3.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter11.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider18 = null;
        builder10.clientProvider = provider18;
        retrofit.ErrorHandler errorHandler20 = builder10.errorHandler;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.Server server32 = builder24.server;
        retrofit.RestAdapter.Builder builder33 = builder10.setServer(server32);
        retrofit.RestAdapter.Log log34 = builder33.log;
        log34.log("hi!");
        builder6.log = log34;
        retrofit.RestAdapter restAdapter38 = builder6.build();
        retrofit.client.Client client39 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder40 = builder6.setClient(client39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(restAdapter38);
    }

    @Test
    public void test07544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07544");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder33 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.RestAdapter.Builder builder40 = builder33.setLogLevel(logLevel38);
        java.util.concurrent.Executor executor41 = builder33.callbackExecutor;
        restAdapter26.callbackExecutor = executor41;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder50 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        retrofit.RestAdapter.Log log54 = restAdapter51.log;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter51.logLevel = logLevel55;
        retrofit.RestAdapter.Builder builder57 = builder50.setLogLevel(logLevel55);
        java.util.concurrent.Executor executor58 = builder50.callbackExecutor;
        restAdapter43.callbackExecutor = executor58;
        retrofit.RestAdapter.Builder builder60 = builder25.setExecutors(executor41, executor58);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.Log log68 = restAdapter65.log;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter65.logLevel = logLevel69;
        retrofit.RestAdapter.Builder builder71 = builder64.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider72 = null;
        builder64.clientProvider = provider72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder77 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter78.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler80 = restAdapter78.new RestHandler();
        retrofit.RestAdapter.Log log81 = restAdapter78.log;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter78.logLevel = logLevel82;
        retrofit.RestAdapter.Builder builder84 = builder77.setLogLevel(logLevel82);
        retrofit.client.Client.Provider provider85 = null;
        builder77.clientProvider = provider85;
        retrofit.ErrorHandler errorHandler87 = builder77.errorHandler;
        retrofit.RestAdapter.Builder builder88 = builder64.setErrorHandler(errorHandler87);
        retrofit.RestAdapter.Builder builder89 = builder25.setErrorHandler(errorHandler87);
        retrofit.RestAdapter.Builder builder90 = builder10.setErrorHandler(errorHandler87);
        retrofit.RestAdapter.LogLevel logLevel91 = builder10.logLevel;
        retrofit.converter.Converter converter92 = builder10.converter;
        retrofit.RestAdapter.LogLevel logLevel93 = builder10.logLevel;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(logLevel79);
        org.junit.Assert.assertNull(log81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter92);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07545");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.Server server3 = restAdapter0.server;
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.ErrorHandler errorHandler6 = null;
        restAdapter4.errorHandler = errorHandler6;
        retrofit.Profiler profiler8 = restAdapter4.profiler;
        retrofit.Profiler profiler9 = null;
        restAdapter4.profiler = profiler9;
        java.util.concurrent.Executor executor11 = restAdapter4.callbackExecutor;
        retrofit.RestAdapter.Log log12 = restAdapter4.log;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = null;
        builder16.clientProvider = provider24;
        retrofit.RequestInterceptor requestInterceptor26 = builder16.requestInterceptor;
        retrofit.RestAdapter restAdapter27 = builder16.build();
        java.util.concurrent.Executor executor28 = restAdapter27.callbackExecutor;
        retrofit.converter.Converter converter29 = restAdapter27.converter;
        restAdapter4.converter = converter29;
        restAdapter0.converter = converter29;
        retrofit.ErrorHandler errorHandler32 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(profiler8);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(restAdapter27);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(converter29);
        org.junit.Assert.assertNull(errorHandler32);
    }

    @Test
    public void test07546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07546");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.RestAdapter.Log log27 = builder26.log;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.Server server29 = restAdapter28.server;
        retrofit.RequestInterceptor requestInterceptor30 = restAdapter28.requestInterceptor;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.client.Client.Provider provider44 = builder43.clientProvider;
        restAdapter28.clientProvider = provider44;
        retrofit.RestAdapter.Builder builder46 = builder26.setClient(provider44);
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.ErrorHandler errorHandler48 = builder46.errorHandler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(errorHandler48);
    }

    @Test
    public void test07547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07547");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.client.Client.Provider provider4 = restAdapter0.clientProvider;
        retrofit.client.Client.Provider provider5 = null;
        restAdapter0.clientProvider = provider5;
        retrofit.ErrorHandler errorHandler7 = restAdapter0.errorHandler;
        retrofit.Server server8 = restAdapter0.server;
        retrofit.Profiler profiler9 = restAdapter0.profiler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(profiler9);
    }

    @Test
    public void test07548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07548");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log1 = restAdapter0.log;
        java.util.concurrent.Executor executor2 = null;
        restAdapter0.callbackExecutor = executor2;
        retrofit.RestAdapter.Log log4 = restAdapter0.log;
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log6 = restAdapter5.log;
        java.util.concurrent.Executor executor7 = null;
        restAdapter5.callbackExecutor = executor7;
        retrofit.RestAdapter.Log log9 = restAdapter5.log;
        retrofit.Server server10 = restAdapter5.server;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder14 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter15.new RestHandler();
        retrofit.RestAdapter.Log log18 = restAdapter15.log;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter15.logLevel = logLevel19;
        retrofit.RestAdapter.Builder builder21 = builder14.setLogLevel(logLevel19);
        retrofit.client.Client.Provider provider22 = null;
        builder14.clientProvider = provider22;
        retrofit.RequestInterceptor requestInterceptor24 = builder14.requestInterceptor;
        retrofit.RestAdapter restAdapter25 = builder14.build();
        retrofit.Profiler profiler26 = builder14.profiler;
        retrofit.ErrorHandler errorHandler27 = builder14.errorHandler;
        restAdapter5.errorHandler = errorHandler27;
        restAdapter0.errorHandler = errorHandler27;
        retrofit.ErrorHandler errorHandler30 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor31 = restAdapter0.requestInterceptor;
        java.util.concurrent.Executor executor32 = restAdapter0.httpExecutor;
        retrofit.ErrorHandler errorHandler33 = restAdapter0.errorHandler;
        retrofit.ErrorHandler errorHandler34 = restAdapter0.errorHandler;
        org.junit.Assert.assertNull(log1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(log6);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNull(requestInterceptor31);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(errorHandler34);
    }

    @Test
    public void test07549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07549");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = builder15.clientProvider;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = null;
        builder20.clientProvider = provider28;
        retrofit.ErrorHandler errorHandler30 = builder20.errorHandler;
        retrofit.Server server31 = builder20.server;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder35 = builder32.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter36.new RestHandler();
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter36.logLevel = logLevel40;
        retrofit.RestAdapter.Builder builder42 = builder35.setLogLevel(logLevel40);
        retrofit.Server server43 = builder35.server;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.Log log46 = restAdapter44.log;
        java.util.concurrent.Executor executor47 = restAdapter44.httpExecutor;
        retrofit.Server server48 = null;
        retrofit.client.Client.Provider provider49 = null;
        java.util.concurrent.Executor executor50 = null;
        java.util.concurrent.Executor executor51 = null;
        retrofit.RequestInterceptor requestInterceptor52 = null;
        retrofit.converter.Converter converter53 = null;
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter57.logLevel = logLevel59;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server48, provider49, executor50, executor51, requestInterceptor52, converter53, profiler54, errorHandler55, log56, logLevel59);
        restAdapter44.log = log56;
        builder35.log = log56;
        retrofit.RestAdapter.Builder builder64 = builder20.setLog(log56);
        retrofit.RestAdapter.Builder builder65 = builder15.setLog(log56);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder69 = builder66.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.Log log73 = restAdapter70.log;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter70.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.Profiler profiler79 = builder76.profiler;
        retrofit.ErrorHandler errorHandler80 = builder76.errorHandler;
        builder76.ensureSaneDefaults();
        retrofit.Server server82 = builder76.server;
        builder65.server = server82;
        builder4.server = server82;
        retrofit.Server server85 = builder4.server;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(profiler79);
        org.junit.Assert.assertNotNull(errorHandler80);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNotNull(server85);
    }

    @Test
    public void test07550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07550");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        retrofit.Profiler profiler6 = builder4.profiler;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter11.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider18 = null;
        builder10.clientProvider = provider18;
        retrofit.ErrorHandler errorHandler20 = builder10.errorHandler;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.Server server32 = builder24.server;
        retrofit.RestAdapter.Builder builder33 = builder10.setServer(server32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder37 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter38.new RestHandler();
        retrofit.RestAdapter.Log log41 = restAdapter38.log;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter38.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider45 = null;
        builder37.clientProvider = provider45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder50 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        retrofit.RestAdapter.Log log54 = restAdapter51.log;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter51.logLevel = logLevel55;
        retrofit.RestAdapter.Builder builder57 = builder50.setLogLevel(logLevel55);
        retrofit.client.Client.Provider provider58 = null;
        builder50.clientProvider = provider58;
        retrofit.ErrorHandler errorHandler60 = builder50.errorHandler;
        retrofit.RestAdapter.Builder builder61 = builder37.setErrorHandler(errorHandler60);
        java.util.concurrent.Executor executor62 = builder61.httpExecutor;
        builder33.httpExecutor = executor62;
        retrofit.converter.Converter converter64 = builder33.converter;
        retrofit.RestAdapter.Builder builder65 = builder4.setConverter(converter64);
        retrofit.RestAdapter.Log log66 = builder65.log;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(converter64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(log66);
    }

    @Test
    public void test07551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07551");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.Profiler profiler7 = restAdapter0.profiler;
        retrofit.Server server8 = restAdapter0.server;
        retrofit.client.Request request9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request10 = restAdapter0.logAndReplaceRequest(request9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(server8);
    }

    @Test
    public void test07552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07552");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.logLevel;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider6 = null;
        builder5.clientProvider = provider6;
        retrofit.RestAdapter.Builder builder9 = builder5.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log10 = builder9.log;
        retrofit.client.Client.Provider provider11 = builder9.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel12 = builder9.logLevel;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.Server server28 = null;
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.converter.Converter converter33 = null;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter37.logLevel = logLevel39;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor32, converter33, profiler34, errorHandler35, log36, logLevel39);
        restAdapter22.log = log36;
        builder21.log = log36;
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter53.logLevel = logLevel55;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel55);
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log36, logLevel55);
        retrofit.RestAdapter.Builder builder59 = builder9.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder60.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter64.new RestHandler();
        retrofit.RestAdapter.Log log67 = restAdapter64.log;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter64.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder70 = builder63.setLogLevel(logLevel68);
        retrofit.client.Client.Provider provider71 = null;
        builder63.clientProvider = provider71;
        retrofit.ErrorHandler errorHandler73 = builder63.errorHandler;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder77 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter78.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler80 = restAdapter78.new RestHandler();
        retrofit.RestAdapter.Log log81 = restAdapter78.log;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter78.logLevel = logLevel82;
        retrofit.RestAdapter.Builder builder84 = builder77.setLogLevel(logLevel82);
        retrofit.Server server85 = builder77.server;
        retrofit.RestAdapter.Builder builder86 = builder63.setServer(server85);
        retrofit.RestAdapter.Builder builder87 = builder9.setServer(server85);
        restAdapter0.server = server85;
        retrofit.client.Response response90 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response92 = restAdapter0.logAndReplaceResponse("hi!", response90, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(errorHandler73);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(logLevel79);
        org.junit.Assert.assertNull(log81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(server85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test07553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07553");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.Server server14 = builder3.server;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        retrofit.client.Client.Provider provider26 = builder25.clientProvider;
        retrofit.RestAdapter.Builder builder27 = builder3.setClient(provider26);
        java.util.concurrent.Executor executor28 = builder27.callbackExecutor;
        retrofit.Server server29 = builder27.server;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.Server server31 = restAdapter30.server;
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter56.logLevel = logLevel58;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel58);
        restAdapter41.log = log55;
        builder40.log = log55;
        retrofit.Server server63 = null;
        retrofit.client.Client.Provider provider64 = null;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.converter.Converter converter68 = null;
        retrofit.Profiler profiler69 = null;
        retrofit.ErrorHandler errorHandler70 = null;
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter72.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter72.logLevel = logLevel74;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server63, provider64, executor65, executor66, requestInterceptor67, converter68, profiler69, errorHandler70, log71, logLevel74);
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log55, logLevel74);
        restAdapter30.log = log55;
        retrofit.RestAdapter.Builder builder79 = builder27.setLog(log55);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(provider26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNull(logLevel73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder79);
    }

    @Test
    public void test07554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07554");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.client.Client.Provider provider15 = null;
        builder7.clientProvider = provider15;
        retrofit.RequestInterceptor requestInterceptor17 = builder7.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = builder19.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder24 = builder19.setLogLevel(logLevel23);
        retrofit.Server server25 = null;
        builder19.server = server25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider38 = null;
        builder30.clientProvider = provider38;
        retrofit.RequestInterceptor requestInterceptor40 = builder30.requestInterceptor;
        retrofit.RestAdapter restAdapter41 = builder30.build();
        retrofit.ErrorHandler errorHandler42 = builder30.errorHandler;
        retrofit.converter.Converter converter43 = builder30.converter;
        retrofit.RestAdapter.Builder builder44 = builder19.setConverter(converter43);
        retrofit.Profiler profiler45 = null;
        builder44.profiler = profiler45;
        retrofit.RequestInterceptor requestInterceptor47 = builder44.requestInterceptor;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder51 = builder48.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.Log log55 = restAdapter52.log;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter52.logLevel = logLevel56;
        retrofit.RestAdapter.Builder builder58 = builder51.setLogLevel(logLevel56);
        java.util.concurrent.Executor executor59 = builder51.callbackExecutor;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter60.logLevel = logLevel62;
        retrofit.ErrorHandler errorHandler64 = null;
        restAdapter60.errorHandler = errorHandler64;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.Server server67 = restAdapter66.server;
        retrofit.RequestInterceptor requestInterceptor68 = restAdapter66.requestInterceptor;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder72 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter73.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler75 = restAdapter73.new RestHandler();
        retrofit.RestAdapter.Log log76 = restAdapter73.log;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter73.logLevel = logLevel77;
        retrofit.RestAdapter.Builder builder79 = builder72.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("hi!");
        retrofit.client.Client.Provider provider82 = builder81.clientProvider;
        restAdapter66.clientProvider = provider82;
        restAdapter60.clientProvider = provider82;
        retrofit.RestAdapter.Builder builder85 = builder51.setClient(provider82);
        retrofit.RestAdapter.Builder builder86 = builder44.setClient(provider82);
        restAdapter0.clientProvider = provider82;
        retrofit.Server server88 = restAdapter0.server;
        retrofit.Profiler profiler89 = null;
        restAdapter0.profiler = profiler89;
        retrofit.RestAdapter.Log log91 = restAdapter0.log;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass92 = log91.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(requestInterceptor17);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(restAdapter41);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(converter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertNull(requestInterceptor68);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(logLevel74);
        org.junit.Assert.assertNull(log76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(provider82);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(server88);
        org.junit.Assert.assertNull(log91);
    }

    @Test
    public void test07555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07555");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        java.util.concurrent.Executor executor11 = builder3.callbackExecutor;
        retrofit.Profiler profiler12 = null;
        builder3.profiler = profiler12;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        java.util.concurrent.Executor executor29 = builder21.callbackExecutor;
        restAdapter14.callbackExecutor = executor29;
        builder3.callbackExecutor = executor29;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        java.util.concurrent.Executor executor47 = builder39.callbackExecutor;
        restAdapter32.callbackExecutor = executor47;
        builder3.httpExecutor = executor47;
        retrofit.Server server50 = builder3.server;
        retrofit.RestAdapter restAdapter51 = builder3.build();
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder55 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter56.new RestHandler();
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter56.logLevel = logLevel60;
        retrofit.RestAdapter.Builder builder62 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider63 = null;
        builder55.clientProvider = provider63;
        retrofit.RequestInterceptor requestInterceptor65 = builder55.requestInterceptor;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder69 = builder66.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.Log log73 = restAdapter70.log;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter70.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter restAdapter77 = builder69.build();
        retrofit.converter.Converter converter78 = builder69.converter;
        retrofit.RestAdapter.Builder builder79 = builder55.setConverter(converter78);
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        builder80.ensureSaneDefaults();
        java.util.concurrent.Executor executor82 = builder80.httpExecutor;
        builder55.callbackExecutor = executor82;
        restAdapter51.httpExecutor = executor82;
        retrofit.RestAdapter.Log log85 = restAdapter51.log;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(converter78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(executor82);
        org.junit.Assert.assertNotNull(log85);
    }

    @Test
    public void test07556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07556");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.Profiler profiler7 = restAdapter6.profiler;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider19 = null;
        builder11.clientProvider = provider19;
        retrofit.ErrorHandler errorHandler21 = builder11.errorHandler;
        restAdapter6.errorHandler = errorHandler21;
        retrofit.RestAdapter.Builder builder23 = builder4.setErrorHandler(errorHandler21);
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter24.logLevel = logLevel26;
        retrofit.ErrorHandler errorHandler28 = null;
        restAdapter24.errorHandler = errorHandler28;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.Server server31 = restAdapter30.server;
        retrofit.RequestInterceptor requestInterceptor32 = restAdapter30.requestInterceptor;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder36 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter37.log;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter37.logLevel = logLevel41;
        retrofit.RestAdapter.Builder builder43 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.client.Client.Provider provider46 = builder45.clientProvider;
        restAdapter30.clientProvider = provider46;
        restAdapter24.clientProvider = provider46;
        retrofit.RestAdapter.Builder builder49 = builder23.setClient(provider46);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Builder builder55 = builder23.setServer(server54);
        retrofit.client.Client client56 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder57 = builder23.setClient(client56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(provider46);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder55);
    }

    @Test
    public void test07557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07557");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.converter.Converter converter2 = null;
        restAdapter0.converter = converter2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler5 = null;
        restAdapter0.profiler = profiler5;
        retrofit.Profiler profiler7 = null;
        restAdapter0.profiler = profiler7;
        retrofit.RestAdapter.Log log9 = null;
        restAdapter0.log = log9;
        java.util.concurrent.Executor executor11 = restAdapter0.callbackExecutor;
        retrofit.Profiler profiler12 = restAdapter0.profiler;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(profiler12);
    }

    @Test
    public void test07558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07558");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter14.logLevel = logLevel16;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        restAdapter14.requestInterceptor = requestInterceptor18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.Server server54 = builder46.server;
        builder20.server = server54;
        restAdapter14.server = server54;
        retrofit.RestAdapter.Builder builder57 = builder12.setServer(server54);
        java.util.concurrent.Executor executor58 = builder12.callbackExecutor;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel70);
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter72.new RestHandler();
        retrofit.converter.Converter converter74 = restAdapter72.converter;
        retrofit.RequestInterceptor requestInterceptor75 = restAdapter72.requestInterceptor;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder79 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler82 = restAdapter80.new RestHandler();
        retrofit.RestAdapter.Log log83 = restAdapter80.log;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter80.logLevel = logLevel84;
        retrofit.RestAdapter.Builder builder86 = builder79.setLogLevel(logLevel84);
        retrofit.client.Client.Provider provider87 = builder86.clientProvider;
        restAdapter72.clientProvider = provider87;
        builder12.clientProvider = provider87;
        retrofit.Profiler profiler90 = null;
        builder12.profiler = profiler90;
        retrofit.RestAdapter.Log log92 = builder12.log;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(logLevel81);
        org.junit.Assert.assertNull(log83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(provider87);
        org.junit.Assert.assertNotNull(log92);
    }

    @Test
    public void test07559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07559");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        java.util.concurrent.Executor executor3 = restAdapter0.httpExecutor;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        retrofit.converter.Converter converter9 = null;
        retrofit.Profiler profiler10 = null;
        retrofit.ErrorHandler errorHandler11 = null;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter13.logLevel = logLevel15;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor8, converter9, profiler10, errorHandler11, log12, logLevel15);
        restAdapter0.log = log12;
        java.util.concurrent.Executor executor19 = null;
        restAdapter0.httpExecutor = executor19;
        retrofit.client.Client.Provider provider21 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Log log22 = restAdapter0.log;
        retrofit.converter.Converter converter23 = null;
        restAdapter0.converter = converter23;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(log22);
    }

    @Test
    public void test07560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07560");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.client.Client.Provider provider7 = restAdapter0.clientProvider;
        retrofit.converter.Converter converter8 = restAdapter0.converter;
        retrofit.Server server9 = restAdapter0.server;
        java.util.concurrent.Executor executor10 = null;
        restAdapter0.callbackExecutor = executor10;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test07561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07561");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.converter.Converter converter14 = restAdapter8.converter;
        retrofit.converter.Converter converter15 = restAdapter8.converter;
        java.util.concurrent.Executor executor16 = restAdapter8.callbackExecutor;
        java.util.concurrent.Executor executor17 = restAdapter8.callbackExecutor;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.RestAdapter.Log log31 = builder30.log;
        restAdapter8.log = log31;
        restAdapter0.log = log31;
        retrofit.ErrorHandler errorHandler34 = restAdapter0.errorHandler;
        retrofit.Server server35 = restAdapter0.server;
        retrofit.client.Response response37 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response39 = restAdapter0.logAndReplaceResponse("Retrofit-Idle", response37, (long) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(errorHandler34);
        org.junit.Assert.assertNull(server35);
    }

    @Test
    public void test07562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07562");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter14.logLevel = logLevel16;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        restAdapter14.requestInterceptor = requestInterceptor18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.Server server54 = builder46.server;
        builder20.server = server54;
        restAdapter14.server = server54;
        retrofit.RestAdapter.Builder builder57 = builder12.setServer(server54);
        java.util.concurrent.Executor executor58 = builder12.callbackExecutor;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel70);
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter72.new RestHandler();
        retrofit.converter.Converter converter74 = restAdapter72.converter;
        retrofit.RequestInterceptor requestInterceptor75 = restAdapter72.requestInterceptor;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder79 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler82 = restAdapter80.new RestHandler();
        retrofit.RestAdapter.Log log83 = restAdapter80.log;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter80.logLevel = logLevel84;
        retrofit.RestAdapter.Builder builder86 = builder79.setLogLevel(logLevel84);
        retrofit.client.Client.Provider provider87 = builder86.clientProvider;
        restAdapter72.clientProvider = provider87;
        builder12.clientProvider = provider87;
        retrofit.RequestInterceptor requestInterceptor90 = builder12.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor91 = builder12.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel92 = builder12.logLevel;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(logLevel81);
        org.junit.Assert.assertNull(log83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(provider87);
        org.junit.Assert.assertNotNull(requestInterceptor90);
        org.junit.Assert.assertNotNull(requestInterceptor91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07563");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.ErrorHandler errorHandler15 = builder3.errorHandler;
        retrofit.ErrorHandler errorHandler16 = builder3.errorHandler;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.Log log19 = restAdapter17.log;
        java.util.concurrent.Executor executor20 = restAdapter17.httpExecutor;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.Server server28 = null;
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.converter.Converter converter33 = null;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter37.logLevel = logLevel39;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor32, converter33, profiler34, errorHandler35, log36, logLevel39);
        restAdapter22.log = log36;
        builder21.log = log36;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder47 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter48.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder54 = builder47.setLogLevel(logLevel52);
        retrofit.Server server55 = builder47.server;
        builder21.server = server55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        retrofit.client.Client.Provider provider68 = null;
        builder60.clientProvider = provider68;
        retrofit.RequestInterceptor requestInterceptor70 = builder60.requestInterceptor;
        retrofit.RestAdapter.Builder builder71 = builder21.setRequestInterceptor(requestInterceptor70);
        restAdapter17.requestInterceptor = requestInterceptor70;
        retrofit.RestAdapter.Builder builder73 = builder3.setRequestInterceptor(requestInterceptor70);
        retrofit.RestAdapter restAdapter74 = builder3.build();
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter74.getLogLevel();
        retrofit.ErrorHandler errorHandler76 = restAdapter74.errorHandler;
        retrofit.client.Response response78 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response80 = restAdapter74.logAndReplaceResponse("hi!", response78, (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(errorHandler76);
    }

    @Test
    public void test07564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07564");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = builder3.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor14 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter15 = builder3.build();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor13);
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(restAdapter15);
    }

    @Test
    public void test07565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07565");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.Server server3 = restAdapter0.server;
        java.util.concurrent.Executor executor4 = restAdapter0.callbackExecutor;
        retrofit.ErrorHandler errorHandler5 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler7 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider19 = null;
        builder11.clientProvider = provider19;
        retrofit.RequestInterceptor requestInterceptor21 = builder11.requestInterceptor;
        retrofit.RestAdapter restAdapter22 = builder11.build();
        retrofit.Profiler profiler23 = builder11.profiler;
        java.util.concurrent.Executor executor24 = builder11.httpExecutor;
        restAdapter0.callbackExecutor = executor24;
        retrofit.client.Client.Provider provider26 = restAdapter0.clientProvider;
        retrofit.Server server27 = restAdapter0.server;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(errorHandler5);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(server27);
    }

    @Test
    public void test07566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07566");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.ErrorHandler errorHandler15 = builder3.errorHandler;
        java.util.concurrent.Executor executor16 = builder3.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel17 = builder3.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder3.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder23 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.Log log27 = restAdapter24.log;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter24.logLevel = logLevel28;
        retrofit.RestAdapter.Builder builder30 = builder23.setLogLevel(logLevel28);
        retrofit.Server server31 = builder23.server;
        retrofit.RequestInterceptor requestInterceptor32 = builder23.requestInterceptor;
        builder3.requestInterceptor = requestInterceptor32;
        retrofit.RestAdapter restAdapter34 = builder3.build();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(restAdapter34);
    }

    @Test
    public void test07567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07567");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter14.logLevel = logLevel16;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        restAdapter14.requestInterceptor = requestInterceptor18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.Server server54 = builder46.server;
        builder20.server = server54;
        restAdapter14.server = server54;
        retrofit.RestAdapter.Builder builder57 = builder12.setServer(server54);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder61 = builder58.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder63 = builder58.setLogLevel(logLevel62);
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter64.new RestHandler();
        retrofit.RestAdapter.Log log67 = restAdapter64.log;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter64.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder70 = builder63.setLogLevel(logLevel68);
        builder12.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder75 = builder72.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter76.new RestHandler();
        retrofit.RestAdapter.Log log79 = restAdapter76.log;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter76.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = builder75.setLogLevel(logLevel80);
        retrofit.client.Client.Provider provider83 = null;
        builder75.clientProvider = provider83;
        retrofit.RequestInterceptor requestInterceptor85 = builder75.requestInterceptor;
        retrofit.RestAdapter restAdapter86 = builder75.build();
        retrofit.Profiler profiler87 = builder75.profiler;
        retrofit.ErrorHandler errorHandler88 = builder75.errorHandler;
        builder12.errorHandler = errorHandler88;
        retrofit.Profiler profiler90 = builder12.profiler;
        retrofit.RestAdapter restAdapter91 = builder12.build();
        retrofit.RestAdapter.Builder builder93 = builder12.setServer("hi!");
        builder12.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(logLevel77);
        org.junit.Assert.assertNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(requestInterceptor85);
        org.junit.Assert.assertNotNull(restAdapter86);
        org.junit.Assert.assertNull(profiler87);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertNull(profiler90);
        org.junit.Assert.assertNotNull(restAdapter91);
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test07568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07568");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.Profiler profiler5 = null;
        restAdapter0.profiler = profiler5;
        java.util.concurrent.Executor executor7 = restAdapter0.callbackExecutor;
        retrofit.Profiler profiler8 = null;
        restAdapter0.profiler = profiler8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder13 = builder10.setServer("hi!");
        builder10.ensureSaneDefaults();
        java.util.concurrent.Executor executor15 = builder10.httpExecutor;
        restAdapter0.callbackExecutor = executor15;
        retrofit.RequestInterceptor requestInterceptor17 = restAdapter0.requestInterceptor;
        retrofit.Profiler profiler18 = restAdapter0.profiler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNull(requestInterceptor17);
        org.junit.Assert.assertNull(profiler18);
    }

    @Test
    public void test07569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07569");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter15.new RestHandler();
        retrofit.RestAdapter.Log log18 = restAdapter15.log;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter15.logLevel = logLevel19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel32);
        restAdapter15.log = log29;
        builder14.log = log29;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log29, logLevel37);
        restAdapter0.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.ErrorHandler errorHandler53 = builder43.errorHandler;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.Log log61 = restAdapter58.log;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        retrofit.Server server65 = builder57.server;
        retrofit.RestAdapter.Builder builder66 = builder43.setServer(server65);
        retrofit.RestAdapter.Log log67 = builder66.log;
        log67.log("hi!");
        log67.log("hi!");
        restAdapter0.log = log67;
        retrofit.Profiler profiler73 = restAdapter0.profiler;
        retrofit.converter.Converter converter74 = restAdapter0.converter;
        retrofit.RestAdapter.Log log75 = null;
        restAdapter0.log = log75;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(server65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(profiler73);
        org.junit.Assert.assertNull(converter74);
    }

    @Test
    public void test07570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07570");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder44 = builder41.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder46 = builder41.setLogLevel(logLevel45);
        retrofit.converter.Converter converter47 = null;
        builder41.converter = converter47;
        java.util.concurrent.Executor executor49 = builder41.callbackExecutor;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder55 = builder50.setLogLevel(logLevel54);
        retrofit.converter.Converter converter56 = null;
        builder50.converter = converter56;
        java.util.concurrent.Executor executor58 = builder50.callbackExecutor;
        retrofit.RestAdapter.Builder builder59 = builder40.setExecutors(executor49, executor58);
        retrofit.RestAdapter.Log log60 = builder59.log;
        retrofit.RestAdapter.Builder builder61 = builder0.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder65 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter66.log;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter66.logLevel = logLevel70;
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel70);
        boolean boolean73 = logLevel70.log();
        retrofit.RestAdapter.Builder builder74 = builder61.setLogLevel(logLevel70);
        retrofit.ErrorHandler errorHandler75 = builder61.errorHandler;
        retrofit.Profiler profiler76 = builder61.profiler;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(errorHandler75);
        org.junit.Assert.assertNull(profiler76);
    }

    @Test
    public void test07571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07571");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider38 = null;
        builder30.clientProvider = provider38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.ErrorHandler errorHandler53 = builder43.errorHandler;
        retrofit.RestAdapter.Builder builder54 = builder30.setErrorHandler(errorHandler53);
        java.util.concurrent.Executor executor55 = builder54.httpExecutor;
        builder26.httpExecutor = executor55;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter57.logLevel = logLevel59;
        retrofit.ErrorHandler errorHandler61 = null;
        restAdapter57.errorHandler = errorHandler61;
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter57.logLevel;
        retrofit.converter.Converter converter64 = null;
        restAdapter57.converter = converter64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder69 = builder66.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.Log log73 = restAdapter70.log;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter70.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.client.Client.Provider provider79 = builder78.clientProvider;
        restAdapter57.clientProvider = provider79;
        retrofit.RestAdapter.Builder builder81 = builder26.setClient(provider79);
        retrofit.ErrorHandler errorHandler82 = builder26.errorHandler;
        retrofit.Server server83 = builder26.server;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(provider79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(errorHandler82);
        org.junit.Assert.assertNotNull(server83);
    }

    @Test
    public void test07572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07572");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        java.util.concurrent.Executor executor8 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.converter.Converter converter15 = restAdapter9.converter;
        java.util.concurrent.Executor executor16 = restAdapter9.callbackExecutor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = null;
        builder20.clientProvider = provider28;
        retrofit.RequestInterceptor requestInterceptor30 = builder20.requestInterceptor;
        retrofit.RestAdapter restAdapter31 = builder20.build();
        retrofit.ErrorHandler errorHandler32 = builder20.errorHandler;
        retrofit.converter.Converter converter33 = builder20.converter;
        restAdapter9.converter = converter33;
        restAdapter0.converter = converter33;
        retrofit.Profiler profiler36 = null;
        restAdapter0.profiler = profiler36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder41 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log45 = restAdapter42.log;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter42.logLevel = logLevel46;
        retrofit.RestAdapter.Builder builder48 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("hi!");
        retrofit.client.Client.Provider provider51 = builder50.clientProvider;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder55 = builder52.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder57 = builder52.setLogLevel(logLevel56);
        retrofit.Server server58 = null;
        builder52.server = server58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder60.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter64.new RestHandler();
        retrofit.RestAdapter.Log log67 = restAdapter64.log;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter64.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder70 = builder63.setLogLevel(logLevel68);
        retrofit.client.Client.Provider provider71 = null;
        builder63.clientProvider = provider71;
        retrofit.RequestInterceptor requestInterceptor73 = builder63.requestInterceptor;
        retrofit.RestAdapter restAdapter74 = builder63.build();
        retrofit.ErrorHandler errorHandler75 = builder63.errorHandler;
        retrofit.converter.Converter converter76 = builder63.converter;
        retrofit.RestAdapter.Builder builder77 = builder52.setConverter(converter76);
        retrofit.RestAdapter.Log log78 = builder52.log;
        retrofit.RestAdapter.Builder builder79 = builder50.setLog(log78);
        retrofit.RestAdapter.Log log80 = builder79.log;
        builder79.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor82 = builder79.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor82;
        retrofit.client.Response response85 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response87 = restAdapter0.logAndReplaceResponse("Retrofit-Idle", response85, (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(provider51);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(errorHandler75);
        org.junit.Assert.assertNotNull(converter76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(requestInterceptor82);
    }

    @Test
    public void test07573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07573");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor6 = builder5.callbackExecutor;
        retrofit.Profiler profiler7 = null;
        builder5.profiler = profiler7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.Server server20 = builder12.server;
        builder5.server = server20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter38.logLevel = logLevel40;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel40);
        restAdapter23.log = log37;
        builder22.log = log37;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder48 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        retrofit.RestAdapter.Log log52 = restAdapter49.log;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter49.logLevel = logLevel53;
        retrofit.RestAdapter.Builder builder55 = builder48.setLogLevel(logLevel53);
        retrofit.Server server56 = builder48.server;
        builder22.server = server56;
        builder5.server = server56;
        retrofit.RestAdapter.Builder builder59 = builder4.setServer(server56);
        retrofit.RestAdapter.LogLevel logLevel60 = builder4.logLevel;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter61.logLevel = logLevel63;
        retrofit.RestAdapter.Builder builder65 = builder4.setLogLevel(logLevel63);
        retrofit.client.Client.Provider provider66 = builder65.clientProvider;
        retrofit.ErrorHandler errorHandler67 = builder65.errorHandler;
        retrofit.ErrorHandler errorHandler68 = builder65.errorHandler;
        retrofit.ErrorHandler errorHandler69 = builder65.errorHandler;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertNull(errorHandler67);
        org.junit.Assert.assertNull(errorHandler68);
        org.junit.Assert.assertNull(errorHandler69);
    }

    @Test
    public void test07574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07574");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel4;
        retrofit.ErrorHandler errorHandler6 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.getLogLevel();
        java.util.concurrent.Executor executor8 = null;
        restAdapter0.callbackExecutor = executor8;
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter0.logLevel;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test07575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07575");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor28 = builder27.callbackExecutor;
        retrofit.Profiler profiler29 = null;
        builder27.profiler = profiler29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        retrofit.Server server42 = builder34.server;
        builder27.server = server42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.Log log48 = restAdapter45.log;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter45.logLevel = logLevel49;
        retrofit.Server server51 = null;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter60.logLevel = logLevel62;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel62);
        restAdapter45.log = log59;
        builder44.log = log59;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.Log log74 = restAdapter71.log;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter71.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = builder70.setLogLevel(logLevel75);
        retrofit.Server server78 = builder70.server;
        builder44.server = server78;
        builder27.server = server78;
        retrofit.RestAdapter.Builder builder81 = builder24.setServer(server78);
        retrofit.RestAdapter.Builder builder82 = builder3.setServer(server78);
        retrofit.ErrorHandler errorHandler83 = builder3.errorHandler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(server78);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(errorHandler83);
    }

    @Test
    public void test07576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07576");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.Server server7 = restAdapter6.server;
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter6.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.client.Client.Provider provider22 = builder21.clientProvider;
        restAdapter6.clientProvider = provider22;
        restAdapter0.clientProvider = provider22;
        retrofit.Profiler profiler25 = restAdapter0.profiler;
        retrofit.Profiler profiler26 = null;
        restAdapter0.profiler = profiler26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder31 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.Log log35 = restAdapter32.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter32.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = builder31.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("hi!");
        retrofit.Profiler profiler41 = builder38.profiler;
        retrofit.ErrorHandler errorHandler42 = builder38.errorHandler;
        retrofit.Server server43 = builder38.server;
        retrofit.RestAdapter.Log log44 = builder38.log;
        log44.log("");
        log44.log("hi!");
        restAdapter0.log = log44;
        java.lang.Class<?> wildcardClass50 = restAdapter0.getClass();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test07577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07577");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.converter.Converter converter5 = builder0.converter;
        retrofit.RestAdapter.LogLevel logLevel6 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor8 = builder7.callbackExecutor;
        retrofit.Profiler profiler9 = null;
        builder7.profiler = profiler9;
        retrofit.RestAdapter.Log log11 = builder7.log;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        java.util.concurrent.Executor executor23 = builder15.callbackExecutor;
        builder7.httpExecutor = executor23;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter25.logLevel = logLevel27;
        retrofit.ErrorHandler errorHandler29 = null;
        restAdapter25.errorHandler = errorHandler29;
        java.util.concurrent.Executor executor31 = restAdapter25.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter25.logLevel;
        retrofit.RestAdapter.Builder builder33 = builder7.setLogLevel(logLevel32);
        builder0.logLevel = logLevel32;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test07578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07578");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        java.util.concurrent.Executor executor5 = builder3.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor6 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = builder0.setRequestInterceptor(requestInterceptor6);
        retrofit.converter.Converter converter8 = builder0.converter;
        retrofit.RestAdapter.Builder builder10 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder14 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter15.new RestHandler();
        retrofit.RestAdapter.Log log18 = restAdapter15.log;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter15.logLevel = logLevel19;
        retrofit.RestAdapter.Builder builder21 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder31 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.Log log35 = restAdapter32.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter32.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = builder31.setLogLevel(logLevel36);
        java.util.concurrent.Executor executor39 = builder31.callbackExecutor;
        restAdapter24.callbackExecutor = executor39;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder48 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        retrofit.RestAdapter.Log log52 = restAdapter49.log;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter49.logLevel = logLevel53;
        retrofit.RestAdapter.Builder builder55 = builder48.setLogLevel(logLevel53);
        java.util.concurrent.Executor executor56 = builder48.callbackExecutor;
        restAdapter41.callbackExecutor = executor56;
        retrofit.RestAdapter.Builder builder58 = builder23.setExecutors(executor39, executor56);
        java.util.concurrent.Executor executor59 = builder58.httpExecutor;
        builder10.httpExecutor = executor59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.Log log68 = restAdapter65.log;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter65.logLevel = logLevel69;
        retrofit.RestAdapter.Builder builder71 = builder64.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider72 = null;
        builder64.clientProvider = provider72;
        retrofit.RequestInterceptor requestInterceptor74 = builder64.requestInterceptor;
        retrofit.RestAdapter restAdapter75 = builder64.build();
        java.util.concurrent.Executor executor76 = restAdapter75.callbackExecutor;
        retrofit.converter.Converter converter77 = restAdapter75.converter;
        retrofit.ErrorHandler errorHandler78 = restAdapter75.errorHandler;
        retrofit.RestAdapter.Builder builder79 = builder10.setErrorHandler(errorHandler78);
        retrofit.RestAdapter.Log log80 = builder10.log;
        retrofit.RestAdapter.Builder builder82 = builder10.setServer("Retrofit-Idle");
        org.junit.Assert.assertNotNull(errorHandler2);
        org.junit.Assert.assertNotNull(executor5);
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(converter8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(requestInterceptor74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(converter77);
        org.junit.Assert.assertNotNull(errorHandler78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder82);
    }

    @Test
    public void test07579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07579");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.Profiler profiler13 = builder10.profiler;
        retrofit.ErrorHandler errorHandler14 = builder10.errorHandler;
        retrofit.Server server15 = builder10.server;
        retrofit.RestAdapter.Log log16 = builder10.log;
        retrofit.RestAdapter.LogLevel logLevel17 = builder10.logLevel;
        java.util.concurrent.Executor executor18 = builder10.callbackExecutor;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder29 = builder22.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor33 = builder32.callbackExecutor;
        retrofit.Profiler profiler34 = null;
        builder32.profiler = profiler34;
        retrofit.RestAdapter.Log log36 = builder32.log;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder47 = builder40.setLogLevel(logLevel45);
        java.util.concurrent.Executor executor48 = builder40.callbackExecutor;
        builder32.httpExecutor = executor48;
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel51 = builder32.logLevel;
        builder31.logLevel = logLevel51;
        retrofit.RestAdapter restAdapter53 = builder31.build();
        retrofit.client.Client.Provider provider54 = builder31.clientProvider;
        retrofit.RestAdapter.Builder builder55 = builder10.setClient(provider54);
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.Profiler profiler57 = restAdapter56.profiler;
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter56.new RestHandler();
        retrofit.converter.Converter converter59 = restAdapter56.converter;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter56.logLevel = logLevel60;
        retrofit.ErrorHandler errorHandler62 = restAdapter56.errorHandler;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter67.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder66.setLogLevel(logLevel71);
        java.util.concurrent.Executor executor74 = builder66.callbackExecutor;
        retrofit.Profiler profiler75 = null;
        builder66.profiler = profiler75;
        retrofit.client.Client.Provider provider77 = builder66.clientProvider;
        restAdapter56.clientProvider = provider77;
        retrofit.RestAdapter.Builder builder79 = builder55.setClient(provider77);
        java.util.concurrent.Executor executor80 = builder55.httpExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(restAdapter53);
        org.junit.Assert.assertNotNull(provider54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(errorHandler62);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(executor74);
        org.junit.Assert.assertNotNull(provider77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(executor80);
    }

    @Test
    public void test07580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07580");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.Profiler profiler13 = builder10.profiler;
        retrofit.ErrorHandler errorHandler14 = builder10.errorHandler;
        retrofit.RestAdapter.Log log15 = builder10.log;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.Profiler profiler17 = restAdapter16.profiler;
        retrofit.Profiler profiler18 = restAdapter16.profiler;
        retrofit.RequestInterceptor requestInterceptor19 = restAdapter16.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean21 = logLevel20.log();
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder23 = builder10.setLogLevel(logLevel20);
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel35);
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter37.new RestHandler();
        retrofit.converter.Converter converter39 = restAdapter37.converter;
        retrofit.RequestInterceptor requestInterceptor40 = restAdapter37.requestInterceptor;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder44 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.Log log48 = restAdapter45.log;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter45.logLevel = logLevel49;
        retrofit.RestAdapter.Builder builder51 = builder44.setLogLevel(logLevel49);
        retrofit.client.Client.Provider provider52 = builder51.clientProvider;
        restAdapter37.clientProvider = provider52;
        retrofit.RestAdapter.Builder builder54 = builder23.setClient(provider52);
        java.util.concurrent.Executor executor55 = builder54.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel56 = builder54.logLevel;
        retrofit.client.Client.Provider provider57 = builder54.clientProvider;
        retrofit.RestAdapter.Log log58 = builder54.log;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(profiler18);
        org.junit.Assert.assertNull(requestInterceptor19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(provider52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNotNull(log58);
    }

    @Test
    public void test07581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07581");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.Server server14 = restAdapter13.server;
        retrofit.RequestInterceptor requestInterceptor15 = restAdapter13.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter13.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        java.util.concurrent.Executor executor19 = builder18.httpExecutor;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter20.logLevel;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder25 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log29 = restAdapter26.log;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.logLevel = logLevel30;
        retrofit.RestAdapter.Builder builder32 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider33 = null;
        builder25.clientProvider = provider33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.Log log42 = restAdapter39.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.logLevel = logLevel43;
        retrofit.RestAdapter.Builder builder45 = builder38.setLogLevel(logLevel43);
        retrofit.client.Client.Provider provider46 = null;
        builder38.clientProvider = provider46;
        retrofit.ErrorHandler errorHandler48 = builder38.errorHandler;
        retrofit.RestAdapter.Builder builder49 = builder25.setErrorHandler(errorHandler48);
        restAdapter20.errorHandler = errorHandler48;
        retrofit.RestAdapter.Builder builder51 = builder18.setErrorHandler(errorHandler48);
        retrofit.Server server52 = builder18.server;
        retrofit.Server server53 = builder18.server;
        retrofit.client.Client client54 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder55 = builder18.setClient(client54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(requestInterceptor15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(server52);
        org.junit.Assert.assertNotNull(server53);
    }

    @Test
    public void test07582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07582");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        java.util.concurrent.Executor executor28 = builder20.callbackExecutor;
        restAdapter13.callbackExecutor = executor28;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter30.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder37 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter38.new RestHandler();
        retrofit.RestAdapter.Log log41 = restAdapter38.log;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter38.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder37.setLogLevel(logLevel42);
        java.util.concurrent.Executor executor45 = builder37.callbackExecutor;
        restAdapter30.callbackExecutor = executor45;
        retrofit.RestAdapter.Builder builder47 = builder12.setExecutors(executor28, executor45);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder51 = builder48.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.Log log55 = restAdapter52.log;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter52.logLevel = logLevel56;
        retrofit.RestAdapter.Builder builder58 = builder51.setLogLevel(logLevel56);
        retrofit.client.Client.Provider provider59 = null;
        builder51.clientProvider = provider59;
        retrofit.ErrorHandler errorHandler61 = builder51.errorHandler;
        retrofit.Server server62 = builder51.server;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter67.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider74 = builder73.clientProvider;
        retrofit.RestAdapter.Builder builder75 = builder51.setClient(provider74);
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder79 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler82 = restAdapter80.new RestHandler();
        retrofit.RestAdapter.Log log83 = restAdapter80.log;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter80.logLevel = logLevel84;
        retrofit.RestAdapter.Builder builder86 = builder79.setLogLevel(logLevel84);
        builder51.logLevel = logLevel84;
        builder47.logLevel = logLevel84;
        retrofit.Profiler profiler89 = null;
        builder47.profiler = profiler89;
        retrofit.RestAdapter.Log log91 = builder47.log;
        log91.log("Retrofit-Idle");
        log91.log("hi!");
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(logLevel81);
        org.junit.Assert.assertNull(log83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(log91);
    }

    @Test
    public void test07583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07583");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        java.util.concurrent.Executor executor12 = builder10.callbackExecutor;
        retrofit.converter.Converter converter13 = builder10.converter;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel34);
        restAdapter17.log = log31;
        builder16.log = log31;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        retrofit.Server server50 = builder42.server;
        builder16.server = server50;
        retrofit.RestAdapter.LogLevel logLevel52 = builder16.logLevel;
        builder14.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.Log log61 = restAdapter58.log;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        retrofit.client.Client.Provider provider65 = null;
        builder57.clientProvider = provider65;
        retrofit.ErrorHandler errorHandler67 = builder57.errorHandler;
        retrofit.Server server68 = null;
        retrofit.client.Client.Provider provider69 = null;
        java.util.concurrent.Executor executor70 = null;
        java.util.concurrent.Executor executor71 = null;
        retrofit.RequestInterceptor requestInterceptor72 = null;
        retrofit.converter.Converter converter73 = null;
        retrofit.Profiler profiler74 = null;
        retrofit.ErrorHandler errorHandler75 = null;
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter77.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter77.logLevel = logLevel79;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server68, provider69, executor70, executor71, requestInterceptor72, converter73, profiler74, errorHandler75, log76, logLevel79);
        builder57.logLevel = logLevel79;
        retrofit.ErrorHandler errorHandler83 = builder57.errorHandler;
        builder14.errorHandler = errorHandler83;
        retrofit.RestAdapter.Builder builder85 = builder10.setErrorHandler(errorHandler83);
        retrofit.Profiler profiler86 = null;
        builder10.profiler = profiler86;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertNotNull(converter13);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(errorHandler67);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNull(logLevel78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(errorHandler83);
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test07584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07584");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        builder2.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder5 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter6.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.Log log9 = restAdapter6.log;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter6.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = builder5.setLogLevel(logLevel10);
        retrofit.client.Client.Provider provider13 = null;
        builder5.clientProvider = provider13;
        retrofit.ErrorHandler errorHandler15 = builder5.errorHandler;
        restAdapter0.errorHandler = errorHandler15;
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log29 = restAdapter26.log;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.logLevel = logLevel30;
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter41.logLevel = logLevel43;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel43);
        restAdapter26.log = log40;
        builder25.log = log40;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log40, logLevel48);
        restAdapter0.logLevel = logLevel48;
        retrofit.Profiler profiler51 = null;
        restAdapter0.profiler = profiler51;
        retrofit.Profiler profiler53 = restAdapter0.profiler;
        retrofit.client.Client.Provider provider54 = restAdapter0.clientProvider;
        retrofit.Server server55 = restAdapter0.server;
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        retrofit.client.Client.Provider provider68 = null;
        builder60.clientProvider = provider68;
        retrofit.ErrorHandler errorHandler70 = builder60.errorHandler;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder74 = builder71.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter75.new RestHandler();
        retrofit.RestAdapter.Log log78 = restAdapter75.log;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter75.logLevel = logLevel79;
        retrofit.RestAdapter.Builder builder81 = builder74.setLogLevel(logLevel79);
        retrofit.client.Client.Provider provider82 = null;
        builder74.clientProvider = provider82;
        retrofit.ErrorHandler errorHandler84 = builder74.errorHandler;
        retrofit.Server server85 = builder74.server;
        java.util.concurrent.Executor executor86 = builder74.httpExecutor;
        java.util.concurrent.Executor executor87 = null;
        retrofit.RestAdapter.Builder builder88 = builder60.setExecutors(executor86, executor87);
        restAdapter0.callbackExecutor = executor87;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(logLevel76);
        org.junit.Assert.assertNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(errorHandler84);
        org.junit.Assert.assertNotNull(server85);
        org.junit.Assert.assertNotNull(executor86);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test07585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07585");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel2 = builder0.logLevel;
        retrofit.client.Client.Provider provider3 = builder0.clientProvider;
        builder0.ensureSaneDefaults();
        retrofit.Server server5 = builder0.server;
        retrofit.Server server6 = builder0.server;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertNull(server6);
    }

    @Test
    public void test07586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07586");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.RestAdapter.Log log27 = builder26.log;
        retrofit.client.Client.Provider provider28 = builder26.clientProvider;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider40 = null;
        builder32.clientProvider = provider40;
        retrofit.ErrorHandler errorHandler42 = builder32.errorHandler;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        builder32.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.Log log60 = restAdapter58.log;
        java.util.concurrent.Executor executor61 = restAdapter58.httpExecutor;
        retrofit.Server server62 = null;
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.converter.Converter converter67 = null;
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter71.logLevel = logLevel73;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor66, converter67, profiler68, errorHandler69, log70, logLevel73);
        restAdapter58.log = log70;
        retrofit.RestAdapter.Builder builder77 = builder32.setLog(log70);
        builder26.log = log70;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test07587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07587");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor4 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Log log5 = restAdapter0.log;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder9 = builder6.setServer("hi!");
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Log log13 = restAdapter10.log;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.logLevel = logLevel14;
        retrofit.RestAdapter.Builder builder16 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.Server server20 = restAdapter19.server;
        retrofit.RequestInterceptor requestInterceptor21 = restAdapter19.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter19.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel22);
        java.util.concurrent.Executor executor25 = builder24.httpExecutor;
        retrofit.RestAdapter.Log log26 = builder24.log;
        restAdapter0.log = log26;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.Server server29 = restAdapter28.server;
        retrofit.RequestInterceptor requestInterceptor30 = restAdapter28.requestInterceptor;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.Log log42 = restAdapter39.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.logLevel = logLevel43;
        retrofit.RestAdapter.Builder builder45 = builder38.setLogLevel(logLevel43);
        java.util.concurrent.Executor executor46 = builder38.callbackExecutor;
        restAdapter31.callbackExecutor = executor46;
        restAdapter28.httpExecutor = executor46;
        restAdapter0.callbackExecutor = executor46;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter54.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider61 = null;
        builder53.clientProvider = provider61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter67.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider74 = null;
        builder66.clientProvider = provider74;
        retrofit.ErrorHandler errorHandler76 = builder66.errorHandler;
        retrofit.RestAdapter.Builder builder77 = builder53.setErrorHandler(errorHandler76);
        java.util.concurrent.Executor executor78 = builder77.httpExecutor;
        restAdapter0.callbackExecutor = executor78;
        java.lang.Throwable throwable80 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable80, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertNull(requestInterceptor21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertNull(requestInterceptor30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(errorHandler76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(executor78);
    }

    @Test
    public void test07588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07588");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        java.util.concurrent.Executor executor15 = restAdapter14.callbackExecutor;
        retrofit.converter.Converter converter16 = restAdapter14.converter;
        retrofit.client.Response response18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response20 = restAdapter14.logAndReplaceResponse("hi!", response18, (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(converter16);
    }

    @Test
    public void test07589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07589");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        restAdapter0.requestInterceptor = requestInterceptor4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder12 = builder7.setLogLevel(logLevel11);
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        restAdapter0.setLogLevel(logLevel17);
        retrofit.RequestInterceptor requestInterceptor21 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.logLevel;
        retrofit.Profiler profiler24 = null;
        restAdapter22.profiler = profiler24;
        java.util.concurrent.Executor executor26 = restAdapter22.httpExecutor;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter28.new RestHandler();
        retrofit.RestAdapter.Log log31 = restAdapter28.log;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter28.logLevel = logLevel32;
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter43.logLevel = logLevel45;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel45);
        restAdapter28.log = log42;
        builder27.log = log42;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter54.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel58);
        retrofit.Server server61 = builder53.server;
        builder27.server = server61;
        retrofit.RestAdapter.LogLevel logLevel63 = builder27.logLevel;
        restAdapter22.logLevel = logLevel63;
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter22.logLevel;
        restAdapter0.setLogLevel(logLevel65);
        boolean boolean67 = logLevel65.log();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(requestInterceptor21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test07590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07590");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter15.logLevel = logLevel17;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel17);
        restAdapter0.log = log14;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter21.logLevel = logLevel23;
        retrofit.ErrorHandler errorHandler25 = null;
        restAdapter21.errorHandler = errorHandler25;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.Server server28 = restAdapter27.server;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder33 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.RestAdapter.Builder builder40 = builder33.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.client.Client.Provider provider43 = builder42.clientProvider;
        restAdapter27.clientProvider = provider43;
        restAdapter21.clientProvider = provider43;
        restAdapter0.clientProvider = provider43;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter0.logLevel = logLevel47;
        retrofit.RestAdapter.Log log49 = restAdapter0.log;
        retrofit.Profiler profiler50 = restAdapter0.profiler;
        retrofit.Profiler profiler51 = null;
        restAdapter0.profiler = profiler51;
        retrofit.RequestInterceptor requestInterceptor53 = restAdapter0.requestInterceptor;
        retrofit.Server server54 = restAdapter0.server;
        retrofit.client.Client.Provider provider55 = restAdapter0.clientProvider;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(provider43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertNull(requestInterceptor53);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertNotNull(provider55);
    }

    @Test
    public void test07591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07591");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.Server server3 = restAdapter0.server;
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.ErrorHandler errorHandler6 = null;
        restAdapter4.errorHandler = errorHandler6;
        retrofit.Profiler profiler8 = restAdapter4.profiler;
        retrofit.Profiler profiler9 = null;
        restAdapter4.profiler = profiler9;
        java.util.concurrent.Executor executor11 = restAdapter4.callbackExecutor;
        retrofit.RestAdapter.Log log12 = restAdapter4.log;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = null;
        builder16.clientProvider = provider24;
        retrofit.RequestInterceptor requestInterceptor26 = builder16.requestInterceptor;
        retrofit.RestAdapter restAdapter27 = builder16.build();
        java.util.concurrent.Executor executor28 = restAdapter27.callbackExecutor;
        retrofit.converter.Converter converter29 = restAdapter27.converter;
        restAdapter4.converter = converter29;
        restAdapter0.converter = converter29;
        java.util.concurrent.Executor executor32 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler35 = builder33.errorHandler;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        java.util.concurrent.Executor executor38 = builder36.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor39 = builder36.requestInterceptor;
        retrofit.RestAdapter.Builder builder40 = builder33.setRequestInterceptor(requestInterceptor39);
        retrofit.converter.Converter converter41 = builder33.converter;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider43 = null;
        builder42.clientProvider = provider43;
        retrofit.RestAdapter.Builder builder46 = builder42.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log47 = builder46.log;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.Profiler profiler49 = restAdapter48.profiler;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter54.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider61 = null;
        builder53.clientProvider = provider61;
        retrofit.ErrorHandler errorHandler63 = builder53.errorHandler;
        restAdapter48.errorHandler = errorHandler63;
        retrofit.RestAdapter.Builder builder65 = builder46.setErrorHandler(errorHandler63);
        builder33.errorHandler = errorHandler63;
        restAdapter0.errorHandler = errorHandler63;
        java.lang.Throwable throwable68 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable68, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(profiler8);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(restAdapter27);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(converter29);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(errorHandler35);
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNotNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(converter41);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test07592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07592");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter15.new RestHandler();
        retrofit.RestAdapter.Log log18 = restAdapter15.log;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter15.logLevel = logLevel19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel32);
        restAdapter15.log = log29;
        builder14.log = log29;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter46.logLevel = logLevel48;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel48);
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log29, logLevel48);
        retrofit.RestAdapter.Builder builder52 = builder0.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.FULL;
        builder52.logLevel = logLevel53;
        retrofit.RequestInterceptor requestInterceptor55 = builder52.requestInterceptor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor57 = builder56.callbackExecutor;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder61 = builder58.setServer("hi!");
        retrofit.converter.Converter converter62 = builder58.converter;
        retrofit.RestAdapter.Builder builder63 = builder56.setConverter(converter62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder67 = builder64.setServer("hi!");
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler70 = restAdapter68.new RestHandler();
        retrofit.RestAdapter.Log log71 = restAdapter68.log;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter68.logLevel = logLevel72;
        retrofit.RestAdapter.Builder builder74 = builder67.setLogLevel(logLevel72);
        retrofit.client.Client.Provider provider75 = null;
        builder67.clientProvider = provider75;
        retrofit.RequestInterceptor requestInterceptor77 = builder67.requestInterceptor;
        retrofit.RestAdapter restAdapter78 = builder67.build();
        java.util.concurrent.Executor executor79 = restAdapter78.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler80 = restAdapter78.new RestHandler();
        retrofit.client.Client.Provider provider81 = restAdapter78.clientProvider;
        builder56.clientProvider = provider81;
        retrofit.RestAdapter.Builder builder83 = builder52.setClient(provider81);
        retrofit.Profiler profiler84 = null;
        builder83.profiler = profiler84;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(converter62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(requestInterceptor77);
        org.junit.Assert.assertNotNull(restAdapter78);
        org.junit.Assert.assertNotNull(executor79);
        org.junit.Assert.assertNotNull(provider81);
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test07593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07593");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.Server server6 = null;
        builder0.server = server6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider19 = null;
        builder11.clientProvider = provider19;
        retrofit.RequestInterceptor requestInterceptor21 = builder11.requestInterceptor;
        retrofit.RestAdapter restAdapter22 = builder11.build();
        retrofit.ErrorHandler errorHandler23 = builder11.errorHandler;
        retrofit.converter.Converter converter24 = builder11.converter;
        retrofit.RestAdapter.Builder builder25 = builder0.setConverter(converter24);
        retrofit.Profiler profiler26 = null;
        builder25.profiler = profiler26;
        retrofit.RequestInterceptor requestInterceptor28 = builder25.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder34 = builder29.setLogLevel(logLevel33);
        retrofit.converter.Converter converter35 = null;
        builder29.converter = converter35;
        java.util.concurrent.Executor executor37 = builder29.callbackExecutor;
        retrofit.RestAdapter restAdapter38 = builder29.build();
        retrofit.Server server39 = restAdapter38.server;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.RequestInterceptor requestInterceptor53 = builder43.requestInterceptor;
        retrofit.RestAdapter restAdapter54 = builder43.build();
        java.util.concurrent.Executor executor55 = restAdapter54.callbackExecutor;
        restAdapter38.callbackExecutor = executor55;
        retrofit.Server server57 = restAdapter38.server;
        retrofit.RestAdapter.Builder builder58 = builder25.setServer(server57);
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Builder builder61 = builder58.setServer("hi!");
        retrofit.converter.Converter converter62 = builder58.converter;
        retrofit.RestAdapter restAdapter63 = builder58.build();
        retrofit.client.Client.Provider provider64 = builder58.clientProvider;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(converter24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(requestInterceptor53);
        org.junit.Assert.assertNotNull(restAdapter54);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(server59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(converter62);
        org.junit.Assert.assertNotNull(restAdapter63);
        org.junit.Assert.assertNotNull(provider64);
    }

    @Test
    public void test07594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07594");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        java.util.concurrent.Executor executor16 = builder8.callbackExecutor;
        builder0.httpExecutor = executor16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        retrofit.client.Client.Provider provider29 = null;
        builder21.clientProvider = provider29;
        retrofit.RequestInterceptor requestInterceptor31 = builder21.requestInterceptor;
        retrofit.RestAdapter restAdapter32 = builder21.build();
        java.util.concurrent.Executor executor33 = restAdapter32.callbackExecutor;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.Log log36 = restAdapter34.log;
        retrofit.ErrorHandler errorHandler37 = restAdapter34.errorHandler;
        retrofit.RequestInterceptor requestInterceptor38 = restAdapter34.requestInterceptor;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        retrofit.client.Client.Provider provider50 = null;
        builder42.clientProvider = provider50;
        retrofit.ErrorHandler errorHandler52 = builder42.errorHandler;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Log log60 = restAdapter57.log;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter57.logLevel = logLevel61;
        retrofit.RestAdapter.Builder builder63 = builder56.setLogLevel(logLevel61);
        retrofit.Server server64 = builder56.server;
        retrofit.RestAdapter.Builder builder65 = builder42.setServer(server64);
        java.util.concurrent.Executor executor66 = builder65.httpExecutor;
        restAdapter34.httpExecutor = executor66;
        retrofit.RestAdapter.Builder builder68 = builder0.setExecutors(executor33, executor66);
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.Log log72 = restAdapter70.log;
        retrofit.ErrorHandler errorHandler73 = restAdapter70.errorHandler;
        retrofit.RequestInterceptor requestInterceptor74 = restAdapter70.requestInterceptor;
        retrofit.converter.Converter converter75 = null;
        restAdapter70.converter = converter75;
        retrofit.converter.Converter converter77 = restAdapter70.converter;
        retrofit.converter.Converter converter78 = null;
        restAdapter70.converter = converter78;
        java.util.concurrent.Executor executor80 = restAdapter70.httpExecutor;
        retrofit.RestAdapter.Log log81 = restAdapter70.log;
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter82.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter82.logLevel = logLevel84;
        retrofit.ErrorHandler errorHandler86 = null;
        restAdapter82.errorHandler = errorHandler86;
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter82.logLevel;
        restAdapter70.logLevel = logLevel88;
        retrofit.RestAdapter.LogLevel logLevel90 = restAdapter70.logLevel;
        retrofit.RestAdapter.Builder builder91 = builder68.setLogLevel(logLevel90);
        retrofit.client.Client.Provider provider92 = builder68.clientProvider;
        retrofit.Server server93 = null;
        builder68.server = server93;
        retrofit.converter.Converter converter95 = builder68.converter;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertNull(errorHandler37);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(log72);
        org.junit.Assert.assertNull(errorHandler73);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertNull(converter77);
        org.junit.Assert.assertNull(executor80);
        org.junit.Assert.assertNull(log81);
        org.junit.Assert.assertNull(logLevel83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNull(provider92);
        org.junit.Assert.assertNull(converter95);
    }

    @Test
    public void test07595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07595");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = null;
        builder17.clientProvider = provider25;
        retrofit.ErrorHandler errorHandler27 = builder17.errorHandler;
        retrofit.Server server28 = builder17.server;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider40 = builder39.clientProvider;
        retrofit.RestAdapter.Builder builder41 = builder17.setClient(provider40);
        builder3.clientProvider = provider40;
        retrofit.RestAdapter.Builder builder44 = builder3.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider45 = builder44.clientProvider;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter46.new RestHandler();
        retrofit.RestAdapter.Log log49 = restAdapter46.log;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter46.logLevel = logLevel50;
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter46.new RestHandler();
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.Log log55 = restAdapter53.log;
        retrofit.ErrorHandler errorHandler56 = restAdapter53.errorHandler;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        retrofit.client.Client.Provider provider68 = null;
        builder60.clientProvider = provider68;
        retrofit.RequestInterceptor requestInterceptor70 = builder60.requestInterceptor;
        restAdapter53.requestInterceptor = requestInterceptor70;
        restAdapter46.requestInterceptor = requestInterceptor70;
        builder44.requestInterceptor = requestInterceptor70;
        retrofit.Profiler profiler74 = null;
        builder44.profiler = profiler74;
        retrofit.RestAdapter.Builder builder77 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter78 = builder44.build();
        retrofit.Profiler profiler79 = builder44.profiler;
        retrofit.RestAdapter.Log log80 = builder44.log;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertNull(errorHandler56);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(restAdapter78);
        org.junit.Assert.assertNull(profiler79);
        org.junit.Assert.assertNotNull(log80);
    }

    @Test
    public void test07596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07596");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.converter.Converter converter7 = builder4.converter;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = builder21.callbackExecutor;
        retrofit.Profiler profiler23 = null;
        builder21.profiler = profiler23;
        retrofit.RestAdapter.Log log25 = builder21.log;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder29 = builder26.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter30.new RestHandler();
        retrofit.RestAdapter.Log log33 = restAdapter30.log;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter30.logLevel = logLevel34;
        retrofit.RestAdapter.Builder builder36 = builder29.setLogLevel(logLevel34);
        java.util.concurrent.Executor executor37 = builder29.callbackExecutor;
        builder21.httpExecutor = executor37;
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel40 = builder21.logLevel;
        builder20.logLevel = logLevel40;
        retrofit.RestAdapter.Builder builder42 = builder4.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder44 = builder4.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RequestInterceptor requestInterceptor46 = builder44.requestInterceptor;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor46);
    }

    @Test
    public void test07597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07597");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        java.util.concurrent.Executor executor2 = null;
        restAdapter0.httpExecutor = executor2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor5 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(requestInterceptor5);
        org.junit.Assert.assertNull(logLevel6);
    }

    @Test
    public void test07598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07598");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter5.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter5.new RestHandler();
        retrofit.RestAdapter.Log log8 = restAdapter5.log;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter5.logLevel = logLevel9;
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.RequestInterceptor requestInterceptor15 = null;
        retrofit.converter.Converter converter16 = null;
        retrofit.Profiler profiler17 = null;
        retrofit.ErrorHandler errorHandler18 = null;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter20.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter20.logLevel = logLevel22;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor15, converter16, profiler17, errorHandler18, log19, logLevel22);
        restAdapter5.log = log19;
        builder4.log = log19;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.Server server38 = builder30.server;
        builder4.server = server38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.RequestInterceptor requestInterceptor53 = builder43.requestInterceptor;
        retrofit.RestAdapter.Builder builder54 = builder4.setRequestInterceptor(requestInterceptor53);
        retrofit.RestAdapter.Builder builder55 = builder0.setRequestInterceptor(requestInterceptor53);
        retrofit.RestAdapter.LogLevel logLevel56 = builder0.logLevel;
        retrofit.converter.Converter converter57 = builder0.converter;
        java.util.concurrent.Executor executor58 = builder0.httpExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(requestInterceptor53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(converter57);
        org.junit.Assert.assertNotNull(executor58);
    }

    @Test
    public void test07599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07599");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = null;
        builder8.clientProvider = provider16;
        retrofit.ErrorHandler errorHandler18 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder29 = builder22.setLogLevel(logLevel27);
        retrofit.Server server30 = builder22.server;
        retrofit.RestAdapter.Builder builder31 = builder8.setServer(server30);
        java.util.concurrent.Executor executor32 = builder31.httpExecutor;
        restAdapter0.callbackExecutor = executor32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder37 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter38.new RestHandler();
        retrofit.RestAdapter.Log log41 = restAdapter38.log;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter38.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider45 = null;
        builder37.clientProvider = provider45;
        retrofit.ErrorHandler errorHandler47 = builder37.errorHandler;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder51 = builder48.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.Log log55 = restAdapter52.log;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter52.logLevel = logLevel56;
        retrofit.RestAdapter.Builder builder58 = builder51.setLogLevel(logLevel56);
        retrofit.Server server59 = builder51.server;
        retrofit.RestAdapter.Builder builder60 = builder37.setServer(server59);
        retrofit.RestAdapter.Log log61 = builder60.log;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        retrofit.Server server63 = restAdapter62.server;
        retrofit.RequestInterceptor requestInterceptor64 = restAdapter62.requestInterceptor;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder68 = builder65.setServer("hi!");
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter69.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler71 = restAdapter69.new RestHandler();
        retrofit.RestAdapter.Log log72 = restAdapter69.log;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter69.logLevel = logLevel73;
        retrofit.RestAdapter.Builder builder75 = builder68.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder77 = builder75.setServer("hi!");
        retrofit.client.Client.Provider provider78 = builder77.clientProvider;
        restAdapter62.clientProvider = provider78;
        retrofit.RestAdapter.Builder builder80 = builder60.setClient(provider78);
        retrofit.RestAdapter.LogLevel logLevel81 = null;
        builder60.logLevel = logLevel81;
        java.util.concurrent.Executor executor83 = builder60.callbackExecutor;
        java.util.concurrent.Executor executor84 = builder60.httpExecutor;
        retrofit.RestAdapter.Log log85 = builder60.log;
        java.util.concurrent.Executor executor86 = builder60.httpExecutor;
        restAdapter0.httpExecutor = executor86;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(errorHandler47);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(server59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertNull(requestInterceptor64);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(logLevel70);
        org.junit.Assert.assertNull(log72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(provider78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(executor83);
        org.junit.Assert.assertNotNull(executor84);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertNotNull(executor86);
    }

    @Test
    public void test07600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07600");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        java.util.concurrent.Executor executor16 = builder8.callbackExecutor;
        builder0.httpExecutor = executor16;
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider19 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder21 = builder0.setServer("Retrofit-Idle");
        java.util.concurrent.Executor executor22 = null;
        builder21.callbackExecutor = executor22;
        retrofit.client.Client.Provider provider24 = builder21.clientProvider;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder28 = builder25.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.logLevel = logLevel33;
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel33);
        retrofit.client.Client.Provider provider36 = null;
        builder28.clientProvider = provider36;
        retrofit.RequestInterceptor requestInterceptor38 = builder28.requestInterceptor;
        retrofit.RestAdapter restAdapter39 = builder28.build();
        retrofit.Profiler profiler40 = builder28.profiler;
        java.util.concurrent.Executor executor41 = builder28.httpExecutor;
        retrofit.RestAdapter.Log log42 = builder28.log;
        retrofit.ErrorHandler errorHandler43 = builder28.errorHandler;
        retrofit.RestAdapter.Builder builder44 = builder21.setErrorHandler(errorHandler43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider46 = null;
        builder45.clientProvider = provider46;
        retrofit.RestAdapter.Builder builder49 = builder45.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log50 = builder49.log;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.Profiler profiler52 = restAdapter51.profiler;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Log log60 = restAdapter57.log;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter57.logLevel = logLevel61;
        retrofit.RestAdapter.Builder builder63 = builder56.setLogLevel(logLevel61);
        retrofit.client.Client.Provider provider64 = null;
        builder56.clientProvider = provider64;
        retrofit.ErrorHandler errorHandler66 = builder56.errorHandler;
        restAdapter51.errorHandler = errorHandler66;
        retrofit.RestAdapter.Builder builder68 = builder49.setErrorHandler(errorHandler66);
        retrofit.RestAdapter restAdapter69 = builder49.build();
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        builder70.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder73 = builder70.setServer("hi!");
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Builder builder76 = builder73.setServer("Retrofit-Idle");
        java.util.concurrent.Executor executor77 = builder73.httpExecutor;
        java.util.concurrent.Executor executor78 = builder73.callbackExecutor;
        restAdapter69.callbackExecutor = executor78;
        builder44.callbackExecutor = executor78;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider24);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(restAdapter69);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(server74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(executor77);
        org.junit.Assert.assertNotNull(executor78);
    }

    @Test
    public void test07601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07601");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter3 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter3.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter3.new RestHandler();
        retrofit.RestAdapter.Log log6 = restAdapter3.log;
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter3.logLevel = logLevel7;
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter18.logLevel = logLevel20;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel20);
        restAdapter3.log = log17;
        builder2.log = log17;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder28 = builder25.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.logLevel = logLevel33;
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel33);
        retrofit.Server server36 = builder28.server;
        builder2.server = server36;
        retrofit.RestAdapter.LogLevel logLevel38 = builder2.logLevel;
        builder0.logLevel = logLevel38;
        java.util.concurrent.Executor executor40 = builder0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel41 = builder0.logLevel;
        boolean boolean42 = logLevel41.log();
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(log6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test07602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07602");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider23 = null;
        builder15.clientProvider = provider23;
        retrofit.ErrorHandler errorHandler25 = builder15.errorHandler;
        retrofit.Server server26 = builder15.server;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.Server server38 = builder30.server;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.Log log41 = restAdapter39.log;
        java.util.concurrent.Executor executor42 = restAdapter39.httpExecutor;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        restAdapter39.log = log51;
        builder30.log = log51;
        retrofit.RestAdapter.Builder builder59 = builder15.setLog(log51);
        retrofit.RestAdapter.Builder builder60 = builder10.setLog(log51);
        java.util.concurrent.Executor executor61 = builder10.httpExecutor;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder65 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter66.log;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter66.logLevel = logLevel70;
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel70);
        retrofit.client.Client.Provider provider73 = null;
        builder65.clientProvider = provider73;
        retrofit.client.Client.Provider provider75 = builder65.clientProvider;
        java.util.concurrent.Executor executor76 = builder65.httpExecutor;
        builder10.httpExecutor = executor76;
        retrofit.Server server78 = builder10.server;
        java.util.concurrent.Executor executor79 = builder10.callbackExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(server78);
        org.junit.Assert.assertNotNull(executor79);
    }

    @Test
    public void test07603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07603");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor4 = restAdapter0.requestInterceptor;
        retrofit.converter.Converter converter5 = null;
        restAdapter0.converter = converter5;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        retrofit.converter.Converter converter8 = null;
        restAdapter0.converter = converter8;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter10.getLogLevel();
        retrofit.ErrorHandler errorHandler12 = null;
        restAdapter10.errorHandler = errorHandler12;
        retrofit.Profiler profiler14 = restAdapter10.profiler;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel42);
        restAdapter25.log = log39;
        builder24.log = log39;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log39, logLevel47);
        restAdapter10.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter54.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider61 = null;
        builder53.clientProvider = provider61;
        retrofit.ErrorHandler errorHandler63 = builder53.errorHandler;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder67 = builder64.setServer("hi!");
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler70 = restAdapter68.new RestHandler();
        retrofit.RestAdapter.Log log71 = restAdapter68.log;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter68.logLevel = logLevel72;
        retrofit.RestAdapter.Builder builder74 = builder67.setLogLevel(logLevel72);
        retrofit.Server server75 = builder67.server;
        retrofit.RestAdapter.Builder builder76 = builder53.setServer(server75);
        retrofit.RestAdapter.Log log77 = builder76.log;
        log77.log("hi!");
        log77.log("hi!");
        restAdapter10.log = log77;
        restAdapter0.log = log77;
        retrofit.client.Client.Provider provider84 = restAdapter0.clientProvider;
        retrofit.ErrorHandler errorHandler85 = restAdapter0.errorHandler;
        retrofit.Profiler profiler86 = null;
        restAdapter0.profiler = profiler86;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(server75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNull(provider84);
        org.junit.Assert.assertNull(errorHandler85);
    }

    @Test
    public void test07604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07604");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.getLogLevel();
        retrofit.Profiler profiler4 = null;
        restAdapter0.profiler = profiler4;
        retrofit.Server server6 = restAdapter0.server;
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter7.logLevel = logLevel9;
        retrofit.ErrorHandler errorHandler11 = null;
        restAdapter7.errorHandler = errorHandler11;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter7.logLevel;
        retrofit.converter.Converter converter14 = null;
        restAdapter7.converter = converter14;
        retrofit.converter.Converter converter16 = restAdapter7.converter;
        java.util.concurrent.Executor executor17 = restAdapter7.callbackExecutor;
        retrofit.Profiler profiler18 = null;
        restAdapter7.profiler = profiler18;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter7.requestInterceptor;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.Log log23 = restAdapter21.log;
        java.util.concurrent.Executor executor24 = restAdapter21.httpExecutor;
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter34.logLevel = logLevel36;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel36);
        restAdapter21.log = log33;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder45 = builder40.setLogLevel(logLevel44);
        restAdapter21.logLevel = logLevel44;
        restAdapter7.setLogLevel(logLevel44);
        boolean boolean48 = logLevel44.log();
        restAdapter0.logLevel = logLevel44;
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler51 = restAdapter0.profiler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNull(requestInterceptor20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(profiler51);
    }

    @Test
    public void test07605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07605");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider38 = null;
        builder30.clientProvider = provider38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.ErrorHandler errorHandler53 = builder43.errorHandler;
        retrofit.RestAdapter.Builder builder54 = builder30.setErrorHandler(errorHandler53);
        java.util.concurrent.Executor executor55 = builder54.httpExecutor;
        builder26.httpExecutor = executor55;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter57.logLevel = logLevel59;
        retrofit.ErrorHandler errorHandler61 = null;
        restAdapter57.errorHandler = errorHandler61;
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter57.logLevel;
        retrofit.converter.Converter converter64 = null;
        restAdapter57.converter = converter64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder69 = builder66.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.Log log73 = restAdapter70.log;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter70.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.client.Client.Provider provider79 = builder78.clientProvider;
        restAdapter57.clientProvider = provider79;
        retrofit.RestAdapter.Builder builder81 = builder26.setClient(provider79);
        retrofit.RestAdapter.Builder builder83 = builder26.setServer("hi!");
        retrofit.ErrorHandler errorHandler84 = builder26.errorHandler;
        retrofit.RequestInterceptor requestInterceptor85 = builder26.requestInterceptor;
        java.util.concurrent.Executor executor86 = builder26.httpExecutor;
        retrofit.Profiler profiler87 = null;
        builder26.profiler = profiler87;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(provider79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(errorHandler84);
        org.junit.Assert.assertNotNull(requestInterceptor85);
        org.junit.Assert.assertNotNull(executor86);
    }

    @Test
    public void test07606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07606");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        restAdapter0.requestInterceptor = requestInterceptor4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter9 = restAdapter0.converter;
        retrofit.RequestInterceptor requestInterceptor10 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder14 = builder11.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder16 = builder11.setLogLevel(logLevel15);
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder27 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter28.new RestHandler();
        retrofit.RestAdapter.Log log31 = restAdapter28.log;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter28.logLevel = logLevel32;
        retrofit.RestAdapter.Builder builder34 = builder27.setLogLevel(logLevel32);
        retrofit.client.Client.Provider provider35 = null;
        builder27.clientProvider = provider35;
        retrofit.ErrorHandler errorHandler37 = builder27.errorHandler;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder41 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log45 = restAdapter42.log;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter42.logLevel = logLevel46;
        retrofit.RestAdapter.Builder builder48 = builder41.setLogLevel(logLevel46);
        retrofit.Server server49 = builder41.server;
        retrofit.RestAdapter.Builder builder50 = builder27.setServer(server49);
        retrofit.RestAdapter.Log log51 = builder50.log;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.Server server53 = restAdapter52.server;
        retrofit.RequestInterceptor requestInterceptor54 = restAdapter52.requestInterceptor;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder58 = builder55.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter59.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler61 = restAdapter59.new RestHandler();
        retrofit.RestAdapter.Log log62 = restAdapter59.log;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter59.logLevel = logLevel63;
        retrofit.RestAdapter.Builder builder65 = builder58.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder67 = builder65.setServer("hi!");
        retrofit.client.Client.Provider provider68 = builder67.clientProvider;
        restAdapter52.clientProvider = provider68;
        retrofit.RestAdapter.Builder builder70 = builder50.setClient(provider68);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder74 = builder71.setServer("hi!");
        retrofit.Server server75 = builder74.server;
        retrofit.RestAdapter.Builder builder76 = builder50.setServer(server75);
        builder23.server = server75;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        builder78.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder81 = builder78.setServer("hi!");
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter82.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler84 = restAdapter82.new RestHandler();
        retrofit.RestAdapter.Log log85 = restAdapter82.log;
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter82.logLevel = logLevel86;
        retrofit.RestAdapter.Builder builder88 = builder81.setLogLevel(logLevel86);
        retrofit.client.Client.Provider provider89 = null;
        builder81.clientProvider = provider89;
        retrofit.ErrorHandler errorHandler91 = builder81.errorHandler;
        retrofit.Server server92 = builder81.server;
        retrofit.ErrorHandler errorHandler93 = builder81.errorHandler;
        retrofit.RestAdapter.Builder builder94 = builder23.setErrorHandler(errorHandler93);
        restAdapter0.errorHandler = errorHandler93;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(logLevel60);
        org.junit.Assert.assertNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(server75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(logLevel83);
        org.junit.Assert.assertNull(log85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(errorHandler91);
        org.junit.Assert.assertNotNull(server92);
        org.junit.Assert.assertNotNull(errorHandler93);
        org.junit.Assert.assertNotNull(builder94);
    }

    @Test
    public void test07607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07607");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.Profiler profiler2 = restAdapter0.profiler;
        retrofit.RequestInterceptor requestInterceptor3 = restAdapter0.requestInterceptor;
        retrofit.Server server4 = restAdapter0.server;
        retrofit.Server server5 = restAdapter0.server;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.logLevel;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(logLevel7);
    }

    @Test
    public void test07608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07608");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = null;
        builder17.clientProvider = provider25;
        retrofit.ErrorHandler errorHandler27 = builder17.errorHandler;
        retrofit.Server server28 = builder17.server;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider40 = builder39.clientProvider;
        retrofit.RestAdapter.Builder builder41 = builder17.setClient(provider40);
        builder3.clientProvider = provider40;
        retrofit.ErrorHandler errorHandler43 = builder3.errorHandler;
        retrofit.converter.Converter converter44 = builder3.converter;
        retrofit.client.Client client45 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder46 = builder3.setClient(client45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(converter44);
    }

    @Test
    public void test07609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07609");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter7.logLevel = logLevel9;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter7.new RestHandler();
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel54);
        restAdapter7.setLogLevel(logLevel54);
        boolean boolean59 = logLevel54.log();
        retrofit.RestAdapter.Builder builder60 = builder4.setLogLevel(logLevel54);
        retrofit.Profiler profiler61 = null;
        builder60.profiler = profiler61;
        retrofit.RestAdapter restAdapter63 = builder60.build();
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter63.new RestHandler();
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter63);
    }

    @Test
    public void test07610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07610");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter0.getLogLevel();
        retrofit.Profiler profiler9 = null;
        restAdapter0.profiler = profiler9;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07611");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.converter.Converter converter2 = null;
        restAdapter0.converter = converter2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler5 = null;
        restAdapter0.profiler = profiler5;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler8 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(errorHandler8);
    }

    @Test
    public void test07612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07612");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.Server server4 = builder3.server;
        retrofit.RequestInterceptor requestInterceptor5 = null;
        builder3.requestInterceptor = requestInterceptor5;
        retrofit.converter.Converter converter7 = builder3.converter;
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel25);
        restAdapter8.log = log22;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter8.requestInterceptor;
        java.util.concurrent.Executor executor30 = restAdapter8.callbackExecutor;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.Profiler profiler32 = restAdapter31.profiler;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder36 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter37.log;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter37.logLevel = logLevel41;
        retrofit.RestAdapter.Builder builder43 = builder36.setLogLevel(logLevel41);
        retrofit.client.Client.Provider provider44 = null;
        builder36.clientProvider = provider44;
        retrofit.RequestInterceptor requestInterceptor46 = builder36.requestInterceptor;
        retrofit.RestAdapter restAdapter47 = builder36.build();
        retrofit.ErrorHandler errorHandler48 = builder36.errorHandler;
        retrofit.converter.Converter converter49 = builder36.converter;
        restAdapter31.converter = converter49;
        restAdapter8.converter = converter49;
        retrofit.RestAdapter.Builder builder52 = builder3.setConverter(converter49);
        retrofit.Server server53 = builder52.server;
        java.lang.Class<?> wildcardClass54 = builder52.getClass();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(converter7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor29);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(restAdapter47);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(converter49);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test07613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07613");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = null;
        builder16.clientProvider = provider24;
        retrofit.ErrorHandler errorHandler26 = builder16.errorHandler;
        retrofit.RestAdapter.Builder builder27 = builder3.setErrorHandler(errorHandler26);
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter28.logLevel = logLevel30;
        builder3.logLevel = logLevel30;
        retrofit.converter.Converter converter33 = null;
        builder3.converter = converter33;
        retrofit.RestAdapter.Log log35 = builder3.log;
        retrofit.RestAdapter restAdapter36 = builder3.build();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder47 = builder40.setLogLevel(logLevel45);
        retrofit.client.Client.Provider provider48 = null;
        builder40.clientProvider = provider48;
        retrofit.RequestInterceptor requestInterceptor50 = builder40.requestInterceptor;
        retrofit.RestAdapter restAdapter51 = builder40.build();
        retrofit.Profiler profiler52 = builder40.profiler;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.Log log55 = restAdapter53.log;
        retrofit.ErrorHandler errorHandler56 = restAdapter53.errorHandler;
        retrofit.RequestInterceptor requestInterceptor57 = restAdapter53.requestInterceptor;
        retrofit.converter.Converter converter58 = null;
        restAdapter53.converter = converter58;
        retrofit.converter.Converter converter60 = restAdapter53.converter;
        retrofit.converter.Converter converter61 = null;
        restAdapter53.converter = converter61;
        java.util.concurrent.Executor executor63 = restAdapter53.httpExecutor;
        retrofit.RestAdapter.Log log64 = restAdapter53.log;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter65.logLevel = logLevel67;
        retrofit.ErrorHandler errorHandler69 = null;
        restAdapter65.errorHandler = errorHandler69;
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter65.logLevel;
        restAdapter53.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder40.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("hi!");
        retrofit.RestAdapter.Builder builder77 = builder75.setServer("Retrofit-Idle");
        java.util.concurrent.Executor executor78 = builder75.callbackExecutor;
        retrofit.Server server79 = builder75.server;
        retrofit.RestAdapter.Builder builder80 = builder3.setServer(server79);
        retrofit.Profiler profiler81 = null;
        builder80.profiler = profiler81;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(errorHandler26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertNull(errorHandler56);
        org.junit.Assert.assertNull(requestInterceptor57);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(server79);
        org.junit.Assert.assertNotNull(builder80);
    }

    @Test
    public void test07614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07614");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        java.util.concurrent.Executor executor4 = restAdapter0.httpExecutor;
        retrofit.Server server5 = restAdapter0.server;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.getLogLevel();
        java.util.concurrent.Executor executor7 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(executor7);
    }

    @Test
    public void test07615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07615");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        builder2.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder5 = builder2.setServer("hi!");
        retrofit.Server server6 = builder5.server;
        retrofit.RequestInterceptor requestInterceptor7 = null;
        builder5.requestInterceptor = requestInterceptor7;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RequestInterceptor requestInterceptor15 = restAdapter9.requestInterceptor;
        retrofit.ErrorHandler errorHandler16 = restAdapter9.errorHandler;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = null;
        builder20.clientProvider = provider28;
        retrofit.ErrorHandler errorHandler30 = builder20.errorHandler;
        retrofit.Server server31 = builder20.server;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder35 = builder32.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter36.new RestHandler();
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter36.logLevel = logLevel40;
        retrofit.RestAdapter.Builder builder42 = builder35.setLogLevel(logLevel40);
        retrofit.Server server43 = builder35.server;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.Log log46 = restAdapter44.log;
        java.util.concurrent.Executor executor47 = restAdapter44.httpExecutor;
        retrofit.Server server48 = null;
        retrofit.client.Client.Provider provider49 = null;
        java.util.concurrent.Executor executor50 = null;
        java.util.concurrent.Executor executor51 = null;
        retrofit.RequestInterceptor requestInterceptor52 = null;
        retrofit.converter.Converter converter53 = null;
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter57.logLevel = logLevel59;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server48, provider49, executor50, executor51, requestInterceptor52, converter53, profiler54, errorHandler55, log56, logLevel59);
        restAdapter44.log = log56;
        builder35.log = log56;
        retrofit.RestAdapter.Builder builder64 = builder20.setLog(log56);
        restAdapter9.log = log56;
        log56.log("");
        log56.log("hi!");
        retrofit.RestAdapter.Builder builder70 = builder5.setLog(log56);
        retrofit.RestAdapter restAdapter71 = builder70.build();
        retrofit.RequestInterceptor requestInterceptor72 = restAdapter71.requestInterceptor;
        retrofit.ErrorHandler errorHandler73 = restAdapter71.errorHandler;
        retrofit.RestAdapter.Builder builder74 = builder0.setErrorHandler(errorHandler73);
        retrofit.RequestInterceptor requestInterceptor75 = builder0.requestInterceptor;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(requestInterceptor15);
        org.junit.Assert.assertNull(errorHandler16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(restAdapter71);
        org.junit.Assert.assertNotNull(requestInterceptor72);
        org.junit.Assert.assertNotNull(errorHandler73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(requestInterceptor75);
    }

    @Test
    public void test07616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07616");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.converter.Converter converter3 = null;
        builder0.converter = converter3;
        retrofit.RestAdapter.Log log5 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log5;
        retrofit.RestAdapter.Log log7 = builder0.log;
        retrofit.ErrorHandler errorHandler8 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.client.Client.Provider provider20 = null;
        builder12.clientProvider = provider20;
        retrofit.ErrorHandler errorHandler22 = builder12.errorHandler;
        retrofit.Server server23 = builder12.server;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder27 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter28.new RestHandler();
        retrofit.RestAdapter.Log log31 = restAdapter28.log;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter28.logLevel = logLevel32;
        retrofit.RestAdapter.Builder builder34 = builder27.setLogLevel(logLevel32);
        retrofit.client.Client.Provider provider35 = builder34.clientProvider;
        retrofit.RestAdapter.Builder builder36 = builder12.setClient(provider35);
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.Log log40 = restAdapter38.log;
        java.util.concurrent.Executor executor41 = restAdapter38.httpExecutor;
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter51.logLevel = logLevel53;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel53);
        restAdapter38.log = log50;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder62 = builder57.setLogLevel(logLevel61);
        restAdapter38.logLevel = logLevel61;
        boolean boolean64 = logLevel61.log();
        retrofit.RestAdapter.Builder builder65 = builder36.setLogLevel(logLevel61);
        retrofit.ErrorHandler errorHandler66 = builder65.errorHandler;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor68 = builder67.callbackExecutor;
        retrofit.Profiler profiler69 = null;
        builder67.profiler = profiler69;
        retrofit.RestAdapter.Log log71 = builder67.log;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder75 = builder72.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter76.new RestHandler();
        retrofit.RestAdapter.Log log79 = restAdapter76.log;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter76.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = builder75.setLogLevel(logLevel80);
        java.util.concurrent.Executor executor83 = builder75.callbackExecutor;
        builder67.httpExecutor = executor83;
        builder67.ensureSaneDefaults();
        retrofit.client.Client.Provider provider86 = builder67.clientProvider;
        retrofit.RestAdapter.Builder builder88 = builder67.setServer("Retrofit-Idle");
        java.util.concurrent.Executor executor89 = null;
        builder88.callbackExecutor = executor89;
        retrofit.client.Client.Provider provider91 = builder88.clientProvider;
        builder65.clientProvider = provider91;
        builder0.clientProvider = provider91;
        org.junit.Assert.assertNotNull(errorHandler2);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(errorHandler22);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(logLevel77);
        org.junit.Assert.assertNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(executor83);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(provider91);
    }

    @Test
    public void test07617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07617");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.RestAdapter.Log log5 = restAdapter0.log;
        retrofit.Server server6 = restAdapter0.server;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.logLevel;
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.Log log10 = restAdapter8.log;
        java.util.concurrent.Executor executor11 = restAdapter8.httpExecutor;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter28.logLevel = logLevel30;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel30);
        restAdapter13.log = log27;
        builder12.log = log27;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.Log log42 = restAdapter39.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.logLevel = logLevel43;
        retrofit.RestAdapter.Builder builder45 = builder38.setLogLevel(logLevel43);
        retrofit.Server server46 = builder38.server;
        builder12.server = server46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder51 = builder48.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.Log log55 = restAdapter52.log;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter52.logLevel = logLevel56;
        retrofit.RestAdapter.Builder builder58 = builder51.setLogLevel(logLevel56);
        retrofit.client.Client.Provider provider59 = null;
        builder51.clientProvider = provider59;
        retrofit.RequestInterceptor requestInterceptor61 = builder51.requestInterceptor;
        retrofit.RestAdapter.Builder builder62 = builder12.setRequestInterceptor(requestInterceptor61);
        restAdapter8.requestInterceptor = requestInterceptor61;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder67 = builder64.setServer("hi!");
        retrofit.Server server68 = builder67.server;
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.Log log74 = restAdapter71.log;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter71.logLevel = logLevel75;
        retrofit.converter.Converter converter77 = restAdapter71.converter;
        java.util.concurrent.Executor executor78 = restAdapter71.callbackExecutor;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder82 = builder79.setServer("hi!");
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter83.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler85 = restAdapter83.new RestHandler();
        retrofit.RestAdapter.Log log86 = restAdapter83.log;
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter83.logLevel = logLevel87;
        retrofit.RestAdapter.Builder builder89 = builder82.setLogLevel(logLevel87);
        retrofit.client.Client.Provider provider90 = null;
        builder82.clientProvider = provider90;
        retrofit.RequestInterceptor requestInterceptor92 = builder82.requestInterceptor;
        retrofit.RestAdapter restAdapter93 = builder82.build();
        retrofit.ErrorHandler errorHandler94 = builder82.errorHandler;
        retrofit.converter.Converter converter95 = builder82.converter;
        restAdapter71.converter = converter95;
        builder67.converter = converter95;
        restAdapter8.converter = converter95;
        restAdapter0.converter = converter95;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(server68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter77);
        org.junit.Assert.assertNull(executor78);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(logLevel84);
        org.junit.Assert.assertNull(log86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(requestInterceptor92);
        org.junit.Assert.assertNotNull(restAdapter93);
        org.junit.Assert.assertNotNull(errorHandler94);
        org.junit.Assert.assertNotNull(converter95);
    }

    @Test
    public void test07618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07618");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.Profiler profiler15 = builder3.profiler;
        retrofit.ErrorHandler errorHandler16 = builder3.errorHandler;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel34);
        restAdapter17.log = log31;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter38.logLevel = logLevel40;
        retrofit.ErrorHandler errorHandler42 = null;
        restAdapter38.errorHandler = errorHandler42;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.Server server45 = restAdapter44.server;
        retrofit.RequestInterceptor requestInterceptor46 = restAdapter44.requestInterceptor;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder50 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        retrofit.RestAdapter.Log log54 = restAdapter51.log;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter51.logLevel = logLevel55;
        retrofit.RestAdapter.Builder builder57 = builder50.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder59 = builder57.setServer("hi!");
        retrofit.client.Client.Provider provider60 = builder59.clientProvider;
        restAdapter44.clientProvider = provider60;
        restAdapter38.clientProvider = provider60;
        restAdapter17.clientProvider = provider60;
        retrofit.RestAdapter.Builder builder64 = builder3.setClient(provider60);
        retrofit.RestAdapter restAdapter65 = builder64.build();
        retrofit.converter.Converter converter66 = restAdapter65.converter;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(converter66);
    }

    @Test
    public void test07619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07619");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter0.getLogLevel();
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.Profiler profiler7 = restAdapter6.profiler;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter6.new RestHandler();
        retrofit.converter.Converter converter9 = restAdapter6.converter;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter6.logLevel = logLevel10;
        retrofit.Profiler profiler12 = restAdapter6.profiler;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        builder23.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor25 = builder23.requestInterceptor;
        retrofit.client.Client.Provider provider26 = builder23.clientProvider;
        restAdapter6.clientProvider = provider26;
        restAdapter0.clientProvider = provider26;
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor30 = restAdapter0.requestInterceptor;
        retrofit.client.Client.Provider provider31 = restAdapter0.clientProvider;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(provider26);
        org.junit.Assert.assertNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(provider31);
    }

    @Test
    public void test07620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07620");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        java.util.concurrent.Executor executor16 = builder8.callbackExecutor;
        builder0.httpExecutor = executor16;
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider19 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder21 = builder0.setServer("Retrofit-Idle");
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        retrofit.ErrorHandler errorHandler25 = restAdapter23.errorHandler;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNotNull(errorHandler25);
    }

    @Test
    public void test07621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07621");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        java.util.concurrent.Executor executor11 = builder3.callbackExecutor;
        retrofit.Profiler profiler12 = null;
        builder3.profiler = profiler12;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        java.util.concurrent.Executor executor29 = builder21.callbackExecutor;
        restAdapter14.callbackExecutor = executor29;
        builder3.callbackExecutor = executor29;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        java.util.concurrent.Executor executor47 = builder39.callbackExecutor;
        restAdapter32.callbackExecutor = executor47;
        builder3.httpExecutor = executor47;
        retrofit.Server server50 = builder3.server;
        retrofit.RestAdapter restAdapter51 = builder3.build();
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder3.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler55 = builder3.errorHandler;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log57 = restAdapter56.log;
        java.util.concurrent.Executor executor58 = null;
        restAdapter56.callbackExecutor = executor58;
        retrofit.RestAdapter.Log log60 = restAdapter56.log;
        retrofit.Server server61 = restAdapter56.server;
        retrofit.converter.Converter converter62 = null;
        restAdapter56.converter = converter62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder67 = builder64.setServer("hi!");
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler70 = restAdapter68.new RestHandler();
        retrofit.RestAdapter.Log log71 = restAdapter68.log;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter68.logLevel = logLevel72;
        retrofit.RestAdapter.Builder builder74 = builder67.setLogLevel(logLevel72);
        java.util.concurrent.Executor executor75 = builder67.callbackExecutor;
        retrofit.Profiler profiler76 = null;
        builder67.profiler = profiler76;
        retrofit.client.Client.Provider provider78 = builder67.clientProvider;
        restAdapter56.clientProvider = provider78;
        retrofit.RestAdapter.Builder builder80 = builder3.setClient(provider78);
        retrofit.client.Client.Provider provider81 = builder3.clientProvider;
        retrofit.client.Client client82 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder83 = builder3.setClient(client82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(errorHandler55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(executor75);
        org.junit.Assert.assertNotNull(provider78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(provider81);
    }

    @Test
    public void test07622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07622");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log1 = restAdapter0.log;
        java.util.concurrent.Executor executor2 = null;
        restAdapter0.callbackExecutor = executor2;
        retrofit.Server server4 = restAdapter0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder10 = builder5.setLogLevel(logLevel9);
        retrofit.Server server11 = null;
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.RequestInterceptor requestInterceptor15 = null;
        retrofit.converter.Converter converter16 = null;
        retrofit.Profiler profiler17 = null;
        retrofit.ErrorHandler errorHandler18 = null;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter20.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.Log log23 = restAdapter20.log;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter20.logLevel = logLevel24;
        retrofit.Server server26 = null;
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.converter.Converter converter31 = null;
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter35.logLevel = logLevel37;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor30, converter31, profiler32, errorHandler33, log34, logLevel37);
        restAdapter20.log = log34;
        builder19.log = log34;
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter51.logLevel = logLevel53;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel53);
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor15, converter16, profiler17, errorHandler18, log34, logLevel53);
        retrofit.RestAdapter.Builder builder57 = builder5.setLog(log34);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder61 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter62.new RestHandler();
        retrofit.RestAdapter.Log log65 = restAdapter62.log;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter62.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder68 = builder61.setLogLevel(logLevel66);
        retrofit.RestAdapter restAdapter69 = builder61.build();
        retrofit.converter.Converter converter70 = builder61.converter;
        retrofit.RestAdapter.Builder builder71 = builder5.setConverter(converter70);
        restAdapter0.converter = converter70;
        retrofit.converter.Converter converter73 = restAdapter0.converter;
        retrofit.ErrorHandler errorHandler74 = restAdapter0.errorHandler;
        org.junit.Assert.assertNull(log1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(restAdapter69);
        org.junit.Assert.assertNotNull(converter70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(converter73);
        org.junit.Assert.assertNull(errorHandler74);
    }

    @Test
    public void test07623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07623");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.client.Client.Provider provider15 = restAdapter14.clientProvider;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.Log log18 = restAdapter16.log;
        retrofit.ErrorHandler errorHandler19 = restAdapter16.errorHandler;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter16.requestInterceptor;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.client.Client.Provider provider32 = null;
        builder24.clientProvider = provider32;
        retrofit.ErrorHandler errorHandler34 = builder24.errorHandler;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.Log log42 = restAdapter39.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.logLevel = logLevel43;
        retrofit.RestAdapter.Builder builder45 = builder38.setLogLevel(logLevel43);
        retrofit.Server server46 = builder38.server;
        retrofit.RestAdapter.Builder builder47 = builder24.setServer(server46);
        java.util.concurrent.Executor executor48 = builder47.httpExecutor;
        restAdapter16.httpExecutor = executor48;
        restAdapter14.httpExecutor = executor48;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter55.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder54.setLogLevel(logLevel59);
        retrofit.client.Client.Provider provider62 = null;
        builder54.clientProvider = provider62;
        retrofit.RequestInterceptor requestInterceptor64 = builder54.requestInterceptor;
        retrofit.RestAdapter restAdapter65 = builder54.build();
        retrofit.Profiler profiler66 = builder54.profiler;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder72 = builder67.setLogLevel(logLevel71);
        retrofit.Server server73 = null;
        builder67.server = server73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.client.Client.Provider provider86 = null;
        builder78.clientProvider = provider86;
        retrofit.RequestInterceptor requestInterceptor88 = builder78.requestInterceptor;
        retrofit.RestAdapter restAdapter89 = builder78.build();
        retrofit.ErrorHandler errorHandler90 = builder78.errorHandler;
        retrofit.converter.Converter converter91 = builder78.converter;
        retrofit.RestAdapter.Builder builder92 = builder67.setConverter(converter91);
        retrofit.RestAdapter.Log log93 = builder67.log;
        builder54.log = log93;
        restAdapter14.log = log93;
        retrofit.client.Client.Provider provider96 = restAdapter14.clientProvider;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNull(requestInterceptor20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNull(profiler66);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(requestInterceptor88);
        org.junit.Assert.assertNotNull(restAdapter89);
        org.junit.Assert.assertNotNull(errorHandler90);
        org.junit.Assert.assertNotNull(converter91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(log93);
        org.junit.Assert.assertNotNull(provider96);
    }

    @Test
    public void test07624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07624");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.converter.Converter converter2 = null;
        restAdapter0.converter = converter2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler5 = null;
        restAdapter0.profiler = profiler5;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter0.logLevel;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter9.logLevel = logLevel11;
        retrofit.ErrorHandler errorHandler13 = null;
        restAdapter9.errorHandler = errorHandler13;
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter9.logLevel;
        retrofit.converter.Converter converter16 = null;
        restAdapter9.converter = converter16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.client.Client.Provider provider31 = builder30.clientProvider;
        restAdapter9.clientProvider = provider31;
        restAdapter0.clientProvider = provider31;
        retrofit.client.Client.Provider provider34 = restAdapter0.clientProvider;
        retrofit.converter.Converter converter35 = restAdapter0.converter;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider31);
        org.junit.Assert.assertNotNull(provider34);
        org.junit.Assert.assertNull(converter35);
    }

    @Test
    public void test07625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07625");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder6 = builder3.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.RestAdapter.Builder builder13 = builder6.setLogLevel(logLevel11);
        retrofit.client.Client.Provider provider14 = null;
        builder6.clientProvider = provider14;
        retrofit.RequestInterceptor requestInterceptor16 = builder6.requestInterceptor;
        retrofit.RestAdapter restAdapter17 = builder6.build();
        java.util.concurrent.Executor executor18 = restAdapter17.callbackExecutor;
        retrofit.converter.Converter converter19 = restAdapter17.converter;
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.client.Client.Provider provider32 = null;
        builder24.clientProvider = provider32;
        retrofit.ErrorHandler errorHandler34 = builder24.errorHandler;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.Log log42 = restAdapter39.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.logLevel = logLevel43;
        retrofit.RestAdapter.Builder builder45 = builder38.setLogLevel(logLevel43);
        retrofit.Server server46 = builder38.server;
        retrofit.RestAdapter.Builder builder47 = builder24.setServer(server46);
        java.util.concurrent.Executor executor48 = builder47.httpExecutor;
        restAdapter17.callbackExecutor = executor48;
        restAdapter0.httpExecutor = executor48;
        retrofit.Server server51 = restAdapter0.server;
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler53 = restAdapter0.profiler;
        retrofit.converter.Converter converter54 = restAdapter0.converter;
        retrofit.ErrorHandler errorHandler55 = restAdapter0.errorHandler;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.Log log58 = restAdapter56.log;
        retrofit.ErrorHandler errorHandler59 = restAdapter56.errorHandler;
        retrofit.RequestInterceptor requestInterceptor60 = restAdapter56.requestInterceptor;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.Log log68 = restAdapter65.log;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter65.logLevel = logLevel69;
        retrofit.RestAdapter.Builder builder71 = builder64.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider72 = null;
        builder64.clientProvider = provider72;
        retrofit.ErrorHandler errorHandler74 = builder64.errorHandler;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.Server server86 = builder78.server;
        retrofit.RestAdapter.Builder builder87 = builder64.setServer(server86);
        java.util.concurrent.Executor executor88 = builder87.httpExecutor;
        restAdapter56.httpExecutor = executor88;
        restAdapter0.httpExecutor = executor88;
        retrofit.Profiler profiler91 = null;
        restAdapter0.profiler = profiler91;
        retrofit.Profiler profiler93 = null;
        restAdapter0.profiler = profiler93;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(requestInterceptor16);
        org.junit.Assert.assertNotNull(restAdapter17);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(converter19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNull(errorHandler55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertNull(errorHandler59);
        org.junit.Assert.assertNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(errorHandler74);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(server86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(executor88);
    }

    @Test
    public void test07626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07626");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel25);
        builder3.logLevel = logLevel25;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.Log log31 = restAdapter29.log;
        java.util.concurrent.Executor executor32 = restAdapter29.httpExecutor;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter42.logLevel = logLevel44;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel44);
        restAdapter29.log = log41;
        retrofit.RestAdapter.Builder builder48 = builder3.setLog(log41);
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Builder builder51 = builder48.setServer("hi!");
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(builder51);
    }

    @Test
    public void test07627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07627");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.Server server7 = restAdapter0.server;
        java.util.concurrent.Executor executor8 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter24.logLevel = logLevel26;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel26);
        restAdapter9.log = log23;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter30.logLevel = logLevel32;
        retrofit.ErrorHandler errorHandler34 = null;
        restAdapter30.errorHandler = errorHandler34;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.Server server37 = restAdapter36.server;
        retrofit.RequestInterceptor requestInterceptor38 = restAdapter36.requestInterceptor;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.client.Client.Provider provider52 = builder51.clientProvider;
        restAdapter36.clientProvider = provider52;
        restAdapter30.clientProvider = provider52;
        restAdapter9.clientProvider = provider52;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider57 = null;
        builder56.clientProvider = provider57;
        retrofit.RestAdapter.Builder builder60 = builder56.setServer("Retrofit-Idle");
        retrofit.Server server61 = builder56.server;
        restAdapter9.server = server61;
        java.util.concurrent.Executor executor63 = restAdapter9.callbackExecutor;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder67 = builder64.setServer("hi!");
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler70 = restAdapter68.new RestHandler();
        retrofit.RestAdapter.Log log71 = restAdapter68.log;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter68.logLevel = logLevel72;
        retrofit.RestAdapter.Builder builder74 = builder67.setLogLevel(logLevel72);
        retrofit.Server server75 = builder67.server;
        restAdapter9.server = server75;
        retrofit.client.Client.Provider provider77 = restAdapter9.clientProvider;
        restAdapter0.clientProvider = provider77;
        retrofit.client.Request request79 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request80 = restAdapter0.logAndReplaceRequest(request79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(provider52);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(server75);
        org.junit.Assert.assertNotNull(provider77);
    }

    @Test
    public void test07628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07628");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RestAdapter.LogLevel logLevel13 = builder3.logLevel;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder23 = builder18.setLogLevel(logLevel22);
        retrofit.converter.Converter converter24 = null;
        builder18.converter = converter24;
        java.util.concurrent.Executor executor26 = builder18.callbackExecutor;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder32 = builder27.setLogLevel(logLevel31);
        retrofit.converter.Converter converter33 = null;
        builder27.converter = converter33;
        java.util.concurrent.Executor executor35 = builder27.callbackExecutor;
        retrofit.RestAdapter.Builder builder36 = builder17.setExecutors(executor26, executor35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder47 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.Log log61 = restAdapter58.log;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        java.util.concurrent.Executor executor65 = builder57.callbackExecutor;
        restAdapter50.callbackExecutor = executor65;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder74 = builder71.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter75.new RestHandler();
        retrofit.RestAdapter.Log log78 = restAdapter75.log;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter75.logLevel = logLevel79;
        retrofit.RestAdapter.Builder builder81 = builder74.setLogLevel(logLevel79);
        java.util.concurrent.Executor executor82 = builder74.callbackExecutor;
        restAdapter67.callbackExecutor = executor82;
        retrofit.RestAdapter.Builder builder84 = builder49.setExecutors(executor65, executor82);
        java.util.concurrent.Executor executor85 = builder84.callbackExecutor;
        retrofit.RestAdapter.Builder builder86 = builder3.setExecutors(executor26, executor85);
        retrofit.client.Client.Provider provider87 = builder86.clientProvider;
        retrofit.ErrorHandler errorHandler88 = builder86.errorHandler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(executor65);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(logLevel70);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(logLevel76);
        org.junit.Assert.assertNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(executor82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(provider87);
        org.junit.Assert.assertNotNull(errorHandler88);
    }

    @Test
    public void test07629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07629");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.Profiler profiler13 = builder10.profiler;
        retrofit.ErrorHandler errorHandler14 = builder10.errorHandler;
        builder10.ensureSaneDefaults();
        builder10.ensureSaneDefaults();
        retrofit.Profiler profiler17 = builder10.profiler;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder23 = builder18.setLogLevel(logLevel22);
        retrofit.converter.Converter converter24 = null;
        builder18.converter = converter24;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter26.logLevel = logLevel28;
        retrofit.ErrorHandler errorHandler30 = null;
        restAdapter26.errorHandler = errorHandler30;
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter26.logLevel;
        retrofit.converter.Converter converter33 = null;
        restAdapter26.converter = converter33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.Log log42 = restAdapter39.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.logLevel = logLevel43;
        retrofit.RestAdapter.Builder builder45 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("hi!");
        retrofit.client.Client.Provider provider48 = builder47.clientProvider;
        restAdapter26.clientProvider = provider48;
        retrofit.RestAdapter.Builder builder50 = builder18.setClient(provider48);
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder55 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter56.new RestHandler();
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter56.logLevel = logLevel60;
        retrofit.RestAdapter.Builder builder62 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider63 = null;
        builder55.clientProvider = provider63;
        retrofit.RequestInterceptor requestInterceptor65 = builder55.requestInterceptor;
        retrofit.RestAdapter restAdapter66 = builder55.build();
        java.util.concurrent.Executor executor67 = restAdapter66.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.client.Client.Provider provider69 = restAdapter66.clientProvider;
        retrofit.RestAdapter.Log log70 = restAdapter66.log;
        builder50.log = log70;
        retrofit.RestAdapter.Builder builder73 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter();
        retrofit.Profiler profiler75 = restAdapter74.profiler;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder79 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler82 = restAdapter80.new RestHandler();
        retrofit.RestAdapter.Log log83 = restAdapter80.log;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter80.logLevel = logLevel84;
        retrofit.RestAdapter.Builder builder86 = builder79.setLogLevel(logLevel84);
        retrofit.client.Client.Provider provider87 = null;
        builder79.clientProvider = provider87;
        retrofit.ErrorHandler errorHandler89 = builder79.errorHandler;
        restAdapter74.errorHandler = errorHandler89;
        retrofit.RestAdapter.Builder builder91 = builder73.setErrorHandler(errorHandler89);
        builder10.errorHandler = errorHandler89;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(restAdapter66);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNotNull(provider69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(profiler75);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(logLevel81);
        org.junit.Assert.assertNull(log83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(errorHandler89);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test07630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07630");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.RequestInterceptor requestInterceptor49 = builder39.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = builder0.setRequestInterceptor(requestInterceptor49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider52 = null;
        builder51.clientProvider = provider52;
        retrofit.RestAdapter.Builder builder55 = builder51.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder59 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter60.new RestHandler();
        retrofit.RestAdapter.Log log63 = restAdapter60.log;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter60.logLevel = logLevel64;
        retrofit.RestAdapter.Builder builder66 = builder59.setLogLevel(logLevel64);
        retrofit.client.Client.Provider provider67 = null;
        builder59.clientProvider = provider67;
        retrofit.RequestInterceptor requestInterceptor69 = builder59.requestInterceptor;
        retrofit.RestAdapter restAdapter70 = builder59.build();
        retrofit.ErrorHandler errorHandler71 = builder59.errorHandler;
        retrofit.RestAdapter.Builder builder72 = builder51.setErrorHandler(errorHandler71);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder76 = builder73.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter77.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler79 = restAdapter77.new RestHandler();
        retrofit.RestAdapter.Log log80 = restAdapter77.log;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter77.logLevel = logLevel81;
        retrofit.RestAdapter.Builder builder83 = builder76.setLogLevel(logLevel81);
        retrofit.client.Client.Provider provider84 = null;
        builder76.clientProvider = provider84;
        retrofit.RequestInterceptor requestInterceptor86 = builder76.requestInterceptor;
        retrofit.RestAdapter restAdapter87 = builder76.build();
        retrofit.ErrorHandler errorHandler88 = builder76.errorHandler;
        retrofit.converter.Converter converter89 = builder76.converter;
        builder72.converter = converter89;
        retrofit.RestAdapter.Builder builder91 = builder50.setConverter(converter89);
        retrofit.RequestInterceptor requestInterceptor92 = builder50.requestInterceptor;
        retrofit.ErrorHandler errorHandler93 = builder50.errorHandler;
        builder50.ensureSaneDefaults();
        retrofit.Server server95 = builder50.server;
        retrofit.client.Client.Provider provider96 = builder50.clientProvider;
        retrofit.converter.Converter converter97 = builder50.converter;
        java.util.concurrent.Executor executor98 = builder50.callbackExecutor;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNull(log63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(requestInterceptor69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(errorHandler71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(logLevel78);
        org.junit.Assert.assertNull(log80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(requestInterceptor86);
        org.junit.Assert.assertNotNull(restAdapter87);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertNotNull(converter89);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(requestInterceptor92);
        org.junit.Assert.assertNull(errorHandler93);
        org.junit.Assert.assertNotNull(server95);
        org.junit.Assert.assertNotNull(provider96);
        org.junit.Assert.assertNotNull(converter97);
        org.junit.Assert.assertNotNull(executor98);
    }

    @Test
    public void test07631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07631");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RestAdapter.LogLevel logLevel13 = builder3.logLevel;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder23 = builder18.setLogLevel(logLevel22);
        retrofit.converter.Converter converter24 = null;
        builder18.converter = converter24;
        java.util.concurrent.Executor executor26 = builder18.callbackExecutor;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder32 = builder27.setLogLevel(logLevel31);
        retrofit.converter.Converter converter33 = null;
        builder27.converter = converter33;
        java.util.concurrent.Executor executor35 = builder27.callbackExecutor;
        retrofit.RestAdapter.Builder builder36 = builder17.setExecutors(executor26, executor35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder47 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.Log log61 = restAdapter58.log;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        java.util.concurrent.Executor executor65 = builder57.callbackExecutor;
        restAdapter50.callbackExecutor = executor65;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder74 = builder71.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter75.new RestHandler();
        retrofit.RestAdapter.Log log78 = restAdapter75.log;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter75.logLevel = logLevel79;
        retrofit.RestAdapter.Builder builder81 = builder74.setLogLevel(logLevel79);
        java.util.concurrent.Executor executor82 = builder74.callbackExecutor;
        restAdapter67.callbackExecutor = executor82;
        retrofit.RestAdapter.Builder builder84 = builder49.setExecutors(executor65, executor82);
        java.util.concurrent.Executor executor85 = builder84.callbackExecutor;
        retrofit.RestAdapter.Builder builder86 = builder3.setExecutors(executor26, executor85);
        retrofit.client.Client.Provider provider87 = builder86.clientProvider;
        retrofit.converter.Converter converter88 = builder86.converter;
        java.util.concurrent.Executor executor89 = builder86.httpExecutor;
        retrofit.Profiler profiler90 = null;
        builder86.profiler = profiler90;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(executor65);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(logLevel70);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(logLevel76);
        org.junit.Assert.assertNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(executor82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(provider87);
        org.junit.Assert.assertNotNull(converter88);
        org.junit.Assert.assertNotNull(executor89);
    }

    @Test
    public void test07632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07632");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.Server server3 = restAdapter0.server;
        java.util.concurrent.Executor executor4 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = null;
        builder8.clientProvider = provider16;
        retrofit.ErrorHandler errorHandler18 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder29 = builder22.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("hi!");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor33 = builder32.callbackExecutor;
        retrofit.Profiler profiler34 = null;
        builder32.profiler = profiler34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.Server server47 = builder39.server;
        builder32.server = server47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.Log log53 = restAdapter50.log;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter50.logLevel = logLevel54;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel67);
        restAdapter50.log = log64;
        builder49.log = log64;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder75 = builder72.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter76.new RestHandler();
        retrofit.RestAdapter.Log log79 = restAdapter76.log;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter76.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = builder75.setLogLevel(logLevel80);
        retrofit.Server server83 = builder75.server;
        builder49.server = server83;
        builder32.server = server83;
        retrofit.RestAdapter.Builder builder86 = builder29.setServer(server83);
        retrofit.RestAdapter.Builder builder87 = builder8.setServer(server83);
        retrofit.RestAdapter.LogLevel logLevel88 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder89 = builder8.setLogLevel(logLevel88);
        java.util.concurrent.Executor executor90 = builder8.callbackExecutor;
        restAdapter0.httpExecutor = executor90;
        retrofit.Profiler profiler92 = null;
        restAdapter0.profiler = profiler92;
        retrofit.ErrorHandler errorHandler94 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler95 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider96 = restAdapter0.clientProvider;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(logLevel77);
        org.junit.Assert.assertNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(server83);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(executor90);
        org.junit.Assert.assertNull(errorHandler94);
        org.junit.Assert.assertNull(provider96);
    }

    @Test
    public void test07633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07633");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter4.logLevel = logLevel6;
        retrofit.ErrorHandler errorHandler8 = null;
        restAdapter4.errorHandler = errorHandler8;
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter4.logLevel;
        restAdapter0.logLevel = logLevel10;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter0.new RestHandler();
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.Profiler profiler14 = restAdapter13.profiler;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        retrofit.client.Client.Provider provider26 = null;
        builder18.clientProvider = provider26;
        retrofit.ErrorHandler errorHandler28 = builder18.errorHandler;
        restAdapter13.errorHandler = errorHandler28;
        restAdapter0.errorHandler = errorHandler28;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.Log log35 = restAdapter32.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter32.logLevel = logLevel36;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter47.logLevel = logLevel49;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel49);
        restAdapter32.log = log46;
        builder31.log = log46;
        restAdapter0.log = log46;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder58 = builder55.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter59.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler61 = restAdapter59.new RestHandler();
        retrofit.RestAdapter.Log log62 = restAdapter59.log;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter59.logLevel = logLevel63;
        retrofit.RestAdapter.Builder builder65 = builder58.setLogLevel(logLevel63);
        java.util.concurrent.Executor executor66 = builder58.callbackExecutor;
        retrofit.Profiler profiler67 = null;
        builder58.profiler = profiler67;
        retrofit.client.Client.Provider provider69 = builder58.clientProvider;
        restAdapter0.clientProvider = provider69;
        retrofit.RestAdapter.Log log71 = restAdapter0.log;
        retrofit.converter.Converter converter72 = restAdapter0.converter;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(logLevel60);
        org.junit.Assert.assertNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(provider69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNull(converter72);
    }

    @Test
    public void test07634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07634");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Server server1 = restAdapter0.server;
        retrofit.RequestInterceptor requestInterceptor2 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder6 = builder3.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.RestAdapter.Builder builder13 = builder6.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("hi!");
        retrofit.client.Client.Provider provider16 = builder15.clientProvider;
        restAdapter0.clientProvider = provider16;
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter20.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.Log log23 = restAdapter20.log;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter20.logLevel = logLevel24;
        retrofit.Server server26 = null;
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.converter.Converter converter31 = null;
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter35.logLevel = logLevel37;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor30, converter31, profiler32, errorHandler33, log34, logLevel37);
        restAdapter20.log = log34;
        builder19.log = log34;
        log34.log("Retrofit-Idle");
        restAdapter0.log = log34;
        retrofit.client.Client.Provider provider45 = restAdapter0.clientProvider;
        retrofit.Server server46 = restAdapter0.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider16);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNull(server46);
    }

    @Test
    public void test07635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07635");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel54);
        retrofit.RestAdapter.Builder builder58 = builder10.setLog(log35);
        retrofit.RestAdapter restAdapter59 = builder10.build();
        retrofit.Profiler profiler60 = null;
        restAdapter59.profiler = profiler60;
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter59.new RestHandler();
        retrofit.Profiler profiler63 = restAdapter59.profiler;
        retrofit.client.Response response65 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response67 = restAdapter59.logAndReplaceResponse("hi!", response65, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNull(profiler63);
    }

    @Test
    public void test07636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07636");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        java.util.concurrent.Executor executor15 = restAdapter14.callbackExecutor;
        retrofit.converter.Converter converter16 = restAdapter14.converter;
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel35);
        restAdapter18.log = log32;
        log32.log("Retrofit-Idle");
        restAdapter14.log = log32;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.logLevel;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder47 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter48.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder54 = builder47.setLogLevel(logLevel52);
        retrofit.client.Client.Provider provider55 = null;
        builder47.clientProvider = provider55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        retrofit.client.Client.Provider provider68 = null;
        builder60.clientProvider = provider68;
        retrofit.ErrorHandler errorHandler70 = builder60.errorHandler;
        retrofit.RestAdapter.Builder builder71 = builder47.setErrorHandler(errorHandler70);
        restAdapter42.errorHandler = errorHandler70;
        restAdapter14.errorHandler = errorHandler70;
        java.util.concurrent.Executor executor74 = restAdapter14.callbackExecutor;
        java.util.concurrent.Executor executor75 = restAdapter14.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler76 = restAdapter14.new RestHandler();
        retrofit.Profiler profiler77 = null;
        restAdapter14.profiler = profiler77;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(converter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(executor74);
        org.junit.Assert.assertNotNull(executor75);
    }

    @Test
    public void test07637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07637");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Log log4 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log6 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.logLevel;
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder14 = builder9.setLogLevel(logLevel13);
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.Log log27 = restAdapter24.log;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter24.logLevel = logLevel28;
        retrofit.Server server30 = null;
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.converter.Converter converter35 = null;
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter39.logLevel = logLevel41;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor34, converter35, profiler36, errorHandler37, log38, logLevel41);
        restAdapter24.log = log38;
        builder23.log = log38;
        retrofit.Server server46 = null;
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        retrofit.converter.Converter converter51 = null;
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter55.logLevel = logLevel57;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor50, converter51, profiler52, errorHandler53, log54, logLevel57);
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log38, logLevel57);
        retrofit.RestAdapter.Builder builder61 = builder9.setLog(log38);
        retrofit.Profiler profiler62 = null;
        builder9.profiler = profiler62;
        builder9.ensureSaneDefaults();
        java.util.concurrent.Executor executor65 = builder9.httpExecutor;
        retrofit.client.Client.Provider provider66 = builder9.clientProvider;
        restAdapter0.clientProvider = provider66;
        retrofit.Profiler profiler68 = null;
        restAdapter0.profiler = profiler68;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log6);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(executor65);
        org.junit.Assert.assertNotNull(provider66);
    }

    @Test
    public void test07638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07638");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter15.logLevel = logLevel17;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel17);
        restAdapter0.log = log14;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter21.logLevel = logLevel23;
        retrofit.ErrorHandler errorHandler25 = null;
        restAdapter21.errorHandler = errorHandler25;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.Server server28 = restAdapter27.server;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder33 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.RestAdapter.Builder builder40 = builder33.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.client.Client.Provider provider43 = builder42.clientProvider;
        restAdapter27.clientProvider = provider43;
        restAdapter21.clientProvider = provider43;
        restAdapter0.clientProvider = provider43;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter0.logLevel = logLevel47;
        retrofit.RestAdapter.Log log49 = restAdapter0.log;
        retrofit.Profiler profiler50 = restAdapter0.profiler;
        retrofit.Profiler profiler51 = null;
        restAdapter0.profiler = profiler51;
        retrofit.RequestInterceptor requestInterceptor53 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter0.logLevel;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(provider43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertNull(requestInterceptor53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test07639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07639");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter6.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.Log log9 = restAdapter6.log;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter6.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter restAdapter13 = builder5.build();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = builder14.callbackExecutor;
        retrofit.Profiler profiler16 = null;
        builder14.profiler = profiler16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        retrofit.Server server29 = builder21.server;
        builder14.server = server29;
        retrofit.RestAdapter.LogLevel logLevel31 = builder14.logLevel;
        retrofit.RestAdapter.Log log32 = builder14.log;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter33.logLevel = logLevel35;
        retrofit.ErrorHandler errorHandler37 = null;
        restAdapter33.errorHandler = errorHandler37;
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter33.logLevel;
        retrofit.converter.Converter converter40 = null;
        restAdapter33.converter = converter40;
        retrofit.converter.Converter converter42 = restAdapter33.converter;
        retrofit.Profiler profiler43 = null;
        restAdapter33.profiler = profiler43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder48 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        retrofit.RestAdapter.Log log52 = restAdapter49.log;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter49.logLevel = logLevel53;
        retrofit.RestAdapter.Builder builder55 = builder48.setLogLevel(logLevel53);
        java.util.concurrent.Executor executor56 = builder48.callbackExecutor;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter57.logLevel = logLevel59;
        retrofit.ErrorHandler errorHandler61 = null;
        restAdapter57.errorHandler = errorHandler61;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.Server server64 = restAdapter63.server;
        retrofit.RequestInterceptor requestInterceptor65 = restAdapter63.requestInterceptor;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder69 = builder66.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.Log log73 = restAdapter70.log;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter70.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.client.Client.Provider provider79 = builder78.clientProvider;
        restAdapter63.clientProvider = provider79;
        restAdapter57.clientProvider = provider79;
        retrofit.RestAdapter.Builder builder82 = builder48.setClient(provider79);
        restAdapter33.clientProvider = provider79;
        retrofit.RestAdapter.Builder builder84 = builder14.setClient(provider79);
        restAdapter13.clientProvider = provider79;
        retrofit.Server server86 = restAdapter13.server;
        retrofit.client.Response response88 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response90 = restAdapter13.logAndReplaceResponse("", response88, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(restAdapter13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(provider79);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(server86);
    }

    @Test
    public void test07640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07640");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel13 = builder10.logLevel;
        retrofit.RestAdapter restAdapter14 = builder10.build();
        retrofit.client.Client.Provider provider15 = restAdapter14.clientProvider;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider17 = null;
        builder16.clientProvider = provider17;
        retrofit.RestAdapter.Builder builder20 = builder16.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log21 = builder20.log;
        retrofit.Profiler profiler22 = builder20.profiler;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.client.Client.Provider provider34 = null;
        builder26.clientProvider = provider34;
        retrofit.ErrorHandler errorHandler36 = builder26.errorHandler;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder47 = builder40.setLogLevel(logLevel45);
        retrofit.Server server48 = builder40.server;
        retrofit.RestAdapter.Builder builder49 = builder26.setServer(server48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter54.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider61 = null;
        builder53.clientProvider = provider61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter67.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider74 = null;
        builder66.clientProvider = provider74;
        retrofit.ErrorHandler errorHandler76 = builder66.errorHandler;
        retrofit.RestAdapter.Builder builder77 = builder53.setErrorHandler(errorHandler76);
        java.util.concurrent.Executor executor78 = builder77.httpExecutor;
        builder49.httpExecutor = executor78;
        retrofit.converter.Converter converter80 = builder49.converter;
        retrofit.RestAdapter.Builder builder81 = builder20.setConverter(converter80);
        retrofit.converter.Converter converter82 = builder20.converter;
        restAdapter14.converter = converter82;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(errorHandler76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(converter80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(converter82);
    }

    @Test
    public void test07641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07641");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = null;
        builder17.clientProvider = provider25;
        retrofit.ErrorHandler errorHandler27 = builder17.errorHandler;
        retrofit.Server server28 = builder17.server;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider40 = builder39.clientProvider;
        retrofit.RestAdapter.Builder builder41 = builder17.setClient(provider40);
        builder3.clientProvider = provider40;
        retrofit.RestAdapter.Builder builder44 = builder3.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider45 = builder44.clientProvider;
        retrofit.RestAdapter.Builder builder47 = builder44.setServer("Retrofit-Idle");
        retrofit.RequestInterceptor requestInterceptor48 = builder47.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel49 = builder47.logLevel;
        retrofit.RestAdapter.Log log50 = builder47.log;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log50);
    }

    @Test
    public void test07642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07642");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter restAdapter11 = builder3.build();
        retrofit.converter.Converter converter12 = builder3.converter;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = builder13.callbackExecutor;
        retrofit.Profiler profiler15 = null;
        builder13.profiler = profiler15;
        retrofit.RestAdapter.Log log17 = builder13.log;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        java.util.concurrent.Executor executor29 = builder21.callbackExecutor;
        builder13.httpExecutor = executor29;
        builder13.ensureSaneDefaults();
        retrofit.client.Client.Provider provider32 = builder13.clientProvider;
        retrofit.RestAdapter.Builder builder33 = builder3.setClient(provider32);
        retrofit.client.Client client34 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder35 = builder3.setClient(client34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(restAdapter11);
        org.junit.Assert.assertNotNull(converter12);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(provider32);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test07643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07643");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.converter.Converter converter6 = null;
        builder0.converter = converter6;
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter8.logLevel = logLevel10;
        retrofit.ErrorHandler errorHandler12 = null;
        restAdapter8.errorHandler = errorHandler12;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter8.logLevel;
        retrofit.converter.Converter converter15 = null;
        restAdapter8.converter = converter15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.client.Client.Provider provider30 = builder29.clientProvider;
        restAdapter8.clientProvider = provider30;
        retrofit.RestAdapter.Builder builder32 = builder0.setClient(provider30);
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder37 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter38.new RestHandler();
        retrofit.RestAdapter.Log log41 = restAdapter38.log;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter38.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider45 = null;
        builder37.clientProvider = provider45;
        retrofit.RequestInterceptor requestInterceptor47 = builder37.requestInterceptor;
        retrofit.RestAdapter restAdapter48 = builder37.build();
        java.util.concurrent.Executor executor49 = restAdapter48.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.client.Client.Provider provider51 = restAdapter48.clientProvider;
        retrofit.RestAdapter.Log log52 = restAdapter48.log;
        builder32.log = log52;
        retrofit.RestAdapter.Builder builder55 = builder32.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.Profiler profiler57 = restAdapter56.profiler;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder61 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter62.new RestHandler();
        retrofit.RestAdapter.Log log65 = restAdapter62.log;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter62.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder68 = builder61.setLogLevel(logLevel66);
        retrofit.client.Client.Provider provider69 = null;
        builder61.clientProvider = provider69;
        retrofit.ErrorHandler errorHandler71 = builder61.errorHandler;
        restAdapter56.errorHandler = errorHandler71;
        retrofit.RestAdapter.Builder builder73 = builder55.setErrorHandler(errorHandler71);
        builder73.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(provider30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(restAdapter48);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(provider51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(errorHandler71);
        org.junit.Assert.assertNotNull(builder73);
    }

    @Test
    public void test07644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07644");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.logLevel;
        retrofit.RestAdapter.Log log4 = restAdapter0.log;
        retrofit.Server server5 = restAdapter0.server;
        java.util.concurrent.Executor executor6 = restAdapter0.callbackExecutor;
        retrofit.client.Response response8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response10 = restAdapter0.logAndReplaceResponse("hi!", response8, (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertNull(executor6);
    }

    @Test
    public void test07645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07645");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder9 = builder6.setServer("hi!");
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Log log13 = restAdapter10.log;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.logLevel = logLevel14;
        retrofit.RestAdapter.Builder builder16 = builder9.setLogLevel(logLevel14);
        retrofit.Server server17 = builder9.server;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        retrofit.client.Client.Provider provider29 = builder28.clientProvider;
        builder9.clientProvider = provider29;
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Log log32 = builder9.log;
        retrofit.Profiler profiler33 = builder9.profiler;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder37 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter38.new RestHandler();
        retrofit.RestAdapter.Log log41 = restAdapter38.log;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter38.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider45 = null;
        builder37.clientProvider = provider45;
        retrofit.ErrorHandler errorHandler47 = builder37.errorHandler;
        retrofit.Server server48 = null;
        retrofit.client.Client.Provider provider49 = null;
        java.util.concurrent.Executor executor50 = null;
        java.util.concurrent.Executor executor51 = null;
        retrofit.RequestInterceptor requestInterceptor52 = null;
        retrofit.converter.Converter converter53 = null;
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter57.logLevel = logLevel59;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server48, provider49, executor50, executor51, requestInterceptor52, converter53, profiler54, errorHandler55, log56, logLevel59);
        builder37.logLevel = logLevel59;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.Log log65 = restAdapter63.log;
        java.util.concurrent.Executor executor66 = restAdapter63.httpExecutor;
        retrofit.Server server67 = null;
        retrofit.client.Client.Provider provider68 = null;
        java.util.concurrent.Executor executor69 = null;
        java.util.concurrent.Executor executor70 = null;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        retrofit.converter.Converter converter72 = null;
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter76.logLevel = logLevel78;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server67, provider68, executor69, executor70, requestInterceptor71, converter72, profiler73, errorHandler74, log75, logLevel78);
        restAdapter63.log = log75;
        retrofit.RestAdapter.Builder builder82 = builder37.setLog(log75);
        retrofit.Server server83 = builder82.server;
        retrofit.RestAdapter.Builder builder84 = builder9.setServer(server83);
        retrofit.RestAdapter.Builder builder85 = builder0.setServer(server83);
        retrofit.Profiler profiler86 = builder0.profiler;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(provider29);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(errorHandler47);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertNull(log65);
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNull(logLevel77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(server83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNull(profiler86);
    }

    @Test
    public void test07646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07646");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter22.logLevel = logLevel24;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel24);
        restAdapter7.log = log21;
        builder6.log = log21;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.Server server40 = builder32.server;
        builder6.server = server40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder45 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter46.new RestHandler();
        retrofit.RestAdapter.Log log49 = restAdapter46.log;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter46.logLevel = logLevel50;
        retrofit.RestAdapter.Builder builder52 = builder45.setLogLevel(logLevel50);
        retrofit.client.Client.Provider provider53 = null;
        builder45.clientProvider = provider53;
        retrofit.RequestInterceptor requestInterceptor55 = builder45.requestInterceptor;
        retrofit.RestAdapter.Builder builder56 = builder6.setRequestInterceptor(requestInterceptor55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        retrofit.client.Client.Provider provider68 = null;
        builder60.clientProvider = provider68;
        retrofit.RequestInterceptor requestInterceptor70 = builder60.requestInterceptor;
        builder56.requestInterceptor = requestInterceptor70;
        retrofit.Server server72 = builder56.server;
        restAdapter0.server = server72;
        retrofit.Profiler profiler74 = restAdapter0.profiler;
        retrofit.Profiler profiler75 = null;
        restAdapter0.profiler = profiler75;
        java.util.concurrent.Executor executor77 = restAdapter0.httpExecutor;
        retrofit.ErrorHandler errorHandler78 = restAdapter0.errorHandler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNull(profiler74);
        org.junit.Assert.assertNull(executor77);
        org.junit.Assert.assertNull(errorHandler78);
    }

    @Test
    public void test07647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07647");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.Profiler profiler15 = builder3.profiler;
        retrofit.ErrorHandler errorHandler16 = builder3.errorHandler;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel34);
        restAdapter17.log = log31;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter38.logLevel = logLevel40;
        retrofit.ErrorHandler errorHandler42 = null;
        restAdapter38.errorHandler = errorHandler42;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.Server server45 = restAdapter44.server;
        retrofit.RequestInterceptor requestInterceptor46 = restAdapter44.requestInterceptor;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder50 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        retrofit.RestAdapter.Log log54 = restAdapter51.log;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter51.logLevel = logLevel55;
        retrofit.RestAdapter.Builder builder57 = builder50.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder59 = builder57.setServer("hi!");
        retrofit.client.Client.Provider provider60 = builder59.clientProvider;
        restAdapter44.clientProvider = provider60;
        restAdapter38.clientProvider = provider60;
        restAdapter17.clientProvider = provider60;
        retrofit.RestAdapter.Builder builder64 = builder3.setClient(provider60);
        retrofit.converter.Converter converter65 = builder64.converter;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider67 = null;
        builder66.clientProvider = provider67;
        retrofit.RestAdapter.Builder builder70 = builder66.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder74 = builder71.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter75.new RestHandler();
        retrofit.RestAdapter.Log log78 = restAdapter75.log;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter75.logLevel = logLevel79;
        retrofit.RestAdapter.Builder builder81 = builder74.setLogLevel(logLevel79);
        retrofit.client.Client.Provider provider82 = null;
        builder74.clientProvider = provider82;
        retrofit.RequestInterceptor requestInterceptor84 = builder74.requestInterceptor;
        retrofit.RestAdapter restAdapter85 = builder74.build();
        retrofit.ErrorHandler errorHandler86 = builder74.errorHandler;
        retrofit.RestAdapter.Builder builder87 = builder66.setErrorHandler(errorHandler86);
        retrofit.RestAdapter.Builder builder88 = builder64.setErrorHandler(errorHandler86);
        retrofit.ErrorHandler errorHandler89 = builder88.errorHandler;
        retrofit.Profiler profiler90 = null;
        builder88.profiler = profiler90;
        java.util.concurrent.Executor executor92 = builder88.callbackExecutor;
        retrofit.Server server93 = builder88.server;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(converter65);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(logLevel76);
        org.junit.Assert.assertNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(requestInterceptor84);
        org.junit.Assert.assertNotNull(restAdapter85);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(errorHandler89);
        org.junit.Assert.assertNotNull(executor92);
        org.junit.Assert.assertNotNull(server93);
    }

    @Test
    public void test07648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07648");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.Server server7 = restAdapter0.server;
        retrofit.ErrorHandler errorHandler8 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        restAdapter0.requestInterceptor = requestInterceptor9;
        java.lang.Throwable throwable11 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable11, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(errorHandler8);
    }

    @Test
    public void test07649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07649");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.Server server36 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        builder0.logLevel = logLevel37;
        java.util.concurrent.Executor executor39 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.RestAdapter.LogLevel logLevel53 = builder43.logLevel;
        builder0.logLevel = logLevel53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor56 = builder55.callbackExecutor;
        retrofit.Profiler profiler57 = null;
        builder55.profiler = profiler57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        builder59.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder62 = builder59.setServer("hi!");
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler65 = restAdapter63.new RestHandler();
        retrofit.RestAdapter.Log log66 = restAdapter63.log;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter63.logLevel = logLevel67;
        retrofit.RestAdapter.Builder builder69 = builder62.setLogLevel(logLevel67);
        retrofit.Server server70 = builder62.server;
        builder55.server = server70;
        retrofit.RestAdapter.LogLevel logLevel72 = builder55.logLevel;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter73.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler75 = restAdapter73.new RestHandler();
        retrofit.RestAdapter.Log log76 = restAdapter73.log;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter73.logLevel = logLevel77;
        retrofit.Server server79 = null;
        retrofit.client.Client.Provider provider80 = null;
        java.util.concurrent.Executor executor81 = null;
        java.util.concurrent.Executor executor82 = null;
        retrofit.RequestInterceptor requestInterceptor83 = null;
        retrofit.converter.Converter converter84 = null;
        retrofit.Profiler profiler85 = null;
        retrofit.ErrorHandler errorHandler86 = null;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel89 = restAdapter88.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter88.logLevel = logLevel90;
        retrofit.RestAdapter restAdapter92 = new retrofit.RestAdapter(server79, provider80, executor81, executor82, requestInterceptor83, converter84, profiler85, errorHandler86, log87, logLevel90);
        restAdapter73.log = log87;
        retrofit.RestAdapter.Builder builder94 = builder55.setLog(log87);
        builder0.log = log87;
        retrofit.ErrorHandler errorHandler96 = builder0.errorHandler;
        retrofit.RestAdapter restAdapter97 = builder0.build();
        java.util.concurrent.Executor executor98 = restAdapter97.httpExecutor;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(server70);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel74);
        org.junit.Assert.assertNull(log76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertNull(logLevel89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNull(errorHandler96);
        org.junit.Assert.assertNotNull(restAdapter97);
        org.junit.Assert.assertNotNull(executor98);
    }

    @Test
    public void test07650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07650");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.RequestInterceptor requestInterceptor49 = builder39.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = builder0.setRequestInterceptor(requestInterceptor49);
        retrofit.RequestInterceptor requestInterceptor51 = builder50.requestInterceptor;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel70);
        restAdapter53.log = log67;
        builder52.log = log67;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.Server server86 = builder78.server;
        builder52.server = server86;
        retrofit.RestAdapter.Builder builder88 = builder50.setServer(server86);
        builder88.ensureSaneDefaults();
        java.util.concurrent.Executor executor90 = builder88.callbackExecutor;
        retrofit.RestAdapter.Builder builder92 = builder88.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider93 = builder88.clientProvider;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(server86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(executor90);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(provider93);
    }

    @Test
    public void test07651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07651");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter24.logLevel = logLevel26;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel26);
        restAdapter9.log = log23;
        builder8.log = log23;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel42);
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log23, logLevel42);
        retrofit.Profiler profiler46 = null;
        restAdapter45.profiler = profiler46;
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor50 = builder49.callbackExecutor;
        retrofit.Profiler profiler51 = null;
        builder49.profiler = profiler51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Log log60 = restAdapter57.log;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter57.logLevel = logLevel61;
        retrofit.RestAdapter.Builder builder63 = builder56.setLogLevel(logLevel61);
        retrofit.Server server64 = builder56.server;
        builder49.server = server64;
        retrofit.RestAdapter.LogLevel logLevel66 = builder49.logLevel;
        retrofit.RestAdapter.Log log67 = builder49.log;
        retrofit.RestAdapter restAdapter68 = builder49.build();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.client.Client.Provider provider70 = restAdapter68.clientProvider;
        retrofit.Server server71 = restAdapter68.server;
        restAdapter45.server = server71;
        retrofit.client.Request request73 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request74 = restAdapter45.logAndReplaceRequest(request73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(log67);
        org.junit.Assert.assertNotNull(restAdapter68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider70);
        org.junit.Assert.assertNotNull(server71);
    }

    @Test
    public void test07652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07652");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        builder10.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor12 = builder10.requestInterceptor;
        retrofit.client.Client.Provider provider13 = builder10.clientProvider;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor17 = builder14.requestInterceptor;
        retrofit.RestAdapter.Builder builder18 = builder10.setRequestInterceptor(requestInterceptor17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor20 = builder19.callbackExecutor;
        retrofit.Profiler profiler21 = null;
        builder19.profiler = profiler21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder19.server = server34;
        retrofit.RestAdapter restAdapter36 = builder19.build();
        retrofit.RestAdapter.Log log37 = restAdapter36.log;
        log37.log("");
        retrofit.RestAdapter.Builder builder40 = builder18.setLog(log37);
        retrofit.RestAdapter.Log log41 = builder18.log;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder45 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter46.new RestHandler();
        retrofit.RestAdapter.Log log49 = restAdapter46.log;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter46.logLevel = logLevel50;
        retrofit.RestAdapter.Builder builder52 = builder45.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.Server server56 = restAdapter55.server;
        retrofit.RequestInterceptor requestInterceptor57 = restAdapter55.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter55.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = builder54.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider61 = builder54.clientProvider;
        retrofit.RequestInterceptor requestInterceptor62 = builder54.requestInterceptor;
        retrofit.RestAdapter.Builder builder63 = builder18.setRequestInterceptor(requestInterceptor62);
        retrofit.Profiler profiler64 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder65 = builder63.setProfiler(profiler64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(requestInterceptor17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertNull(requestInterceptor57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(provider61);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(builder63);
    }

    @Test
    public void test07653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07653");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.Profiler profiler15 = builder3.profiler;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.Log log18 = restAdapter16.log;
        retrofit.ErrorHandler errorHandler19 = restAdapter16.errorHandler;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter16.requestInterceptor;
        retrofit.converter.Converter converter21 = null;
        restAdapter16.converter = converter21;
        retrofit.converter.Converter converter23 = restAdapter16.converter;
        retrofit.converter.Converter converter24 = null;
        restAdapter16.converter = converter24;
        java.util.concurrent.Executor executor26 = restAdapter16.httpExecutor;
        retrofit.RestAdapter.Log log27 = restAdapter16.log;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter28.logLevel = logLevel30;
        retrofit.ErrorHandler errorHandler32 = null;
        restAdapter28.errorHandler = errorHandler32;
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter28.logLevel;
        restAdapter16.logLevel = logLevel34;
        retrofit.RestAdapter.Builder builder36 = builder3.setLogLevel(logLevel34);
        builder36.ensureSaneDefaults();
        java.util.concurrent.Executor executor38 = builder36.httpExecutor;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("hi!");
        retrofit.Profiler profiler52 = builder49.profiler;
        retrofit.ErrorHandler errorHandler53 = builder49.errorHandler;
        builder49.ensureSaneDefaults();
        retrofit.Server server55 = builder49.server;
        retrofit.Profiler profiler56 = builder49.profiler;
        retrofit.RestAdapter.Log log57 = builder49.log;
        builder36.log = log57;
        retrofit.client.Client.Provider provider59 = null;
        builder36.clientProvider = provider59;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNull(requestInterceptor20);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNull(profiler56);
        org.junit.Assert.assertNotNull(log57);
    }

    @Test
    public void test07654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07654");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = null;
        builder8.clientProvider = provider16;
        retrofit.RequestInterceptor requestInterceptor18 = builder8.requestInterceptor;
        retrofit.RestAdapter restAdapter19 = builder8.build();
        retrofit.ErrorHandler errorHandler20 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder21 = builder0.setErrorHandler(errorHandler20);
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter22.logLevel = logLevel24;
        retrofit.ErrorHandler errorHandler26 = null;
        restAdapter22.errorHandler = errorHandler26;
        java.util.concurrent.Executor executor28 = restAdapter22.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter22.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder21.setLogLevel(logLevel29);
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.ErrorHandler errorHandler33 = null;
        restAdapter31.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.Log log42 = restAdapter39.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.logLevel = logLevel43;
        retrofit.RestAdapter.Builder builder45 = builder38.setLogLevel(logLevel43);
        retrofit.client.Client.Provider provider46 = null;
        builder38.clientProvider = provider46;
        retrofit.ErrorHandler errorHandler48 = builder38.errorHandler;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder52 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.RestAdapter.Builder builder59 = builder52.setLogLevel(logLevel57);
        retrofit.Server server60 = builder52.server;
        retrofit.RestAdapter.Builder builder61 = builder38.setServer(server60);
        retrofit.converter.Converter converter62 = builder61.converter;
        restAdapter31.converter = converter62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder67 = builder64.setServer("hi!");
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler70 = restAdapter68.new RestHandler();
        retrofit.RestAdapter.Log log71 = restAdapter68.log;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter68.logLevel = logLevel72;
        retrofit.RestAdapter.Builder builder74 = builder67.setLogLevel(logLevel72);
        retrofit.client.Client.Provider provider75 = null;
        builder67.clientProvider = provider75;
        retrofit.RequestInterceptor requestInterceptor77 = builder67.requestInterceptor;
        retrofit.RestAdapter restAdapter78 = builder67.build();
        java.util.concurrent.Executor executor79 = restAdapter78.callbackExecutor;
        retrofit.converter.Converter converter80 = restAdapter78.converter;
        retrofit.RestAdapter.Log log81 = restAdapter78.log;
        restAdapter31.log = log81;
        retrofit.RestAdapter.Builder builder83 = builder30.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel84 = builder83.logLevel;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(restAdapter19);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(converter62);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(requestInterceptor77);
        org.junit.Assert.assertNotNull(restAdapter78);
        org.junit.Assert.assertNotNull(executor79);
        org.junit.Assert.assertNotNull(converter80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test07655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07655");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        java.util.concurrent.Executor executor11 = builder3.callbackExecutor;
        retrofit.Profiler profiler12 = null;
        builder3.profiler = profiler12;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        java.util.concurrent.Executor executor29 = builder21.callbackExecutor;
        restAdapter14.callbackExecutor = executor29;
        builder3.callbackExecutor = executor29;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        java.util.concurrent.Executor executor47 = builder39.callbackExecutor;
        restAdapter32.callbackExecutor = executor47;
        builder3.httpExecutor = executor47;
        retrofit.Server server50 = builder3.server;
        retrofit.RestAdapter restAdapter51 = builder3.build();
        builder3.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor53 = builder3.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor54 = builder3.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor55 = builder3.requestInterceptor;
        retrofit.ErrorHandler errorHandler56 = builder3.errorHandler;
        builder3.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor58 = builder3.requestInterceptor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertNotNull(requestInterceptor53);
        org.junit.Assert.assertNotNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(errorHandler56);
        org.junit.Assert.assertNotNull(requestInterceptor58);
    }

    @Test
    public void test07656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07656");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        java.util.concurrent.Executor executor11 = builder3.callbackExecutor;
        retrofit.Profiler profiler12 = null;
        builder3.profiler = profiler12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        java.util.concurrent.Executor executor42 = builder34.callbackExecutor;
        restAdapter27.callbackExecutor = executor42;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder51 = builder48.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.Log log55 = restAdapter52.log;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter52.logLevel = logLevel56;
        retrofit.RestAdapter.Builder builder58 = builder51.setLogLevel(logLevel56);
        java.util.concurrent.Executor executor59 = builder51.callbackExecutor;
        restAdapter44.callbackExecutor = executor59;
        retrofit.RestAdapter.Builder builder61 = builder26.setExecutors(executor42, executor59);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder65 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter66.log;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter66.logLevel = logLevel70;
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel70);
        retrofit.client.Client.Provider provider73 = null;
        builder65.clientProvider = provider73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.client.Client.Provider provider86 = null;
        builder78.clientProvider = provider86;
        retrofit.ErrorHandler errorHandler88 = builder78.errorHandler;
        retrofit.RestAdapter.Builder builder89 = builder65.setErrorHandler(errorHandler88);
        retrofit.RestAdapter.Builder builder90 = builder26.setErrorHandler(errorHandler88);
        java.util.concurrent.Executor executor91 = builder26.httpExecutor;
        builder3.callbackExecutor = executor91;
        retrofit.RestAdapter restAdapter93 = builder3.build();
        retrofit.RestAdapter.RestHandler restHandler94 = restAdapter93.new RestHandler();
        retrofit.Server server95 = restAdapter93.server;
        java.lang.Throwable throwable96 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter93.logException(throwable96, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(executor91);
        org.junit.Assert.assertNotNull(restAdapter93);
        org.junit.Assert.assertNotNull(server95);
    }

    @Test
    public void test07657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07657");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter restAdapter11 = builder3.build();
        retrofit.converter.Converter converter12 = builder3.converter;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider14 = null;
        builder13.clientProvider = provider14;
        retrofit.RestAdapter.Builder builder17 = builder13.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log18 = builder17.log;
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter20.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter20.logLevel = logLevel22;
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter20.new RestHandler();
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel51);
        restAdapter34.log = log48;
        builder33.log = log48;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel67);
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log48, logLevel67);
        restAdapter20.setLogLevel(logLevel67);
        boolean boolean72 = logLevel67.log();
        retrofit.RestAdapter.Builder builder73 = builder17.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder74 = builder3.setLogLevel(logLevel67);
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter75.logLevel = logLevel77;
        retrofit.RequestInterceptor requestInterceptor79 = null;
        restAdapter75.requestInterceptor = requestInterceptor79;
        retrofit.RequestInterceptor requestInterceptor81 = restAdapter75.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.Builder builder83 = builder74.setLogLevel(logLevel82);
        retrofit.client.Client.Provider provider84 = builder83.clientProvider;
        retrofit.Profiler profiler85 = null;
        builder83.profiler = profiler85;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(restAdapter11);
        org.junit.Assert.assertNotNull(converter12);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(logLevel76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(provider84);
    }

    @Test
    public void test07658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07658");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.getLogLevel();
        retrofit.Profiler profiler4 = null;
        restAdapter0.profiler = profiler4;
        retrofit.Server server6 = restAdapter0.server;
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter7.logLevel = logLevel9;
        retrofit.ErrorHandler errorHandler11 = null;
        restAdapter7.errorHandler = errorHandler11;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter7.logLevel;
        retrofit.converter.Converter converter14 = null;
        restAdapter7.converter = converter14;
        retrofit.converter.Converter converter16 = restAdapter7.converter;
        java.util.concurrent.Executor executor17 = restAdapter7.callbackExecutor;
        retrofit.Profiler profiler18 = null;
        restAdapter7.profiler = profiler18;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter7.requestInterceptor;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.Log log23 = restAdapter21.log;
        java.util.concurrent.Executor executor24 = restAdapter21.httpExecutor;
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter34.logLevel = logLevel36;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel36);
        restAdapter21.log = log33;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder45 = builder40.setLogLevel(logLevel44);
        restAdapter21.logLevel = logLevel44;
        restAdapter7.setLogLevel(logLevel44);
        boolean boolean48 = logLevel44.log();
        restAdapter0.logLevel = logLevel44;
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter55.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder54.setLogLevel(logLevel59);
        builder61.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor63 = builder61.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.FULL;
        boolean boolean65 = logLevel64.log();
        boolean boolean66 = logLevel64.log();
        builder61.logLevel = logLevel64;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        builder68.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder71 = builder68.setServer("hi!");
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter72.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler74 = restAdapter72.new RestHandler();
        retrofit.RestAdapter.Log log75 = restAdapter72.log;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter72.logLevel = logLevel76;
        retrofit.RestAdapter.Builder builder78 = builder71.setLogLevel(logLevel76);
        retrofit.client.Client.Provider provider79 = null;
        builder71.clientProvider = provider79;
        retrofit.RequestInterceptor requestInterceptor81 = builder71.requestInterceptor;
        retrofit.RestAdapter restAdapter82 = builder71.build();
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter82.logLevel;
        retrofit.RestAdapter.Builder builder84 = builder61.setLogLevel(logLevel83);
        retrofit.Server server85 = builder61.server;
        restAdapter0.server = server85;
        retrofit.Server server87 = restAdapter0.server;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNull(requestInterceptor20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(requestInterceptor63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(logLevel73);
        org.junit.Assert.assertNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(requestInterceptor81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(server85);
        org.junit.Assert.assertNotNull(server87);
    }

    @Test
    public void test07659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07659");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.Profiler profiler13 = builder10.profiler;
        retrofit.ErrorHandler errorHandler14 = builder10.errorHandler;
        builder10.ensureSaneDefaults();
        retrofit.Server server16 = builder10.server;
        java.util.concurrent.Executor executor17 = builder10.callbackExecutor;
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        log18.log("");
        log18.log("Retrofit-Idle");
        log18.log("");
        builder10.log = log18;
        java.util.concurrent.Executor executor26 = builder10.httpExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(executor26);
    }

    @Test
    public void test07660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07660");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter15.new RestHandler();
        retrofit.RestAdapter.Log log18 = restAdapter15.log;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter15.logLevel = logLevel19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel32);
        restAdapter15.log = log29;
        builder14.log = log29;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter46.logLevel = logLevel48;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel48);
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log29, logLevel48);
        retrofit.RestAdapter.Builder builder52 = builder0.setLog(log29);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.FULL;
        builder52.logLevel = logLevel53;
        retrofit.RestAdapter restAdapter55 = builder52.build();
        retrofit.converter.Converter converter56 = restAdapter55.converter;
        retrofit.client.Response response58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response60 = restAdapter55.logAndReplaceResponse("hi!", response58, (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(converter56);
    }

    @Test
    public void test07661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07661");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        java.util.concurrent.Executor executor8 = restAdapter0.callbackExecutor;
        java.util.concurrent.Executor executor9 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder13 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter14.logLevel = logLevel18;
        retrofit.RestAdapter.Builder builder20 = builder13.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Log log23 = builder22.log;
        restAdapter0.log = log23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder28 = builder25.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.logLevel = logLevel33;
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel33);
        retrofit.client.Client.Provider provider36 = null;
        builder28.clientProvider = provider36;
        retrofit.RequestInterceptor requestInterceptor38 = builder28.requestInterceptor;
        retrofit.RestAdapter restAdapter39 = builder28.build();
        retrofit.Profiler profiler40 = builder28.profiler;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.Log log43 = restAdapter41.log;
        retrofit.ErrorHandler errorHandler44 = restAdapter41.errorHandler;
        retrofit.RequestInterceptor requestInterceptor45 = restAdapter41.requestInterceptor;
        retrofit.converter.Converter converter46 = null;
        restAdapter41.converter = converter46;
        retrofit.converter.Converter converter48 = restAdapter41.converter;
        retrofit.converter.Converter converter49 = null;
        restAdapter41.converter = converter49;
        java.util.concurrent.Executor executor51 = restAdapter41.httpExecutor;
        retrofit.RestAdapter.Log log52 = restAdapter41.log;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter53.logLevel = logLevel55;
        retrofit.ErrorHandler errorHandler57 = null;
        restAdapter53.errorHandler = errorHandler57;
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter53.logLevel;
        restAdapter41.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder28.setLogLevel(logLevel59);
        restAdapter0.logLevel = logLevel59;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter63.logLevel = logLevel65;
        retrofit.ErrorHandler errorHandler67 = null;
        restAdapter63.errorHandler = errorHandler67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        retrofit.Server server70 = restAdapter69.server;
        retrofit.RequestInterceptor requestInterceptor71 = restAdapter69.requestInterceptor;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder75 = builder72.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter76.new RestHandler();
        retrofit.RestAdapter.Log log79 = restAdapter76.log;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter76.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = builder75.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder84 = builder82.setServer("hi!");
        retrofit.client.Client.Provider provider85 = builder84.clientProvider;
        restAdapter69.clientProvider = provider85;
        restAdapter63.clientProvider = provider85;
        retrofit.ErrorHandler errorHandler88 = restAdapter63.errorHandler;
        retrofit.converter.Converter converter89 = restAdapter63.converter;
        retrofit.RestAdapter.Builder builder90 = new retrofit.RestAdapter.Builder();
        builder90.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder93 = builder90.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel94 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder95 = builder90.setLogLevel(logLevel94);
        retrofit.RestAdapter.Log log96 = builder90.log;
        restAdapter63.log = log96;
        retrofit.RestAdapter.LogLevel logLevel98 = restAdapter63.logLevel;
        restAdapter0.logLevel = logLevel98;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertNull(errorHandler44);
        org.junit.Assert.assertNull(requestInterceptor45);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server70);
        org.junit.Assert.assertNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(logLevel77);
        org.junit.Assert.assertNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(provider85);
        org.junit.Assert.assertNull(errorHandler88);
        org.junit.Assert.assertNull(converter89);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(log96);
        org.junit.Assert.assertTrue("'" + logLevel98 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel98.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test07662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07662");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        java.util.concurrent.Executor executor15 = restAdapter14.callbackExecutor;
        retrofit.converter.Converter converter16 = restAdapter14.converter;
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.Profiler profiler18 = null;
        restAdapter14.profiler = profiler18;
        retrofit.Profiler profiler20 = restAdapter14.profiler;
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter14.new RestHandler();
        java.lang.Throwable throwable22 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter14.logException(throwable22, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(converter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(profiler20);
    }

    @Test
    public void test07663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07663");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder9 = builder6.setServer("hi!");
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Log log13 = restAdapter10.log;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.logLevel = logLevel14;
        retrofit.RestAdapter.Builder builder16 = builder9.setLogLevel(logLevel14);
        retrofit.client.Client.Provider provider17 = null;
        builder9.clientProvider = provider17;
        retrofit.ErrorHandler errorHandler19 = builder9.errorHandler;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder23 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.Log log27 = restAdapter24.log;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter24.logLevel = logLevel28;
        retrofit.RestAdapter.Builder builder30 = builder23.setLogLevel(logLevel28);
        retrofit.Server server31 = builder23.server;
        retrofit.RestAdapter.Builder builder32 = builder9.setServer(server31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder36 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter37.log;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter37.logLevel = logLevel41;
        retrofit.RestAdapter.Builder builder43 = builder36.setLogLevel(logLevel41);
        retrofit.client.Client.Provider provider44 = null;
        builder36.clientProvider = provider44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder49 = builder46.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.Log log53 = restAdapter50.log;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter50.logLevel = logLevel54;
        retrofit.RestAdapter.Builder builder56 = builder49.setLogLevel(logLevel54);
        retrofit.client.Client.Provider provider57 = null;
        builder49.clientProvider = provider57;
        retrofit.ErrorHandler errorHandler59 = builder49.errorHandler;
        retrofit.RestAdapter.Builder builder60 = builder36.setErrorHandler(errorHandler59);
        java.util.concurrent.Executor executor61 = builder60.httpExecutor;
        builder32.httpExecutor = executor61;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter63.logLevel = logLevel65;
        retrofit.ErrorHandler errorHandler67 = null;
        restAdapter63.errorHandler = errorHandler67;
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter63.logLevel;
        retrofit.converter.Converter converter70 = null;
        restAdapter63.converter = converter70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder75 = builder72.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter76.new RestHandler();
        retrofit.RestAdapter.Log log79 = restAdapter76.log;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter76.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = builder75.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder84 = builder82.setServer("hi!");
        retrofit.client.Client.Provider provider85 = builder84.clientProvider;
        restAdapter63.clientProvider = provider85;
        retrofit.RestAdapter.Builder builder87 = builder32.setClient(provider85);
        retrofit.RequestInterceptor requestInterceptor88 = builder87.requestInterceptor;
        retrofit.client.Client.Provider provider89 = builder87.clientProvider;
        java.util.concurrent.Executor executor90 = builder87.callbackExecutor;
        retrofit.ErrorHandler errorHandler91 = builder87.errorHandler;
        restAdapter0.errorHandler = errorHandler91;
        retrofit.RestAdapter.LogLevel logLevel93 = restAdapter0.logLevel;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(errorHandler19);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(errorHandler59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(logLevel77);
        org.junit.Assert.assertNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(provider85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(requestInterceptor88);
        org.junit.Assert.assertNotNull(provider89);
        org.junit.Assert.assertNotNull(executor90);
        org.junit.Assert.assertNotNull(errorHandler91);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07664");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter0.getLogLevel();
        retrofit.Profiler profiler6 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter11.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider18 = null;
        builder10.clientProvider = provider18;
        retrofit.RequestInterceptor requestInterceptor20 = builder10.requestInterceptor;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.client.Client.Provider provider32 = null;
        builder24.clientProvider = provider32;
        retrofit.RequestInterceptor requestInterceptor34 = builder24.requestInterceptor;
        retrofit.RestAdapter.Builder builder35 = builder10.setRequestInterceptor(requestInterceptor34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor37 = builder36.callbackExecutor;
        retrofit.Profiler profiler38 = null;
        builder36.profiler = profiler38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.Server server51 = builder43.server;
        builder36.server = server51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter55.getLogLevel();
        java.util.concurrent.Executor executor59 = restAdapter55.callbackExecutor;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder60.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter64.new RestHandler();
        retrofit.RestAdapter.Log log67 = restAdapter64.log;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter64.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder70 = builder63.setLogLevel(logLevel68);
        retrofit.client.Client.Provider provider71 = null;
        builder63.clientProvider = provider71;
        retrofit.RequestInterceptor requestInterceptor73 = builder63.requestInterceptor;
        retrofit.RestAdapter restAdapter74 = builder63.build();
        retrofit.ErrorHandler errorHandler75 = builder63.errorHandler;
        retrofit.converter.Converter converter76 = builder63.converter;
        restAdapter55.converter = converter76;
        builder53.converter = converter76;
        retrofit.RestAdapter.Builder builder79 = builder36.setConverter(converter76);
        builder35.converter = converter76;
        restAdapter0.converter = converter76;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(requestInterceptor20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(errorHandler75);
        org.junit.Assert.assertNotNull(converter76);
        org.junit.Assert.assertNotNull(builder79);
    }

    @Test
    public void test07665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07665");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder6 = builder3.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.RestAdapter.Builder builder13 = builder6.setLogLevel(logLevel11);
        retrofit.client.Client.Provider provider14 = null;
        builder6.clientProvider = provider14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder19 = builder16.setServer("hi!");
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter20.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.Log log23 = restAdapter20.log;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter20.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = builder19.setLogLevel(logLevel24);
        retrofit.client.Client.Provider provider27 = null;
        builder19.clientProvider = provider27;
        retrofit.ErrorHandler errorHandler29 = builder19.errorHandler;
        retrofit.RestAdapter.Builder builder30 = builder6.setErrorHandler(errorHandler29);
        java.util.concurrent.Executor executor31 = builder30.httpExecutor;
        restAdapter0.callbackExecutor = executor31;
        retrofit.client.Client.Provider provider33 = restAdapter0.clientProvider;
        java.util.concurrent.Executor executor34 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter0.logLevel;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNull(logLevel35);
    }

    @Test
    public void test07666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07666");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        java.util.concurrent.Executor executor3 = restAdapter0.httpExecutor;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        retrofit.converter.Converter converter9 = null;
        retrofit.Profiler profiler10 = null;
        retrofit.ErrorHandler errorHandler11 = null;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter13.logLevel = logLevel15;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor8, converter9, profiler10, errorHandler11, log12, logLevel15);
        restAdapter0.log = log12;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder29 = builder22.setLogLevel(logLevel27);
        java.util.concurrent.Executor executor30 = builder22.callbackExecutor;
        restAdapter0.callbackExecutor = executor30;
        retrofit.ErrorHandler errorHandler32 = restAdapter0.errorHandler;
        java.util.concurrent.Executor executor33 = restAdapter0.httpExecutor;
        retrofit.ErrorHandler errorHandler34 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter0.requestInterceptor;
        retrofit.converter.Converter converter36 = restAdapter0.converter;
        java.util.concurrent.Executor executor37 = restAdapter0.callbackExecutor;
        retrofit.ErrorHandler errorHandler38 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter39 = restAdapter0.converter;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.Profiler profiler41 = restAdapter40.profiler;
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.Server server43 = restAdapter40.server;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.ErrorHandler errorHandler46 = null;
        restAdapter44.errorHandler = errorHandler46;
        retrofit.Profiler profiler48 = restAdapter44.profiler;
        retrofit.Profiler profiler49 = null;
        restAdapter44.profiler = profiler49;
        java.util.concurrent.Executor executor51 = restAdapter44.callbackExecutor;
        retrofit.RestAdapter.Log log52 = restAdapter44.log;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Log log60 = restAdapter57.log;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter57.logLevel = logLevel61;
        retrofit.RestAdapter.Builder builder63 = builder56.setLogLevel(logLevel61);
        retrofit.client.Client.Provider provider64 = null;
        builder56.clientProvider = provider64;
        retrofit.RequestInterceptor requestInterceptor66 = builder56.requestInterceptor;
        retrofit.RestAdapter restAdapter67 = builder56.build();
        java.util.concurrent.Executor executor68 = restAdapter67.callbackExecutor;
        retrofit.converter.Converter converter69 = restAdapter67.converter;
        restAdapter44.converter = converter69;
        restAdapter40.converter = converter69;
        restAdapter0.converter = converter69;
        retrofit.Server server73 = restAdapter0.server;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNull(errorHandler32);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNull(errorHandler34);
        org.junit.Assert.assertNull(requestInterceptor35);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNull(errorHandler38);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(restAdapter67);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(converter69);
        org.junit.Assert.assertNull(server73);
    }

    @Test
    public void test07667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07667");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.Server server11 = builder3.server;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider23 = builder22.clientProvider;
        builder3.clientProvider = provider23;
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = builder3.log;
        log26.log("hi!");
        log26.log("Retrofit-Idle");
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(log26);
    }

    @Test
    public void test07668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07668");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter restAdapter25 = builder17.build();
        retrofit.converter.Converter converter26 = builder17.converter;
        retrofit.RestAdapter.Builder builder27 = builder3.setConverter(converter26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        java.util.concurrent.Executor executor30 = builder28.httpExecutor;
        builder3.callbackExecutor = executor30;
        retrofit.Profiler profiler32 = null;
        builder3.profiler = profiler32;
        retrofit.RestAdapter restAdapter34 = builder3.build();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(converter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNotNull(restAdapter34);
    }

    @Test
    public void test07669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07669");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor4 = restAdapter0.requestInterceptor;
        retrofit.converter.Converter converter5 = null;
        restAdapter0.converter = converter5;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler8 = restAdapter0.profiler;
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter0.getLogLevel();
        retrofit.Server server10 = restAdapter0.server;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder14 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter15.new RestHandler();
        retrofit.RestAdapter.Log log18 = restAdapter15.log;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter15.logLevel = logLevel19;
        retrofit.RestAdapter.Builder builder21 = builder14.setLogLevel(logLevel19);
        retrofit.client.Client.Provider provider22 = null;
        builder14.clientProvider = provider22;
        retrofit.RequestInterceptor requestInterceptor24 = builder14.requestInterceptor;
        retrofit.RestAdapter restAdapter25 = builder14.build();
        java.util.concurrent.Executor executor26 = restAdapter25.callbackExecutor;
        retrofit.converter.Converter converter27 = restAdapter25.converter;
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider40 = builder39.clientProvider;
        restAdapter25.clientProvider = provider40;
        restAdapter0.clientProvider = provider40;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(profiler8);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(converter27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(provider40);
    }

    @Test
    public void test07670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07670");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        java.util.concurrent.Executor executor16 = builder8.callbackExecutor;
        builder0.httpExecutor = executor16;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter18.logLevel = logLevel20;
        retrofit.ErrorHandler errorHandler22 = null;
        restAdapter18.errorHandler = errorHandler22;
        java.util.concurrent.Executor executor24 = restAdapter18.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter18.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder0.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler29 = builder27.errorHandler;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        java.util.concurrent.Executor executor32 = builder30.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor33 = builder30.requestInterceptor;
        retrofit.RestAdapter.Builder builder34 = builder27.setRequestInterceptor(requestInterceptor33);
        retrofit.converter.Converter converter35 = builder27.converter;
        retrofit.RestAdapter.Builder builder36 = builder26.setConverter(converter35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder47 = builder40.setLogLevel(logLevel45);
        retrofit.client.Client.Provider provider48 = null;
        builder40.clientProvider = provider48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter54.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider61 = null;
        builder53.clientProvider = provider61;
        retrofit.ErrorHandler errorHandler63 = builder53.errorHandler;
        retrofit.RestAdapter.Builder builder64 = builder40.setErrorHandler(errorHandler63);
        java.util.concurrent.Executor executor65 = builder40.callbackExecutor;
        builder36.callbackExecutor = executor65;
        java.util.concurrent.Executor executor67 = builder36.callbackExecutor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(converter35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(executor65);
        org.junit.Assert.assertNotNull(executor67);
    }

    @Test
    public void test07671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07671");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.Server server15 = builder7.server;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.Log log18 = restAdapter16.log;
        java.util.concurrent.Executor executor19 = restAdapter16.httpExecutor;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel31);
        restAdapter16.log = log28;
        builder7.log = log28;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Log log38 = restAdapter36.log;
        java.util.concurrent.Executor executor39 = restAdapter36.httpExecutor;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter56.logLevel = logLevel58;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel58);
        restAdapter41.log = log55;
        builder40.log = log55;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter67.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder66.setLogLevel(logLevel71);
        retrofit.Server server74 = builder66.server;
        builder40.server = server74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder79 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler82 = restAdapter80.new RestHandler();
        retrofit.RestAdapter.Log log83 = restAdapter80.log;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter80.logLevel = logLevel84;
        retrofit.RestAdapter.Builder builder86 = builder79.setLogLevel(logLevel84);
        retrofit.client.Client.Provider provider87 = null;
        builder79.clientProvider = provider87;
        retrofit.RequestInterceptor requestInterceptor89 = builder79.requestInterceptor;
        retrofit.RestAdapter.Builder builder90 = builder40.setRequestInterceptor(requestInterceptor89);
        restAdapter36.requestInterceptor = requestInterceptor89;
        retrofit.RestAdapter.Builder builder92 = builder7.setRequestInterceptor(requestInterceptor89);
        builder0.requestInterceptor = requestInterceptor89;
        retrofit.RestAdapter restAdapter94 = builder0.build();
        retrofit.Server server95 = restAdapter94.server;
        retrofit.Server server96 = restAdapter94.server;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(server74);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(logLevel81);
        org.junit.Assert.assertNull(log83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(requestInterceptor89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(restAdapter94);
        org.junit.Assert.assertNotNull(server95);
        org.junit.Assert.assertNotNull(server96);
    }

    @Test
    public void test07672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07672");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter9.logLevel = logLevel11;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel11);
        retrofit.Profiler profiler14 = restAdapter13.profiler;
        retrofit.ErrorHandler errorHandler15 = restAdapter13.errorHandler;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder19 = builder16.setServer("hi!");
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter20.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.Log log23 = restAdapter20.log;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter20.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = builder19.setLogLevel(logLevel24);
        retrofit.client.Client.Provider provider27 = null;
        builder19.clientProvider = provider27;
        retrofit.RequestInterceptor requestInterceptor29 = builder19.requestInterceptor;
        retrofit.RestAdapter restAdapter30 = builder19.build();
        java.util.concurrent.Executor executor31 = restAdapter30.callbackExecutor;
        retrofit.converter.Converter converter32 = restAdapter30.converter;
        retrofit.RestAdapter.Log log33 = restAdapter30.log;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel51);
        restAdapter34.log = log48;
        log48.log("Retrofit-Idle");
        restAdapter30.log = log48;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.logLevel;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder60.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter64.new RestHandler();
        retrofit.RestAdapter.Log log67 = restAdapter64.log;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter64.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder70 = builder63.setLogLevel(logLevel68);
        retrofit.client.Client.Provider provider71 = null;
        builder63.clientProvider = provider71;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder76 = builder73.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter77.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler79 = restAdapter77.new RestHandler();
        retrofit.RestAdapter.Log log80 = restAdapter77.log;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter77.logLevel = logLevel81;
        retrofit.RestAdapter.Builder builder83 = builder76.setLogLevel(logLevel81);
        retrofit.client.Client.Provider provider84 = null;
        builder76.clientProvider = provider84;
        retrofit.ErrorHandler errorHandler86 = builder76.errorHandler;
        retrofit.RestAdapter.Builder builder87 = builder63.setErrorHandler(errorHandler86);
        restAdapter58.errorHandler = errorHandler86;
        restAdapter30.errorHandler = errorHandler86;
        java.util.concurrent.Executor executor90 = restAdapter30.callbackExecutor;
        restAdapter13.callbackExecutor = executor90;
        retrofit.converter.Converter converter92 = restAdapter13.converter;
        retrofit.client.Request request93 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request94 = restAdapter13.logAndReplaceRequest(request93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(converter32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(logLevel78);
        org.junit.Assert.assertNull(log80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(executor90);
        org.junit.Assert.assertNull(converter92);
    }

    @Test
    public void test07673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07673");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter14.logLevel = logLevel16;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        restAdapter14.requestInterceptor = requestInterceptor18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.Server server54 = builder46.server;
        builder20.server = server54;
        restAdapter14.server = server54;
        retrofit.RestAdapter.Builder builder57 = builder12.setServer(server54);
        java.util.concurrent.Executor executor58 = builder12.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor59 = builder12.requestInterceptor;
        retrofit.client.Client.Provider provider60 = builder12.clientProvider;
        retrofit.RestAdapter restAdapter61 = builder12.build();
        retrofit.Profiler profiler62 = builder12.profiler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNull(profiler62);
    }

    @Test
    public void test07674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07674");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = null;
        builder16.clientProvider = provider24;
        retrofit.ErrorHandler errorHandler26 = builder16.errorHandler;
        retrofit.RestAdapter.Builder builder27 = builder3.setErrorHandler(errorHandler26);
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter28.logLevel = logLevel30;
        builder3.logLevel = logLevel30;
        retrofit.RequestInterceptor requestInterceptor33 = builder3.requestInterceptor;
        retrofit.RestAdapter.Log log34 = builder3.log;
        java.util.concurrent.Executor executor35 = builder3.httpExecutor;
        retrofit.ErrorHandler errorHandler36 = builder3.errorHandler;
        retrofit.RestAdapter.Log log37 = builder3.log;
        retrofit.Server server38 = builder3.server;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(errorHandler26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(server38);
    }

    @Test
    public void test07675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07675");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        java.util.concurrent.Executor executor11 = builder3.callbackExecutor;
        retrofit.Profiler profiler12 = null;
        builder3.profiler = profiler12;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        java.util.concurrent.Executor executor29 = builder21.callbackExecutor;
        restAdapter14.callbackExecutor = executor29;
        builder3.callbackExecutor = executor29;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        java.util.concurrent.Executor executor47 = builder39.callbackExecutor;
        restAdapter32.callbackExecutor = executor47;
        builder3.httpExecutor = executor47;
        retrofit.RestAdapter.Builder builder51 = builder3.setServer("hi!");
        retrofit.client.Client.Provider provider52 = builder3.clientProvider;
        retrofit.ErrorHandler errorHandler53 = builder3.errorHandler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(provider52);
        org.junit.Assert.assertNotNull(errorHandler53);
    }

    @Test
    public void test07676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07676");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        java.util.concurrent.Executor executor16 = builder8.callbackExecutor;
        builder0.httpExecutor = executor16;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter18.logLevel = logLevel20;
        retrofit.ErrorHandler errorHandler22 = null;
        restAdapter18.errorHandler = errorHandler22;
        java.util.concurrent.Executor executor24 = restAdapter18.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter18.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder0.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider27 = builder26.clientProvider;
        retrofit.Profiler profiler28 = null;
        builder26.profiler = profiler28;
        retrofit.RestAdapter.LogLevel logLevel30 = builder26.logLevel;
        retrofit.RequestInterceptor requestInterceptor31 = builder26.requestInterceptor;
        retrofit.RestAdapter.Builder builder33 = builder26.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder35 = builder26.setServer("hi!");
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test07677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07677");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.Profiler profiler2 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider4 = null;
        builder3.clientProvider = provider4;
        retrofit.RestAdapter.Builder builder7 = builder3.setServer("Retrofit-Idle");
        retrofit.Server server8 = builder3.server;
        restAdapter0.server = server8;
        retrofit.ErrorHandler errorHandler10 = restAdapter0.errorHandler;
        retrofit.ErrorHandler errorHandler11 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter0.logLevel;
        retrofit.Profiler profiler13 = restAdapter0.profiler;
        java.util.concurrent.Executor executor14 = restAdapter0.httpExecutor;
        retrofit.Server server15 = restAdapter0.server;
        retrofit.RestAdapter.Log log16 = restAdapter0.log;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNull(errorHandler10);
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNull(log16);
    }

    @Test
    public void test07678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07678");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider38 = null;
        builder30.clientProvider = provider38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.ErrorHandler errorHandler53 = builder43.errorHandler;
        retrofit.RestAdapter.Builder builder54 = builder30.setErrorHandler(errorHandler53);
        java.util.concurrent.Executor executor55 = builder54.httpExecutor;
        builder26.httpExecutor = executor55;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter57.logLevel = logLevel59;
        retrofit.ErrorHandler errorHandler61 = null;
        restAdapter57.errorHandler = errorHandler61;
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter57.logLevel;
        retrofit.converter.Converter converter64 = null;
        restAdapter57.converter = converter64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder69 = builder66.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.Log log73 = restAdapter70.log;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter70.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.client.Client.Provider provider79 = builder78.clientProvider;
        restAdapter57.clientProvider = provider79;
        retrofit.RestAdapter.Builder builder81 = builder26.setClient(provider79);
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel83 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder85 = builder26.setServer("hi!");
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(provider79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test07679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07679");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter7.logLevel = logLevel9;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter7.new RestHandler();
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel54);
        restAdapter7.setLogLevel(logLevel54);
        boolean boolean59 = logLevel54.log();
        retrofit.RestAdapter.Builder builder60 = builder4.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder62 = builder4.setServer("Retrofit-Idle");
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test07680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07680");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.logLevel;
        retrofit.Profiler profiler2 = null;
        restAdapter0.profiler = profiler2;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.Profiler profiler5 = restAdapter0.profiler;
        retrofit.Profiler profiler6 = null;
        restAdapter0.profiler = profiler6;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.client.Client.Provider provider20 = null;
        builder12.clientProvider = provider20;
        retrofit.ErrorHandler errorHandler22 = builder12.errorHandler;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor37 = builder36.callbackExecutor;
        retrofit.Profiler profiler38 = null;
        builder36.profiler = profiler38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.Server server51 = builder43.server;
        builder36.server = server51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter54.logLevel = logLevel58;
        retrofit.Server server60 = null;
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.RequestInterceptor requestInterceptor64 = null;
        retrofit.converter.Converter converter65 = null;
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter69.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter69.logLevel = logLevel71;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor64, converter65, profiler66, errorHandler67, log68, logLevel71);
        restAdapter54.log = log68;
        builder53.log = log68;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder79 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler82 = restAdapter80.new RestHandler();
        retrofit.RestAdapter.Log log83 = restAdapter80.log;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter80.logLevel = logLevel84;
        retrofit.RestAdapter.Builder builder86 = builder79.setLogLevel(logLevel84);
        retrofit.Server server87 = builder79.server;
        builder53.server = server87;
        builder36.server = server87;
        retrofit.RestAdapter.Builder builder90 = builder33.setServer(server87);
        retrofit.RestAdapter.Builder builder91 = builder12.setServer(server87);
        retrofit.RestAdapter.LogLevel logLevel92 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder93 = builder12.setLogLevel(logLevel92);
        retrofit.RestAdapter.LogLevel logLevel94 = null;
        builder12.logLevel = logLevel94;
        retrofit.RestAdapter restAdapter96 = builder12.build();
        retrofit.converter.Converter converter97 = restAdapter96.converter;
        restAdapter0.converter = converter97;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(errorHandler22);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNull(logLevel70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(logLevel81);
        org.junit.Assert.assertNull(log83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(server87);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(restAdapter96);
        org.junit.Assert.assertNotNull(converter97);
    }

    @Test
    public void test07681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07681");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = null;
        builder17.clientProvider = provider25;
        retrofit.RequestInterceptor requestInterceptor27 = builder17.requestInterceptor;
        retrofit.RestAdapter.Builder builder28 = builder3.setRequestInterceptor(requestInterceptor27);
        retrofit.converter.Converter converter29 = builder28.converter;
        retrofit.RestAdapter.LogLevel logLevel30 = builder28.logLevel;
        retrofit.RequestInterceptor requestInterceptor31 = builder28.requestInterceptor;
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel33 = builder28.logLevel;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(converter29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07682");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter14.logLevel = logLevel16;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        restAdapter14.requestInterceptor = requestInterceptor18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.Server server54 = builder46.server;
        builder20.server = server54;
        restAdapter14.server = server54;
        retrofit.RestAdapter.Builder builder57 = builder12.setServer(server54);
        java.util.concurrent.Executor executor58 = builder12.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor59 = builder12.requestInterceptor;
        retrofit.Server server60 = builder12.server;
        retrofit.Profiler profiler61 = null;
        builder12.profiler = profiler61;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNotNull(server60);
    }

    @Test
    public void test07683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07683");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider23 = null;
        builder15.clientProvider = provider23;
        retrofit.ErrorHandler errorHandler25 = builder15.errorHandler;
        retrofit.Server server26 = builder15.server;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.Server server38 = builder30.server;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.Log log41 = restAdapter39.log;
        java.util.concurrent.Executor executor42 = restAdapter39.httpExecutor;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        restAdapter39.log = log51;
        builder30.log = log51;
        retrofit.RestAdapter.Builder builder59 = builder15.setLog(log51);
        retrofit.RestAdapter.Builder builder60 = builder10.setLog(log51);
        java.util.concurrent.Executor executor61 = builder10.httpExecutor;
        retrofit.Server server62 = builder10.server;
        retrofit.RestAdapter.LogLevel logLevel63 = builder10.logLevel;
        retrofit.ErrorHandler errorHandler64 = builder10.errorHandler;
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Log log66 = builder10.log;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(errorHandler64);
        org.junit.Assert.assertNotNull(log66);
    }

    @Test
    public void test07684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07684");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        java.util.concurrent.Executor executor15 = builder7.callbackExecutor;
        restAdapter0.callbackExecutor = executor15;
        java.util.concurrent.Executor executor17 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter0.getLogLevel();
        java.util.concurrent.Executor executor19 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder23 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.Log log27 = restAdapter24.log;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter24.logLevel = logLevel28;
        retrofit.RestAdapter.Builder builder30 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter33.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        java.util.concurrent.Executor executor39 = builder38.httpExecutor;
        retrofit.RestAdapter.Log log40 = builder38.log;
        retrofit.RestAdapter restAdapter41 = builder38.build();
        retrofit.converter.Converter converter42 = restAdapter41.converter;
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder47 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter48.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder54 = builder47.setLogLevel(logLevel52);
        retrofit.client.Client.Provider provider55 = null;
        builder47.clientProvider = provider55;
        retrofit.ErrorHandler errorHandler57 = builder47.errorHandler;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder61 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter62.new RestHandler();
        retrofit.RestAdapter.Log log65 = restAdapter62.log;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter62.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder68 = builder61.setLogLevel(logLevel66);
        retrofit.client.Client.Provider provider69 = null;
        builder61.clientProvider = provider69;
        retrofit.ErrorHandler errorHandler71 = builder61.errorHandler;
        retrofit.Server server72 = builder61.server;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder76 = builder73.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter77.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler79 = restAdapter77.new RestHandler();
        retrofit.RestAdapter.Log log80 = restAdapter77.log;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter77.logLevel = logLevel81;
        retrofit.RestAdapter.Builder builder83 = builder76.setLogLevel(logLevel81);
        retrofit.client.Client.Provider provider84 = builder83.clientProvider;
        retrofit.RestAdapter.Builder builder85 = builder61.setClient(provider84);
        builder47.clientProvider = provider84;
        retrofit.RestAdapter.Builder builder88 = builder47.setServer("Retrofit-Idle");
        retrofit.Profiler profiler89 = builder47.profiler;
        retrofit.converter.Converter converter90 = null;
        builder47.converter = converter90;
        retrofit.RestAdapter.Log log92 = builder47.log;
        retrofit.client.Client.Provider provider93 = builder47.clientProvider;
        restAdapter41.clientProvider = provider93;
        restAdapter0.clientProvider = provider93;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(requestInterceptor35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(restAdapter41);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(errorHandler71);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(logLevel78);
        org.junit.Assert.assertNull(log80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(provider84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(profiler89);
        org.junit.Assert.assertNotNull(log92);
        org.junit.Assert.assertNotNull(provider93);
    }

    @Test
    public void test07685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07685");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter15.logLevel = logLevel17;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel17);
        restAdapter0.log = log14;
        retrofit.RequestInterceptor requestInterceptor21 = restAdapter0.requestInterceptor;
        java.util.concurrent.Executor executor22 = restAdapter0.callbackExecutor;
        retrofit.ErrorHandler errorHandler23 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor25 = restAdapter0.callbackExecutor;
        java.util.concurrent.Executor executor26 = restAdapter0.callbackExecutor;
        retrofit.client.Request request27 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request28 = restAdapter0.logAndReplaceRequest(request27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor21);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNull(errorHandler23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(executor26);
    }

    @Test
    public void test07686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07686");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        builder2.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder5 = builder2.setServer("hi!");
        retrofit.Server server6 = builder5.server;
        retrofit.RequestInterceptor requestInterceptor7 = null;
        builder5.requestInterceptor = requestInterceptor7;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RequestInterceptor requestInterceptor15 = restAdapter9.requestInterceptor;
        retrofit.ErrorHandler errorHandler16 = restAdapter9.errorHandler;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = null;
        builder20.clientProvider = provider28;
        retrofit.ErrorHandler errorHandler30 = builder20.errorHandler;
        retrofit.Server server31 = builder20.server;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder35 = builder32.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter36.new RestHandler();
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter36.logLevel = logLevel40;
        retrofit.RestAdapter.Builder builder42 = builder35.setLogLevel(logLevel40);
        retrofit.Server server43 = builder35.server;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.Log log46 = restAdapter44.log;
        java.util.concurrent.Executor executor47 = restAdapter44.httpExecutor;
        retrofit.Server server48 = null;
        retrofit.client.Client.Provider provider49 = null;
        java.util.concurrent.Executor executor50 = null;
        java.util.concurrent.Executor executor51 = null;
        retrofit.RequestInterceptor requestInterceptor52 = null;
        retrofit.converter.Converter converter53 = null;
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter57.logLevel = logLevel59;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server48, provider49, executor50, executor51, requestInterceptor52, converter53, profiler54, errorHandler55, log56, logLevel59);
        restAdapter44.log = log56;
        builder35.log = log56;
        retrofit.RestAdapter.Builder builder64 = builder20.setLog(log56);
        restAdapter9.log = log56;
        log56.log("");
        log56.log("hi!");
        retrofit.RestAdapter.Builder builder70 = builder5.setLog(log56);
        retrofit.RestAdapter restAdapter71 = builder70.build();
        retrofit.RequestInterceptor requestInterceptor72 = restAdapter71.requestInterceptor;
        retrofit.ErrorHandler errorHandler73 = restAdapter71.errorHandler;
        retrofit.RestAdapter.Builder builder74 = builder0.setErrorHandler(errorHandler73);
        retrofit.RestAdapter.LogLevel logLevel75 = builder74.logLevel;
        boolean boolean76 = logLevel75.log();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(requestInterceptor15);
        org.junit.Assert.assertNull(errorHandler16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(restAdapter71);
        org.junit.Assert.assertNotNull(requestInterceptor72);
        org.junit.Assert.assertNotNull(errorHandler73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test07687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07687");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        retrofit.Profiler profiler6 = builder4.profiler;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter11.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider18 = null;
        builder10.clientProvider = provider18;
        retrofit.ErrorHandler errorHandler20 = builder10.errorHandler;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.Server server32 = builder24.server;
        retrofit.RestAdapter.Builder builder33 = builder10.setServer(server32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder37 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter38.new RestHandler();
        retrofit.RestAdapter.Log log41 = restAdapter38.log;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter38.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider45 = null;
        builder37.clientProvider = provider45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder50 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        retrofit.RestAdapter.Log log54 = restAdapter51.log;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter51.logLevel = logLevel55;
        retrofit.RestAdapter.Builder builder57 = builder50.setLogLevel(logLevel55);
        retrofit.client.Client.Provider provider58 = null;
        builder50.clientProvider = provider58;
        retrofit.ErrorHandler errorHandler60 = builder50.errorHandler;
        retrofit.RestAdapter.Builder builder61 = builder37.setErrorHandler(errorHandler60);
        java.util.concurrent.Executor executor62 = builder61.httpExecutor;
        builder33.httpExecutor = executor62;
        retrofit.converter.Converter converter64 = builder33.converter;
        retrofit.RestAdapter.Builder builder65 = builder4.setConverter(converter64);
        retrofit.Server server66 = builder4.server;
        retrofit.Profiler profiler67 = null;
        builder4.profiler = profiler67;
        retrofit.client.Client client69 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder70 = builder4.setClient(client69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(converter64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(server66);
    }

    @Test
    public void test07688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07688");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        builder2.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder5 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter6.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.Log log9 = restAdapter6.log;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter6.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = builder5.setLogLevel(logLevel10);
        retrofit.client.Client.Provider provider13 = null;
        builder5.clientProvider = provider13;
        retrofit.ErrorHandler errorHandler15 = builder5.errorHandler;
        restAdapter0.errorHandler = errorHandler15;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.Log log19 = restAdapter17.log;
        java.util.concurrent.Executor executor20 = restAdapter17.httpExecutor;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel32);
        restAdapter17.log = log29;
        java.util.concurrent.Executor executor36 = null;
        restAdapter17.httpExecutor = executor36;
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter17.logLevel;
        retrofit.RestAdapter.Log log40 = restAdapter17.log;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter56.logLevel = logLevel58;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel58);
        restAdapter41.log = log55;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter62.logLevel = logLevel64;
        retrofit.ErrorHandler errorHandler66 = null;
        restAdapter62.errorHandler = errorHandler66;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.Server server69 = restAdapter68.server;
        retrofit.RequestInterceptor requestInterceptor70 = restAdapter68.requestInterceptor;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder74 = builder71.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter75.new RestHandler();
        retrofit.RestAdapter.Log log78 = restAdapter75.log;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter75.logLevel = logLevel79;
        retrofit.RestAdapter.Builder builder81 = builder74.setLogLevel(logLevel79);
        retrofit.RestAdapter.Builder builder83 = builder81.setServer("hi!");
        retrofit.client.Client.Provider provider84 = builder83.clientProvider;
        restAdapter68.clientProvider = provider84;
        restAdapter62.clientProvider = provider84;
        restAdapter41.clientProvider = provider84;
        retrofit.client.Client.Provider provider88 = restAdapter41.clientProvider;
        retrofit.RestAdapter.Log log89 = restAdapter41.log;
        restAdapter17.log = log89;
        log89.log("Retrofit-Idle");
        restAdapter0.log = log89;
        log89.log("hi!");
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(logLevel76);
        org.junit.Assert.assertNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(provider84);
        org.junit.Assert.assertNotNull(provider88);
        org.junit.Assert.assertNotNull(log89);
    }

    @Test
    public void test07689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07689");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.client.Client.Provider provider7 = restAdapter0.clientProvider;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(provider7);
    }

    @Test
    public void test07690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07690");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.Profiler profiler2 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider4 = null;
        builder3.clientProvider = provider4;
        retrofit.RestAdapter.Builder builder7 = builder3.setServer("Retrofit-Idle");
        retrofit.Server server8 = builder3.server;
        restAdapter0.server = server8;
        retrofit.ErrorHandler errorHandler10 = restAdapter0.errorHandler;
        retrofit.ErrorHandler errorHandler11 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter0.logLevel;
        retrofit.Profiler profiler13 = restAdapter0.profiler;
        java.lang.Throwable throwable14 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable14, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNull(errorHandler10);
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(profiler13);
    }

    @Test
    public void test07691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07691");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        builder10.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor12 = builder10.requestInterceptor;
        retrofit.client.Client.Provider provider13 = builder10.clientProvider;
        retrofit.RestAdapter.Builder builder15 = builder10.setServer("hi!");
        retrofit.RestAdapter.Log log16 = builder10.log;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
    }

    @Test
    public void test07692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07692");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter11.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider18 = null;
        builder10.clientProvider = provider18;
        retrofit.ErrorHandler errorHandler20 = builder10.errorHandler;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.client.Client.Provider provider32 = null;
        builder24.clientProvider = provider32;
        retrofit.ErrorHandler errorHandler34 = builder24.errorHandler;
        retrofit.Server server35 = builder24.server;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = builder46.clientProvider;
        retrofit.RestAdapter.Builder builder48 = builder24.setClient(provider47);
        builder10.clientProvider = provider47;
        retrofit.RestAdapter.Builder builder51 = builder10.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider52 = builder51.clientProvider;
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log56 = restAdapter55.log;
        java.util.concurrent.Executor executor57 = null;
        restAdapter55.callbackExecutor = executor57;
        retrofit.RestAdapter.Log log59 = restAdapter55.log;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log61 = restAdapter60.log;
        java.util.concurrent.Executor executor62 = null;
        restAdapter60.callbackExecutor = executor62;
        retrofit.RestAdapter.Log log64 = restAdapter60.log;
        retrofit.Server server65 = restAdapter60.server;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder69 = builder66.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.Log log73 = restAdapter70.log;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter70.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder69.setLogLevel(logLevel74);
        retrofit.client.Client.Provider provider77 = null;
        builder69.clientProvider = provider77;
        retrofit.RequestInterceptor requestInterceptor79 = builder69.requestInterceptor;
        retrofit.RestAdapter restAdapter80 = builder69.build();
        retrofit.Profiler profiler81 = builder69.profiler;
        retrofit.ErrorHandler errorHandler82 = builder69.errorHandler;
        restAdapter60.errorHandler = errorHandler82;
        restAdapter55.errorHandler = errorHandler82;
        retrofit.ErrorHandler errorHandler85 = restAdapter55.errorHandler;
        builder54.errorHandler = errorHandler85;
        retrofit.Server server87 = builder54.server;
        retrofit.RestAdapter.Builder builder88 = builder0.setServer(server87);
        retrofit.Profiler profiler89 = builder0.profiler;
        retrofit.Profiler profiler90 = builder0.profiler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(executor6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(provider47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(provider52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(restAdapter80);
        org.junit.Assert.assertNull(profiler81);
        org.junit.Assert.assertNotNull(errorHandler82);
        org.junit.Assert.assertNotNull(errorHandler85);
        org.junit.Assert.assertNotNull(server87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(profiler89);
        org.junit.Assert.assertNull(profiler90);
    }

    @Test
    public void test07693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07693");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.converter.Converter converter7 = builder4.converter;
        retrofit.RestAdapter.Log log8 = builder4.log;
        retrofit.Profiler profiler9 = builder4.profiler;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder13 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter14.logLevel = logLevel18;
        retrofit.RestAdapter.Builder builder20 = builder13.setLogLevel(logLevel18);
        retrofit.client.Client.Provider provider21 = null;
        builder13.clientProvider = provider21;
        retrofit.ErrorHandler errorHandler23 = builder13.errorHandler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder27 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter28.new RestHandler();
        retrofit.RestAdapter.Log log31 = restAdapter28.log;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter28.logLevel = logLevel32;
        retrofit.RestAdapter.Builder builder34 = builder27.setLogLevel(logLevel32);
        retrofit.Server server35 = builder27.server;
        retrofit.RestAdapter.Builder builder36 = builder13.setServer(server35);
        retrofit.RestAdapter.Log log37 = builder36.log;
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        retrofit.client.Client.Provider provider50 = builder49.clientProvider;
        java.util.concurrent.Executor executor51 = builder49.callbackExecutor;
        retrofit.converter.Converter converter52 = builder49.converter;
        builder36.converter = converter52;
        retrofit.RestAdapter.Builder builder54 = builder4.setConverter(converter52);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNotNull(converter52);
        org.junit.Assert.assertNotNull(builder54);
    }

    @Test
    public void test07694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07694");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = null;
        builder8.clientProvider = provider16;
        retrofit.RequestInterceptor requestInterceptor18 = builder8.requestInterceptor;
        retrofit.RestAdapter restAdapter19 = builder8.build();
        retrofit.ErrorHandler errorHandler20 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder21 = builder0.setErrorHandler(errorHandler20);
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.Log log24 = restAdapter22.log;
        java.util.concurrent.Executor executor25 = restAdapter22.httpExecutor;
        retrofit.Server server26 = null;
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.converter.Converter converter31 = null;
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter35.logLevel = logLevel37;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor30, converter31, profiler32, errorHandler33, log34, logLevel37);
        restAdapter22.log = log34;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder44 = builder41.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder46 = builder41.setLogLevel(logLevel45);
        restAdapter22.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder48 = builder21.setLogLevel(logLevel45);
        retrofit.RequestInterceptor requestInterceptor49 = builder48.requestInterceptor;
        java.util.concurrent.Executor executor50 = builder48.callbackExecutor;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter55.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder54.setLogLevel(logLevel59);
        retrofit.client.Client.Provider provider62 = null;
        builder54.clientProvider = provider62;
        retrofit.RequestInterceptor requestInterceptor64 = builder54.requestInterceptor;
        retrofit.RestAdapter restAdapter65 = builder54.build();
        java.util.concurrent.Executor executor66 = restAdapter65.callbackExecutor;
        retrofit.converter.Converter converter67 = restAdapter65.converter;
        retrofit.RestAdapter.Log log68 = restAdapter65.log;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter69.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler71 = restAdapter69.new RestHandler();
        retrofit.RestAdapter.Log log72 = restAdapter69.log;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter69.logLevel = logLevel73;
        retrofit.Server server75 = null;
        retrofit.client.Client.Provider provider76 = null;
        java.util.concurrent.Executor executor77 = null;
        java.util.concurrent.Executor executor78 = null;
        retrofit.RequestInterceptor requestInterceptor79 = null;
        retrofit.converter.Converter converter80 = null;
        retrofit.Profiler profiler81 = null;
        retrofit.ErrorHandler errorHandler82 = null;
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel85 = restAdapter84.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter84.logLevel = logLevel86;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server75, provider76, executor77, executor78, requestInterceptor79, converter80, profiler81, errorHandler82, log83, logLevel86);
        restAdapter69.log = log83;
        log83.log("Retrofit-Idle");
        restAdapter65.log = log83;
        retrofit.RestAdapter.Builder builder93 = builder48.setLog(log83);
        log83.log("");
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(restAdapter19);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(requestInterceptor49);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(converter67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNull(logLevel70);
        org.junit.Assert.assertNull(log72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNull(logLevel85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test07695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07695");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter22.logLevel = logLevel24;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel24);
        restAdapter7.log = log21;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter28.logLevel = logLevel30;
        retrofit.ErrorHandler errorHandler32 = null;
        restAdapter28.errorHandler = errorHandler32;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.Server server35 = restAdapter34.server;
        retrofit.RequestInterceptor requestInterceptor36 = restAdapter34.requestInterceptor;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder47 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.client.Client.Provider provider50 = builder49.clientProvider;
        restAdapter34.clientProvider = provider50;
        restAdapter28.clientProvider = provider50;
        restAdapter7.clientProvider = provider50;
        restAdapter0.clientProvider = provider50;
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler56 = restAdapter0.profiler;
        java.util.concurrent.Executor executor57 = null;
        restAdapter0.httpExecutor = executor57;
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNull(profiler56);
    }

    @Test
    public void test07696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07696");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter3 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter3.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter3.new RestHandler();
        retrofit.RestAdapter.Log log6 = restAdapter3.log;
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter3.logLevel = logLevel7;
        retrofit.Server server9 = null;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter18.logLevel = logLevel20;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel20);
        restAdapter3.log = log17;
        builder2.log = log17;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder28 = builder25.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.logLevel = logLevel33;
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel33);
        retrofit.Server server36 = builder28.server;
        builder2.server = server36;
        retrofit.RestAdapter.LogLevel logLevel38 = builder2.logLevel;
        builder0.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter40.logLevel = logLevel42;
        retrofit.ErrorHandler errorHandler44 = null;
        restAdapter40.errorHandler = errorHandler44;
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter40.logLevel;
        retrofit.converter.Converter converter47 = null;
        restAdapter40.converter = converter47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder52 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.RestAdapter.Builder builder59 = builder52.setLogLevel(logLevel57);
        retrofit.client.Client.Provider provider60 = builder59.clientProvider;
        retrofit.ErrorHandler errorHandler61 = builder59.errorHandler;
        restAdapter40.errorHandler = errorHandler61;
        retrofit.RestAdapter.Builder builder63 = builder0.setErrorHandler(errorHandler61);
        java.util.concurrent.Executor executor64 = builder63.httpExecutor;
        retrofit.Server server65 = builder63.server;
        retrofit.Server server66 = builder63.server;
        retrofit.client.Client.Provider provider67 = builder63.clientProvider;
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(log6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertNotNull(provider67);
    }

    @Test
    public void test07697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07697");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor4 = restAdapter0.requestInterceptor;
        retrofit.converter.Converter converter5 = null;
        restAdapter0.converter = converter5;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter8.logLevel = logLevel10;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter8.new RestHandler();
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.Server server28 = null;
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.converter.Converter converter33 = null;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter37.logLevel = logLevel39;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor32, converter33, profiler34, errorHandler35, log36, logLevel39);
        restAdapter22.log = log36;
        builder21.log = log36;
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter53.logLevel = logLevel55;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel55);
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log36, logLevel55);
        restAdapter8.setLogLevel(logLevel55);
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.Log log62 = restAdapter60.log;
        java.util.concurrent.Executor executor63 = restAdapter60.httpExecutor;
        retrofit.Server server64 = null;
        retrofit.client.Client.Provider provider65 = null;
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        retrofit.RequestInterceptor requestInterceptor68 = null;
        retrofit.converter.Converter converter69 = null;
        retrofit.Profiler profiler70 = null;
        retrofit.ErrorHandler errorHandler71 = null;
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter73.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter73.logLevel = logLevel75;
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server64, provider65, executor66, executor67, requestInterceptor68, converter69, profiler70, errorHandler71, log72, logLevel75);
        restAdapter60.log = log72;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder82 = builder79.setServer("hi!");
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter83.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler85 = restAdapter83.new RestHandler();
        retrofit.RestAdapter.Log log86 = restAdapter83.log;
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter83.logLevel = logLevel87;
        retrofit.RestAdapter.Builder builder89 = builder82.setLogLevel(logLevel87);
        java.util.concurrent.Executor executor90 = builder82.callbackExecutor;
        restAdapter60.callbackExecutor = executor90;
        restAdapter8.callbackExecutor = executor90;
        restAdapter0.callbackExecutor = executor90;
        java.util.concurrent.Executor executor94 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor95 = restAdapter0.callbackExecutor;
        retrofit.ErrorHandler errorHandler96 = restAdapter0.errorHandler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNull(log62);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNull(logLevel74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(logLevel84);
        org.junit.Assert.assertNull(log86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(executor90);
        org.junit.Assert.assertNull(executor94);
        org.junit.Assert.assertNotNull(executor95);
        org.junit.Assert.assertNull(errorHandler96);
    }

    @Test
    public void test07698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07698");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.Profiler profiler15 = builder3.profiler;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.Log log18 = restAdapter16.log;
        retrofit.ErrorHandler errorHandler19 = restAdapter16.errorHandler;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter16.requestInterceptor;
        retrofit.converter.Converter converter21 = null;
        restAdapter16.converter = converter21;
        retrofit.converter.Converter converter23 = restAdapter16.converter;
        retrofit.converter.Converter converter24 = null;
        restAdapter16.converter = converter24;
        java.util.concurrent.Executor executor26 = restAdapter16.httpExecutor;
        retrofit.RestAdapter.Log log27 = restAdapter16.log;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter28.logLevel = logLevel30;
        retrofit.ErrorHandler errorHandler32 = null;
        restAdapter28.errorHandler = errorHandler32;
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter28.logLevel;
        restAdapter16.logLevel = logLevel34;
        retrofit.RestAdapter.Builder builder36 = builder3.setLogLevel(logLevel34);
        java.util.concurrent.Executor executor37 = builder36.httpExecutor;
        builder36.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler39 = builder36.errorHandler;
        retrofit.RestAdapter restAdapter40 = builder36.build();
        retrofit.Profiler profiler41 = null;
        builder36.profiler = profiler41;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNull(requestInterceptor20);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(restAdapter40);
    }

    @Test
    public void test07699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07699");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter24.logLevel = logLevel26;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel26);
        restAdapter9.log = log23;
        builder8.log = log23;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel42);
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log23, logLevel42);
        boolean boolean46 = logLevel42.log();
        boolean boolean47 = logLevel42.log();
        boolean boolean48 = logLevel42.log();
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test07700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07700");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        java.util.concurrent.Executor executor11 = builder3.callbackExecutor;
        retrofit.Profiler profiler12 = null;
        builder3.profiler = profiler12;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        java.util.concurrent.Executor executor29 = builder21.callbackExecutor;
        restAdapter14.callbackExecutor = executor29;
        builder3.callbackExecutor = executor29;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        java.util.concurrent.Executor executor47 = builder39.callbackExecutor;
        restAdapter32.callbackExecutor = executor47;
        builder3.httpExecutor = executor47;
        retrofit.Server server50 = builder3.server;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean52 = logLevel51.log();
        retrofit.RestAdapter.Builder builder53 = builder3.setLogLevel(logLevel51);
        retrofit.RestAdapter restAdapter54 = builder3.build();
        retrofit.Server server55 = builder3.server;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(restAdapter54);
        org.junit.Assert.assertNotNull(server55);
    }

    @Test
    public void test07701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07701");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor6 = builder5.callbackExecutor;
        retrofit.Profiler profiler7 = null;
        builder5.profiler = profiler7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.Server server20 = builder12.server;
        builder5.server = server20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter38.logLevel = logLevel40;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel40);
        restAdapter23.log = log37;
        builder22.log = log37;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder48 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        retrofit.RestAdapter.Log log52 = restAdapter49.log;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter49.logLevel = logLevel53;
        retrofit.RestAdapter.Builder builder55 = builder48.setLogLevel(logLevel53);
        retrofit.Server server56 = builder48.server;
        builder22.server = server56;
        builder5.server = server56;
        retrofit.RestAdapter.Builder builder59 = builder4.setServer(server56);
        retrofit.RestAdapter.LogLevel logLevel60 = builder4.logLevel;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter61.logLevel = logLevel63;
        retrofit.RestAdapter.Builder builder65 = builder4.setLogLevel(logLevel63);
        retrofit.client.Client.Provider provider66 = builder65.clientProvider;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder72 = builder67.setLogLevel(logLevel71);
        retrofit.Server server73 = null;
        builder67.server = server73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.client.Client.Provider provider86 = null;
        builder78.clientProvider = provider86;
        retrofit.RequestInterceptor requestInterceptor88 = builder78.requestInterceptor;
        retrofit.RestAdapter restAdapter89 = builder78.build();
        retrofit.ErrorHandler errorHandler90 = builder78.errorHandler;
        retrofit.converter.Converter converter91 = builder78.converter;
        retrofit.RestAdapter.Builder builder92 = builder67.setConverter(converter91);
        retrofit.RestAdapter.Log log93 = builder67.log;
        retrofit.ErrorHandler errorHandler94 = builder67.errorHandler;
        retrofit.converter.Converter converter95 = builder67.converter;
        builder65.converter = converter95;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(requestInterceptor88);
        org.junit.Assert.assertNotNull(restAdapter89);
        org.junit.Assert.assertNotNull(errorHandler90);
        org.junit.Assert.assertNotNull(converter91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(log93);
        org.junit.Assert.assertNotNull(errorHandler94);
        org.junit.Assert.assertNotNull(converter95);
    }

    @Test
    public void test07702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07702");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.Profiler profiler27 = null;
        builder26.profiler = profiler27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider40 = builder39.clientProvider;
        retrofit.ErrorHandler errorHandler41 = builder39.errorHandler;
        retrofit.RestAdapter.Builder builder42 = builder26.setErrorHandler(errorHandler41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor44 = builder43.callbackExecutor;
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder50 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        retrofit.RestAdapter.Log log54 = restAdapter51.log;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter51.logLevel = logLevel55;
        retrofit.RestAdapter.Builder builder57 = builder50.setLogLevel(logLevel55);
        retrofit.Server server58 = builder50.server;
        builder43.server = server58;
        builder43.ensureSaneDefaults();
        retrofit.Profiler profiler61 = builder43.profiler;
        java.util.concurrent.Executor executor62 = builder43.callbackExecutor;
        builder42.httpExecutor = executor62;
        retrofit.ErrorHandler errorHandler64 = builder42.errorHandler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(errorHandler64);
    }

    @Test
    public void test07703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07703");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder6 = builder3.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.RestAdapter.Builder builder13 = builder6.setLogLevel(logLevel11);
        retrofit.client.Client.Provider provider14 = null;
        builder6.clientProvider = provider14;
        retrofit.RequestInterceptor requestInterceptor16 = builder6.requestInterceptor;
        retrofit.RestAdapter restAdapter17 = builder6.build();
        java.util.concurrent.Executor executor18 = restAdapter17.callbackExecutor;
        retrofit.converter.Converter converter19 = restAdapter17.converter;
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.client.Client.Provider provider32 = null;
        builder24.clientProvider = provider32;
        retrofit.ErrorHandler errorHandler34 = builder24.errorHandler;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.Log log42 = restAdapter39.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.logLevel = logLevel43;
        retrofit.RestAdapter.Builder builder45 = builder38.setLogLevel(logLevel43);
        retrofit.Server server46 = builder38.server;
        retrofit.RestAdapter.Builder builder47 = builder24.setServer(server46);
        java.util.concurrent.Executor executor48 = builder47.httpExecutor;
        restAdapter17.callbackExecutor = executor48;
        restAdapter0.httpExecutor = executor48;
        retrofit.Server server51 = restAdapter0.server;
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler53 = restAdapter0.profiler;
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter0.getLogLevel();
        retrofit.Server server55 = restAdapter0.server;
        retrofit.RequestInterceptor requestInterceptor56 = restAdapter0.requestInterceptor;
        retrofit.Profiler profiler57 = restAdapter0.profiler;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(requestInterceptor16);
        org.junit.Assert.assertNotNull(restAdapter17);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(converter19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertNull(requestInterceptor56);
        org.junit.Assert.assertNull(profiler57);
    }

    @Test
    public void test07704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07704");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        java.util.concurrent.Executor executor15 = restAdapter14.callbackExecutor;
        retrofit.converter.Converter converter16 = restAdapter14.converter;
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.Server server24 = null;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter33.logLevel = logLevel35;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel35);
        restAdapter18.log = log32;
        log32.log("Retrofit-Idle");
        restAdapter14.log = log32;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.logLevel;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder47 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter48.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder54 = builder47.setLogLevel(logLevel52);
        retrofit.client.Client.Provider provider55 = null;
        builder47.clientProvider = provider55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        retrofit.client.Client.Provider provider68 = null;
        builder60.clientProvider = provider68;
        retrofit.ErrorHandler errorHandler70 = builder60.errorHandler;
        retrofit.RestAdapter.Builder builder71 = builder47.setErrorHandler(errorHandler70);
        restAdapter42.errorHandler = errorHandler70;
        restAdapter14.errorHandler = errorHandler70;
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter14.getLogLevel();
        retrofit.Profiler profiler75 = null;
        restAdapter14.profiler = profiler75;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(converter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07705");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder33 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.RestAdapter.Builder builder40 = builder33.setLogLevel(logLevel38);
        java.util.concurrent.Executor executor41 = builder33.callbackExecutor;
        restAdapter26.callbackExecutor = executor41;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder50 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        retrofit.RestAdapter.Log log54 = restAdapter51.log;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter51.logLevel = logLevel55;
        retrofit.RestAdapter.Builder builder57 = builder50.setLogLevel(logLevel55);
        java.util.concurrent.Executor executor58 = builder50.callbackExecutor;
        restAdapter43.callbackExecutor = executor58;
        retrofit.RestAdapter.Builder builder60 = builder25.setExecutors(executor41, executor58);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.Log log68 = restAdapter65.log;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter65.logLevel = logLevel69;
        retrofit.RestAdapter.Builder builder71 = builder64.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider72 = null;
        builder64.clientProvider = provider72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder77 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter78.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler80 = restAdapter78.new RestHandler();
        retrofit.RestAdapter.Log log81 = restAdapter78.log;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter78.logLevel = logLevel82;
        retrofit.RestAdapter.Builder builder84 = builder77.setLogLevel(logLevel82);
        retrofit.client.Client.Provider provider85 = null;
        builder77.clientProvider = provider85;
        retrofit.ErrorHandler errorHandler87 = builder77.errorHandler;
        retrofit.RestAdapter.Builder builder88 = builder64.setErrorHandler(errorHandler87);
        retrofit.RestAdapter.Builder builder89 = builder25.setErrorHandler(errorHandler87);
        retrofit.RestAdapter.Builder builder90 = builder10.setErrorHandler(errorHandler87);
        retrofit.RestAdapter.Builder builder92 = builder10.setServer("hi!");
        builder10.ensureSaneDefaults();
        java.util.concurrent.Executor executor94 = builder10.httpExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(logLevel79);
        org.junit.Assert.assertNull(log81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(errorHandler87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(executor94);
    }

    @Test
    public void test07706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07706");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        builder2.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder5 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter6.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.Log log9 = restAdapter6.log;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter6.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = builder5.setLogLevel(logLevel10);
        java.util.concurrent.Executor executor13 = builder5.callbackExecutor;
        retrofit.Profiler profiler14 = null;
        builder5.profiler = profiler14;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder23 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.Log log27 = restAdapter24.log;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter24.logLevel = logLevel28;
        retrofit.RestAdapter.Builder builder30 = builder23.setLogLevel(logLevel28);
        java.util.concurrent.Executor executor31 = builder23.callbackExecutor;
        restAdapter16.callbackExecutor = executor31;
        builder5.callbackExecutor = executor31;
        restAdapter0.callbackExecutor = executor31;
        retrofit.Profiler profiler35 = restAdapter0.profiler;
        java.util.concurrent.Executor executor36 = restAdapter0.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor37 = restAdapter0.requestInterceptor;
        retrofit.Server server38 = restAdapter0.server;
        retrofit.client.Response response40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response42 = restAdapter0.logAndReplaceResponse("hi!", response40, (long) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(executor13);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNull(requestInterceptor37);
        org.junit.Assert.assertNull(server38);
    }

    @Test
    public void test07707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07707");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.converter.Converter converter7 = null;
        restAdapter0.converter = converter7;
        retrofit.converter.Converter converter9 = restAdapter0.converter;
        java.util.concurrent.Executor executor10 = restAdapter0.callbackExecutor;
        retrofit.Profiler profiler11 = null;
        restAdapter0.profiler = profiler11;
        retrofit.RequestInterceptor requestInterceptor13 = restAdapter0.requestInterceptor;
        retrofit.converter.Converter converter14 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter0.new RestHandler();
        retrofit.Server server16 = restAdapter0.server;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.Server server31 = restAdapter30.server;
        retrofit.RequestInterceptor requestInterceptor32 = restAdapter30.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter30.logLevel = logLevel33;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel33);
        java.util.concurrent.Executor executor36 = builder35.httpExecutor;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.logLevel;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        retrofit.client.Client.Provider provider50 = null;
        builder42.clientProvider = provider50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder55 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter56.new RestHandler();
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter56.logLevel = logLevel60;
        retrofit.RestAdapter.Builder builder62 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider63 = null;
        builder55.clientProvider = provider63;
        retrofit.ErrorHandler errorHandler65 = builder55.errorHandler;
        retrofit.RestAdapter.Builder builder66 = builder42.setErrorHandler(errorHandler65);
        restAdapter37.errorHandler = errorHandler65;
        retrofit.RestAdapter.Builder builder68 = builder35.setErrorHandler(errorHandler65);
        restAdapter0.errorHandler = errorHandler65;
        retrofit.client.Response response71 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response73 = restAdapter0.logAndReplaceResponse("", response71, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertNull(requestInterceptor32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test07708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07708");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.Profiler profiler7 = restAdapter6.profiler;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider19 = null;
        builder11.clientProvider = provider19;
        retrofit.ErrorHandler errorHandler21 = builder11.errorHandler;
        restAdapter6.errorHandler = errorHandler21;
        retrofit.RestAdapter.Builder builder23 = builder4.setErrorHandler(errorHandler21);
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter24.logLevel = logLevel26;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter28.logLevel = logLevel30;
        retrofit.ErrorHandler errorHandler32 = null;
        restAdapter28.errorHandler = errorHandler32;
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter28.logLevel;
        restAdapter24.logLevel = logLevel34;
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder47 = builder40.setLogLevel(logLevel45);
        retrofit.client.Client.Provider provider48 = null;
        builder40.clientProvider = provider48;
        retrofit.ErrorHandler errorHandler50 = builder40.errorHandler;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter55.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder54.setLogLevel(logLevel59);
        retrofit.Server server62 = builder54.server;
        retrofit.RestAdapter.Builder builder63 = builder40.setServer(server62);
        retrofit.RestAdapter.Log log64 = builder63.log;
        log64.log("hi!");
        restAdapter24.log = log64;
        builder4.log = log64;
        retrofit.Profiler profiler69 = null;
        builder4.profiler = profiler69;
        retrofit.Profiler profiler71 = builder4.profiler;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(errorHandler50);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNull(profiler71);
    }

    @Test
    public void test07709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07709");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        retrofit.Server server8 = null;
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.RequestInterceptor requestInterceptor12 = null;
        retrofit.converter.Converter converter13 = null;
        retrofit.Profiler profiler14 = null;
        retrofit.ErrorHandler errorHandler15 = null;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel34);
        restAdapter17.log = log31;
        builder16.log = log31;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor12, converter13, profiler14, errorHandler15, log31, logLevel39);
        retrofit.RestAdapter.Log log41 = restAdapter40.log;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder45 = builder42.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder47 = builder42.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.logLevel;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter54.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider61 = null;
        builder53.clientProvider = provider61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter67.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider74 = null;
        builder66.clientProvider = provider74;
        retrofit.ErrorHandler errorHandler76 = builder66.errorHandler;
        retrofit.RestAdapter.Builder builder77 = builder53.setErrorHandler(errorHandler76);
        restAdapter48.errorHandler = errorHandler76;
        builder42.errorHandler = errorHandler76;
        restAdapter40.errorHandler = errorHandler76;
        restAdapter0.errorHandler = errorHandler76;
        retrofit.Profiler profiler82 = null;
        restAdapter0.profiler = profiler82;
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter0.getLogLevel();
        java.util.concurrent.Executor executor85 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter0.logLevel;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(errorHandler76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07710");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = builder15.clientProvider;
        java.util.concurrent.Executor executor17 = builder15.callbackExecutor;
        retrofit.Server server18 = builder15.server;
        retrofit.Server server19 = null;
        builder15.server = server19;
        retrofit.RestAdapter.LogLevel logLevel21 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder25 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log29 = restAdapter26.log;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.logLevel = logLevel30;
        retrofit.RestAdapter.Builder builder32 = builder25.setLogLevel(logLevel30);
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter34 = builder32.build();
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter34.requestInterceptor;
        java.util.concurrent.Executor executor36 = restAdapter34.httpExecutor;
        builder15.httpExecutor = executor36;
        retrofit.RestAdapter.Builder builder39 = builder15.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder45 = builder40.setLogLevel(logLevel44);
        retrofit.Server server46 = null;
        builder40.server = server46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder51 = builder48.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.Log log55 = restAdapter52.log;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter52.logLevel = logLevel56;
        retrofit.RestAdapter.Builder builder58 = builder51.setLogLevel(logLevel56);
        retrofit.client.Client.Provider provider59 = null;
        builder51.clientProvider = provider59;
        retrofit.RequestInterceptor requestInterceptor61 = builder51.requestInterceptor;
        retrofit.RestAdapter restAdapter62 = builder51.build();
        retrofit.ErrorHandler errorHandler63 = builder51.errorHandler;
        retrofit.converter.Converter converter64 = builder51.converter;
        retrofit.RestAdapter.Builder builder65 = builder40.setConverter(converter64);
        retrofit.RestAdapter.Builder builder66 = builder39.setConverter(converter64);
        builder4.converter = converter64;
        retrofit.RestAdapter.Log log68 = builder4.log;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider16);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertNotNull(restAdapter62);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNotNull(converter64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(log68);
    }

    @Test
    public void test07711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07711");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.Profiler profiler13 = builder10.profiler;
        retrofit.ErrorHandler errorHandler14 = builder10.errorHandler;
        retrofit.Server server15 = builder10.server;
        retrofit.RestAdapter.Log log16 = builder10.log;
        retrofit.RestAdapter.LogLevel logLevel17 = builder10.logLevel;
        java.util.concurrent.Executor executor18 = builder10.callbackExecutor;
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder10.setServer("hi!");
        builder10.ensureSaneDefaults();
        retrofit.Server server23 = null;
        builder10.server = server23;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test07712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07712");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        java.util.concurrent.Executor executor3 = restAdapter0.httpExecutor;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        retrofit.converter.Converter converter9 = null;
        retrofit.Profiler profiler10 = null;
        retrofit.ErrorHandler errorHandler11 = null;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter13.logLevel = logLevel15;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor8, converter9, profiler10, errorHandler11, log12, logLevel15);
        restAdapter0.log = log12;
        java.util.concurrent.Executor executor19 = null;
        restAdapter0.httpExecutor = executor19;
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter0.logLevel;
        retrofit.Profiler profiler23 = restAdapter0.profiler;
        retrofit.Profiler profiler24 = restAdapter0.profiler;
        java.util.concurrent.Executor executor25 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(executor25);
    }

    @Test
    public void test07713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07713");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter9.logLevel = logLevel11;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel11);
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter13.new RestHandler();
        retrofit.converter.Converter converter15 = restAdapter13.converter;
        retrofit.Profiler profiler16 = restAdapter13.profiler;
        retrofit.client.Client.Provider provider17 = null;
        restAdapter13.clientProvider = provider17;
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(profiler16);
    }

    @Test
    public void test07714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07714");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.RestAdapter.Log log12 = builder10.log;
        java.util.concurrent.Executor executor13 = builder10.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel14 = builder10.logLevel;
        boolean boolean15 = logLevel14.log();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(executor13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test07715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07715");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter14.logLevel = logLevel18;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel31);
        restAdapter14.log = log28;
        builder13.log = log28;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter45.logLevel = logLevel47;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel47);
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log28, logLevel47);
        restAdapter0.setLogLevel(logLevel47);
        java.util.concurrent.Executor executor52 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter0.logLevel;
        retrofit.Server server54 = null;
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler65 = restAdapter63.new RestHandler();
        retrofit.RestAdapter.Log log66 = restAdapter63.log;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter63.logLevel = logLevel67;
        retrofit.Server server69 = null;
        retrofit.client.Client.Provider provider70 = null;
        java.util.concurrent.Executor executor71 = null;
        java.util.concurrent.Executor executor72 = null;
        retrofit.RequestInterceptor requestInterceptor73 = null;
        retrofit.converter.Converter converter74 = null;
        retrofit.Profiler profiler75 = null;
        retrofit.ErrorHandler errorHandler76 = null;
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter78.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter78.logLevel = logLevel80;
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter(server69, provider70, executor71, executor72, requestInterceptor73, converter74, profiler75, errorHandler76, log77, logLevel80);
        restAdapter63.log = log77;
        builder62.log = log77;
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter86 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log77, logLevel85);
        boolean boolean87 = logLevel85.log();
        restAdapter0.logLevel = logLevel85;
        retrofit.Profiler profiler89 = null;
        restAdapter0.profiler = profiler89;
        retrofit.Server server91 = restAdapter0.server;
        java.lang.Throwable throwable92 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable92, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNull(logLevel79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(server91);
    }

    @Test
    public void test07716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07716");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.RequestInterceptor requestInterceptor49 = builder39.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = builder0.setRequestInterceptor(requestInterceptor49);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter55.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder54.setLogLevel(logLevel59);
        retrofit.client.Client.Provider provider62 = null;
        builder54.clientProvider = provider62;
        retrofit.RequestInterceptor requestInterceptor64 = builder54.requestInterceptor;
        builder50.requestInterceptor = requestInterceptor64;
        retrofit.Server server66 = builder50.server;
        retrofit.RestAdapter restAdapter67 = builder50.build();
        retrofit.Server server68 = restAdapter67.server;
        retrofit.RestAdapter.Log log69 = restAdapter67.log;
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(restAdapter67);
        org.junit.Assert.assertNotNull(server68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(log70);
    }

    @Test
    public void test07717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07717");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.Profiler profiler15 = builder3.profiler;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel34);
        restAdapter17.log = log31;
        builder16.log = log31;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        retrofit.Server server50 = builder42.server;
        builder16.server = server50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder55 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter56.new RestHandler();
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter56.logLevel = logLevel60;
        retrofit.RestAdapter.Builder builder62 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider63 = null;
        builder55.clientProvider = provider63;
        retrofit.RequestInterceptor requestInterceptor65 = builder55.requestInterceptor;
        retrofit.RestAdapter.Builder builder66 = builder16.setRequestInterceptor(requestInterceptor65);
        retrofit.RestAdapter.Builder builder67 = builder3.setRequestInterceptor(requestInterceptor65);
        retrofit.client.Client.Provider provider68 = builder67.clientProvider;
        java.util.concurrent.Executor executor69 = builder67.httpExecutor;
        retrofit.Profiler profiler70 = builder67.profiler;
        retrofit.RestAdapter.Builder builder72 = builder67.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel73 = builder72.logLevel;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(executor69);
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07718");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder19 = builder14.setLogLevel(logLevel18);
        retrofit.Server server20 = null;
        builder14.server = server20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder25 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log29 = restAdapter26.log;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.logLevel = logLevel30;
        retrofit.RestAdapter.Builder builder32 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider33 = null;
        builder25.clientProvider = provider33;
        retrofit.RequestInterceptor requestInterceptor35 = builder25.requestInterceptor;
        retrofit.RestAdapter restAdapter36 = builder25.build();
        retrofit.ErrorHandler errorHandler37 = builder25.errorHandler;
        retrofit.converter.Converter converter38 = builder25.converter;
        retrofit.RestAdapter.Builder builder39 = builder14.setConverter(converter38);
        retrofit.RestAdapter.Log log40 = builder14.log;
        retrofit.RestAdapter.Builder builder41 = builder12.setLog(log40);
        retrofit.Profiler profiler42 = builder12.profiler;
        retrofit.converter.Converter converter43 = null;
        builder12.converter = converter43;
        retrofit.RequestInterceptor requestInterceptor45 = builder12.requestInterceptor;
        retrofit.converter.Converter converter46 = builder12.converter;
        retrofit.Profiler profiler47 = builder12.profiler;
        retrofit.Profiler profiler48 = builder12.profiler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(profiler47);
        org.junit.Assert.assertNull(profiler48);
    }

    @Test
    public void test07719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07719");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.Profiler profiler2 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider4 = null;
        builder3.clientProvider = provider4;
        retrofit.RestAdapter.Builder builder7 = builder3.setServer("Retrofit-Idle");
        retrofit.Server server8 = builder3.server;
        restAdapter0.server = server8;
        retrofit.ErrorHandler errorHandler10 = restAdapter0.errorHandler;
        retrofit.ErrorHandler errorHandler11 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter0.logLevel;
        retrofit.Profiler profiler13 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler15 = restAdapter0.profiler;
        retrofit.RestAdapter.Log log16 = restAdapter0.log;
        java.lang.Throwable throwable17 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable17, "Retrofit-Idle");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNull(errorHandler10);
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(log16);
    }

    @Test
    public void test07720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07720");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.RestAdapter.Log log27 = builder26.log;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.Server server29 = restAdapter28.server;
        retrofit.RequestInterceptor requestInterceptor30 = restAdapter28.requestInterceptor;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.client.Client.Provider provider44 = builder43.clientProvider;
        restAdapter28.clientProvider = provider44;
        retrofit.RestAdapter.Builder builder46 = builder26.setClient(provider44);
        retrofit.RestAdapter.LogLevel logLevel47 = null;
        builder26.logLevel = logLevel47;
        java.util.concurrent.Executor executor49 = builder26.callbackExecutor;
        java.util.concurrent.Executor executor50 = builder26.httpExecutor;
        retrofit.client.Client.Provider provider51 = builder26.clientProvider;
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder26.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel55 = builder26.logLevel;
        retrofit.Profiler profiler56 = null;
        builder26.profiler = profiler56;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNotNull(provider51);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel55);
    }

    @Test
    public void test07721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07721");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.ErrorHandler errorHandler12 = builder10.errorHandler;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter14.logLevel = logLevel18;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel31);
        restAdapter14.log = log28;
        builder13.log = log28;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.Server server47 = builder39.server;
        builder13.server = server47;
        builder10.server = server47;
        java.util.concurrent.Executor executor50 = builder10.callbackExecutor;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter55.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder54.setLogLevel(logLevel59);
        retrofit.Server server62 = builder54.server;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter67.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider74 = null;
        builder66.clientProvider = provider74;
        retrofit.RequestInterceptor requestInterceptor76 = builder66.requestInterceptor;
        retrofit.RestAdapter restAdapter77 = builder66.build();
        retrofit.Profiler profiler78 = builder66.profiler;
        retrofit.ErrorHandler errorHandler79 = builder66.errorHandler;
        builder54.errorHandler = errorHandler79;
        retrofit.RestAdapter restAdapter81 = builder54.build();
        retrofit.Server server82 = builder54.server;
        retrofit.RestAdapter.Builder builder83 = builder10.setServer(server82);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(errorHandler12);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(requestInterceptor76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNull(profiler78);
        org.junit.Assert.assertNotNull(errorHandler79);
        org.junit.Assert.assertNotNull(restAdapter81);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test07722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07722");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter4.logLevel = logLevel6;
        retrofit.ErrorHandler errorHandler8 = null;
        restAdapter4.errorHandler = errorHandler8;
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter4.logLevel;
        restAdapter0.logLevel = logLevel10;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter0.new RestHandler();
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.Profiler profiler14 = restAdapter13.profiler;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        retrofit.client.Client.Provider provider26 = null;
        builder18.clientProvider = provider26;
        retrofit.ErrorHandler errorHandler28 = builder18.errorHandler;
        restAdapter13.errorHandler = errorHandler28;
        restAdapter0.errorHandler = errorHandler28;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.Log log35 = restAdapter32.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter32.logLevel = logLevel36;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter47.logLevel = logLevel49;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel49);
        restAdapter32.log = log46;
        builder31.log = log46;
        restAdapter0.log = log46;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder58 = builder55.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter59.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler61 = restAdapter59.new RestHandler();
        retrofit.RestAdapter.Log log62 = restAdapter59.log;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter59.logLevel = logLevel63;
        retrofit.RestAdapter.Builder builder65 = builder58.setLogLevel(logLevel63);
        java.util.concurrent.Executor executor66 = builder58.callbackExecutor;
        retrofit.Profiler profiler67 = null;
        builder58.profiler = profiler67;
        retrofit.client.Client.Provider provider69 = builder58.clientProvider;
        restAdapter0.clientProvider = provider69;
        retrofit.RestAdapter.Log log71 = restAdapter0.log;
        retrofit.client.Client.Provider provider72 = restAdapter0.clientProvider;
        java.util.concurrent.Executor executor73 = restAdapter0.callbackExecutor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(logLevel60);
        org.junit.Assert.assertNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(provider69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(provider72);
        org.junit.Assert.assertNull(executor73);
    }

    @Test
    public void test07723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07723");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor6 = builder5.callbackExecutor;
        retrofit.Profiler profiler7 = null;
        builder5.profiler = profiler7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.Server server20 = builder12.server;
        builder5.server = server20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter38.logLevel = logLevel40;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel40);
        restAdapter23.log = log37;
        builder22.log = log37;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder48 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        retrofit.RestAdapter.Log log52 = restAdapter49.log;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter49.logLevel = logLevel53;
        retrofit.RestAdapter.Builder builder55 = builder48.setLogLevel(logLevel53);
        retrofit.Server server56 = builder48.server;
        builder22.server = server56;
        builder5.server = server56;
        retrofit.RestAdapter.Builder builder59 = builder4.setServer(server56);
        retrofit.RestAdapter.LogLevel logLevel60 = builder4.logLevel;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter61.logLevel = logLevel63;
        retrofit.RestAdapter.Builder builder65 = builder4.setLogLevel(logLevel63);
        retrofit.converter.Converter converter66 = builder65.converter;
        builder65.ensureSaneDefaults();
        java.util.concurrent.Executor executor68 = builder65.callbackExecutor;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(converter66);
        org.junit.Assert.assertNotNull(executor68);
    }

    @Test
    public void test07724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07724");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler8 = restAdapter0.errorHandler;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.Profiler profiler10 = restAdapter9.profiler;
        retrofit.Profiler profiler11 = restAdapter9.profiler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter9.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean14 = logLevel13.log();
        restAdapter9.logLevel = logLevel13;
        restAdapter0.logLevel = logLevel13;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(errorHandler8);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test07725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07725");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider38 = null;
        builder30.clientProvider = provider38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.ErrorHandler errorHandler53 = builder43.errorHandler;
        retrofit.RestAdapter.Builder builder54 = builder30.setErrorHandler(errorHandler53);
        java.util.concurrent.Executor executor55 = builder54.httpExecutor;
        builder26.httpExecutor = executor55;
        retrofit.converter.Converter converter57 = builder26.converter;
        retrofit.RestAdapter.LogLevel logLevel58 = null;
        builder26.logLevel = logLevel58;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(converter57);
    }

    @Test
    public void test07726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07726");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.RequestInterceptor requestInterceptor49 = builder39.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = builder0.setRequestInterceptor(requestInterceptor49);
        retrofit.RequestInterceptor requestInterceptor51 = builder50.requestInterceptor;
        retrofit.client.Client.Provider provider52 = builder50.clientProvider;
        retrofit.Profiler profiler53 = builder50.profiler;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.Profiler profiler55 = restAdapter54.profiler;
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.converter.Converter converter57 = restAdapter54.converter;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter54.logLevel = logLevel58;
        retrofit.Profiler profiler60 = restAdapter54.profiler;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.Log log68 = restAdapter65.log;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter65.logLevel = logLevel69;
        retrofit.RestAdapter.Builder builder71 = builder64.setLogLevel(logLevel69);
        builder71.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor73 = builder71.requestInterceptor;
        retrofit.client.Client.Provider provider74 = builder71.clientProvider;
        restAdapter54.clientProvider = provider74;
        retrofit.RestAdapter.Builder builder76 = builder50.setClient(provider74);
        retrofit.Profiler profiler77 = builder50.profiler;
        builder50.ensureSaneDefaults();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler60);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(profiler77);
    }

    @Test
    public void test07727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07727");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = null;
        builder8.clientProvider = provider16;
        retrofit.ErrorHandler errorHandler18 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder29 = builder22.setLogLevel(logLevel27);
        retrofit.Server server30 = builder22.server;
        retrofit.RestAdapter.Builder builder31 = builder8.setServer(server30);
        java.util.concurrent.Executor executor32 = builder31.httpExecutor;
        restAdapter0.callbackExecutor = executor32;
        retrofit.Server server34 = restAdapter0.server;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.Log log42 = restAdapter39.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.logLevel = logLevel43;
        retrofit.RestAdapter.Builder builder45 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.Server server49 = restAdapter48.server;
        retrofit.RequestInterceptor requestInterceptor50 = restAdapter48.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter48.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel51);
        restAdapter0.logLevel = logLevel51;
        retrofit.ErrorHandler errorHandler55 = restAdapter0.errorHandler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertNull(requestInterceptor50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(errorHandler55);
    }

    @Test
    public void test07728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07728");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.RequestInterceptor requestInterceptor49 = builder39.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = builder0.setRequestInterceptor(requestInterceptor49);
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.client.Client.Provider provider52 = builder50.clientProvider;
        builder50.ensureSaneDefaults();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider52);
    }

    @Test
    public void test07729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07729");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor4 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = null;
        builder8.clientProvider = provider16;
        retrofit.ErrorHandler errorHandler18 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder29 = builder22.setLogLevel(logLevel27);
        retrofit.Server server30 = builder22.server;
        retrofit.RestAdapter.Builder builder31 = builder8.setServer(server30);
        java.util.concurrent.Executor executor32 = builder31.httpExecutor;
        restAdapter0.httpExecutor = executor32;
        retrofit.ErrorHandler errorHandler34 = null;
        restAdapter0.errorHandler = errorHandler34;
        retrofit.Server server36 = restAdapter0.server;
        java.lang.Throwable throwable37 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable37, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNull(server36);
    }

    @Test
    public void test07730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07730");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter9.logLevel = logLevel11;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel11);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        java.util.concurrent.Executor executor25 = builder17.callbackExecutor;
        retrofit.Profiler profiler26 = null;
        builder17.profiler = profiler26;
        java.util.concurrent.Executor executor28 = builder17.callbackExecutor;
        java.util.concurrent.Executor executor29 = builder17.httpExecutor;
        restAdapter13.callbackExecutor = executor29;
        java.util.concurrent.Executor executor31 = restAdapter13.httpExecutor;
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(executor31);
    }

    @Test
    public void test07731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07731");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.client.Client.Provider provider15 = null;
        builder7.clientProvider = provider15;
        retrofit.RequestInterceptor requestInterceptor17 = builder7.requestInterceptor;
        retrofit.RestAdapter restAdapter18 = builder7.build();
        retrofit.Profiler profiler19 = builder7.profiler;
        retrofit.ErrorHandler errorHandler20 = builder7.errorHandler;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter42.logLevel = logLevel44;
        retrofit.ErrorHandler errorHandler46 = null;
        restAdapter42.errorHandler = errorHandler46;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.Server server49 = restAdapter48.server;
        retrofit.RequestInterceptor requestInterceptor50 = restAdapter48.requestInterceptor;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter55.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder54.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("hi!");
        retrofit.client.Client.Provider provider64 = builder63.clientProvider;
        restAdapter48.clientProvider = provider64;
        restAdapter42.clientProvider = provider64;
        restAdapter21.clientProvider = provider64;
        retrofit.RestAdapter.Builder builder68 = builder7.setClient(provider64);
        retrofit.converter.Converter converter69 = builder68.converter;
        retrofit.RestAdapter.Builder builder70 = builder0.setConverter(converter69);
        java.util.concurrent.Executor executor71 = builder70.callbackExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(requestInterceptor17);
        org.junit.Assert.assertNotNull(restAdapter18);
        org.junit.Assert.assertNull(profiler19);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(converter69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(executor71);
    }

    @Test
    public void test07732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07732");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter15.logLevel = logLevel17;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel17);
        restAdapter0.log = log14;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter21.logLevel = logLevel23;
        retrofit.ErrorHandler errorHandler25 = null;
        restAdapter21.errorHandler = errorHandler25;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.Server server28 = restAdapter27.server;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder33 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.RestAdapter.Builder builder40 = builder33.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.client.Client.Provider provider43 = builder42.clientProvider;
        restAdapter27.clientProvider = provider43;
        restAdapter21.clientProvider = provider43;
        restAdapter0.clientProvider = provider43;
        retrofit.client.Client.Provider provider47 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Log log48 = restAdapter0.log;
        retrofit.Server server49 = restAdapter0.server;
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter0.getLogLevel();
        retrofit.client.Client.Provider provider51 = restAdapter0.clientProvider;
        retrofit.Server server52 = restAdapter0.server;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        java.util.concurrent.Executor executor55 = builder53.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor56 = builder53.requestInterceptor;
        java.util.concurrent.Executor executor57 = builder53.httpExecutor;
        retrofit.RestAdapter.Log log58 = builder53.log;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter59.logLevel;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.Log log68 = restAdapter65.log;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter65.logLevel = logLevel69;
        retrofit.RestAdapter.Builder builder71 = builder64.setLogLevel(logLevel69);
        java.util.concurrent.Executor executor72 = builder64.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel73 = builder64.logLevel;
        retrofit.ErrorHandler errorHandler74 = builder64.errorHandler;
        restAdapter59.errorHandler = errorHandler74;
        builder53.errorHandler = errorHandler74;
        java.util.concurrent.Executor executor77 = builder53.callbackExecutor;
        restAdapter0.httpExecutor = executor77;
        retrofit.RestAdapter.Log log79 = restAdapter0.log;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(provider43);
        org.junit.Assert.assertNotNull(provider47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider51);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(executor57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNull(logLevel60);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(errorHandler74);
        org.junit.Assert.assertNotNull(executor77);
        org.junit.Assert.assertNotNull(log79);
    }

    @Test
    public void test07733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07733");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        retrofit.Profiler profiler6 = restAdapter5.profiler;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter5.new RestHandler();
        retrofit.converter.Converter converter8 = restAdapter5.converter;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter5.logLevel = logLevel9;
        retrofit.ErrorHandler errorHandler11 = restAdapter5.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter5.getLogLevel();
        retrofit.RestAdapter.Builder builder13 = builder0.setLogLevel(logLevel12);
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.Log log16 = restAdapter14.log;
        retrofit.ErrorHandler errorHandler17 = restAdapter14.errorHandler;
        retrofit.RequestInterceptor requestInterceptor18 = restAdapter14.requestInterceptor;
        retrofit.RestAdapter.Log log19 = restAdapter14.log;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder23 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.Log log27 = restAdapter24.log;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter24.logLevel = logLevel28;
        retrofit.RestAdapter.Builder builder30 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.Server server34 = restAdapter33.server;
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter33.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter33.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel36);
        java.util.concurrent.Executor executor39 = builder38.httpExecutor;
        retrofit.RestAdapter.Log log40 = builder38.log;
        restAdapter14.log = log40;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.Server server43 = restAdapter42.server;
        retrofit.RequestInterceptor requestInterceptor44 = restAdapter42.requestInterceptor;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder52 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.RestAdapter.Builder builder59 = builder52.setLogLevel(logLevel57);
        java.util.concurrent.Executor executor60 = builder52.callbackExecutor;
        restAdapter45.callbackExecutor = executor60;
        restAdapter42.httpExecutor = executor60;
        restAdapter14.callbackExecutor = executor60;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder67 = builder64.setServer("hi!");
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler70 = restAdapter68.new RestHandler();
        retrofit.RestAdapter.Log log71 = restAdapter68.log;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter68.logLevel = logLevel72;
        retrofit.RestAdapter.Builder builder74 = builder67.setLogLevel(logLevel72);
        retrofit.client.Client.Provider provider75 = null;
        builder67.clientProvider = provider75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        builder77.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder80 = builder77.setServer("hi!");
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter81.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler83 = restAdapter81.new RestHandler();
        retrofit.RestAdapter.Log log84 = restAdapter81.log;
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter81.logLevel = logLevel85;
        retrofit.RestAdapter.Builder builder87 = builder80.setLogLevel(logLevel85);
        retrofit.client.Client.Provider provider88 = null;
        builder80.clientProvider = provider88;
        retrofit.ErrorHandler errorHandler90 = builder80.errorHandler;
        retrofit.RestAdapter.Builder builder91 = builder67.setErrorHandler(errorHandler90);
        java.util.concurrent.Executor executor92 = builder91.httpExecutor;
        restAdapter14.callbackExecutor = executor92;
        builder13.httpExecutor = executor92;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNull(requestInterceptor18);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(requestInterceptor35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertNull(requestInterceptor44);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNull(logLevel82);
        org.junit.Assert.assertNull(log84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(errorHandler90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(executor92);
    }

    @Test
    public void test07734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07734");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel54);
        retrofit.RestAdapter.Builder builder58 = builder10.setLog(log35);
        java.util.concurrent.Executor executor59 = builder10.httpExecutor;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder60.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter64.new RestHandler();
        retrofit.RestAdapter.Log log67 = restAdapter64.log;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter64.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder70 = builder63.setLogLevel(logLevel68);
        retrofit.client.Client.Provider provider71 = null;
        builder63.clientProvider = provider71;
        retrofit.ErrorHandler errorHandler73 = builder63.errorHandler;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder77 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter78.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler80 = restAdapter78.new RestHandler();
        retrofit.RestAdapter.Log log81 = restAdapter78.log;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter78.logLevel = logLevel82;
        retrofit.RestAdapter.Builder builder84 = builder77.setLogLevel(logLevel82);
        retrofit.Server server85 = builder77.server;
        retrofit.RestAdapter.Builder builder86 = builder63.setServer(server85);
        retrofit.converter.Converter converter87 = builder86.converter;
        java.util.concurrent.Executor executor88 = builder86.callbackExecutor;
        retrofit.converter.Converter converter89 = builder86.converter;
        retrofit.RestAdapter.LogLevel logLevel90 = builder86.logLevel;
        retrofit.RestAdapter.Builder builder91 = builder10.setLogLevel(logLevel90);
        retrofit.RestAdapter.LogLevel logLevel92 = builder10.logLevel;
        retrofit.client.Client.Provider provider93 = builder10.clientProvider;
        retrofit.client.Client client94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder10.setClient(client94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(errorHandler73);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(logLevel79);
        org.junit.Assert.assertNull(log81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(server85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(converter87);
        org.junit.Assert.assertNotNull(executor88);
        org.junit.Assert.assertNotNull(converter89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider93);
    }

    @Test
    public void test07735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07735");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = builder3.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor14 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        retrofit.client.Client.Provider provider26 = null;
        builder18.clientProvider = provider26;
        retrofit.ErrorHandler errorHandler28 = builder18.errorHandler;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.Server server40 = builder32.server;
        retrofit.RestAdapter.Builder builder41 = builder18.setServer(server40);
        retrofit.converter.Converter converter42 = builder41.converter;
        java.util.concurrent.Executor executor43 = builder41.callbackExecutor;
        retrofit.client.Client.Provider provider44 = builder41.clientProvider;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = builder41.setLog(log45);
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter55.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder54.setLogLevel(logLevel59);
        retrofit.Server server62 = builder54.server;
        restAdapter47.server = server62;
        retrofit.RestAdapter.Builder builder64 = builder41.setServer(server62);
        retrofit.ErrorHandler errorHandler65 = builder64.errorHandler;
        retrofit.RestAdapter.Builder builder66 = builder3.setErrorHandler(errorHandler65);
        java.util.concurrent.Executor executor67 = builder66.httpExecutor;
        retrofit.Profiler profiler68 = builder66.profiler;
        retrofit.ErrorHandler errorHandler69 = builder66.errorHandler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor13);
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNull(profiler68);
        org.junit.Assert.assertNotNull(errorHandler69);
    }

    @Test
    public void test07736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07736");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = builder13.callbackExecutor;
        retrofit.Profiler profiler15 = null;
        builder13.profiler = profiler15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.Server server28 = builder20.server;
        builder13.server = server28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter46.logLevel = logLevel48;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel48);
        restAdapter31.log = log45;
        builder30.log = log45;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Log log60 = restAdapter57.log;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter57.logLevel = logLevel61;
        retrofit.RestAdapter.Builder builder63 = builder56.setLogLevel(logLevel61);
        retrofit.Server server64 = builder56.server;
        builder30.server = server64;
        builder13.server = server64;
        retrofit.RestAdapter.Builder builder67 = builder10.setServer(server64);
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.ErrorHandler errorHandler70 = null;
        restAdapter68.errorHandler = errorHandler70;
        retrofit.client.Client.Provider provider72 = restAdapter68.clientProvider;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter();
        retrofit.Profiler profiler74 = restAdapter73.profiler;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.client.Client.Provider provider86 = null;
        builder78.clientProvider = provider86;
        retrofit.ErrorHandler errorHandler88 = builder78.errorHandler;
        restAdapter73.errorHandler = errorHandler88;
        restAdapter68.errorHandler = errorHandler88;
        builder10.errorHandler = errorHandler88;
        retrofit.RestAdapter.LogLevel logLevel92 = builder10.logLevel;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertNull(profiler74);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07737");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.Profiler profiler6 = builder5.profiler;
        retrofit.client.Client.Provider provider7 = builder5.clientProvider;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder13 = builder8.setLogLevel(logLevel12);
        retrofit.ErrorHandler errorHandler14 = null;
        builder8.errorHandler = errorHandler14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder19 = builder16.setServer("hi!");
        java.util.concurrent.Executor executor20 = builder16.callbackExecutor;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.Server server28 = null;
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.converter.Converter converter33 = null;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter37.logLevel = logLevel39;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor32, converter33, profiler34, errorHandler35, log36, logLevel39);
        restAdapter22.log = log36;
        builder21.log = log36;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder47 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter48.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder54 = builder47.setLogLevel(logLevel52);
        retrofit.Server server55 = builder47.server;
        builder21.server = server55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        retrofit.client.Client.Provider provider68 = null;
        builder60.clientProvider = provider68;
        retrofit.RequestInterceptor requestInterceptor70 = builder60.requestInterceptor;
        retrofit.RestAdapter.Builder builder71 = builder21.setRequestInterceptor(requestInterceptor70);
        builder16.requestInterceptor = requestInterceptor70;
        retrofit.RestAdapter.Builder builder73 = builder8.setRequestInterceptor(requestInterceptor70);
        retrofit.Server server74 = builder73.server;
        builder5.server = server74;
        retrofit.RequestInterceptor requestInterceptor76 = builder5.requestInterceptor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(server74);
        org.junit.Assert.assertNotNull(requestInterceptor76);
    }

    @Test
    public void test07738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07738");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        restAdapter0.requestInterceptor = requestInterceptor4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter9 = restAdapter0.converter;
        retrofit.RequestInterceptor requestInterceptor10 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(requestInterceptor10);
    }

    @Test
    public void test07739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07739");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter28.logLevel = logLevel30;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel30);
        restAdapter13.log = log27;
        retrofit.RestAdapter.Builder builder34 = builder3.setLog(log27);
        retrofit.Profiler profiler35 = builder3.profiler;
        java.util.concurrent.Executor executor36 = builder3.httpExecutor;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter38.new RestHandler();
        retrofit.RestAdapter.Log log41 = restAdapter38.log;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter38.logLevel = logLevel42;
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter53.logLevel = logLevel55;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel55);
        restAdapter38.log = log52;
        builder37.log = log52;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder60.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter64.new RestHandler();
        retrofit.RestAdapter.Log log67 = restAdapter64.log;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter64.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder70 = builder63.setLogLevel(logLevel68);
        retrofit.Server server71 = builder63.server;
        builder37.server = server71;
        retrofit.RestAdapter.LogLevel logLevel73 = builder37.logLevel;
        boolean boolean74 = logLevel73.log();
        boolean boolean75 = logLevel73.log();
        retrofit.RestAdapter.Builder builder76 = builder3.setLogLevel(logLevel73);
        retrofit.Server server77 = builder76.server;
        retrofit.RestAdapter restAdapter78 = builder76.build();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(server77);
        org.junit.Assert.assertNotNull(restAdapter78);
    }

    @Test
    public void test07740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07740");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.Profiler profiler7 = restAdapter6.profiler;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider19 = null;
        builder11.clientProvider = provider19;
        retrofit.ErrorHandler errorHandler21 = builder11.errorHandler;
        restAdapter6.errorHandler = errorHandler21;
        retrofit.RestAdapter.Builder builder23 = builder4.setErrorHandler(errorHandler21);
        retrofit.RestAdapter restAdapter24 = builder4.build();
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter24.requestInterceptor;
        retrofit.client.Client.Provider provider26 = restAdapter24.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel27 = null;
        restAdapter24.logLevel = logLevel27;
        retrofit.RestAdapter.Log log29 = restAdapter24.log;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        java.util.concurrent.Executor executor32 = builder30.httpExecutor;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter42.logLevel = logLevel44;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel44);
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter46.new RestHandler();
        retrofit.converter.Converter converter48 = restAdapter46.converter;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        retrofit.RestAdapter.Log log52 = restAdapter49.log;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter49.logLevel = logLevel53;
        retrofit.converter.Converter converter55 = restAdapter49.converter;
        java.util.concurrent.Executor executor56 = restAdapter49.callbackExecutor;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        retrofit.client.Client.Provider provider68 = null;
        builder60.clientProvider = provider68;
        retrofit.RequestInterceptor requestInterceptor70 = builder60.requestInterceptor;
        retrofit.RestAdapter restAdapter71 = builder60.build();
        retrofit.ErrorHandler errorHandler72 = builder60.errorHandler;
        retrofit.converter.Converter converter73 = builder60.converter;
        restAdapter49.converter = converter73;
        restAdapter46.converter = converter73;
        builder30.converter = converter73;
        restAdapter24.converter = converter73;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(restAdapter24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(provider26);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(restAdapter71);
        org.junit.Assert.assertNotNull(errorHandler72);
        org.junit.Assert.assertNotNull(converter73);
    }

    @Test
    public void test07741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07741");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        java.util.concurrent.Executor executor8 = restAdapter0.callbackExecutor;
        java.util.concurrent.Executor executor9 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder13 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter14.logLevel = logLevel18;
        retrofit.RestAdapter.Builder builder20 = builder13.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Log log23 = builder22.log;
        restAdapter0.log = log23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder28 = builder25.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.logLevel = logLevel33;
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel33);
        retrofit.client.Client.Provider provider36 = null;
        builder28.clientProvider = provider36;
        retrofit.RequestInterceptor requestInterceptor38 = builder28.requestInterceptor;
        retrofit.RestAdapter restAdapter39 = builder28.build();
        retrofit.Profiler profiler40 = builder28.profiler;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.Log log43 = restAdapter41.log;
        retrofit.ErrorHandler errorHandler44 = restAdapter41.errorHandler;
        retrofit.RequestInterceptor requestInterceptor45 = restAdapter41.requestInterceptor;
        retrofit.converter.Converter converter46 = null;
        restAdapter41.converter = converter46;
        retrofit.converter.Converter converter48 = restAdapter41.converter;
        retrofit.converter.Converter converter49 = null;
        restAdapter41.converter = converter49;
        java.util.concurrent.Executor executor51 = restAdapter41.httpExecutor;
        retrofit.RestAdapter.Log log52 = restAdapter41.log;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter53.logLevel = logLevel55;
        retrofit.ErrorHandler errorHandler57 = null;
        restAdapter53.errorHandler = errorHandler57;
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter53.logLevel;
        restAdapter41.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder28.setLogLevel(logLevel59);
        restAdapter0.logLevel = logLevel59;
        retrofit.RestAdapter.Log log63 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler64 = restAdapter0.errorHandler;
        java.util.concurrent.Executor executor65 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder69 = builder66.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.Log log73 = restAdapter70.log;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter70.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder69.setLogLevel(logLevel74);
        retrofit.client.Client.Provider provider77 = null;
        builder69.clientProvider = provider77;
        retrofit.ErrorHandler errorHandler79 = builder69.errorHandler;
        retrofit.Server server80 = builder69.server;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        builder81.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder84 = builder81.setServer("hi!");
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter85.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler87 = restAdapter85.new RestHandler();
        retrofit.RestAdapter.Log log88 = restAdapter85.log;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter85.logLevel = logLevel89;
        retrofit.RestAdapter.Builder builder91 = builder84.setLogLevel(logLevel89);
        retrofit.client.Client.Provider provider92 = builder91.clientProvider;
        retrofit.RestAdapter.Builder builder93 = builder69.setClient(provider92);
        builder93.ensureSaneDefaults();
        java.util.concurrent.Executor executor95 = builder93.callbackExecutor;
        retrofit.client.Client.Provider provider96 = builder93.clientProvider;
        retrofit.converter.Converter converter97 = builder93.converter;
        restAdapter0.converter = converter97;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertNull(errorHandler44);
        org.junit.Assert.assertNull(requestInterceptor45);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNull(errorHandler64);
        org.junit.Assert.assertNull(executor65);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(errorHandler79);
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNull(logLevel86);
        org.junit.Assert.assertNull(log88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(provider92);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(executor95);
        org.junit.Assert.assertNotNull(provider96);
        org.junit.Assert.assertNotNull(converter97);
    }

    @Test
    public void test07742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07742");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.ErrorHandler errorHandler15 = builder3.errorHandler;
        java.util.concurrent.Executor executor16 = builder3.callbackExecutor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = null;
        builder20.clientProvider = provider28;
        retrofit.Server server30 = null;
        builder20.server = server30;
        retrofit.RequestInterceptor requestInterceptor32 = builder20.requestInterceptor;
        builder3.requestInterceptor = requestInterceptor32;
        retrofit.Profiler profiler34 = null;
        builder3.profiler = profiler34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor37 = builder36.callbackExecutor;
        retrofit.Profiler profiler38 = null;
        builder36.profiler = profiler38;
        retrofit.RestAdapter.Log log40 = builder36.log;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder44 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.Log log48 = restAdapter45.log;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter45.logLevel = logLevel49;
        retrofit.RestAdapter.Builder builder51 = builder44.setLogLevel(logLevel49);
        java.util.concurrent.Executor executor52 = builder44.callbackExecutor;
        builder36.httpExecutor = executor52;
        builder36.ensureSaneDefaults();
        retrofit.client.Client.Provider provider55 = builder36.clientProvider;
        retrofit.RestAdapter.Builder builder57 = builder36.setServer("Retrofit-Idle");
        retrofit.RequestInterceptor requestInterceptor58 = builder57.requestInterceptor;
        retrofit.RestAdapter.Builder builder59 = builder3.setRequestInterceptor(requestInterceptor58);
        retrofit.RestAdapter.Builder builder61 = builder3.setServer("hi!");
        retrofit.converter.Converter converter62 = builder3.converter;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNotNull(provider55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(converter62);
    }

    @Test
    public void test07743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07743");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        java.util.concurrent.Executor executor15 = builder7.callbackExecutor;
        restAdapter0.callbackExecutor = executor15;
        java.util.concurrent.Executor executor17 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter0.getLogLevel();
        retrofit.client.Client.Provider provider19 = null;
        restAdapter0.clientProvider = provider19;
        retrofit.ErrorHandler errorHandler21 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter0.logLevel;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel25;
        retrofit.ErrorHandler errorHandler27 = null;
        restAdapter23.errorHandler = errorHandler27;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter23.requestInterceptor;
        retrofit.ErrorHandler errorHandler30 = restAdapter23.errorHandler;
        retrofit.RequestInterceptor requestInterceptor31 = restAdapter23.requestInterceptor;
        retrofit.RestAdapter.Log log32 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter23.getLogLevel();
        restAdapter0.logLevel = logLevel33;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(errorHandler21);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor29);
        org.junit.Assert.assertNull(errorHandler30);
        org.junit.Assert.assertNull(requestInterceptor31);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test07744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07744");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.converter.Converter converter27 = builder26.converter;
        java.util.concurrent.Executor executor28 = builder26.callbackExecutor;
        retrofit.Profiler profiler29 = null;
        builder26.profiler = profiler29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("hi!");
        retrofit.client.Client.Provider provider44 = builder43.clientProvider;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder48 = builder45.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder50 = builder45.setLogLevel(logLevel49);
        retrofit.Server server51 = null;
        builder45.server = server51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Log log60 = restAdapter57.log;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter57.logLevel = logLevel61;
        retrofit.RestAdapter.Builder builder63 = builder56.setLogLevel(logLevel61);
        retrofit.client.Client.Provider provider64 = null;
        builder56.clientProvider = provider64;
        retrofit.RequestInterceptor requestInterceptor66 = builder56.requestInterceptor;
        retrofit.RestAdapter restAdapter67 = builder56.build();
        retrofit.ErrorHandler errorHandler68 = builder56.errorHandler;
        retrofit.converter.Converter converter69 = builder56.converter;
        retrofit.RestAdapter.Builder builder70 = builder45.setConverter(converter69);
        retrofit.RestAdapter.Log log71 = builder45.log;
        retrofit.RestAdapter.Builder builder72 = builder43.setLog(log71);
        retrofit.Profiler profiler73 = builder43.profiler;
        retrofit.converter.Converter converter74 = null;
        builder43.converter = converter74;
        retrofit.RequestInterceptor requestInterceptor76 = builder43.requestInterceptor;
        retrofit.RestAdapter.Builder builder78 = builder43.setServer("Retrofit-Idle");
        retrofit.Profiler profiler79 = null;
        builder78.profiler = profiler79;
        retrofit.RequestInterceptor requestInterceptor81 = builder78.requestInterceptor;
        retrofit.RestAdapter.Builder builder82 = builder26.setRequestInterceptor(requestInterceptor81);
        retrofit.ErrorHandler errorHandler83 = builder26.errorHandler;
        builder26.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(converter27);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(restAdapter67);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(converter69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(profiler73);
        org.junit.Assert.assertNotNull(requestInterceptor76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(requestInterceptor81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(errorHandler83);
    }

    @Test
    public void test07745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07745");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter restAdapter25 = builder17.build();
        retrofit.converter.Converter converter26 = builder17.converter;
        retrofit.RestAdapter.Builder builder27 = builder3.setConverter(converter26);
        retrofit.Profiler profiler28 = builder3.profiler;
        retrofit.Profiler profiler29 = null;
        builder3.profiler = profiler29;
        retrofit.RequestInterceptor requestInterceptor31 = builder3.requestInterceptor;
        retrofit.client.Client.Provider provider32 = builder3.clientProvider;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(converter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNull(provider32);
    }

    @Test
    public void test07746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07746");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("hi!");
        retrofit.client.Client.Provider provider17 = builder16.clientProvider;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter18.logLevel = logLevel20;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        restAdapter18.requestInterceptor = requestInterceptor22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel42);
        restAdapter25.log = log39;
        builder24.log = log39;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder50 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        retrofit.RestAdapter.Log log54 = restAdapter51.log;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter51.logLevel = logLevel55;
        retrofit.RestAdapter.Builder builder57 = builder50.setLogLevel(logLevel55);
        retrofit.Server server58 = builder50.server;
        builder24.server = server58;
        restAdapter18.server = server58;
        retrofit.RestAdapter.Builder builder61 = builder16.setServer(server58);
        java.util.concurrent.Executor executor62 = builder16.callbackExecutor;
        restAdapter0.httpExecutor = executor62;
        retrofit.client.Client.Provider provider64 = restAdapter0.clientProvider;
        retrofit.client.Client.Provider provider65 = restAdapter0.clientProvider;
        retrofit.ErrorHandler errorHandler66 = restAdapter0.errorHandler;
        retrofit.client.Response response68 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response70 = restAdapter0.logAndReplaceResponse("", response68, (long) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNull(errorHandler66);
    }

    @Test
    public void test07747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07747");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter restAdapter11 = builder3.build();
        retrofit.converter.Converter converter12 = builder3.converter;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider14 = null;
        builder13.clientProvider = provider14;
        retrofit.RestAdapter.Builder builder17 = builder13.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log18 = builder17.log;
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter20.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter20.logLevel = logLevel22;
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter20.new RestHandler();
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel51);
        restAdapter34.log = log48;
        builder33.log = log48;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel67);
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log48, logLevel67);
        restAdapter20.setLogLevel(logLevel67);
        boolean boolean72 = logLevel67.log();
        retrofit.RestAdapter.Builder builder73 = builder17.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder74 = builder3.setLogLevel(logLevel67);
        retrofit.client.Client.Provider provider75 = builder74.clientProvider;
        retrofit.RequestInterceptor requestInterceptor76 = builder74.requestInterceptor;
        retrofit.Profiler profiler77 = builder74.profiler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(restAdapter11);
        org.junit.Assert.assertNotNull(converter12);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(provider75);
        org.junit.Assert.assertNotNull(requestInterceptor76);
        org.junit.Assert.assertNull(profiler77);
    }

    @Test
    public void test07748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07748");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        java.util.concurrent.Executor executor16 = builder8.callbackExecutor;
        builder0.httpExecutor = executor16;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter18.logLevel = logLevel20;
        retrofit.ErrorHandler errorHandler22 = null;
        restAdapter18.errorHandler = errorHandler22;
        java.util.concurrent.Executor executor24 = restAdapter18.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter18.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder0.setLogLevel(logLevel25);
        retrofit.Profiler profiler27 = null;
        builder0.profiler = profiler27;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter30.logLevel = logLevel32;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        restAdapter30.requestInterceptor = requestInterceptor34;
        retrofit.RequestInterceptor requestInterceptor36 = restAdapter30.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter30.logLevel;
        builder0.logLevel = logLevel38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("hi!");
        retrofit.client.Client.Provider provider53 = builder52.clientProvider;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = builder54.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder59 = builder54.setLogLevel(logLevel58);
        retrofit.Server server60 = null;
        builder54.server = server60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder65 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter66.log;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter66.logLevel = logLevel70;
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel70);
        retrofit.client.Client.Provider provider73 = null;
        builder65.clientProvider = provider73;
        retrofit.RequestInterceptor requestInterceptor75 = builder65.requestInterceptor;
        retrofit.RestAdapter restAdapter76 = builder65.build();
        retrofit.ErrorHandler errorHandler77 = builder65.errorHandler;
        retrofit.converter.Converter converter78 = builder65.converter;
        retrofit.RestAdapter.Builder builder79 = builder54.setConverter(converter78);
        retrofit.RestAdapter.Log log80 = builder54.log;
        retrofit.RestAdapter.Builder builder81 = builder52.setLog(log80);
        retrofit.Profiler profiler82 = builder52.profiler;
        retrofit.converter.Converter converter83 = null;
        builder52.converter = converter83;
        retrofit.RequestInterceptor requestInterceptor85 = builder52.requestInterceptor;
        retrofit.RestAdapter.Builder builder87 = builder52.setServer("Retrofit-Idle");
        java.util.concurrent.Executor executor88 = builder87.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel89 = builder87.logLevel;
        builder0.logLevel = logLevel89;
        boolean boolean91 = logLevel89.log();
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(provider53);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(restAdapter76);
        org.junit.Assert.assertNotNull(errorHandler77);
        org.junit.Assert.assertNotNull(converter78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(profiler82);
        org.junit.Assert.assertNotNull(requestInterceptor85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(executor88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test07749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07749");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = null;
        builder8.clientProvider = provider16;
        retrofit.RequestInterceptor requestInterceptor18 = builder8.requestInterceptor;
        retrofit.RestAdapter restAdapter19 = builder8.build();
        retrofit.ErrorHandler errorHandler20 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder21 = builder0.setErrorHandler(errorHandler20);
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.Log log24 = restAdapter22.log;
        java.util.concurrent.Executor executor25 = restAdapter22.httpExecutor;
        retrofit.Server server26 = null;
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.converter.Converter converter31 = null;
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter35.logLevel = logLevel37;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor30, converter31, profiler32, errorHandler33, log34, logLevel37);
        restAdapter22.log = log34;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder44 = builder41.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder46 = builder41.setLogLevel(logLevel45);
        restAdapter22.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder48 = builder21.setLogLevel(logLevel45);
        retrofit.RequestInterceptor requestInterceptor49 = builder48.requestInterceptor;
        retrofit.ErrorHandler errorHandler50 = builder48.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel51 = builder48.logLevel;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(restAdapter19);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(errorHandler50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test07750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07750");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.Server server4 = builder3.server;
        retrofit.RestAdapter.Builder builder6 = builder3.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter11.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider18 = null;
        builder10.clientProvider = provider18;
        retrofit.ErrorHandler errorHandler20 = builder10.errorHandler;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.Server server32 = builder24.server;
        retrofit.RestAdapter.Builder builder33 = builder10.setServer(server32);
        retrofit.converter.Converter converter34 = builder33.converter;
        java.util.concurrent.Executor executor35 = builder33.callbackExecutor;
        retrofit.client.Client.Provider provider36 = builder33.clientProvider;
        retrofit.RestAdapter.Log log37 = builder33.log;
        retrofit.RestAdapter.Builder builder38 = builder3.setLog(log37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        java.util.concurrent.Executor executor50 = builder42.callbackExecutor;
        retrofit.Profiler profiler51 = null;
        builder42.profiler = profiler51;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        java.util.concurrent.Executor executor68 = builder60.callbackExecutor;
        restAdapter53.callbackExecutor = executor68;
        builder42.callbackExecutor = executor68;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        java.util.concurrent.Executor executor86 = builder78.callbackExecutor;
        restAdapter71.callbackExecutor = executor86;
        builder42.httpExecutor = executor86;
        retrofit.Server server89 = builder42.server;
        retrofit.RestAdapter restAdapter90 = builder42.build();
        retrofit.Profiler profiler91 = builder42.profiler;
        retrofit.ErrorHandler errorHandler92 = builder42.errorHandler;
        retrofit.RestAdapter.Builder builder93 = builder38.setErrorHandler(errorHandler92);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(converter34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(logLevel74);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(executor86);
        org.junit.Assert.assertNotNull(server89);
        org.junit.Assert.assertNotNull(restAdapter90);
        org.junit.Assert.assertNull(profiler91);
        org.junit.Assert.assertNotNull(errorHandler92);
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test07751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07751");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.Profiler profiler7 = null;
        restAdapter0.profiler = profiler7;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.Log log11 = restAdapter9.log;
        java.util.concurrent.Executor executor12 = restAdapter9.httpExecutor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter14.logLevel = logLevel18;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel31);
        restAdapter14.log = log28;
        builder13.log = log28;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.Server server47 = builder39.server;
        builder13.server = server47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder52 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.RestAdapter.Builder builder59 = builder52.setLogLevel(logLevel57);
        retrofit.client.Client.Provider provider60 = null;
        builder52.clientProvider = provider60;
        retrofit.RequestInterceptor requestInterceptor62 = builder52.requestInterceptor;
        retrofit.RestAdapter.Builder builder63 = builder13.setRequestInterceptor(requestInterceptor62);
        restAdapter9.requestInterceptor = requestInterceptor62;
        restAdapter0.requestInterceptor = requestInterceptor62;
        retrofit.Server server66 = restAdapter0.server;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.Log log74 = restAdapter71.log;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter71.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = builder70.setLogLevel(logLevel75);
        retrofit.client.Client.Provider provider78 = builder77.clientProvider;
        restAdapter0.clientProvider = provider78;
        retrofit.RestAdapter.RestHandler restHandler80 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(provider78);
    }

    @Test
    public void test07752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07752");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel54);
        retrofit.RestAdapter.Builder builder58 = builder10.setLog(log35);
        retrofit.RestAdapter restAdapter59 = builder10.build();
        builder10.ensureSaneDefaults();
        builder10.ensureSaneDefaults();
        retrofit.Profiler profiler62 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder63 = builder10.setProfiler(profiler62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
    }

    @Test
    public void test07753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07753");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel7 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder9 = builder4.setServer("hi!");
        builder9.ensureSaneDefaults();
        retrofit.client.Client client11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder9.setClient(client11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test07754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07754");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter15.logLevel = logLevel17;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel17);
        restAdapter0.log = log14;
        retrofit.RequestInterceptor requestInterceptor21 = restAdapter0.requestInterceptor;
        java.util.concurrent.Executor executor22 = restAdapter0.callbackExecutor;
        retrofit.ErrorHandler errorHandler23 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor25 = restAdapter0.callbackExecutor;
        java.util.concurrent.Executor executor26 = restAdapter0.callbackExecutor;
        java.util.concurrent.Executor executor27 = restAdapter0.callbackExecutor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor21);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNull(errorHandler23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(executor27);
    }

    @Test
    public void test07755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07755");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.Profiler profiler7 = restAdapter0.profiler;
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.Server server23 = builder15.server;
        restAdapter8.server = server23;
        restAdapter0.server = server23;
        java.util.concurrent.Executor executor26 = restAdapter0.callbackExecutor;
        retrofit.converter.Converter converter27 = restAdapter0.converter;
        retrofit.Profiler profiler28 = restAdapter0.profiler;
        retrofit.Profiler profiler29 = restAdapter0.profiler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(profiler29);
    }

    @Test
    public void test07756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07756");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = null;
        builder17.clientProvider = provider25;
        retrofit.RequestInterceptor requestInterceptor27 = builder17.requestInterceptor;
        retrofit.RestAdapter.Builder builder28 = builder3.setRequestInterceptor(requestInterceptor27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider40 = null;
        builder32.clientProvider = provider40;
        retrofit.RequestInterceptor requestInterceptor42 = builder32.requestInterceptor;
        retrofit.RestAdapter restAdapter43 = builder32.build();
        retrofit.Profiler profiler44 = builder32.profiler;
        retrofit.client.Client.Provider provider45 = builder32.clientProvider;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider47 = null;
        builder46.clientProvider = provider47;
        retrofit.RestAdapter.Builder builder50 = builder46.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter55.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder54.setLogLevel(logLevel59);
        retrofit.client.Client.Provider provider62 = null;
        builder54.clientProvider = provider62;
        retrofit.RequestInterceptor requestInterceptor64 = builder54.requestInterceptor;
        retrofit.RestAdapter restAdapter65 = builder54.build();
        retrofit.ErrorHandler errorHandler66 = builder54.errorHandler;
        retrofit.RestAdapter.Builder builder67 = builder46.setErrorHandler(errorHandler66);
        builder32.errorHandler = errorHandler66;
        java.util.concurrent.Executor executor69 = builder32.callbackExecutor;
        builder28.callbackExecutor = executor69;
        retrofit.Profiler profiler71 = null;
        builder28.profiler = profiler71;
        retrofit.client.Client client73 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder74 = builder28.setClient(client73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNull(profiler44);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(executor69);
    }

    @Test
    public void test07757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07757");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.Server server36 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        builder0.logLevel = logLevel37;
        java.util.concurrent.Executor executor39 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.RestAdapter.LogLevel logLevel53 = builder43.logLevel;
        builder0.logLevel = logLevel53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor56 = builder55.callbackExecutor;
        retrofit.Profiler profiler57 = null;
        builder55.profiler = profiler57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        builder59.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder62 = builder59.setServer("hi!");
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler65 = restAdapter63.new RestHandler();
        retrofit.RestAdapter.Log log66 = restAdapter63.log;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter63.logLevel = logLevel67;
        retrofit.RestAdapter.Builder builder69 = builder62.setLogLevel(logLevel67);
        retrofit.Server server70 = builder62.server;
        builder55.server = server70;
        retrofit.RestAdapter.LogLevel logLevel72 = builder55.logLevel;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter73.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler75 = restAdapter73.new RestHandler();
        retrofit.RestAdapter.Log log76 = restAdapter73.log;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter73.logLevel = logLevel77;
        retrofit.Server server79 = null;
        retrofit.client.Client.Provider provider80 = null;
        java.util.concurrent.Executor executor81 = null;
        java.util.concurrent.Executor executor82 = null;
        retrofit.RequestInterceptor requestInterceptor83 = null;
        retrofit.converter.Converter converter84 = null;
        retrofit.Profiler profiler85 = null;
        retrofit.ErrorHandler errorHandler86 = null;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel89 = restAdapter88.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter88.logLevel = logLevel90;
        retrofit.RestAdapter restAdapter92 = new retrofit.RestAdapter(server79, provider80, executor81, executor82, requestInterceptor83, converter84, profiler85, errorHandler86, log87, logLevel90);
        restAdapter73.log = log87;
        retrofit.RestAdapter.Builder builder94 = builder55.setLog(log87);
        builder0.log = log87;
        retrofit.ErrorHandler errorHandler96 = builder0.errorHandler;
        retrofit.RestAdapter.Log log97 = builder0.log;
        retrofit.client.Client.Provider provider98 = builder0.clientProvider;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(server70);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel74);
        org.junit.Assert.assertNull(log76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertNull(logLevel89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNull(errorHandler96);
        org.junit.Assert.assertNotNull(log97);
        org.junit.Assert.assertNull(provider98);
    }

    @Test
    public void test07758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07758");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        java.util.concurrent.Executor executor3 = restAdapter0.httpExecutor;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        retrofit.converter.Converter converter9 = null;
        retrofit.Profiler profiler10 = null;
        retrofit.ErrorHandler errorHandler11 = null;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter13.logLevel = logLevel15;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor8, converter9, profiler10, errorHandler11, log12, logLevel15);
        restAdapter0.log = log12;
        retrofit.client.Client.Provider provider19 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider21 = null;
        builder20.clientProvider = provider21;
        retrofit.RestAdapter.Builder builder24 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder28 = builder25.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.logLevel = logLevel33;
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel33);
        retrofit.client.Client.Provider provider36 = builder35.clientProvider;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder47 = builder40.setLogLevel(logLevel45);
        java.util.concurrent.Executor executor48 = builder40.callbackExecutor;
        retrofit.Profiler profiler49 = null;
        builder40.profiler = profiler49;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder58 = builder55.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter59.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler61 = restAdapter59.new RestHandler();
        retrofit.RestAdapter.Log log62 = restAdapter59.log;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter59.logLevel = logLevel63;
        retrofit.RestAdapter.Builder builder65 = builder58.setLogLevel(logLevel63);
        java.util.concurrent.Executor executor66 = builder58.callbackExecutor;
        restAdapter51.callbackExecutor = executor66;
        builder40.callbackExecutor = executor66;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter69.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler71 = restAdapter69.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter69.getLogLevel();
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder76 = builder73.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter77.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler79 = restAdapter77.new RestHandler();
        retrofit.RestAdapter.Log log80 = restAdapter77.log;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter77.logLevel = logLevel81;
        retrofit.RestAdapter.Builder builder83 = builder76.setLogLevel(logLevel81);
        java.util.concurrent.Executor executor84 = builder76.callbackExecutor;
        restAdapter69.callbackExecutor = executor84;
        builder40.httpExecutor = executor84;
        builder35.httpExecutor = executor84;
        builder24.httpExecutor = executor84;
        restAdapter0.httpExecutor = executor84;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(provider36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(logLevel60);
        org.junit.Assert.assertNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNull(logLevel70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(logLevel78);
        org.junit.Assert.assertNull(log80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(executor84);
    }

    @Test
    public void test07759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07759");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor4 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Log log5 = restAdapter0.log;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder9 = builder6.setServer("hi!");
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Log log13 = restAdapter10.log;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.logLevel = logLevel14;
        retrofit.RestAdapter.Builder builder16 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.Server server20 = restAdapter19.server;
        retrofit.RequestInterceptor requestInterceptor21 = restAdapter19.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter19.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel22);
        java.util.concurrent.Executor executor25 = builder24.httpExecutor;
        retrofit.RestAdapter.Log log26 = builder24.log;
        restAdapter0.log = log26;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.Server server29 = restAdapter28.server;
        retrofit.RequestInterceptor requestInterceptor30 = restAdapter28.requestInterceptor;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.Log log42 = restAdapter39.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.logLevel = logLevel43;
        retrofit.RestAdapter.Builder builder45 = builder38.setLogLevel(logLevel43);
        java.util.concurrent.Executor executor46 = builder38.callbackExecutor;
        restAdapter31.callbackExecutor = executor46;
        restAdapter28.httpExecutor = executor46;
        restAdapter0.callbackExecutor = executor46;
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertNull(requestInterceptor21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertNull(requestInterceptor30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(executor46);
    }

    @Test
    public void test07760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07760");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.RequestInterceptor requestInterceptor49 = builder39.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = builder0.setRequestInterceptor(requestInterceptor49);
        retrofit.RequestInterceptor requestInterceptor51 = builder50.requestInterceptor;
        java.util.concurrent.Executor executor52 = builder50.httpExecutor;
        retrofit.converter.Converter converter53 = builder50.converter;
        retrofit.RestAdapter restAdapter54 = builder50.build();
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder58 = builder55.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder60 = builder55.setLogLevel(logLevel59);
        retrofit.Server server61 = null;
        builder55.server = server61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter67.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider74 = null;
        builder66.clientProvider = provider74;
        retrofit.RequestInterceptor requestInterceptor76 = builder66.requestInterceptor;
        retrofit.RestAdapter restAdapter77 = builder66.build();
        retrofit.ErrorHandler errorHandler78 = builder66.errorHandler;
        retrofit.converter.Converter converter79 = builder66.converter;
        retrofit.RestAdapter.Builder builder80 = builder55.setConverter(converter79);
        java.util.concurrent.Executor executor81 = builder55.callbackExecutor;
        java.util.concurrent.Executor executor82 = null;
        builder55.callbackExecutor = executor82;
        retrofit.converter.Converter converter84 = builder55.converter;
        retrofit.RestAdapter.Builder builder85 = builder50.setConverter(converter84);
        retrofit.Profiler profiler86 = null;
        builder85.profiler = profiler86;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNotNull(restAdapter54);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(requestInterceptor76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(errorHandler78);
        org.junit.Assert.assertNotNull(converter79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNotNull(converter84);
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test07761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07761");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.Server server7 = restAdapter6.server;
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter6.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.client.Client.Provider provider22 = builder21.clientProvider;
        restAdapter6.clientProvider = provider22;
        restAdapter0.clientProvider = provider22;
        retrofit.ErrorHandler errorHandler25 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter0.requestInterceptor;
        retrofit.Profiler profiler27 = restAdapter0.profiler;
        retrofit.Server server28 = restAdapter0.server;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNull(requestInterceptor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(server28);
    }

    @Test
    public void test07762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07762");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.Server server11 = builder3.server;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider23 = builder22.clientProvider;
        builder3.clientProvider = provider23;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter25.logLevel = logLevel27;
        retrofit.ErrorHandler errorHandler29 = null;
        restAdapter25.errorHandler = errorHandler29;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter25.logLevel;
        builder3.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder36 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter37.log;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter37.logLevel = logLevel41;
        retrofit.RestAdapter.Builder builder43 = builder36.setLogLevel(logLevel41);
        retrofit.client.Client.Provider provider44 = null;
        builder36.clientProvider = provider44;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter46.new RestHandler();
        retrofit.RestAdapter.Log log49 = restAdapter46.log;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter46.logLevel = logLevel50;
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter61.logLevel = logLevel63;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel63);
        restAdapter46.log = log60;
        retrofit.RestAdapter.Builder builder67 = builder36.setLog(log60);
        log60.log("hi!");
        builder3.log = log60;
        java.util.concurrent.Executor executor71 = builder3.httpExecutor;
        retrofit.client.Client.Provider provider72 = builder3.clientProvider;
        retrofit.RestAdapter restAdapter73 = builder3.build();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(executor71);
        org.junit.Assert.assertNotNull(provider72);
        org.junit.Assert.assertNotNull(restAdapter73);
    }

    @Test
    public void test07763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07763");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.Server server11 = builder3.server;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider23 = null;
        builder15.clientProvider = provider23;
        retrofit.RequestInterceptor requestInterceptor25 = builder15.requestInterceptor;
        retrofit.RestAdapter restAdapter26 = builder15.build();
        retrofit.Profiler profiler27 = builder15.profiler;
        retrofit.ErrorHandler errorHandler28 = builder15.errorHandler;
        builder3.errorHandler = errorHandler28;
        retrofit.RestAdapter restAdapter30 = builder3.build();
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.ErrorHandler errorHandler33 = null;
        restAdapter31.errorHandler = errorHandler33;
        retrofit.Profiler profiler35 = restAdapter31.profiler;
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter31.new RestHandler();
        retrofit.Profiler profiler37 = null;
        restAdapter31.profiler = profiler37;
        retrofit.converter.Converter converter39 = restAdapter31.converter;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.ErrorHandler errorHandler53 = builder43.errorHandler;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.Log log61 = restAdapter58.log;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        retrofit.Server server65 = builder57.server;
        retrofit.RestAdapter.Builder builder66 = builder43.setServer(server65);
        retrofit.RestAdapter.Log log67 = builder66.log;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.Server server69 = restAdapter68.server;
        retrofit.RequestInterceptor requestInterceptor70 = restAdapter68.requestInterceptor;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder74 = builder71.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter75.new RestHandler();
        retrofit.RestAdapter.Log log78 = restAdapter75.log;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter75.logLevel = logLevel79;
        retrofit.RestAdapter.Builder builder81 = builder74.setLogLevel(logLevel79);
        retrofit.RestAdapter.Builder builder83 = builder81.setServer("hi!");
        retrofit.client.Client.Provider provider84 = builder83.clientProvider;
        restAdapter68.clientProvider = provider84;
        retrofit.RestAdapter.Builder builder86 = builder66.setClient(provider84);
        retrofit.RestAdapter.LogLevel logLevel87 = null;
        builder66.logLevel = logLevel87;
        java.util.concurrent.Executor executor89 = builder66.callbackExecutor;
        java.util.concurrent.Executor executor90 = builder66.callbackExecutor;
        restAdapter31.callbackExecutor = executor90;
        restAdapter30.httpExecutor = executor90;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(server65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(logLevel76);
        org.junit.Assert.assertNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(provider84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(executor89);
        org.junit.Assert.assertNotNull(executor90);
    }

    @Test
    public void test07764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07764");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.converter.Converter converter27 = builder26.converter;
        java.util.concurrent.Executor executor28 = builder26.callbackExecutor;
        retrofit.client.Client.Provider provider29 = builder26.clientProvider;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder26.setLog(log30);
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.Server server47 = builder39.server;
        restAdapter32.server = server47;
        retrofit.RestAdapter.Builder builder49 = builder26.setServer(server47);
        retrofit.RestAdapter restAdapter50 = builder49.build();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(converter27);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(restAdapter50);
    }

    @Test
    public void test07765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07765");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.converter.Converter converter7 = null;
        restAdapter0.converter = converter7;
        retrofit.Profiler profiler9 = restAdapter0.profiler;
        retrofit.ErrorHandler errorHandler10 = null;
        restAdapter0.errorHandler = errorHandler10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        java.util.concurrent.Executor executor40 = builder32.callbackExecutor;
        restAdapter25.callbackExecutor = executor40;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder49 = builder46.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.Log log53 = restAdapter50.log;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter50.logLevel = logLevel54;
        retrofit.RestAdapter.Builder builder56 = builder49.setLogLevel(logLevel54);
        java.util.concurrent.Executor executor57 = builder49.callbackExecutor;
        restAdapter42.callbackExecutor = executor57;
        retrofit.RestAdapter.Builder builder59 = builder24.setExecutors(executor40, executor57);
        retrofit.RequestInterceptor requestInterceptor60 = builder24.requestInterceptor;
        java.util.concurrent.Executor executor61 = builder24.httpExecutor;
        restAdapter0.httpExecutor = executor61;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(executor57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(executor61);
    }

    @Test
    public void test07766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07766");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.ErrorHandler errorHandler15 = builder3.errorHandler;
        java.util.concurrent.Executor executor16 = builder3.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel17 = builder3.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder3.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter20 = builder3.build();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("hi!");
        retrofit.client.Client.Provider provider34 = builder33.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = builder35.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder40 = builder35.setLogLevel(logLevel39);
        retrofit.Server server41 = null;
        builder35.server = server41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.client.Client.Provider provider54 = null;
        builder46.clientProvider = provider54;
        retrofit.RequestInterceptor requestInterceptor56 = builder46.requestInterceptor;
        retrofit.RestAdapter restAdapter57 = builder46.build();
        retrofit.ErrorHandler errorHandler58 = builder46.errorHandler;
        retrofit.converter.Converter converter59 = builder46.converter;
        retrofit.RestAdapter.Builder builder60 = builder35.setConverter(converter59);
        retrofit.RestAdapter.Log log61 = builder35.log;
        retrofit.RestAdapter.Builder builder62 = builder33.setLog(log61);
        builder62.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor64 = builder62.requestInterceptor;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter65.getLogLevel();
        java.util.concurrent.Executor executor69 = restAdapter65.callbackExecutor;
        java.util.concurrent.Executor executor70 = restAdapter65.callbackExecutor;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log72 = restAdapter71.log;
        java.util.concurrent.Executor executor73 = null;
        restAdapter71.callbackExecutor = executor73;
        retrofit.RestAdapter.Log log75 = restAdapter71.log;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder79 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler82 = restAdapter80.new RestHandler();
        retrofit.RestAdapter.Log log83 = restAdapter80.log;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter80.logLevel = logLevel84;
        retrofit.RestAdapter.Builder builder86 = builder79.setLogLevel(logLevel84);
        retrofit.client.Client.Provider provider87 = builder86.clientProvider;
        retrofit.RestAdapter.Log log88 = builder86.log;
        java.util.concurrent.Executor executor89 = builder86.callbackExecutor;
        restAdapter71.httpExecutor = executor89;
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter71.logLevel;
        java.util.concurrent.Executor executor92 = restAdapter71.httpExecutor;
        restAdapter65.callbackExecutor = executor92;
        builder62.callbackExecutor = executor92;
        builder3.callbackExecutor = executor92;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(restAdapter20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(provider34);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(restAdapter57);
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNotNull(converter59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNull(executor70);
        org.junit.Assert.assertNull(log72);
        org.junit.Assert.assertNull(log75);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(logLevel81);
        org.junit.Assert.assertNull(log83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(provider87);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertNotNull(executor89);
        org.junit.Assert.assertNull(logLevel91);
        org.junit.Assert.assertNotNull(executor92);
    }

    @Test
    public void test07767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07767");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.RestAdapter.Log log12 = builder10.log;
        retrofit.Server server13 = builder10.server;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder19 = builder14.setLogLevel(logLevel18);
        retrofit.ErrorHandler errorHandler20 = null;
        builder14.errorHandler = errorHandler20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder25 = builder22.setServer("hi!");
        java.util.concurrent.Executor executor26 = builder22.callbackExecutor;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter28.new RestHandler();
        retrofit.RestAdapter.Log log31 = restAdapter28.log;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter28.logLevel = logLevel32;
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter43.logLevel = logLevel45;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel45);
        restAdapter28.log = log42;
        builder27.log = log42;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter54.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel58);
        retrofit.Server server61 = builder53.server;
        builder27.server = server61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter67.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider74 = null;
        builder66.clientProvider = provider74;
        retrofit.RequestInterceptor requestInterceptor76 = builder66.requestInterceptor;
        retrofit.RestAdapter.Builder builder77 = builder27.setRequestInterceptor(requestInterceptor76);
        builder22.requestInterceptor = requestInterceptor76;
        retrofit.RestAdapter.Builder builder79 = builder14.setRequestInterceptor(requestInterceptor76);
        retrofit.Server server80 = builder79.server;
        retrofit.RestAdapter.Builder builder81 = builder10.setServer(server80);
        retrofit.client.Client.Provider provider82 = builder81.clientProvider;
        builder81.ensureSaneDefaults();
        retrofit.RestAdapter.Log log84 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder85 = builder81.setLog(log84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(requestInterceptor76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(provider82);
    }

    @Test
    public void test07768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07768");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.Server server15 = builder7.server;
        builder0.server = server15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter19.getLogLevel();
        java.util.concurrent.Executor executor23 = restAdapter19.callbackExecutor;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder27 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter28.new RestHandler();
        retrofit.RestAdapter.Log log31 = restAdapter28.log;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter28.logLevel = logLevel32;
        retrofit.RestAdapter.Builder builder34 = builder27.setLogLevel(logLevel32);
        retrofit.client.Client.Provider provider35 = null;
        builder27.clientProvider = provider35;
        retrofit.RequestInterceptor requestInterceptor37 = builder27.requestInterceptor;
        retrofit.RestAdapter restAdapter38 = builder27.build();
        retrofit.ErrorHandler errorHandler39 = builder27.errorHandler;
        retrofit.converter.Converter converter40 = builder27.converter;
        restAdapter19.converter = converter40;
        builder17.converter = converter40;
        retrofit.RestAdapter.Builder builder43 = builder0.setConverter(converter40);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler46 = builder44.errorHandler;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        java.util.concurrent.Executor executor49 = builder47.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor50 = builder47.requestInterceptor;
        retrofit.RestAdapter.Builder builder51 = builder44.setRequestInterceptor(requestInterceptor50);
        retrofit.converter.Converter converter52 = builder44.converter;
        retrofit.RestAdapter.Builder builder54 = builder44.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder56 = builder44.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler57 = builder44.errorHandler;
        retrofit.RestAdapter.Builder builder58 = builder43.setErrorHandler(errorHandler57);
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(converter40);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(errorHandler46);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(converter52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test07769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07769");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.Server server11 = builder3.server;
        retrofit.Profiler profiler12 = builder3.profiler;
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter14 = builder3.build();
        java.lang.Throwable throwable15 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter14.logException(throwable15, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNotNull(restAdapter14);
    }

    @Test
    public void test07770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07770");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder19 = builder14.setLogLevel(logLevel18);
        retrofit.Server server20 = null;
        builder14.server = server20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder25 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log29 = restAdapter26.log;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.logLevel = logLevel30;
        retrofit.RestAdapter.Builder builder32 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider33 = null;
        builder25.clientProvider = provider33;
        retrofit.RequestInterceptor requestInterceptor35 = builder25.requestInterceptor;
        retrofit.RestAdapter restAdapter36 = builder25.build();
        retrofit.ErrorHandler errorHandler37 = builder25.errorHandler;
        retrofit.converter.Converter converter38 = builder25.converter;
        retrofit.RestAdapter.Builder builder39 = builder14.setConverter(converter38);
        retrofit.RestAdapter.Log log40 = builder14.log;
        retrofit.RestAdapter.Builder builder41 = builder12.setLog(log40);
        retrofit.RestAdapter.Log log42 = builder41.log;
        builder41.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor44 = builder41.requestInterceptor;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder48 = builder45.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder50 = builder45.setLogLevel(logLevel49);
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        retrofit.RestAdapter.Log log54 = restAdapter51.log;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter51.logLevel = logLevel55;
        retrofit.RestAdapter.Builder builder57 = builder50.setLogLevel(logLevel55);
        retrofit.converter.Converter converter58 = builder50.converter;
        builder41.converter = converter58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder60.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter64.new RestHandler();
        retrofit.RestAdapter.Log log67 = restAdapter64.log;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter64.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder70 = builder63.setLogLevel(logLevel68);
        retrofit.client.Client.Provider provider71 = null;
        builder63.clientProvider = provider71;
        retrofit.ErrorHandler errorHandler73 = builder63.errorHandler;
        retrofit.Server server74 = builder63.server;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.client.Client.Provider provider86 = builder85.clientProvider;
        retrofit.RestAdapter.Builder builder87 = builder63.setClient(provider86);
        retrofit.RestAdapter.Builder builder88 = builder41.setClient(provider86);
        retrofit.Profiler profiler89 = null;
        builder41.profiler = profiler89;
        java.util.concurrent.Executor executor91 = builder41.callbackExecutor;
        retrofit.client.Client.Provider provider92 = builder41.clientProvider;
        builder41.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter94 = builder41.build();
        retrofit.ErrorHandler errorHandler95 = builder41.errorHandler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(requestInterceptor44);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(converter58);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(errorHandler73);
        org.junit.Assert.assertNotNull(server74);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(executor91);
        org.junit.Assert.assertNotNull(provider92);
        org.junit.Assert.assertNotNull(restAdapter94);
        org.junit.Assert.assertNotNull(errorHandler95);
    }

    @Test
    public void test07771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07771");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter2 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter2.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter2.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter2.getLogLevel();
        java.util.concurrent.Executor executor6 = restAdapter2.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter11.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider18 = null;
        builder10.clientProvider = provider18;
        retrofit.RequestInterceptor requestInterceptor20 = builder10.requestInterceptor;
        retrofit.RestAdapter restAdapter21 = builder10.build();
        retrofit.ErrorHandler errorHandler22 = builder10.errorHandler;
        retrofit.converter.Converter converter23 = builder10.converter;
        restAdapter2.converter = converter23;
        builder0.converter = converter23;
        retrofit.Profiler profiler26 = null;
        builder0.profiler = profiler26;
        retrofit.RequestInterceptor requestInterceptor28 = builder0.requestInterceptor;
        java.util.concurrent.Executor executor29 = builder0.httpExecutor;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log31 = restAdapter30.log;
        java.util.concurrent.Executor executor32 = null;
        restAdapter30.callbackExecutor = executor32;
        retrofit.RestAdapter.Log log34 = restAdapter30.log;
        retrofit.Profiler profiler35 = null;
        restAdapter30.profiler = profiler35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder47 = builder40.setLogLevel(logLevel45);
        retrofit.client.Client.Provider provider48 = null;
        builder40.clientProvider = provider48;
        retrofit.RequestInterceptor requestInterceptor50 = builder40.requestInterceptor;
        retrofit.RestAdapter restAdapter51 = builder40.build();
        retrofit.ErrorHandler errorHandler52 = builder40.errorHandler;
        retrofit.converter.Converter converter53 = builder40.converter;
        java.util.concurrent.Executor executor54 = builder40.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor55 = builder40.requestInterceptor;
        restAdapter30.requestInterceptor = requestInterceptor55;
        retrofit.RequestInterceptor requestInterceptor57 = restAdapter30.requestInterceptor;
        builder0.requestInterceptor = requestInterceptor57;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel70);
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter72.new RestHandler();
        retrofit.converter.Converter converter74 = restAdapter72.converter;
        retrofit.RequestInterceptor requestInterceptor75 = restAdapter72.requestInterceptor;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder79 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler82 = restAdapter80.new RestHandler();
        retrofit.RestAdapter.Log log83 = restAdapter80.log;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter80.logLevel = logLevel84;
        retrofit.RestAdapter.Builder builder86 = builder79.setLogLevel(logLevel84);
        retrofit.client.Client.Provider provider87 = builder86.clientProvider;
        restAdapter72.clientProvider = provider87;
        retrofit.client.Client.Provider provider89 = restAdapter72.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel90 = restAdapter72.getLogLevel();
        retrofit.RestAdapter.Builder builder91 = builder0.setLogLevel(logLevel90);
        retrofit.RestAdapter.LogLevel logLevel92 = builder91.logLevel;
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(requestInterceptor20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(errorHandler22);
        org.junit.Assert.assertNotNull(converter23);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNotNull(converter53);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(logLevel81);
        org.junit.Assert.assertNull(log83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(provider87);
        org.junit.Assert.assertNotNull(provider89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test07772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07772");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = null;
        builder16.clientProvider = provider24;
        retrofit.ErrorHandler errorHandler26 = builder16.errorHandler;
        retrofit.RestAdapter.Builder builder27 = builder3.setErrorHandler(errorHandler26);
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter28.logLevel = logLevel30;
        builder3.logLevel = logLevel30;
        retrofit.converter.Converter converter33 = null;
        builder3.converter = converter33;
        java.util.concurrent.Executor executor35 = builder3.httpExecutor;
        retrofit.Profiler profiler36 = builder3.profiler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(errorHandler26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNull(profiler36);
    }

    @Test
    public void test07773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07773");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider38 = null;
        builder30.clientProvider = provider38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.ErrorHandler errorHandler53 = builder43.errorHandler;
        retrofit.RestAdapter.Builder builder54 = builder30.setErrorHandler(errorHandler53);
        java.util.concurrent.Executor executor55 = builder54.httpExecutor;
        builder26.httpExecutor = executor55;
        java.util.concurrent.Executor executor57 = builder26.callbackExecutor;
        retrofit.client.Client.Provider provider58 = builder26.clientProvider;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler70 = restAdapter68.new RestHandler();
        retrofit.RestAdapter.Log log71 = restAdapter68.log;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter68.logLevel = logLevel72;
        retrofit.Server server74 = null;
        retrofit.client.Client.Provider provider75 = null;
        java.util.concurrent.Executor executor76 = null;
        java.util.concurrent.Executor executor77 = null;
        retrofit.RequestInterceptor requestInterceptor78 = null;
        retrofit.converter.Converter converter79 = null;
        retrofit.Profiler profiler80 = null;
        retrofit.ErrorHandler errorHandler81 = null;
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter83.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter83.logLevel = logLevel85;
        retrofit.RestAdapter restAdapter87 = new retrofit.RestAdapter(server74, provider75, executor76, executor77, requestInterceptor78, converter79, profiler80, errorHandler81, log82, logLevel85);
        restAdapter68.log = log82;
        builder67.log = log82;
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log82, logLevel90);
        log82.log("hi!");
        log82.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder96 = builder26.setLog(log82);
        retrofit.RestAdapter.LogLevel logLevel97 = builder96.logLevel;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(executor57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNull(logLevel84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertTrue("'" + logLevel97 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel97.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07774");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        java.util.concurrent.Executor executor16 = builder8.callbackExecutor;
        builder0.httpExecutor = executor16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("hi!");
        retrofit.client.Client.Provider provider31 = builder30.clientProvider;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel34;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        restAdapter32.requestInterceptor = requestInterceptor36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.Log log42 = restAdapter39.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.logLevel = logLevel43;
        retrofit.Server server45 = null;
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter54.logLevel = logLevel56;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel56);
        restAdapter39.log = log53;
        builder38.log = log53;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.Log log68 = restAdapter65.log;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter65.logLevel = logLevel69;
        retrofit.RestAdapter.Builder builder71 = builder64.setLogLevel(logLevel69);
        retrofit.Server server72 = builder64.server;
        builder38.server = server72;
        restAdapter32.server = server72;
        retrofit.RestAdapter.Builder builder75 = builder30.setServer(server72);
        retrofit.converter.Converter converter76 = builder30.converter;
        builder0.converter = converter76;
        retrofit.RestAdapter.Log log78 = builder0.log;
        retrofit.ErrorHandler errorHandler79 = builder0.errorHandler;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(provider31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(converter76);
        org.junit.Assert.assertNull(log78);
        org.junit.Assert.assertNull(errorHandler79);
    }

    @Test
    public void test07775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07775");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        java.util.concurrent.Executor executor5 = builder3.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor6 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = builder0.setRequestInterceptor(requestInterceptor6);
        retrofit.converter.Converter converter8 = builder0.converter;
        retrofit.RestAdapter.Log log9 = builder0.log;
        retrofit.RequestInterceptor requestInterceptor10 = builder0.requestInterceptor;
        retrofit.client.Client client11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder12 = builder0.setClient(client11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorHandler2);
        org.junit.Assert.assertNotNull(executor5);
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(converter8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(requestInterceptor10);
    }

    @Test
    public void test07776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07776");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.Server server13 = null;
        builder3.server = server13;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.Log log27 = restAdapter24.log;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter24.logLevel = logLevel28;
        retrofit.Server server30 = null;
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.converter.Converter converter35 = null;
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter39.logLevel = logLevel41;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor34, converter35, profiler36, errorHandler37, log38, logLevel41);
        restAdapter24.log = log38;
        builder23.log = log38;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log38, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder3.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter49.logLevel = logLevel51;
        retrofit.ErrorHandler errorHandler53 = null;
        restAdapter49.errorHandler = errorHandler53;
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter49.logLevel;
        retrofit.converter.Converter converter56 = null;
        restAdapter49.converter = converter56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder61 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter62.new RestHandler();
        retrofit.RestAdapter.Log log65 = restAdapter62.log;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter62.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder68 = builder61.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder70 = builder68.setServer("hi!");
        retrofit.client.Client.Provider provider71 = builder70.clientProvider;
        restAdapter49.clientProvider = provider71;
        retrofit.RestAdapter.Builder builder73 = builder3.setClient(provider71);
        retrofit.Profiler profiler74 = null;
        builder3.profiler = profiler74;
        retrofit.Profiler profiler76 = null;
        builder3.profiler = profiler76;
        retrofit.RestAdapter.Builder builder79 = builder3.setServer("hi!");
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(provider71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder79);
    }

    @Test
    public void test07777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07777");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.Server server7 = restAdapter0.server;
        retrofit.converter.Converter converter8 = restAdapter0.converter;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor10 = builder9.callbackExecutor;
        retrofit.Profiler profiler11 = null;
        builder9.profiler = profiler11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        retrofit.Server server24 = builder16.server;
        builder9.server = server24;
        retrofit.client.Client.Provider provider26 = builder9.clientProvider;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.ErrorHandler errorHandler29 = null;
        restAdapter27.errorHandler = errorHandler29;
        retrofit.Profiler profiler31 = restAdapter27.profiler;
        retrofit.Profiler profiler32 = null;
        restAdapter27.profiler = profiler32;
        java.util.concurrent.Executor executor34 = restAdapter27.callbackExecutor;
        retrofit.RestAdapter.Log log35 = restAdapter27.log;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.RequestInterceptor requestInterceptor49 = builder39.requestInterceptor;
        retrofit.RestAdapter restAdapter50 = builder39.build();
        java.util.concurrent.Executor executor51 = restAdapter50.callbackExecutor;
        retrofit.converter.Converter converter52 = restAdapter50.converter;
        restAdapter27.converter = converter52;
        builder9.converter = converter52;
        retrofit.RestAdapter restAdapter55 = builder9.build();
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.Log log68 = restAdapter65.log;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter65.logLevel = logLevel69;
        retrofit.Server server71 = null;
        retrofit.client.Client.Provider provider72 = null;
        java.util.concurrent.Executor executor73 = null;
        java.util.concurrent.Executor executor74 = null;
        retrofit.RequestInterceptor requestInterceptor75 = null;
        retrofit.converter.Converter converter76 = null;
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter80.logLevel = logLevel82;
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server71, provider72, executor73, executor74, requestInterceptor75, converter76, profiler77, errorHandler78, log79, logLevel82);
        restAdapter65.log = log79;
        builder64.log = log79;
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log79, logLevel87);
        boolean boolean89 = logLevel87.log();
        boolean boolean90 = logLevel87.log();
        restAdapter55.setLogLevel(logLevel87);
        restAdapter0.logLevel = logLevel87;
        retrofit.ErrorHandler errorHandler93 = restAdapter0.errorHandler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNotNull(converter52);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNull(logLevel81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(errorHandler93);
    }

    @Test
    public void test07778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07778");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder19 = builder14.setLogLevel(logLevel18);
        retrofit.Server server20 = null;
        builder14.server = server20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder25 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log29 = restAdapter26.log;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.logLevel = logLevel30;
        retrofit.RestAdapter.Builder builder32 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider33 = null;
        builder25.clientProvider = provider33;
        retrofit.RequestInterceptor requestInterceptor35 = builder25.requestInterceptor;
        retrofit.RestAdapter restAdapter36 = builder25.build();
        retrofit.ErrorHandler errorHandler37 = builder25.errorHandler;
        retrofit.converter.Converter converter38 = builder25.converter;
        retrofit.RestAdapter.Builder builder39 = builder14.setConverter(converter38);
        retrofit.RestAdapter.Log log40 = builder14.log;
        retrofit.RestAdapter.Builder builder41 = builder12.setLog(log40);
        retrofit.Profiler profiler42 = builder12.profiler;
        retrofit.converter.Converter converter43 = null;
        builder12.converter = converter43;
        retrofit.RequestInterceptor requestInterceptor45 = builder12.requestInterceptor;
        retrofit.RestAdapter.Builder builder47 = builder12.setServer("Retrofit-Idle");
        java.util.concurrent.Executor executor48 = builder47.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel49 = builder47.logLevel;
        retrofit.RequestInterceptor requestInterceptor50 = builder47.requestInterceptor;
        java.util.concurrent.Executor executor51 = builder47.callbackExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(executor51);
    }

    @Test
    public void test07779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07779");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter14.logLevel = logLevel16;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        restAdapter14.requestInterceptor = requestInterceptor18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.Server server54 = builder46.server;
        builder20.server = server54;
        restAdapter14.server = server54;
        retrofit.RestAdapter.Builder builder57 = builder12.setServer(server54);
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.Profiler profiler59 = restAdapter58.profiler;
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.converter.Converter converter61 = restAdapter58.converter;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder66 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = builder66.build();
        retrofit.Server server68 = restAdapter67.server;
        java.util.concurrent.Executor executor69 = restAdapter67.httpExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(profiler59);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(restAdapter67);
        org.junit.Assert.assertNotNull(server68);
        org.junit.Assert.assertNotNull(executor69);
    }

    @Test
    public void test07780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07780");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider23 = null;
        builder15.clientProvider = provider23;
        retrofit.ErrorHandler errorHandler25 = builder15.errorHandler;
        retrofit.Server server26 = builder15.server;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.Server server38 = builder30.server;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.Log log41 = restAdapter39.log;
        java.util.concurrent.Executor executor42 = restAdapter39.httpExecutor;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        restAdapter39.log = log51;
        builder30.log = log51;
        retrofit.RestAdapter.Builder builder59 = builder15.setLog(log51);
        retrofit.RestAdapter.Builder builder60 = builder10.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.ErrorHandler errorHandler62 = builder60.errorHandler;
        retrofit.ErrorHandler errorHandler63 = builder60.errorHandler;
        retrofit.Profiler profiler64 = builder60.profiler;
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.ErrorHandler errorHandler68 = null;
        restAdapter66.errorHandler = errorHandler68;
        retrofit.Profiler profiler70 = restAdapter66.profiler;
        retrofit.Profiler profiler71 = null;
        restAdapter66.profiler = profiler71;
        java.util.concurrent.Executor executor73 = restAdapter66.callbackExecutor;
        retrofit.Profiler profiler74 = restAdapter66.profiler;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter75.logLevel = logLevel77;
        retrofit.ErrorHandler errorHandler79 = null;
        restAdapter75.errorHandler = errorHandler79;
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter75.logLevel;
        retrofit.converter.Converter converter82 = null;
        restAdapter75.converter = converter82;
        retrofit.converter.Converter converter84 = restAdapter75.converter;
        java.util.concurrent.Executor executor85 = restAdapter75.callbackExecutor;
        retrofit.Profiler profiler86 = null;
        restAdapter75.profiler = profiler86;
        retrofit.RequestInterceptor requestInterceptor88 = restAdapter75.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel89 = restAdapter75.getLogLevel();
        restAdapter66.logLevel = logLevel89;
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter66.getLogLevel();
        builder60.logLevel = logLevel91;
        retrofit.RestAdapter.Builder builder94 = builder60.setServer("Retrofit-Idle");
        java.util.concurrent.Executor executor95 = null;
        builder60.callbackExecutor = executor95;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(errorHandler62);
        org.junit.Assert.assertNotNull(errorHandler63);
        org.junit.Assert.assertNull(profiler64);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertNull(executor73);
        org.junit.Assert.assertNull(profiler74);
        org.junit.Assert.assertNull(logLevel76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter84);
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertNull(requestInterceptor88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder94);
    }

    @Test
    public void test07781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07781");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.Server server7 = restAdapter0.server;
        retrofit.client.Client.Provider provider8 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.Server server13 = builder12.server;
        retrofit.RequestInterceptor requestInterceptor14 = null;
        builder12.requestInterceptor = requestInterceptor14;
        retrofit.converter.Converter converter16 = builder12.converter;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel34);
        restAdapter17.log = log31;
        retrofit.RequestInterceptor requestInterceptor38 = restAdapter17.requestInterceptor;
        java.util.concurrent.Executor executor39 = restAdapter17.callbackExecutor;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.Profiler profiler41 = restAdapter40.profiler;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder45 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter46.new RestHandler();
        retrofit.RestAdapter.Log log49 = restAdapter46.log;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter46.logLevel = logLevel50;
        retrofit.RestAdapter.Builder builder52 = builder45.setLogLevel(logLevel50);
        retrofit.client.Client.Provider provider53 = null;
        builder45.clientProvider = provider53;
        retrofit.RequestInterceptor requestInterceptor55 = builder45.requestInterceptor;
        retrofit.RestAdapter restAdapter56 = builder45.build();
        retrofit.ErrorHandler errorHandler57 = builder45.errorHandler;
        retrofit.converter.Converter converter58 = builder45.converter;
        restAdapter40.converter = converter58;
        restAdapter17.converter = converter58;
        retrofit.RestAdapter.Builder builder61 = builder12.setConverter(converter58);
        restAdapter0.converter = converter58;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(converter16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(restAdapter56);
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNotNull(converter58);
        org.junit.Assert.assertNotNull(builder61);
    }

    @Test
    public void test07782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07782");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter14.logLevel = logLevel16;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        restAdapter14.requestInterceptor = requestInterceptor18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.Server server54 = builder46.server;
        builder20.server = server54;
        restAdapter14.server = server54;
        retrofit.RestAdapter.Builder builder57 = builder12.setServer(server54);
        retrofit.RestAdapter restAdapter58 = builder57.build();
        retrofit.RequestInterceptor requestInterceptor59 = builder57.requestInterceptor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(requestInterceptor59);
    }

    @Test
    public void test07783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07783");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.RequestInterceptor requestInterceptor49 = builder39.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = builder0.setRequestInterceptor(requestInterceptor49);
        retrofit.RequestInterceptor requestInterceptor51 = builder50.requestInterceptor;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel70);
        restAdapter53.log = log67;
        builder52.log = log67;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.Server server86 = builder78.server;
        builder52.server = server86;
        retrofit.RestAdapter.Builder builder88 = builder50.setServer(server86);
        builder88.ensureSaneDefaults();
        java.util.concurrent.Executor executor90 = builder88.callbackExecutor;
        retrofit.RestAdapter.Builder builder92 = builder88.setServer("Retrofit-Idle");
        retrofit.Profiler profiler93 = null;
        builder92.profiler = profiler93;
        retrofit.Profiler profiler95 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder96 = builder92.setProfiler(profiler95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(server86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(executor90);
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test07784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07784");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter14.logLevel = logLevel16;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        restAdapter14.requestInterceptor = requestInterceptor18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.Server server54 = builder46.server;
        builder20.server = server54;
        restAdapter14.server = server54;
        retrofit.RestAdapter.Builder builder57 = builder12.setServer(server54);
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.Profiler profiler59 = restAdapter58.profiler;
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.converter.Converter converter61 = restAdapter58.converter;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder66 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = builder66.build();
        retrofit.RestAdapter.Builder builder69 = builder66.setServer("hi!");
        retrofit.client.Client.Provider provider70 = builder69.clientProvider;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder72 = builder69.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(profiler59);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(restAdapter67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(provider70);
    }

    @Test
    public void test07785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07785");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.Server server13 = null;
        builder3.server = server13;
        retrofit.Profiler profiler15 = null;
        builder3.profiler = profiler15;
        retrofit.RestAdapter.LogLevel logLevel17 = builder3.logLevel;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07786");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter4.logLevel = logLevel6;
        retrofit.ErrorHandler errorHandler8 = null;
        restAdapter4.errorHandler = errorHandler8;
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter4.logLevel;
        restAdapter0.logLevel = logLevel10;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter0.new RestHandler();
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.Profiler profiler14 = restAdapter13.profiler;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        retrofit.client.Client.Provider provider26 = null;
        builder18.clientProvider = provider26;
        retrofit.ErrorHandler errorHandler28 = builder18.errorHandler;
        restAdapter13.errorHandler = errorHandler28;
        restAdapter0.errorHandler = errorHandler28;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.Log log35 = restAdapter32.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter32.logLevel = logLevel36;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter47.logLevel = logLevel49;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel49);
        restAdapter32.log = log46;
        builder31.log = log46;
        restAdapter0.log = log46;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder58 = builder55.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter59.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler61 = restAdapter59.new RestHandler();
        retrofit.RestAdapter.Log log62 = restAdapter59.log;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter59.logLevel = logLevel63;
        retrofit.RestAdapter.Builder builder65 = builder58.setLogLevel(logLevel63);
        java.util.concurrent.Executor executor66 = builder58.callbackExecutor;
        retrofit.Profiler profiler67 = null;
        builder58.profiler = profiler67;
        retrofit.client.Client.Provider provider69 = builder58.clientProvider;
        restAdapter0.clientProvider = provider69;
        retrofit.RestAdapter.Log log71 = restAdapter0.log;
        log71.log("Retrofit-Idle");
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(logLevel60);
        org.junit.Assert.assertNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(provider69);
        org.junit.Assert.assertNotNull(log71);
    }

    @Test
    public void test07787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07787");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.converter.Converter converter2 = null;
        restAdapter0.converter = converter2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler5 = null;
        restAdapter0.profiler = profiler5;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        builder18.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor20 = builder18.requestInterceptor;
        retrofit.client.Client.Provider provider21 = builder18.clientProvider;
        java.util.concurrent.Executor executor22 = builder18.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor23 = builder18.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor23;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(requestInterceptor20);
        org.junit.Assert.assertNotNull(provider21);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(requestInterceptor23);
    }

    @Test
    public void test07788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07788");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.Server server14 = restAdapter13.server;
        retrofit.RequestInterceptor requestInterceptor15 = restAdapter13.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter13.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        java.util.concurrent.Executor executor19 = builder18.httpExecutor;
        retrofit.RestAdapter.Log log20 = builder18.log;
        builder18.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = builder18.callbackExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(requestInterceptor15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(executor22);
    }

    @Test
    public void test07789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07789");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.Server server22 = null;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter31.logLevel = logLevel33;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel33);
        restAdapter16.log = log30;
        builder15.log = log30;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter47.logLevel = logLevel49;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel49);
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log30, logLevel49);
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.Server server55 = restAdapter52.server;
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter52.logLevel;
        restAdapter0.setLogLevel(logLevel56);
        java.util.concurrent.Executor executor58 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor59 = restAdapter0.httpExecutor;
        retrofit.converter.Converter converter60 = restAdapter0.converter;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor58);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNull(converter60);
    }

    @Test
    public void test07790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07790");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter15.logLevel = logLevel17;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel17);
        restAdapter0.log = log14;
        retrofit.Profiler profiler21 = restAdapter0.profiler;
        retrofit.ErrorHandler errorHandler22 = null;
        restAdapter0.errorHandler = errorHandler22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log25 = builder24.log;
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Log log27 = builder24.log;
        retrofit.ErrorHandler errorHandler28 = builder24.errorHandler;
        restAdapter0.errorHandler = errorHandler28;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(errorHandler28);
    }

    @Test
    public void test07791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07791");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.Profiler profiler2 = restAdapter0.profiler;
        retrofit.RequestInterceptor requestInterceptor3 = restAdapter0.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        restAdapter0.requestInterceptor = requestInterceptor4;
        retrofit.ErrorHandler errorHandler6 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.getLogLevel();
        retrofit.Profiler profiler8 = restAdapter0.profiler;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter9.logLevel = logLevel11;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter13.logLevel = logLevel15;
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter13.errorHandler = errorHandler17;
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter13.logLevel;
        restAdapter9.logLevel = logLevel19;
        java.util.concurrent.Executor executor21 = restAdapter9.httpExecutor;
        retrofit.converter.Converter converter22 = null;
        restAdapter9.converter = converter22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder27 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter28.new RestHandler();
        retrofit.RestAdapter.Log log31 = restAdapter28.log;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter28.logLevel = logLevel32;
        retrofit.RestAdapter.Builder builder34 = builder27.setLogLevel(logLevel32);
        retrofit.client.Client.Provider provider35 = null;
        builder27.clientProvider = provider35;
        retrofit.ErrorHandler errorHandler37 = builder27.errorHandler;
        retrofit.Server server38 = builder27.server;
        java.util.concurrent.Executor executor39 = builder27.httpExecutor;
        restAdapter9.callbackExecutor = executor39;
        restAdapter0.callbackExecutor = executor39;
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter0.log;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(profiler8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNull(log43);
    }

    @Test
    public void test07792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07792");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider38 = null;
        builder30.clientProvider = provider38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.ErrorHandler errorHandler53 = builder43.errorHandler;
        retrofit.RestAdapter.Builder builder54 = builder30.setErrorHandler(errorHandler53);
        java.util.concurrent.Executor executor55 = builder54.httpExecutor;
        builder26.httpExecutor = executor55;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter57.logLevel = logLevel59;
        retrofit.ErrorHandler errorHandler61 = null;
        restAdapter57.errorHandler = errorHandler61;
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter57.logLevel;
        retrofit.converter.Converter converter64 = null;
        restAdapter57.converter = converter64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder69 = builder66.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.Log log73 = restAdapter70.log;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter70.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.client.Client.Provider provider79 = builder78.clientProvider;
        restAdapter57.clientProvider = provider79;
        retrofit.RestAdapter.Builder builder81 = builder26.setClient(provider79);
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel83 = builder26.logLevel;
        retrofit.RestAdapter restAdapter84 = builder26.build();
        java.lang.Throwable throwable85 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter84.logException(throwable85, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(provider79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(restAdapter84);
    }

    @Test
    public void test07793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07793");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder6 = builder3.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.RestAdapter.Builder builder13 = builder6.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("hi!");
        retrofit.client.Client.Provider provider16 = builder15.clientProvider;
        restAdapter0.clientProvider = provider16;
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider19 = restAdapter0.clientProvider;
        retrofit.client.Client.Provider provider20 = restAdapter0.clientProvider;
        retrofit.Profiler profiler21 = null;
        restAdapter0.profiler = profiler21;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider16);
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNotNull(provider20);
    }

    @Test
    public void test07794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07794");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        java.util.concurrent.Executor executor11 = builder3.callbackExecutor;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter12.logLevel = logLevel14;
        retrofit.ErrorHandler errorHandler16 = null;
        restAdapter12.errorHandler = errorHandler16;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.Server server19 = restAdapter18.server;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter18.requestInterceptor;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("hi!");
        retrofit.client.Client.Provider provider34 = builder33.clientProvider;
        restAdapter18.clientProvider = provider34;
        restAdapter12.clientProvider = provider34;
        retrofit.RestAdapter.Builder builder37 = builder3.setClient(provider34);
        retrofit.RestAdapter.Log log38 = builder3.log;
        builder3.ensureSaneDefaults();
        retrofit.Profiler profiler40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder41 = builder3.setProfiler(profiler40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertNull(requestInterceptor20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(provider34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log38);
    }

    @Test
    public void test07795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07795");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.Profiler profiler7 = restAdapter0.profiler;
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        java.util.concurrent.Executor executor24 = builder16.callbackExecutor;
        restAdapter9.callbackExecutor = executor24;
        restAdapter0.httpExecutor = executor24;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter0.requestInterceptor;
        retrofit.Server server28 = restAdapter0.server;
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNull(requestInterceptor27);
        org.junit.Assert.assertNull(server28);
    }

    @Test
    public void test07796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07796");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.Server server15 = builder7.server;
        builder0.server = server15;
        retrofit.client.Client.Provider provider17 = builder0.clientProvider;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.ErrorHandler errorHandler20 = null;
        restAdapter18.errorHandler = errorHandler20;
        retrofit.Profiler profiler22 = restAdapter18.profiler;
        retrofit.Profiler profiler23 = null;
        restAdapter18.profiler = profiler23;
        java.util.concurrent.Executor executor25 = restAdapter18.callbackExecutor;
        retrofit.RestAdapter.Log log26 = restAdapter18.log;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider38 = null;
        builder30.clientProvider = provider38;
        retrofit.RequestInterceptor requestInterceptor40 = builder30.requestInterceptor;
        retrofit.RestAdapter restAdapter41 = builder30.build();
        java.util.concurrent.Executor executor42 = restAdapter41.callbackExecutor;
        retrofit.converter.Converter converter43 = restAdapter41.converter;
        restAdapter18.converter = converter43;
        builder0.converter = converter43;
        retrofit.RestAdapter restAdapter46 = builder0.build();
        retrofit.Profiler profiler47 = builder0.profiler;
        retrofit.RequestInterceptor requestInterceptor48 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel49 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Builder builder56 = builder53.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        retrofit.client.Client.Provider provider68 = null;
        builder60.clientProvider = provider68;
        retrofit.ErrorHandler errorHandler70 = builder60.errorHandler;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder74 = builder71.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter75.new RestHandler();
        retrofit.RestAdapter.Log log78 = restAdapter75.log;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter75.logLevel = logLevel79;
        retrofit.RestAdapter.Builder builder81 = builder74.setLogLevel(logLevel79);
        retrofit.Server server82 = builder74.server;
        retrofit.RestAdapter.Builder builder83 = builder60.setServer(server82);
        retrofit.RestAdapter.Log log84 = builder83.log;
        log84.log("hi!");
        builder56.log = log84;
        log84.log("Retrofit-Idle");
        log84.log("hi!");
        builder0.log = log84;
        retrofit.RestAdapter.Log log93 = builder0.log;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(restAdapter41);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(converter43);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNull(profiler47);
        org.junit.Assert.assertNotNull(requestInterceptor48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(logLevel76);
        org.junit.Assert.assertNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(log93);
    }

    @Test
    public void test07797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07797");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        java.util.concurrent.Executor executor15 = restAdapter14.callbackExecutor;
        retrofit.Profiler profiler16 = restAdapter14.profiler;
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter14.logLevel;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider19 = null;
        builder18.clientProvider = provider19;
        retrofit.RestAdapter.Builder builder22 = builder18.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.logLevel;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder28 = builder25.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.logLevel = logLevel33;
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel33);
        retrofit.client.Client.Provider provider36 = null;
        builder28.clientProvider = provider36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder41 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log45 = restAdapter42.log;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter42.logLevel = logLevel46;
        retrofit.RestAdapter.Builder builder48 = builder41.setLogLevel(logLevel46);
        retrofit.client.Client.Provider provider49 = null;
        builder41.clientProvider = provider49;
        retrofit.ErrorHandler errorHandler51 = builder41.errorHandler;
        retrofit.RestAdapter.Builder builder52 = builder28.setErrorHandler(errorHandler51);
        restAdapter23.errorHandler = errorHandler51;
        builder22.errorHandler = errorHandler51;
        retrofit.RestAdapter.Builder builder56 = builder22.setServer("hi!");
        retrofit.client.Client.Provider provider57 = builder56.clientProvider;
        retrofit.ErrorHandler errorHandler58 = builder56.errorHandler;
        restAdapter14.errorHandler = errorHandler58;
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter14.logLevel;
        java.lang.Throwable throwable61 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter14.logException(throwable61, "Retrofit-Idle");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07798");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.Profiler profiler15 = builder3.profiler;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel34);
        restAdapter17.log = log31;
        builder16.log = log31;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        retrofit.Server server50 = builder42.server;
        builder16.server = server50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder55 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter56.new RestHandler();
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter56.logLevel = logLevel60;
        retrofit.RestAdapter.Builder builder62 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider63 = null;
        builder55.clientProvider = provider63;
        retrofit.RequestInterceptor requestInterceptor65 = builder55.requestInterceptor;
        retrofit.RestAdapter.Builder builder66 = builder16.setRequestInterceptor(requestInterceptor65);
        retrofit.RestAdapter.Builder builder67 = builder3.setRequestInterceptor(requestInterceptor65);
        retrofit.client.Client.Provider provider68 = builder67.clientProvider;
        java.util.concurrent.Executor executor69 = builder67.httpExecutor;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder71 = builder67.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(executor69);
    }

    @Test
    public void test07799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07799");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder6 = builder3.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.RestAdapter.Builder builder13 = builder6.setLogLevel(logLevel11);
        java.util.concurrent.Executor executor14 = builder6.callbackExecutor;
        retrofit.Profiler profiler15 = null;
        builder6.profiler = profiler15;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        java.util.concurrent.Executor executor32 = builder24.callbackExecutor;
        restAdapter17.callbackExecutor = executor32;
        builder6.callbackExecutor = executor32;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        java.util.concurrent.Executor executor50 = builder42.callbackExecutor;
        restAdapter35.callbackExecutor = executor50;
        builder6.httpExecutor = executor50;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Log log60 = restAdapter57.log;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter57.logLevel = logLevel61;
        retrofit.RestAdapter.Builder builder63 = builder56.setLogLevel(logLevel61);
        retrofit.client.Client.Provider provider64 = null;
        builder56.clientProvider = provider64;
        retrofit.ErrorHandler errorHandler66 = builder56.errorHandler;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.Log log74 = restAdapter71.log;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter71.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = builder70.setLogLevel(logLevel75);
        retrofit.Server server78 = builder70.server;
        retrofit.RestAdapter.Builder builder79 = builder56.setServer(server78);
        java.util.concurrent.Executor executor80 = builder79.httpExecutor;
        retrofit.RestAdapter.Builder builder81 = builder0.setExecutors(executor50, executor80);
        retrofit.Profiler profiler82 = null;
        builder0.profiler = profiler82;
        retrofit.RestAdapter.LogLevel logLevel84 = builder0.logLevel;
        java.util.concurrent.Executor executor85 = builder0.callbackExecutor;
        org.junit.Assert.assertNotNull(errorHandler2);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(server78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(executor80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor85);
    }

    @Test
    public void test07800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07800");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder6 = builder3.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.RestAdapter.Builder builder13 = builder6.setLogLevel(logLevel11);
        retrofit.Server server14 = builder6.server;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        retrofit.client.Client.Provider provider26 = null;
        builder18.clientProvider = provider26;
        retrofit.RequestInterceptor requestInterceptor28 = builder18.requestInterceptor;
        retrofit.RestAdapter restAdapter29 = builder18.build();
        retrofit.Profiler profiler30 = builder18.profiler;
        retrofit.ErrorHandler errorHandler31 = builder18.errorHandler;
        builder6.errorHandler = errorHandler31;
        retrofit.RestAdapter.LogLevel logLevel33 = builder6.logLevel;
        builder0.logLevel = logLevel33;
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07801");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.Profiler profiler5 = null;
        restAdapter0.profiler = profiler5;
        java.util.concurrent.Executor executor7 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler9 = restAdapter0.errorHandler;
        retrofit.ErrorHandler errorHandler10 = restAdapter0.errorHandler;
        retrofit.ErrorHandler errorHandler11 = restAdapter0.errorHandler;
        retrofit.client.Client.Provider provider12 = null;
        restAdapter0.clientProvider = provider12;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNull(errorHandler10);
        org.junit.Assert.assertNull(errorHandler11);
    }

    @Test
    public void test07802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07802");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.Server server3 = restAdapter0.server;
        java.util.concurrent.Executor executor4 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log6 = restAdapter0.log;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter11.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel15);
        java.util.concurrent.Executor executor18 = builder10.callbackExecutor;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter19.logLevel = logLevel21;
        retrofit.ErrorHandler errorHandler23 = null;
        restAdapter19.errorHandler = errorHandler23;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.Server server26 = restAdapter25.server;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter25.requestInterceptor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder31 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.Log log35 = restAdapter32.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter32.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = builder31.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("hi!");
        retrofit.client.Client.Provider provider41 = builder40.clientProvider;
        restAdapter25.clientProvider = provider41;
        restAdapter19.clientProvider = provider41;
        retrofit.RestAdapter.Builder builder44 = builder10.setClient(provider41);
        retrofit.Profiler profiler45 = builder44.profiler;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder49 = builder46.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.Log log53 = restAdapter50.log;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter50.logLevel = logLevel54;
        retrofit.RestAdapter.Builder builder56 = builder49.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.Profiler profiler59 = builder56.profiler;
        retrofit.ErrorHandler errorHandler60 = builder56.errorHandler;
        retrofit.Server server61 = builder56.server;
        retrofit.RestAdapter.Builder builder62 = builder44.setServer(server61);
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.Log log65 = restAdapter63.log;
        java.util.concurrent.Executor executor66 = restAdapter63.httpExecutor;
        retrofit.Server server67 = null;
        retrofit.client.Client.Provider provider68 = null;
        java.util.concurrent.Executor executor69 = null;
        java.util.concurrent.Executor executor70 = null;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        retrofit.converter.Converter converter72 = null;
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter76.logLevel = logLevel78;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server67, provider68, executor69, executor70, requestInterceptor71, converter72, profiler73, errorHandler74, log75, logLevel78);
        restAdapter63.log = log75;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder85 = builder82.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder87 = builder82.setLogLevel(logLevel86);
        restAdapter63.logLevel = logLevel86;
        boolean boolean89 = logLevel86.log();
        builder62.logLevel = logLevel86;
        restAdapter0.logLevel = logLevel86;
        boolean boolean92 = logLevel86.log();
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(provider41);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(profiler59);
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertNull(log65);
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNull(logLevel77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test07803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07803");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.Server server14 = restAdapter13.server;
        retrofit.RequestInterceptor requestInterceptor15 = restAdapter13.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter13.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        java.util.concurrent.Executor executor19 = builder18.httpExecutor;
        retrofit.RestAdapter.Log log20 = builder18.log;
        retrofit.RestAdapter restAdapter21 = builder18.build();
        retrofit.converter.Converter converter22 = restAdapter21.converter;
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter21.getLogLevel();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(requestInterceptor15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(converter22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test07804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07804");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        java.util.concurrent.Executor executor3 = restAdapter0.httpExecutor;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        retrofit.converter.Converter converter9 = null;
        retrofit.Profiler profiler10 = null;
        retrofit.ErrorHandler errorHandler11 = null;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter13.logLevel = logLevel15;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor8, converter9, profiler10, errorHandler11, log12, logLevel15);
        restAdapter0.log = log12;
        java.util.concurrent.Executor executor19 = null;
        restAdapter0.httpExecutor = executor19;
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter0.logLevel;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.Profiler profiler24 = restAdapter23.profiler;
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.converter.Converter converter26 = restAdapter23.converter;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter23.logLevel = logLevel27;
        retrofit.ErrorHandler errorHandler29 = restAdapter23.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter23.getLogLevel();
        restAdapter0.logLevel = logLevel30;
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(converter26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test07805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07805");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = null;
        builder17.clientProvider = provider25;
        retrofit.ErrorHandler errorHandler27 = builder17.errorHandler;
        retrofit.Server server28 = builder17.server;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider40 = builder39.clientProvider;
        retrofit.RestAdapter.Builder builder41 = builder17.setClient(provider40);
        builder3.clientProvider = provider40;
        retrofit.RestAdapter.Builder builder44 = builder3.setServer("Retrofit-Idle");
        retrofit.Profiler profiler45 = null;
        builder3.profiler = profiler45;
        retrofit.RestAdapter.Log log47 = null;
        builder3.log = log47;
        java.util.concurrent.Executor executor49 = builder3.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel50 = builder3.logLevel;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07806");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = null;
        builder8.clientProvider = provider16;
        retrofit.RequestInterceptor requestInterceptor18 = builder8.requestInterceptor;
        retrofit.RestAdapter restAdapter19 = builder8.build();
        retrofit.ErrorHandler errorHandler20 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder21 = builder0.setErrorHandler(errorHandler20);
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter22.logLevel = logLevel24;
        retrofit.ErrorHandler errorHandler26 = null;
        restAdapter22.errorHandler = errorHandler26;
        java.util.concurrent.Executor executor28 = restAdapter22.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter22.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder21.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder32 = builder21.setServer("Retrofit-Idle");
        retrofit.Server server33 = builder32.server;
        java.util.concurrent.Executor executor34 = builder32.httpExecutor;
        retrofit.RestAdapter restAdapter35 = builder32.build();
        retrofit.RestAdapter.Builder builder37 = builder32.setServer("hi!");
        retrofit.RestAdapter.Log log38 = null;
        builder32.log = log38;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(restAdapter19);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNotNull(restAdapter35);
        org.junit.Assert.assertNotNull(builder37);
    }

    @Test
    public void test07807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07807");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log1 = restAdapter0.log;
        java.util.concurrent.Executor executor2 = null;
        restAdapter0.callbackExecutor = executor2;
        retrofit.RestAdapter.Log log4 = restAdapter0.log;
        retrofit.Profiler profiler5 = null;
        restAdapter0.profiler = profiler5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter11.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider18 = null;
        builder10.clientProvider = provider18;
        retrofit.RequestInterceptor requestInterceptor20 = builder10.requestInterceptor;
        retrofit.RestAdapter restAdapter21 = builder10.build();
        retrofit.ErrorHandler errorHandler22 = builder10.errorHandler;
        retrofit.converter.Converter converter23 = builder10.converter;
        java.util.concurrent.Executor executor24 = builder10.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor25 = builder10.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor25;
        retrofit.ErrorHandler errorHandler27 = restAdapter0.errorHandler;
        retrofit.Server server28 = restAdapter0.server;
        org.junit.Assert.assertNull(log1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(requestInterceptor20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(errorHandler22);
        org.junit.Assert.assertNotNull(converter23);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertNull(server28);
    }

    @Test
    public void test07808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07808");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter11.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider18 = null;
        builder10.clientProvider = provider18;
        retrofit.ErrorHandler errorHandler20 = builder10.errorHandler;
        retrofit.Server server21 = builder10.server;
        restAdapter0.server = server21;
        retrofit.Server server23 = restAdapter0.server;
        retrofit.client.Client.Provider provider24 = restAdapter0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter0.getLogLevel();
        retrofit.RequestInterceptor requestInterceptor26 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.ErrorHandler errorHandler29 = null;
        restAdapter27.errorHandler = errorHandler29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        retrofit.client.Client.Provider provider42 = null;
        builder34.clientProvider = provider42;
        retrofit.ErrorHandler errorHandler44 = builder34.errorHandler;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder48 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        retrofit.RestAdapter.Log log52 = restAdapter49.log;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter49.logLevel = logLevel53;
        retrofit.RestAdapter.Builder builder55 = builder48.setLogLevel(logLevel53);
        retrofit.Server server56 = builder48.server;
        retrofit.RestAdapter.Builder builder57 = builder34.setServer(server56);
        retrofit.converter.Converter converter58 = builder57.converter;
        restAdapter27.converter = converter58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder60.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter64.new RestHandler();
        retrofit.RestAdapter.Log log67 = restAdapter64.log;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter64.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder70 = builder63.setLogLevel(logLevel68);
        retrofit.client.Client.Provider provider71 = null;
        builder63.clientProvider = provider71;
        retrofit.RequestInterceptor requestInterceptor73 = builder63.requestInterceptor;
        retrofit.RestAdapter restAdapter74 = builder63.build();
        java.util.concurrent.Executor executor75 = restAdapter74.callbackExecutor;
        retrofit.converter.Converter converter76 = restAdapter74.converter;
        retrofit.RestAdapter.Log log77 = restAdapter74.log;
        restAdapter27.log = log77;
        log77.log("hi!");
        log77.log("Retrofit-Idle");
        restAdapter0.log = log77;
        retrofit.RequestInterceptor requestInterceptor84 = restAdapter0.requestInterceptor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(requestInterceptor26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(errorHandler44);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(converter58);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(executor75);
        org.junit.Assert.assertNotNull(converter76);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNull(requestInterceptor84);
    }

    @Test
    public void test07809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07809");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.Server server5 = builder0.server;
        java.util.concurrent.Executor executor6 = null;
        builder0.callbackExecutor = executor6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider19 = builder18.clientProvider;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.logLevel = logLevel33;
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter44.logLevel = logLevel46;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel46);
        restAdapter29.log = log43;
        builder28.log = log43;
        retrofit.Server server51 = null;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter60.logLevel = logLevel62;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel62);
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log43, logLevel62);
        retrofit.RestAdapter.Builder builder66 = builder18.setLog(log43);
        log43.log("hi!");
        builder0.log = log43;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider71 = null;
        builder70.clientProvider = provider71;
        retrofit.RestAdapter.Builder builder74 = builder70.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.client.Client.Provider provider86 = null;
        builder78.clientProvider = provider86;
        retrofit.RequestInterceptor requestInterceptor88 = builder78.requestInterceptor;
        retrofit.RestAdapter restAdapter89 = builder78.build();
        retrofit.ErrorHandler errorHandler90 = builder78.errorHandler;
        retrofit.RestAdapter.Builder builder91 = builder70.setErrorHandler(errorHandler90);
        retrofit.RestAdapter.Builder builder92 = builder0.setErrorHandler(errorHandler90);
        retrofit.RestAdapter.Log log93 = builder92.log;
        log93.log("");
        log93.log("");
        log93.log("Retrofit-Idle");
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(requestInterceptor88);
        org.junit.Assert.assertNotNull(restAdapter89);
        org.junit.Assert.assertNotNull(errorHandler90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(log93);
    }

    @Test
    public void test07810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07810");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder44 = builder41.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder46 = builder41.setLogLevel(logLevel45);
        retrofit.converter.Converter converter47 = null;
        builder41.converter = converter47;
        java.util.concurrent.Executor executor49 = builder41.callbackExecutor;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder55 = builder50.setLogLevel(logLevel54);
        retrofit.converter.Converter converter56 = null;
        builder50.converter = converter56;
        java.util.concurrent.Executor executor58 = builder50.callbackExecutor;
        retrofit.RestAdapter.Builder builder59 = builder40.setExecutors(executor49, executor58);
        retrofit.RestAdapter.Log log60 = builder59.log;
        retrofit.RestAdapter.Builder builder61 = builder0.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder65 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter66.log;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter66.logLevel = logLevel70;
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel70);
        boolean boolean73 = logLevel70.log();
        retrofit.RestAdapter.Builder builder74 = builder61.setLogLevel(logLevel70);
        retrofit.RestAdapter.Log log75 = builder74.log;
        retrofit.converter.Converter converter76 = builder74.converter;
        retrofit.client.Client.Provider provider77 = builder74.clientProvider;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNull(converter76);
        org.junit.Assert.assertNull(provider77);
    }

    @Test
    public void test07811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07811");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.Server server11 = builder3.server;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider23 = null;
        builder15.clientProvider = provider23;
        retrofit.RequestInterceptor requestInterceptor25 = builder15.requestInterceptor;
        retrofit.RestAdapter restAdapter26 = builder15.build();
        retrofit.Profiler profiler27 = builder15.profiler;
        retrofit.ErrorHandler errorHandler28 = builder15.errorHandler;
        builder3.errorHandler = errorHandler28;
        retrofit.RestAdapter restAdapter30 = builder3.build();
        retrofit.Server server31 = builder3.server;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder33 = builder3.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(server31);
    }

    @Test
    public void test07812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07812");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log1 = builder0.log;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log3 = builder0.log;
        retrofit.ErrorHandler errorHandler4 = builder0.errorHandler;
        retrofit.RestAdapter.Log log5 = builder0.log;
        org.junit.Assert.assertNull(log1);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(errorHandler4);
        org.junit.Assert.assertNotNull(log5);
    }

    @Test
    public void test07813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07813");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.Profiler profiler2 = restAdapter0.profiler;
        retrofit.RequestInterceptor requestInterceptor3 = restAdapter0.requestInterceptor;
        retrofit.Server server4 = restAdapter0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        java.util.concurrent.Executor executor16 = builder8.callbackExecutor;
        retrofit.Profiler profiler17 = null;
        builder8.profiler = profiler17;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        java.util.concurrent.Executor executor34 = builder26.callbackExecutor;
        restAdapter19.callbackExecutor = executor34;
        builder8.callbackExecutor = executor34;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder44 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.Log log48 = restAdapter45.log;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter45.logLevel = logLevel49;
        retrofit.RestAdapter.Builder builder51 = builder44.setLogLevel(logLevel49);
        java.util.concurrent.Executor executor52 = builder44.callbackExecutor;
        restAdapter37.callbackExecutor = executor52;
        builder8.httpExecutor = executor52;
        retrofit.Server server55 = builder8.server;
        restAdapter0.server = server55;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter57.getLogLevel();
        java.util.concurrent.Executor executor61 = restAdapter57.callbackExecutor;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder65 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter66.log;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter66.logLevel = logLevel70;
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel70);
        retrofit.client.Client.Provider provider73 = null;
        builder65.clientProvider = provider73;
        retrofit.RequestInterceptor requestInterceptor75 = builder65.requestInterceptor;
        retrofit.RestAdapter restAdapter76 = builder65.build();
        retrofit.ErrorHandler errorHandler77 = builder65.errorHandler;
        retrofit.converter.Converter converter78 = builder65.converter;
        restAdapter57.converter = converter78;
        restAdapter0.converter = converter78;
        retrofit.RestAdapter.Log log81 = restAdapter0.log;
        retrofit.Server server82 = restAdapter0.server;
        retrofit.RestAdapter.Log log83 = restAdapter0.log;
        java.util.concurrent.Executor executor84 = restAdapter0.callbackExecutor;
        java.util.concurrent.Executor executor85 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(logLevel60);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(restAdapter76);
        org.junit.Assert.assertNotNull(errorHandler77);
        org.junit.Assert.assertNotNull(converter78);
        org.junit.Assert.assertNull(log81);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNull(log83);
        org.junit.Assert.assertNull(executor84);
        org.junit.Assert.assertNull(executor85);
    }

    @Test
    public void test07814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07814");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.ErrorHandler errorHandler15 = builder3.errorHandler;
        retrofit.ErrorHandler errorHandler16 = builder3.errorHandler;
        retrofit.Profiler profiler17 = null;
        builder3.profiler = profiler17;
        java.util.concurrent.Executor executor19 = builder3.callbackExecutor;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder23 = builder20.setServer("hi!");
        retrofit.converter.Converter converter24 = builder20.converter;
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel51);
        restAdapter34.log = log48;
        builder33.log = log48;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel67);
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log48, logLevel67);
        retrofit.RestAdapter.RestHandler restHandler71 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter70.logLevel;
        retrofit.RestAdapter.Builder builder73 = builder20.setLogLevel(logLevel72);
        retrofit.Profiler profiler74 = null;
        builder20.profiler = profiler74;
        retrofit.RestAdapter.Log log76 = builder20.log;
        retrofit.RestAdapter.Builder builder77 = builder3.setLog(log76);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(converter24);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder77);
    }

    @Test
    public void test07815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07815");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.Server server7 = restAdapter6.server;
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter6.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.client.Client.Provider provider22 = builder21.clientProvider;
        restAdapter6.clientProvider = provider22;
        restAdapter0.clientProvider = provider22;
        retrofit.RestAdapter.Log log25 = restAdapter0.log;
        java.util.concurrent.Executor executor26 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler28 = restAdapter0.profiler;
        retrofit.Profiler profiler29 = null;
        restAdapter0.profiler = profiler29;
        retrofit.client.Request request31 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request32 = restAdapter0.logAndReplaceRequest(request31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(profiler28);
    }

    @Test
    public void test07816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07816");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        builder10.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor12 = builder10.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.FULL;
        boolean boolean14 = logLevel13.log();
        boolean boolean15 = logLevel13.log();
        builder10.logLevel = logLevel13;
        retrofit.RestAdapter restAdapter17 = builder10.build();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor19 = builder18.callbackExecutor;
        retrofit.Profiler profiler20 = null;
        builder18.profiler = profiler20;
        retrofit.RestAdapter.Log log22 = builder18.log;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        java.util.concurrent.Executor executor34 = builder26.callbackExecutor;
        builder18.httpExecutor = executor34;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.ErrorHandler errorHandler40 = null;
        restAdapter36.errorHandler = errorHandler40;
        java.util.concurrent.Executor executor42 = restAdapter36.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter36.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder18.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler47 = builder45.errorHandler;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        java.util.concurrent.Executor executor50 = builder48.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor51 = builder48.requestInterceptor;
        retrofit.RestAdapter.Builder builder52 = builder45.setRequestInterceptor(requestInterceptor51);
        retrofit.converter.Converter converter53 = builder45.converter;
        retrofit.RestAdapter.Builder builder54 = builder44.setConverter(converter53);
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.Server server56 = restAdapter55.server;
        retrofit.RequestInterceptor requestInterceptor57 = restAdapter55.requestInterceptor;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder65 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter66.log;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter66.logLevel = logLevel70;
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel70);
        java.util.concurrent.Executor executor73 = builder65.callbackExecutor;
        restAdapter58.callbackExecutor = executor73;
        restAdapter55.httpExecutor = executor73;
        builder44.callbackExecutor = executor73;
        builder10.callbackExecutor = executor73;
        java.util.concurrent.Executor executor78 = builder10.callbackExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(restAdapter17);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(errorHandler47);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(converter53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertNull(requestInterceptor57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(executor78);
    }

    @Test
    public void test07817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07817");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.Profiler profiler13 = builder10.profiler;
        retrofit.ErrorHandler errorHandler14 = builder10.errorHandler;
        retrofit.Server server15 = builder10.server;
        retrofit.RestAdapter.Log log16 = builder10.log;
        retrofit.RestAdapter.LogLevel logLevel17 = builder10.logLevel;
        retrofit.converter.Converter converter18 = builder10.converter;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder29 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider30 = null;
        builder22.clientProvider = provider30;
        retrofit.ErrorHandler errorHandler32 = builder22.errorHandler;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder36 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter37.log;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter37.logLevel = logLevel41;
        retrofit.RestAdapter.Builder builder43 = builder36.setLogLevel(logLevel41);
        retrofit.Server server44 = builder36.server;
        retrofit.RestAdapter.Builder builder45 = builder22.setServer(server44);
        retrofit.RestAdapter.Log log46 = builder45.log;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.Server server48 = restAdapter47.server;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter47.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter54.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder62 = builder60.setServer("hi!");
        retrofit.client.Client.Provider provider63 = builder62.clientProvider;
        restAdapter47.clientProvider = provider63;
        retrofit.RestAdapter.Builder builder65 = builder45.setClient(provider63);
        java.util.concurrent.Executor executor66 = builder65.httpExecutor;
        retrofit.ErrorHandler errorHandler67 = builder65.errorHandler;
        builder10.errorHandler = errorHandler67;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter18);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(errorHandler67);
    }

    @Test
    public void test07818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07818");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor28 = builder27.callbackExecutor;
        retrofit.Profiler profiler29 = null;
        builder27.profiler = profiler29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        retrofit.Server server42 = builder34.server;
        builder27.server = server42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.Log log48 = restAdapter45.log;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter45.logLevel = logLevel49;
        retrofit.Server server51 = null;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter60.logLevel = logLevel62;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel62);
        restAdapter45.log = log59;
        builder44.log = log59;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.Log log74 = restAdapter71.log;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter71.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = builder70.setLogLevel(logLevel75);
        retrofit.Server server78 = builder70.server;
        builder44.server = server78;
        builder27.server = server78;
        retrofit.RestAdapter.Builder builder81 = builder24.setServer(server78);
        retrofit.RestAdapter.Builder builder82 = builder3.setServer(server78);
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder84 = builder3.setLogLevel(logLevel83);
        java.util.concurrent.Executor executor85 = builder3.callbackExecutor;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        builder86.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder89 = builder86.setServer("hi!");
        java.util.concurrent.Executor executor90 = builder86.callbackExecutor;
        builder3.callbackExecutor = executor90;
        retrofit.RestAdapter.LogLevel logLevel92 = retrofit.RestAdapter.LogLevel.FULL;
        boolean boolean93 = logLevel92.log();
        boolean boolean94 = logLevel92.log();
        retrofit.RestAdapter.Builder builder95 = builder3.setLogLevel(logLevel92);
        builder3.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(server78);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(executor90);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test07819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07819");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.Server server6 = null;
        builder0.server = server6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider19 = null;
        builder11.clientProvider = provider19;
        retrofit.RequestInterceptor requestInterceptor21 = builder11.requestInterceptor;
        retrofit.RestAdapter restAdapter22 = builder11.build();
        retrofit.ErrorHandler errorHandler23 = builder11.errorHandler;
        retrofit.converter.Converter converter24 = builder11.converter;
        retrofit.RestAdapter.Builder builder25 = builder0.setConverter(converter24);
        java.util.concurrent.Executor executor26 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor27 = null;
        builder0.callbackExecutor = executor27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.RestAdapter restAdapter40 = builder32.build();
        retrofit.converter.Converter converter41 = builder32.converter;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log45 = restAdapter42.log;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter42.logLevel = logLevel46;
        retrofit.Server server48 = null;
        retrofit.client.Client.Provider provider49 = null;
        java.util.concurrent.Executor executor50 = null;
        java.util.concurrent.Executor executor51 = null;
        retrofit.RequestInterceptor requestInterceptor52 = null;
        retrofit.converter.Converter converter53 = null;
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter57.logLevel = logLevel59;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server48, provider49, executor50, executor51, requestInterceptor52, converter53, profiler54, errorHandler55, log56, logLevel59);
        restAdapter42.log = log56;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter63.logLevel = logLevel65;
        retrofit.ErrorHandler errorHandler67 = null;
        restAdapter63.errorHandler = errorHandler67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        retrofit.Server server70 = restAdapter69.server;
        retrofit.RequestInterceptor requestInterceptor71 = restAdapter69.requestInterceptor;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder75 = builder72.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter76.new RestHandler();
        retrofit.RestAdapter.Log log79 = restAdapter76.log;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter76.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = builder75.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder84 = builder82.setServer("hi!");
        retrofit.client.Client.Provider provider85 = builder84.clientProvider;
        restAdapter69.clientProvider = provider85;
        restAdapter63.clientProvider = provider85;
        restAdapter42.clientProvider = provider85;
        retrofit.client.Client.Provider provider89 = restAdapter42.clientProvider;
        builder32.clientProvider = provider89;
        builder0.clientProvider = provider89;
        retrofit.client.Client client92 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder93 = builder0.setClient(client92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(converter24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(restAdapter40);
        org.junit.Assert.assertNotNull(converter41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server70);
        org.junit.Assert.assertNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(logLevel77);
        org.junit.Assert.assertNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(provider85);
        org.junit.Assert.assertNotNull(provider89);
    }

    @Test
    public void test07820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07820");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter9.logLevel = logLevel11;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel11);
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter13.new RestHandler();
        retrofit.converter.Converter converter15 = restAdapter13.converter;
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter13.requestInterceptor;
        retrofit.Profiler profiler17 = restAdapter13.profiler;
        retrofit.Profiler profiler18 = restAdapter13.profiler;
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(profiler18);
    }

    @Test
    public void test07821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07821");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.Profiler profiler2 = restAdapter0.profiler;
        retrofit.RequestInterceptor requestInterceptor3 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean5 = logLevel4.log();
        restAdapter0.logLevel = logLevel4;
        retrofit.Server server7 = restAdapter0.server;
        retrofit.Server server8 = restAdapter0.server;
        retrofit.client.Response response10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response12 = restAdapter0.logAndReplaceResponse("", response10, (long) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(server8);
    }

    @Test
    public void test07822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07822");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = null;
        builder8.clientProvider = provider16;
        retrofit.RequestInterceptor requestInterceptor18 = builder8.requestInterceptor;
        retrofit.RestAdapter restAdapter19 = builder8.build();
        retrofit.ErrorHandler errorHandler20 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder21 = builder0.setErrorHandler(errorHandler20);
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.Log log24 = restAdapter22.log;
        java.util.concurrent.Executor executor25 = restAdapter22.httpExecutor;
        retrofit.Server server26 = null;
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.converter.Converter converter31 = null;
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter35.logLevel = logLevel37;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor30, converter31, profiler32, errorHandler33, log34, logLevel37);
        restAdapter22.log = log34;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder44 = builder41.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder46 = builder41.setLogLevel(logLevel45);
        restAdapter22.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder48 = builder21.setLogLevel(logLevel45);
        retrofit.RequestInterceptor requestInterceptor49 = builder48.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter54.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider61 = null;
        builder53.clientProvider = provider61;
        retrofit.Server server63 = null;
        builder53.server = server63;
        retrofit.RequestInterceptor requestInterceptor65 = builder53.requestInterceptor;
        builder48.requestInterceptor = requestInterceptor65;
        retrofit.ErrorHandler errorHandler67 = builder48.errorHandler;
        retrofit.converter.Converter converter68 = builder48.converter;
        java.util.concurrent.Executor executor69 = builder48.callbackExecutor;
        retrofit.RestAdapter restAdapter70 = builder48.build();
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(restAdapter19);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(errorHandler67);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNotNull(restAdapter70);
    }

    @Test
    public void test07823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07823");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.ErrorHandler errorHandler15 = builder3.errorHandler;
        java.util.concurrent.Executor executor16 = builder3.callbackExecutor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = null;
        builder20.clientProvider = provider28;
        retrofit.Server server30 = null;
        builder20.server = server30;
        retrofit.RequestInterceptor requestInterceptor32 = builder20.requestInterceptor;
        builder3.requestInterceptor = requestInterceptor32;
        retrofit.Profiler profiler34 = null;
        builder3.profiler = profiler34;
        retrofit.RequestInterceptor requestInterceptor36 = builder3.requestInterceptor;
        retrofit.converter.Converter converter37 = builder3.converter;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder41 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log45 = restAdapter42.log;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter42.logLevel = logLevel46;
        retrofit.RestAdapter.Builder builder48 = builder41.setLogLevel(logLevel46);
        java.util.concurrent.Executor executor49 = builder41.callbackExecutor;
        retrofit.Profiler profiler50 = null;
        builder41.profiler = profiler50;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder59 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter60.new RestHandler();
        retrofit.RestAdapter.Log log63 = restAdapter60.log;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter60.logLevel = logLevel64;
        retrofit.RestAdapter.Builder builder66 = builder59.setLogLevel(logLevel64);
        java.util.concurrent.Executor executor67 = builder59.callbackExecutor;
        restAdapter52.callbackExecutor = executor67;
        builder41.callbackExecutor = executor67;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder77 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter78.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler80 = restAdapter78.new RestHandler();
        retrofit.RestAdapter.Log log81 = restAdapter78.log;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter78.logLevel = logLevel82;
        retrofit.RestAdapter.Builder builder84 = builder77.setLogLevel(logLevel82);
        java.util.concurrent.Executor executor85 = builder77.callbackExecutor;
        restAdapter70.callbackExecutor = executor85;
        builder41.httpExecutor = executor85;
        java.util.concurrent.Executor executor88 = builder41.callbackExecutor;
        retrofit.ErrorHandler errorHandler89 = builder41.errorHandler;
        retrofit.converter.Converter converter90 = builder41.converter;
        builder3.converter = converter90;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(converter37);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNull(log63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(logLevel73);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(logLevel79);
        org.junit.Assert.assertNull(log81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(executor88);
        org.junit.Assert.assertNotNull(errorHandler89);
        org.junit.Assert.assertNotNull(converter90);
    }

    @Test
    public void test07824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07824");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        java.util.concurrent.Executor executor3 = restAdapter0.httpExecutor;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        retrofit.converter.Converter converter9 = null;
        retrofit.Profiler profiler10 = null;
        retrofit.ErrorHandler errorHandler11 = null;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter13.logLevel = logLevel15;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor8, converter9, profiler10, errorHandler11, log12, logLevel15);
        restAdapter0.log = log12;
        java.util.concurrent.Executor executor19 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler20 = restAdapter0.profiler;
        retrofit.Profiler profiler21 = restAdapter0.profiler;
        retrofit.RequestInterceptor requestInterceptor22 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor24 = builder23.callbackExecutor;
        retrofit.Profiler profiler25 = null;
        builder23.profiler = profiler25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.Server server38 = builder30.server;
        builder23.server = server38;
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.Log log43 = restAdapter41.log;
        java.util.concurrent.Executor executor44 = restAdapter41.httpExecutor;
        retrofit.Server server45 = null;
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter54.logLevel = logLevel56;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel56);
        restAdapter41.log = log53;
        builder23.log = log53;
        retrofit.RestAdapter.LogLevel logLevel61 = builder23.logLevel;
        restAdapter0.logLevel = logLevel61;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNull(requestInterceptor22);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test07825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07825");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.RequestInterceptor requestInterceptor49 = builder39.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = builder0.setRequestInterceptor(requestInterceptor49);
        retrofit.RequestInterceptor requestInterceptor51 = builder50.requestInterceptor;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel70);
        restAdapter53.log = log67;
        builder52.log = log67;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.Server server86 = builder78.server;
        builder52.server = server86;
        retrofit.RestAdapter.Builder builder88 = builder50.setServer(server86);
        retrofit.Server server89 = builder88.server;
        retrofit.ErrorHandler errorHandler90 = builder88.errorHandler;
        retrofit.ErrorHandler errorHandler91 = builder88.errorHandler;
        retrofit.converter.Converter converter92 = builder88.converter;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(server86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(server89);
        org.junit.Assert.assertNull(errorHandler90);
        org.junit.Assert.assertNull(errorHandler91);
        org.junit.Assert.assertNull(converter92);
    }

    @Test
    public void test07826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07826");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.Server server15 = builder7.server;
        restAdapter0.server = server15;
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter0.logLevel;
        retrofit.Server server18 = restAdapter0.server;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNotNull(server18);
    }

    @Test
    public void test07827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07827");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.converter.Converter converter7 = null;
        restAdapter0.converter = converter7;
        retrofit.converter.Converter converter9 = restAdapter0.converter;
        java.util.concurrent.Executor executor10 = restAdapter0.callbackExecutor;
        retrofit.Server server11 = restAdapter0.server;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter0.requestInterceptor;
        retrofit.Profiler profiler13 = null;
        restAdapter0.profiler = profiler13;
        retrofit.client.Request request15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request16 = restAdapter0.logAndReplaceRequest(request15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertNull(requestInterceptor12);
    }

    @Test
    public void test07828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07828");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider38 = null;
        builder30.clientProvider = provider38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.ErrorHandler errorHandler53 = builder43.errorHandler;
        retrofit.RestAdapter.Builder builder54 = builder30.setErrorHandler(errorHandler53);
        java.util.concurrent.Executor executor55 = builder54.httpExecutor;
        builder26.httpExecutor = executor55;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter57.logLevel = logLevel59;
        retrofit.ErrorHandler errorHandler61 = null;
        restAdapter57.errorHandler = errorHandler61;
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter57.logLevel;
        retrofit.converter.Converter converter64 = null;
        restAdapter57.converter = converter64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder69 = builder66.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.Log log73 = restAdapter70.log;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter70.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        retrofit.client.Client.Provider provider79 = builder78.clientProvider;
        restAdapter57.clientProvider = provider79;
        retrofit.RestAdapter.Builder builder81 = builder26.setClient(provider79);
        retrofit.RestAdapter.Builder builder83 = builder26.setServer("hi!");
        retrofit.Server server84 = builder26.server;
        retrofit.RestAdapter.Builder builder86 = builder26.setServer("Retrofit-Idle");
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(provider79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(server84);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test07829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07829");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder19 = builder14.setLogLevel(logLevel18);
        retrofit.Server server20 = null;
        builder14.server = server20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder25 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log29 = restAdapter26.log;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.logLevel = logLevel30;
        retrofit.RestAdapter.Builder builder32 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider33 = null;
        builder25.clientProvider = provider33;
        retrofit.RequestInterceptor requestInterceptor35 = builder25.requestInterceptor;
        retrofit.RestAdapter restAdapter36 = builder25.build();
        retrofit.ErrorHandler errorHandler37 = builder25.errorHandler;
        retrofit.converter.Converter converter38 = builder25.converter;
        retrofit.RestAdapter.Builder builder39 = builder14.setConverter(converter38);
        retrofit.RestAdapter.Log log40 = builder14.log;
        retrofit.RestAdapter.Builder builder41 = builder12.setLog(log40);
        retrofit.Profiler profiler42 = builder12.profiler;
        retrofit.converter.Converter converter43 = null;
        builder12.converter = converter43;
        retrofit.RequestInterceptor requestInterceptor45 = builder12.requestInterceptor;
        retrofit.RestAdapter.Builder builder47 = builder12.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        java.util.concurrent.Executor executor50 = builder49.callbackExecutor;
        retrofit.Profiler profiler51 = builder49.profiler;
        retrofit.Profiler profiler52 = builder49.profiler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertNull(profiler52);
    }

    @Test
    public void test07830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07830");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.RestAdapter.Log log5 = restAdapter0.log;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder9 = builder6.setServer("hi!");
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Log log13 = restAdapter10.log;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.logLevel = logLevel14;
        retrofit.RestAdapter.Builder builder16 = builder9.setLogLevel(logLevel14);
        retrofit.client.Client.Provider provider17 = null;
        builder9.clientProvider = provider17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder29 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider30 = null;
        builder22.clientProvider = provider30;
        retrofit.ErrorHandler errorHandler32 = builder22.errorHandler;
        retrofit.RestAdapter.Builder builder33 = builder9.setErrorHandler(errorHandler32);
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter34.logLevel = logLevel36;
        retrofit.ErrorHandler errorHandler38 = null;
        restAdapter34.errorHandler = errorHandler38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.Server server41 = restAdapter40.server;
        retrofit.RequestInterceptor requestInterceptor42 = restAdapter40.requestInterceptor;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.client.Client.Provider provider56 = builder55.clientProvider;
        restAdapter40.clientProvider = provider56;
        restAdapter34.clientProvider = provider56;
        retrofit.RestAdapter.Builder builder59 = builder33.setClient(provider56);
        retrofit.RequestInterceptor requestInterceptor60 = builder59.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor61 = builder59.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor61;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(provider56);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(requestInterceptor61);
    }

    @Test
    public void test07831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07831");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        java.util.concurrent.Executor executor12 = builder10.callbackExecutor;
        retrofit.converter.Converter converter13 = builder10.converter;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel34);
        restAdapter17.log = log31;
        builder16.log = log31;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        retrofit.Server server50 = builder42.server;
        builder16.server = server50;
        retrofit.RestAdapter.LogLevel logLevel52 = builder16.logLevel;
        builder14.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.Log log61 = restAdapter58.log;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        retrofit.client.Client.Provider provider65 = null;
        builder57.clientProvider = provider65;
        retrofit.ErrorHandler errorHandler67 = builder57.errorHandler;
        retrofit.Server server68 = null;
        retrofit.client.Client.Provider provider69 = null;
        java.util.concurrent.Executor executor70 = null;
        java.util.concurrent.Executor executor71 = null;
        retrofit.RequestInterceptor requestInterceptor72 = null;
        retrofit.converter.Converter converter73 = null;
        retrofit.Profiler profiler74 = null;
        retrofit.ErrorHandler errorHandler75 = null;
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter77.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter77.logLevel = logLevel79;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server68, provider69, executor70, executor71, requestInterceptor72, converter73, profiler74, errorHandler75, log76, logLevel79);
        builder57.logLevel = logLevel79;
        retrofit.ErrorHandler errorHandler83 = builder57.errorHandler;
        builder14.errorHandler = errorHandler83;
        retrofit.RestAdapter.Builder builder85 = builder10.setErrorHandler(errorHandler83);
        retrofit.client.Client.Provider provider86 = builder85.clientProvider;
        builder85.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertNotNull(converter13);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(errorHandler67);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNull(logLevel78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(errorHandler83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(provider86);
    }

    @Test
    public void test07832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07832");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        java.util.concurrent.Executor executor3 = restAdapter0.httpExecutor;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        retrofit.converter.Converter converter9 = null;
        retrofit.Profiler profiler10 = null;
        retrofit.ErrorHandler errorHandler11 = null;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter13.logLevel = logLevel15;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor8, converter9, profiler10, errorHandler11, log12, logLevel15);
        restAdapter0.log = log12;
        retrofit.RequestInterceptor requestInterceptor19 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter20.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter20.logLevel = logLevel22;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter24.logLevel = logLevel26;
        retrofit.ErrorHandler errorHandler28 = null;
        restAdapter24.errorHandler = errorHandler28;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter24.logLevel;
        restAdapter20.logLevel = logLevel30;
        java.util.concurrent.Executor executor32 = restAdapter20.httpExecutor;
        retrofit.converter.Converter converter33 = null;
        restAdapter20.converter = converter33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.Log log42 = restAdapter39.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.logLevel = logLevel43;
        retrofit.RestAdapter.Builder builder45 = builder38.setLogLevel(logLevel43);
        retrofit.client.Client.Provider provider46 = null;
        builder38.clientProvider = provider46;
        retrofit.ErrorHandler errorHandler48 = builder38.errorHandler;
        retrofit.Server server49 = builder38.server;
        java.util.concurrent.Executor executor50 = builder38.httpExecutor;
        restAdapter20.callbackExecutor = executor50;
        restAdapter0.callbackExecutor = executor50;
        retrofit.Profiler profiler53 = null;
        restAdapter0.profiler = profiler53;
        java.util.concurrent.Executor executor55 = restAdapter0.httpExecutor;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter56.logLevel = logLevel58;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter60.logLevel = logLevel62;
        retrofit.ErrorHandler errorHandler64 = null;
        restAdapter60.errorHandler = errorHandler64;
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter60.logLevel;
        restAdapter56.logLevel = logLevel66;
        java.util.concurrent.Executor executor68 = restAdapter56.httpExecutor;
        retrofit.converter.Converter converter69 = null;
        restAdapter56.converter = converter69;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder74 = builder71.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter75.new RestHandler();
        retrofit.RestAdapter.Log log78 = restAdapter75.log;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter75.logLevel = logLevel79;
        retrofit.RestAdapter.Builder builder81 = builder74.setLogLevel(logLevel79);
        retrofit.client.Client.Provider provider82 = null;
        builder74.clientProvider = provider82;
        retrofit.ErrorHandler errorHandler84 = builder74.errorHandler;
        retrofit.Server server85 = builder74.server;
        java.util.concurrent.Executor executor86 = builder74.httpExecutor;
        restAdapter56.callbackExecutor = executor86;
        restAdapter0.callbackExecutor = executor86;
        retrofit.converter.Converter converter89 = restAdapter0.converter;
        retrofit.client.Client.Provider provider90 = restAdapter0.clientProvider;
        retrofit.client.Request request91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request92 = restAdapter0.logAndReplaceRequest(request91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor19);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(logLevel76);
        org.junit.Assert.assertNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(errorHandler84);
        org.junit.Assert.assertNotNull(server85);
        org.junit.Assert.assertNotNull(executor86);
        org.junit.Assert.assertNull(converter89);
        org.junit.Assert.assertNull(provider90);
    }

    @Test
    public void test07833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07833");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.Server server7 = restAdapter6.server;
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter6.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.client.Client.Provider provider22 = builder21.clientProvider;
        restAdapter6.clientProvider = provider22;
        restAdapter0.clientProvider = provider22;
        retrofit.ErrorHandler errorHandler25 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter26 = restAdapter0.converter;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter28.new RestHandler();
        retrofit.RestAdapter.Log log31 = restAdapter28.log;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter28.logLevel = logLevel32;
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter43.logLevel = logLevel45;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel45);
        restAdapter28.log = log42;
        builder27.log = log42;
        restAdapter0.log = log42;
        retrofit.converter.Converter converter51 = null;
        restAdapter0.converter = converter51;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNull(converter26);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test07834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07834");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = null;
        builder17.clientProvider = provider25;
        retrofit.ErrorHandler errorHandler27 = builder17.errorHandler;
        retrofit.Server server28 = builder17.server;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider40 = builder39.clientProvider;
        retrofit.RestAdapter.Builder builder41 = builder17.setClient(provider40);
        builder3.clientProvider = provider40;
        retrofit.ErrorHandler errorHandler43 = builder3.errorHandler;
        retrofit.RestAdapter restAdapter44 = builder3.build();
        retrofit.RestAdapter.Builder builder46 = builder3.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.ErrorHandler errorHandler49 = null;
        restAdapter47.errorHandler = errorHandler49;
        retrofit.Profiler profiler51 = restAdapter47.profiler;
        retrofit.RequestInterceptor requestInterceptor52 = restAdapter47.requestInterceptor;
        retrofit.ErrorHandler errorHandler53 = restAdapter47.errorHandler;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.Log log61 = restAdapter58.log;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        builder64.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor66 = builder64.requestInterceptor;
        retrofit.client.Client.Provider provider67 = builder64.clientProvider;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        builder68.ensureSaneDefaults();
        java.util.concurrent.Executor executor70 = builder68.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor71 = builder68.requestInterceptor;
        retrofit.RestAdapter.Builder builder72 = builder64.setRequestInterceptor(requestInterceptor71);
        restAdapter47.requestInterceptor = requestInterceptor71;
        retrofit.RestAdapter.Builder builder74 = builder46.setRequestInterceptor(requestInterceptor71);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertNull(requestInterceptor52);
        org.junit.Assert.assertNull(errorHandler53);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertNotNull(provider67);
        org.junit.Assert.assertNotNull(executor70);
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test07835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07835");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter restAdapter11 = builder3.build();
        retrofit.converter.Converter converter12 = builder3.converter;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider14 = null;
        builder13.clientProvider = provider14;
        retrofit.RestAdapter.Builder builder17 = builder13.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log18 = builder17.log;
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter20.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter20.logLevel = logLevel22;
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter20.new RestHandler();
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel51);
        restAdapter34.log = log48;
        builder33.log = log48;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel67);
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log48, logLevel67);
        restAdapter20.setLogLevel(logLevel67);
        boolean boolean72 = logLevel67.log();
        retrofit.RestAdapter.Builder builder73 = builder17.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder74 = builder3.setLogLevel(logLevel67);
        retrofit.RestAdapter restAdapter75 = builder3.build();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.logLevel;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(restAdapter11);
        org.junit.Assert.assertNotNull(converter12);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test07836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07836");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter9.logLevel = logLevel11;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel11);
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter13.new RestHandler();
        retrofit.converter.Converter converter15 = restAdapter13.converter;
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter13.requestInterceptor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = builder27.clientProvider;
        restAdapter13.clientProvider = provider28;
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter13.logLevel;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.converter.Converter converter37 = restAdapter31.converter;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder41 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log45 = restAdapter42.log;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter42.logLevel = logLevel46;
        retrofit.RestAdapter.Builder builder48 = builder41.setLogLevel(logLevel46);
        retrofit.client.Client.Provider provider49 = null;
        builder41.clientProvider = provider49;
        retrofit.ErrorHandler errorHandler51 = builder41.errorHandler;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder55 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter56.new RestHandler();
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter56.logLevel = logLevel60;
        retrofit.RestAdapter.Builder builder62 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider63 = null;
        builder55.clientProvider = provider63;
        retrofit.ErrorHandler errorHandler65 = builder55.errorHandler;
        retrofit.Server server66 = builder55.server;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.Log log74 = restAdapter71.log;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter71.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = builder70.setLogLevel(logLevel75);
        retrofit.client.Client.Provider provider78 = builder77.clientProvider;
        retrofit.RestAdapter.Builder builder79 = builder55.setClient(provider78);
        builder41.clientProvider = provider78;
        restAdapter31.clientProvider = provider78;
        restAdapter13.clientProvider = provider78;
        java.util.concurrent.Executor executor83 = restAdapter13.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter13.logLevel;
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(provider28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(provider78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(executor83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test07837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07837");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter5.logLevel;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter11.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider18 = null;
        builder10.clientProvider = provider18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder23 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.Log log27 = restAdapter24.log;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter24.logLevel = logLevel28;
        retrofit.RestAdapter.Builder builder30 = builder23.setLogLevel(logLevel28);
        retrofit.client.Client.Provider provider31 = null;
        builder23.clientProvider = provider31;
        retrofit.ErrorHandler errorHandler33 = builder23.errorHandler;
        retrofit.RestAdapter.Builder builder34 = builder10.setErrorHandler(errorHandler33);
        restAdapter5.errorHandler = errorHandler33;
        builder4.errorHandler = errorHandler33;
        retrofit.RestAdapter.Builder builder38 = builder4.setServer("hi!");
        retrofit.client.Client.Provider provider39 = builder38.clientProvider;
        retrofit.ErrorHandler errorHandler40 = builder38.errorHandler;
        retrofit.Server server41 = null;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.Log log53 = restAdapter50.log;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter50.logLevel = logLevel54;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel67);
        restAdapter50.log = log64;
        builder49.log = log64;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log64, logLevel72);
        builder38.log = log64;
        retrofit.RestAdapter.LogLevel logLevel75 = builder38.logLevel;
        retrofit.Profiler profiler76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder77 = builder38.setProfiler(profiler76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test07838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07838");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.Server server3 = restAdapter0.server;
        java.util.concurrent.Executor executor4 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter5.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter5.logLevel = logLevel7;
        retrofit.ErrorHandler errorHandler9 = null;
        restAdapter5.errorHandler = errorHandler9;
        retrofit.RequestInterceptor requestInterceptor11 = restAdapter5.requestInterceptor;
        retrofit.Profiler profiler12 = restAdapter5.profiler;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.Server server28 = builder20.server;
        restAdapter13.server = server28;
        restAdapter5.server = server28;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        java.util.concurrent.Executor executor42 = builder34.callbackExecutor;
        retrofit.Profiler profiler43 = null;
        builder34.profiler = profiler43;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder52 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.RestAdapter.Builder builder59 = builder52.setLogLevel(logLevel57);
        java.util.concurrent.Executor executor60 = builder52.callbackExecutor;
        restAdapter45.callbackExecutor = executor60;
        builder34.callbackExecutor = executor60;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler65 = restAdapter63.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.Log log74 = restAdapter71.log;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter71.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = builder70.setLogLevel(logLevel75);
        java.util.concurrent.Executor executor78 = builder70.callbackExecutor;
        restAdapter63.callbackExecutor = executor78;
        builder34.httpExecutor = executor78;
        java.util.concurrent.Executor executor81 = builder34.callbackExecutor;
        restAdapter5.callbackExecutor = executor81;
        restAdapter0.callbackExecutor = executor81;
        retrofit.Profiler profiler84 = null;
        restAdapter0.profiler = profiler84;
        retrofit.RequestInterceptor requestInterceptor86 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Log log87 = restAdapter0.log;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNull(requestInterceptor86);
        org.junit.Assert.assertNull(log87);
    }

    @Test
    public void test07839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07839");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter9.logLevel = logLevel11;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel11);
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter13.new RestHandler();
        retrofit.converter.Converter converter15 = restAdapter13.converter;
        retrofit.Profiler profiler16 = restAdapter13.profiler;
        retrofit.Server server17 = null;
        restAdapter13.server = server17;
        retrofit.Server server19 = restAdapter13.server;
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNull(server19);
    }

    @Test
    public void test07840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07840");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        java.util.concurrent.Executor executor5 = builder3.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor6 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = builder0.setRequestInterceptor(requestInterceptor6);
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.client.Client.Provider provider20 = null;
        builder12.clientProvider = provider20;
        retrofit.ErrorHandler errorHandler22 = builder12.errorHandler;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        retrofit.RestAdapter.Builder builder35 = builder12.setServer(server34);
        retrofit.converter.Converter converter36 = builder35.converter;
        java.util.concurrent.Executor executor37 = builder35.callbackExecutor;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder41 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log45 = restAdapter42.log;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter42.logLevel = logLevel46;
        retrofit.RestAdapter.Builder builder48 = builder41.setLogLevel(logLevel46);
        java.util.concurrent.Executor executor49 = builder41.callbackExecutor;
        retrofit.Profiler profiler50 = null;
        builder41.profiler = profiler50;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder59 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter60.new RestHandler();
        retrofit.RestAdapter.Log log63 = restAdapter60.log;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter60.logLevel = logLevel64;
        retrofit.RestAdapter.Builder builder66 = builder59.setLogLevel(logLevel64);
        java.util.concurrent.Executor executor67 = builder59.callbackExecutor;
        restAdapter52.callbackExecutor = executor67;
        builder41.callbackExecutor = executor67;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder77 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter78.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler80 = restAdapter78.new RestHandler();
        retrofit.RestAdapter.Log log81 = restAdapter78.log;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter78.logLevel = logLevel82;
        retrofit.RestAdapter.Builder builder84 = builder77.setLogLevel(logLevel82);
        java.util.concurrent.Executor executor85 = builder77.callbackExecutor;
        restAdapter70.callbackExecutor = executor85;
        builder41.httpExecutor = executor85;
        retrofit.Server server88 = builder41.server;
        retrofit.RestAdapter restAdapter89 = builder41.build();
        retrofit.ErrorHandler errorHandler90 = builder41.errorHandler;
        builder35.errorHandler = errorHandler90;
        retrofit.client.Client.Provider provider92 = builder35.clientProvider;
        retrofit.RequestInterceptor requestInterceptor93 = builder35.requestInterceptor;
        builder7.requestInterceptor = requestInterceptor93;
        retrofit.converter.Converter converter95 = builder7.converter;
        retrofit.RestAdapter.LogLevel logLevel96 = builder7.logLevel;
        retrofit.converter.Converter converter97 = null;
        builder7.converter = converter97;
        org.junit.Assert.assertNotNull(errorHandler2);
        org.junit.Assert.assertNotNull(executor5);
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(errorHandler22);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(converter36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNull(log63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(logLevel73);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(logLevel79);
        org.junit.Assert.assertNull(log81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(server88);
        org.junit.Assert.assertNotNull(restAdapter89);
        org.junit.Assert.assertNotNull(errorHandler90);
        org.junit.Assert.assertNull(provider92);
        org.junit.Assert.assertNotNull(requestInterceptor93);
        org.junit.Assert.assertNotNull(converter95);
        org.junit.Assert.assertTrue("'" + logLevel96 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel96.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test07841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07841");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.Server server5 = null;
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        retrofit.converter.Converter converter10 = null;
        retrofit.Profiler profiler11 = null;
        retrofit.ErrorHandler errorHandler12 = null;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter14.logLevel = logLevel18;
        retrofit.Server server20 = null;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter29.logLevel = logLevel31;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log28, logLevel31);
        restAdapter14.log = log28;
        builder13.log = log28;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter45.logLevel = logLevel47;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel47);
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor9, converter10, profiler11, errorHandler12, log28, logLevel47);
        restAdapter0.setLogLevel(logLevel47);
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.Log log54 = restAdapter52.log;
        java.util.concurrent.Executor executor55 = restAdapter52.httpExecutor;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel67);
        restAdapter52.log = log64;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder74 = builder71.setServer("hi!");
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter75.new RestHandler();
        retrofit.RestAdapter.Log log78 = restAdapter75.log;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter75.logLevel = logLevel79;
        retrofit.RestAdapter.Builder builder81 = builder74.setLogLevel(logLevel79);
        java.util.concurrent.Executor executor82 = builder74.callbackExecutor;
        restAdapter52.callbackExecutor = executor82;
        restAdapter0.callbackExecutor = executor82;
        retrofit.Profiler profiler85 = null;
        restAdapter0.profiler = profiler85;
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter0.getLogLevel();
        java.util.concurrent.Executor executor88 = restAdapter0.callbackExecutor;
        retrofit.Profiler profiler89 = restAdapter0.profiler;
        retrofit.Server server90 = restAdapter0.server;
        retrofit.RestAdapter.RestHandler restHandler91 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(logLevel76);
        org.junit.Assert.assertNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(executor82);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor88);
        org.junit.Assert.assertNull(profiler89);
        org.junit.Assert.assertNull(server90);
    }

    @Test
    public void test07842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07842");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter9.logLevel = logLevel11;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel11);
        retrofit.Profiler profiler14 = restAdapter13.profiler;
        java.util.concurrent.Executor executor15 = restAdapter13.httpExecutor;
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(executor15);
    }

    @Test
    public void test07843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07843");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.Server server3 = restAdapter0.server;
        java.util.concurrent.Executor executor4 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter5.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter5.logLevel = logLevel7;
        retrofit.ErrorHandler errorHandler9 = null;
        restAdapter5.errorHandler = errorHandler9;
        retrofit.RequestInterceptor requestInterceptor11 = restAdapter5.requestInterceptor;
        retrofit.Profiler profiler12 = restAdapter5.profiler;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.Server server28 = builder20.server;
        restAdapter13.server = server28;
        restAdapter5.server = server28;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        java.util.concurrent.Executor executor42 = builder34.callbackExecutor;
        retrofit.Profiler profiler43 = null;
        builder34.profiler = profiler43;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder52 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.RestAdapter.Builder builder59 = builder52.setLogLevel(logLevel57);
        java.util.concurrent.Executor executor60 = builder52.callbackExecutor;
        restAdapter45.callbackExecutor = executor60;
        builder34.callbackExecutor = executor60;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler65 = restAdapter63.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.Log log74 = restAdapter71.log;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter71.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = builder70.setLogLevel(logLevel75);
        java.util.concurrent.Executor executor78 = builder70.callbackExecutor;
        restAdapter63.callbackExecutor = executor78;
        builder34.httpExecutor = executor78;
        java.util.concurrent.Executor executor81 = builder34.callbackExecutor;
        restAdapter5.callbackExecutor = executor81;
        restAdapter0.callbackExecutor = executor81;
        retrofit.Server server84 = restAdapter0.server;
        retrofit.ErrorHandler errorHandler85 = null;
        restAdapter0.errorHandler = errorHandler85;
        retrofit.ErrorHandler errorHandler87 = restAdapter0.errorHandler;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNull(server84);
        org.junit.Assert.assertNull(errorHandler87);
    }

    @Test
    public void test07844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07844");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.converter.Converter converter6 = null;
        builder0.converter = converter6;
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.RestAdapter restAdapter9 = builder0.build();
        retrofit.Server server10 = restAdapter9.server;
        java.util.concurrent.Executor executor11 = restAdapter9.callbackExecutor;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder19 = builder16.setServer("hi!");
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter20.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.Log log23 = restAdapter20.log;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter20.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = builder19.setLogLevel(logLevel24);
        retrofit.Server server27 = builder19.server;
        restAdapter12.server = server27;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter12.getLogLevel();
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.Log log32 = restAdapter30.log;
        java.util.concurrent.Executor executor33 = restAdapter30.httpExecutor;
        retrofit.Server server34 = null;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter43.logLevel = logLevel45;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel45);
        restAdapter30.log = log42;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter30.requestInterceptor;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter50.logLevel = logLevel52;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter54.logLevel = logLevel56;
        retrofit.ErrorHandler errorHandler58 = null;
        restAdapter54.errorHandler = errorHandler58;
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter54.logLevel;
        restAdapter50.logLevel = logLevel60;
        java.util.concurrent.Executor executor62 = restAdapter50.httpExecutor;
        retrofit.converter.Converter converter63 = null;
        restAdapter50.converter = converter63;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder68 = builder65.setServer("hi!");
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter69.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler71 = restAdapter69.new RestHandler();
        retrofit.RestAdapter.Log log72 = restAdapter69.log;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter69.logLevel = logLevel73;
        retrofit.RestAdapter.Builder builder75 = builder68.setLogLevel(logLevel73);
        retrofit.client.Client.Provider provider76 = null;
        builder68.clientProvider = provider76;
        retrofit.ErrorHandler errorHandler78 = builder68.errorHandler;
        retrofit.Server server79 = builder68.server;
        java.util.concurrent.Executor executor80 = builder68.httpExecutor;
        restAdapter50.callbackExecutor = executor80;
        restAdapter30.callbackExecutor = executor80;
        restAdapter12.httpExecutor = executor80;
        restAdapter9.httpExecutor = executor80;
        retrofit.RestAdapter.LogLevel logLevel85 = restAdapter9.getLogLevel();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertNotNull(server10);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor49);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor62);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(logLevel70);
        org.junit.Assert.assertNull(log72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(errorHandler78);
        org.junit.Assert.assertNotNull(server79);
        org.junit.Assert.assertNotNull(executor80);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test07845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07845");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter15.new RestHandler();
        retrofit.RestAdapter.Log log18 = restAdapter15.log;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter15.logLevel = logLevel19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel32);
        restAdapter15.log = log29;
        builder14.log = log29;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log29, logLevel37);
        log29.log("hi!");
        builder5.log = log29;
        retrofit.Profiler profiler42 = builder5.profiler;
        retrofit.Server server43 = builder5.server;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNotNull(server43);
    }

    @Test
    public void test07846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07846");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.Profiler profiler2 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider4 = null;
        builder3.clientProvider = provider4;
        retrofit.RestAdapter.Builder builder7 = builder3.setServer("Retrofit-Idle");
        retrofit.Server server8 = builder3.server;
        restAdapter0.server = server8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder13 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter14.logLevel = logLevel18;
        retrofit.RestAdapter.Builder builder20 = builder13.setLogLevel(logLevel18);
        retrofit.client.Client.Provider provider21 = null;
        builder13.clientProvider = provider21;
        retrofit.ErrorHandler errorHandler23 = builder13.errorHandler;
        retrofit.Server server24 = builder13.server;
        restAdapter0.server = server24;
        retrofit.ErrorHandler errorHandler26 = restAdapter0.errorHandler;
        retrofit.ErrorHandler errorHandler27 = restAdapter0.errorHandler;
        retrofit.Profiler profiler28 = restAdapter0.profiler;
        java.util.concurrent.Executor executor29 = restAdapter0.callbackExecutor;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNull(errorHandler26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(executor29);
    }

    @Test
    public void test07847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07847");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.Server server22 = null;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter31.logLevel = logLevel33;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel33);
        restAdapter16.log = log30;
        builder15.log = log30;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter47.logLevel = logLevel49;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel49);
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log30, logLevel49);
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.Server server55 = restAdapter52.server;
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter52.logLevel;
        restAdapter0.setLogLevel(logLevel56);
        java.util.concurrent.Executor executor58 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler59 = restAdapter0.profiler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor58);
        org.junit.Assert.assertNull(profiler59);
    }

    @Test
    public void test07848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07848");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter15.logLevel = logLevel17;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel17);
        restAdapter0.log = log14;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter21.logLevel = logLevel23;
        retrofit.ErrorHandler errorHandler25 = null;
        restAdapter21.errorHandler = errorHandler25;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.Server server28 = restAdapter27.server;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder33 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.RestAdapter.Builder builder40 = builder33.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.client.Client.Provider provider43 = builder42.clientProvider;
        restAdapter27.clientProvider = provider43;
        restAdapter21.clientProvider = provider43;
        restAdapter0.clientProvider = provider43;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter0.logLevel = logLevel47;
        retrofit.Profiler profiler49 = null;
        restAdapter0.profiler = profiler49;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.logLevel;
        retrofit.Profiler profiler53 = null;
        restAdapter51.profiler = profiler53;
        java.util.concurrent.Executor executor55 = restAdapter51.httpExecutor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Log log60 = restAdapter57.log;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter57.logLevel = logLevel61;
        retrofit.Server server63 = null;
        retrofit.client.Client.Provider provider64 = null;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.converter.Converter converter68 = null;
        retrofit.Profiler profiler69 = null;
        retrofit.ErrorHandler errorHandler70 = null;
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter72.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter72.logLevel = logLevel74;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server63, provider64, executor65, executor66, requestInterceptor67, converter68, profiler69, errorHandler70, log71, logLevel74);
        restAdapter57.log = log71;
        builder56.log = log71;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder82 = builder79.setServer("hi!");
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter83.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler85 = restAdapter83.new RestHandler();
        retrofit.RestAdapter.Log log86 = restAdapter83.log;
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter83.logLevel = logLevel87;
        retrofit.RestAdapter.Builder builder89 = builder82.setLogLevel(logLevel87);
        retrofit.Server server90 = builder82.server;
        builder56.server = server90;
        retrofit.RestAdapter.LogLevel logLevel92 = builder56.logLevel;
        restAdapter51.logLevel = logLevel92;
        retrofit.Profiler profiler94 = restAdapter51.profiler;
        java.util.concurrent.Executor executor95 = restAdapter51.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel96 = restAdapter51.logLevel;
        restAdapter0.logLevel = logLevel96;
        retrofit.RequestInterceptor requestInterceptor98 = restAdapter0.requestInterceptor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(provider43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNull(logLevel73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(logLevel84);
        org.junit.Assert.assertNull(log86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(server90);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler94);
        org.junit.Assert.assertNull(executor95);
        org.junit.Assert.assertTrue("'" + logLevel96 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel96.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor98);
    }

    @Test
    public void test07849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07849");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider13 = builder12.clientProvider;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter14.logLevel = logLevel16;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        restAdapter14.requestInterceptor = requestInterceptor18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.Server server54 = builder46.server;
        builder20.server = server54;
        restAdapter14.server = server54;
        retrofit.RestAdapter.Builder builder57 = builder12.setServer(server54);
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.Profiler profiler59 = restAdapter58.profiler;
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.converter.Converter converter61 = restAdapter58.converter;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder66 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = builder66.build();
        retrofit.Server server68 = restAdapter67.server;
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(profiler59);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(restAdapter67);
        org.junit.Assert.assertNotNull(server68);
        org.junit.Assert.assertNotNull(log70);
    }

    @Test
    public void test07850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07850");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        builder2.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder5 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter6.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.Log log9 = restAdapter6.log;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter6.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = builder5.setLogLevel(logLevel10);
        retrofit.client.Client.Provider provider13 = null;
        builder5.clientProvider = provider13;
        retrofit.ErrorHandler errorHandler15 = builder5.errorHandler;
        restAdapter0.errorHandler = errorHandler15;
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log29 = restAdapter26.log;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.logLevel = logLevel30;
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter41.logLevel = logLevel43;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel43);
        restAdapter26.log = log40;
        builder25.log = log40;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log40, logLevel48);
        restAdapter0.logLevel = logLevel48;
        retrofit.Profiler profiler51 = null;
        restAdapter0.profiler = profiler51;
        retrofit.Profiler profiler53 = restAdapter0.profiler;
        retrofit.client.Client.Provider provider54 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter0.logLevel;
        retrofit.RequestInterceptor requestInterceptor57 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler59 = null;
        restAdapter0.profiler = profiler59;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.converter.Converter converter67 = restAdapter61.converter;
        java.util.concurrent.Executor executor68 = restAdapter61.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter61.getLogLevel();
        restAdapter0.setLogLevel(logLevel69);
        java.util.concurrent.Executor executor71 = restAdapter0.callbackExecutor;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(requestInterceptor57);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter67);
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor71);
    }

    @Test
    public void test07851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07851");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.RestAdapter.Log log27 = builder26.log;
        retrofit.client.Client.Provider provider28 = builder26.clientProvider;
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter30.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder37 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter38.new RestHandler();
        retrofit.RestAdapter.Log log41 = restAdapter38.log;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter38.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder37.setLogLevel(logLevel42);
        java.util.concurrent.Executor executor45 = builder37.callbackExecutor;
        restAdapter30.callbackExecutor = executor45;
        java.util.concurrent.Executor executor47 = restAdapter30.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter30.getLogLevel();
        java.util.concurrent.Executor executor49 = restAdapter30.callbackExecutor;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter54.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider61 = null;
        builder53.clientProvider = provider61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter67.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider74 = null;
        builder66.clientProvider = provider74;
        retrofit.ErrorHandler errorHandler76 = builder66.errorHandler;
        retrofit.RestAdapter.Builder builder77 = builder53.setErrorHandler(errorHandler76);
        retrofit.RestAdapter restAdapter78 = builder77.build();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter78.getLogLevel();
        retrofit.converter.Converter converter80 = restAdapter78.converter;
        restAdapter30.converter = converter80;
        retrofit.RestAdapter.Builder builder82 = builder26.setConverter(converter80);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(errorHandler76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(restAdapter78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter80);
        org.junit.Assert.assertNotNull(builder82);
    }

    @Test
    public void test07852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07852");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.Profiler profiler5 = restAdapter0.profiler;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.RestAdapter.Log log7 = restAdapter0.log;
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.Profiler profiler9 = restAdapter8.profiler;
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.Server server11 = restAdapter8.server;
        java.util.concurrent.Executor executor12 = restAdapter8.callbackExecutor;
        retrofit.Profiler profiler13 = restAdapter8.profiler;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter8.logLevel;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider16 = null;
        builder15.clientProvider = provider16;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.Server server19 = restAdapter18.server;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter18.requestInterceptor;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("hi!");
        retrofit.client.Client.Provider provider34 = builder33.clientProvider;
        restAdapter18.clientProvider = provider34;
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter18.new RestHandler();
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.ErrorHandler errorHandler39 = null;
        restAdapter37.errorHandler = errorHandler39;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.Server server42 = restAdapter41.server;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.Log log55 = restAdapter52.log;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter52.logLevel = logLevel56;
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter67.logLevel = logLevel69;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel69);
        restAdapter52.log = log66;
        builder51.log = log66;
        retrofit.Server server74 = null;
        retrofit.client.Client.Provider provider75 = null;
        java.util.concurrent.Executor executor76 = null;
        java.util.concurrent.Executor executor77 = null;
        retrofit.RequestInterceptor requestInterceptor78 = null;
        retrofit.converter.Converter converter79 = null;
        retrofit.Profiler profiler80 = null;
        retrofit.ErrorHandler errorHandler81 = null;
        retrofit.RestAdapter.Log log82 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter83.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter83.logLevel = logLevel85;
        retrofit.RestAdapter restAdapter87 = new retrofit.RestAdapter(server74, provider75, executor76, executor77, requestInterceptor78, converter79, profiler80, errorHandler81, log82, logLevel85);
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log66, logLevel85);
        restAdapter41.log = log66;
        restAdapter37.log = log66;
        restAdapter18.log = log66;
        retrofit.RestAdapter.Builder builder92 = builder15.setLog(log66);
        log66.log("");
        restAdapter8.log = log66;
        restAdapter0.log = log66;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertNull(requestInterceptor20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(provider34);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNull(logLevel84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test07853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07853");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.logLevel;
        retrofit.Profiler profiler2 = null;
        restAdapter0.profiler = profiler2;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.Profiler profiler5 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder9 = builder6.setServer("hi!");
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Log log13 = restAdapter10.log;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.logLevel = logLevel14;
        retrofit.RestAdapter.Builder builder16 = builder9.setLogLevel(logLevel14);
        retrofit.client.Client.Provider provider17 = builder16.clientProvider;
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter42.logLevel = logLevel44;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel44);
        restAdapter27.log = log41;
        builder26.log = log41;
        retrofit.Server server49 = null;
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter58.logLevel = logLevel60;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log57, logLevel60);
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log41, logLevel60);
        retrofit.RestAdapter.Builder builder64 = builder16.setLog(log41);
        retrofit.RestAdapter restAdapter65 = builder16.build();
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder69 = builder66.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.Log log73 = restAdapter70.log;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter70.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder69.setLogLevel(logLevel74);
        retrofit.client.Client.Provider provider77 = null;
        builder69.clientProvider = provider77;
        retrofit.RequestInterceptor requestInterceptor79 = builder69.requestInterceptor;
        retrofit.RestAdapter.Builder builder80 = builder16.setRequestInterceptor(requestInterceptor79);
        retrofit.ErrorHandler errorHandler81 = builder16.errorHandler;
        restAdapter0.errorHandler = errorHandler81;
        retrofit.Profiler profiler83 = null;
        restAdapter0.profiler = profiler83;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(errorHandler81);
    }

    @Test
    public void test07854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07854");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        java.util.concurrent.Executor executor15 = restAdapter14.callbackExecutor;
        retrofit.converter.Converter converter16 = restAdapter14.converter;
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor19 = builder18.callbackExecutor;
        retrofit.Profiler profiler20 = null;
        builder18.profiler = profiler20;
        retrofit.RestAdapter.Log log22 = builder18.log;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        java.util.concurrent.Executor executor34 = builder26.callbackExecutor;
        builder18.httpExecutor = executor34;
        restAdapter14.httpExecutor = executor34;
        java.util.concurrent.Executor executor37 = restAdapter14.httpExecutor;
        java.util.concurrent.Executor executor38 = restAdapter14.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor39 = restAdapter14.requestInterceptor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(converter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNotNull(requestInterceptor39);
    }

    @Test
    public void test07855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07855");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        java.util.concurrent.Executor executor3 = restAdapter0.httpExecutor;
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter4.logLevel = logLevel6;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.client.Client.Provider provider20 = null;
        builder12.clientProvider = provider20;
        retrofit.Server server22 = null;
        builder12.server = server22;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.Log log26 = restAdapter24.log;
        java.util.concurrent.Executor executor27 = restAdapter24.httpExecutor;
        retrofit.Server server28 = null;
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.converter.Converter converter33 = null;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter37.logLevel = logLevel39;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor32, converter33, profiler34, errorHandler35, log36, logLevel39);
        restAdapter24.log = log36;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        java.util.concurrent.Executor executor54 = builder46.callbackExecutor;
        restAdapter24.callbackExecutor = executor54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder59 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter60.new RestHandler();
        retrofit.RestAdapter.Log log63 = restAdapter60.log;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter60.logLevel = logLevel64;
        retrofit.RestAdapter.Builder builder66 = builder59.setLogLevel(logLevel64);
        java.util.concurrent.Executor executor67 = builder59.callbackExecutor;
        retrofit.Profiler profiler68 = null;
        builder59.profiler = profiler68;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder77 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter78.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler80 = restAdapter78.new RestHandler();
        retrofit.RestAdapter.Log log81 = restAdapter78.log;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter78.logLevel = logLevel82;
        retrofit.RestAdapter.Builder builder84 = builder77.setLogLevel(logLevel82);
        java.util.concurrent.Executor executor85 = builder77.callbackExecutor;
        restAdapter70.callbackExecutor = executor85;
        builder59.callbackExecutor = executor85;
        retrofit.RestAdapter.Builder builder88 = builder12.setExecutors(executor54, executor85);
        restAdapter4.httpExecutor = executor85;
        restAdapter0.httpExecutor = executor85;
        retrofit.RestAdapter.LogLevel logLevel91 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder92 = new retrofit.RestAdapter.Builder();
        builder92.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder95 = builder92.setServer("hi!");
        builder92.ensureSaneDefaults();
        java.util.concurrent.Executor executor97 = builder92.httpExecutor;
        restAdapter0.callbackExecutor = executor97;
        java.util.concurrent.Executor executor99 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNull(log63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(logLevel73);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(logLevel79);
        org.junit.Assert.assertNull(log81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(logLevel91);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(executor97);
        org.junit.Assert.assertNotNull(executor99);
    }

    @Test
    public void test07856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07856");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider38 = null;
        builder30.clientProvider = provider38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.ErrorHandler errorHandler53 = builder43.errorHandler;
        retrofit.RestAdapter.Builder builder54 = builder30.setErrorHandler(errorHandler53);
        java.util.concurrent.Executor executor55 = builder54.httpExecutor;
        builder26.httpExecutor = executor55;
        java.util.concurrent.Executor executor57 = builder26.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel58 = builder26.logLevel;
        retrofit.client.Client.Provider provider59 = builder26.clientProvider;
        retrofit.RestAdapter restAdapter60 = builder26.build();
        retrofit.ErrorHandler errorHandler61 = builder26.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel62 = builder26.logLevel;
        java.util.concurrent.Executor executor63 = builder26.callbackExecutor;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        retrofit.RestAdapter.Builder builder66 = builder26.setLogLevel(logLevel65);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(executor57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(restAdapter60);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
    }

    @Test
    public void test07857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07857");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.Server server14 = builder3.server;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        retrofit.Server server26 = builder18.server;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.Log log29 = restAdapter27.log;
        java.util.concurrent.Executor executor30 = restAdapter27.httpExecutor;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel42);
        restAdapter27.log = log39;
        builder18.log = log39;
        retrofit.RestAdapter.Builder builder47 = builder3.setLog(log39);
        retrofit.converter.Converter converter48 = builder3.converter;
        retrofit.Profiler profiler49 = null;
        builder3.profiler = profiler49;
        java.util.concurrent.Executor executor51 = builder3.httpExecutor;
        java.util.concurrent.Executor executor52 = builder3.callbackExecutor;
        retrofit.RestAdapter.Log log53 = builder3.log;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(converter48);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNotNull(log53);
    }

    @Test
    public void test07858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07858");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        builder4.ensureSaneDefaults();
        retrofit.Profiler profiler7 = builder4.profiler;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider19 = null;
        builder11.clientProvider = provider19;
        retrofit.ErrorHandler errorHandler21 = builder11.errorHandler;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder25 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log29 = restAdapter26.log;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.logLevel = logLevel30;
        retrofit.RestAdapter.Builder builder32 = builder25.setLogLevel(logLevel30);
        retrofit.Server server33 = builder25.server;
        retrofit.RestAdapter.Builder builder34 = builder11.setServer(server33);
        retrofit.converter.Converter converter35 = builder34.converter;
        java.util.concurrent.Executor executor36 = builder34.callbackExecutor;
        retrofit.client.Client.Provider provider37 = builder34.clientProvider;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder34.setLog(log38);
        log38.log("Retrofit-Idle");
        log38.log("hi!");
        retrofit.RestAdapter.Builder builder44 = builder4.setLog(log38);
        builder4.ensureSaneDefaults();
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(converter35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test07859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07859");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter24.logLevel = logLevel26;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel26);
        restAdapter9.log = log23;
        builder8.log = log23;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log23, logLevel31);
        retrofit.RestAdapter.Log log33 = restAdapter32.log;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter34.getLogLevel();
        retrofit.Profiler profiler38 = null;
        restAdapter34.profiler = profiler38;
        retrofit.Server server40 = restAdapter34.server;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.FULL;
        boolean boolean42 = logLevel41.log();
        restAdapter34.logLevel = logLevel41;
        restAdapter32.logLevel = logLevel41;
        retrofit.client.Client.Provider provider45 = restAdapter32.clientProvider;
        retrofit.Profiler profiler46 = null;
        restAdapter32.profiler = profiler46;
        retrofit.RequestInterceptor requestInterceptor48 = restAdapter32.requestInterceptor;
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNull(requestInterceptor48);
    }

    @Test
    public void test07860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07860");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.ErrorHandler errorHandler12 = builder10.errorHandler;
        retrofit.Server server13 = builder10.server;
        retrofit.RestAdapter.Log log14 = builder10.log;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter15.logLevel = logLevel17;
        retrofit.ErrorHandler errorHandler19 = null;
        restAdapter15.errorHandler = errorHandler19;
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter15.logLevel;
        retrofit.Profiler profiler22 = null;
        restAdapter15.profiler = profiler22;
        retrofit.ErrorHandler errorHandler24 = restAdapter15.errorHandler;
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter15.requestInterceptor;
        retrofit.RestAdapter.Log log26 = restAdapter15.log;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider38 = null;
        builder30.clientProvider = provider38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.ErrorHandler errorHandler53 = builder43.errorHandler;
        retrofit.RestAdapter.Builder builder54 = builder30.setErrorHandler(errorHandler53);
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter55.logLevel = logLevel57;
        retrofit.ErrorHandler errorHandler59 = null;
        restAdapter55.errorHandler = errorHandler59;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.Server server62 = restAdapter61.server;
        retrofit.RequestInterceptor requestInterceptor63 = restAdapter61.requestInterceptor;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder67 = builder64.setServer("hi!");
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler70 = restAdapter68.new RestHandler();
        retrofit.RestAdapter.Log log71 = restAdapter68.log;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter68.logLevel = logLevel72;
        retrofit.RestAdapter.Builder builder74 = builder67.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("hi!");
        retrofit.client.Client.Provider provider77 = builder76.clientProvider;
        restAdapter61.clientProvider = provider77;
        restAdapter55.clientProvider = provider77;
        retrofit.RestAdapter.Builder builder80 = builder54.setClient(provider77);
        retrofit.RestAdapter restAdapter81 = builder80.build();
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder85 = builder82.setServer("hi!");
        retrofit.Server server86 = builder85.server;
        retrofit.RestAdapter.Builder builder87 = builder80.setServer(server86);
        retrofit.ErrorHandler errorHandler88 = builder80.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel89 = builder80.logLevel;
        restAdapter15.logLevel = logLevel89;
        boolean boolean91 = logLevel89.log();
        builder10.logLevel = logLevel89;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(errorHandler12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(errorHandler24);
        org.junit.Assert.assertNull(requestInterceptor25);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server62);
        org.junit.Assert.assertNull(requestInterceptor63);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(provider77);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(restAdapter81);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(server86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test07861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07861");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.client.Client.Provider provider5 = restAdapter0.clientProvider;
        retrofit.Server server6 = restAdapter0.server;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.getLogLevel();
        retrofit.Server server8 = restAdapter0.server;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(server8);
    }

    @Test
    public void test07862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07862");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        java.util.concurrent.Executor executor8 = restAdapter0.callbackExecutor;
        java.util.concurrent.Executor executor9 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder13 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter14.logLevel = logLevel18;
        retrofit.RestAdapter.Builder builder20 = builder13.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("hi!");
        retrofit.RestAdapter.Log log23 = builder22.log;
        restAdapter0.log = log23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder28 = builder25.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.logLevel = logLevel33;
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel33);
        retrofit.client.Client.Provider provider36 = null;
        builder28.clientProvider = provider36;
        retrofit.RequestInterceptor requestInterceptor38 = builder28.requestInterceptor;
        retrofit.RestAdapter restAdapter39 = builder28.build();
        retrofit.Profiler profiler40 = builder28.profiler;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.Log log43 = restAdapter41.log;
        retrofit.ErrorHandler errorHandler44 = restAdapter41.errorHandler;
        retrofit.RequestInterceptor requestInterceptor45 = restAdapter41.requestInterceptor;
        retrofit.converter.Converter converter46 = null;
        restAdapter41.converter = converter46;
        retrofit.converter.Converter converter48 = restAdapter41.converter;
        retrofit.converter.Converter converter49 = null;
        restAdapter41.converter = converter49;
        java.util.concurrent.Executor executor51 = restAdapter41.httpExecutor;
        retrofit.RestAdapter.Log log52 = restAdapter41.log;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter53.logLevel = logLevel55;
        retrofit.ErrorHandler errorHandler57 = null;
        restAdapter53.errorHandler = errorHandler57;
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter53.logLevel;
        restAdapter41.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder28.setLogLevel(logLevel59);
        restAdapter0.logLevel = logLevel59;
        retrofit.RequestInterceptor requestInterceptor63 = restAdapter0.requestInterceptor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertNull(errorHandler44);
        org.junit.Assert.assertNull(requestInterceptor45);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(requestInterceptor63);
    }

    @Test
    public void test07863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07863");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        builder10.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor12 = builder10.requestInterceptor;
        retrofit.client.Client.Provider provider13 = builder10.clientProvider;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.logLevel;
        retrofit.Profiler profiler16 = null;
        restAdapter14.profiler = profiler16;
        retrofit.Profiler profiler18 = restAdapter14.profiler;
        retrofit.RestAdapter.Log log19 = restAdapter14.log;
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter14.getLogLevel();
        java.util.concurrent.Executor executor21 = restAdapter14.httpExecutor;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.ErrorHandler errorHandler24 = null;
        restAdapter22.errorHandler = errorHandler24;
        retrofit.Profiler profiler26 = restAdapter22.profiler;
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.logLevel = logLevel33;
        retrofit.Server server35 = null;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter44.logLevel = logLevel46;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel46);
        restAdapter29.log = log43;
        builder28.log = log43;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter55.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder54.setLogLevel(logLevel59);
        retrofit.Server server62 = builder54.server;
        builder28.server = server62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder67 = builder64.setServer("hi!");
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler70 = restAdapter68.new RestHandler();
        retrofit.RestAdapter.Log log71 = restAdapter68.log;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter68.logLevel = logLevel72;
        retrofit.RestAdapter.Builder builder74 = builder67.setLogLevel(logLevel72);
        retrofit.client.Client.Provider provider75 = null;
        builder67.clientProvider = provider75;
        retrofit.RequestInterceptor requestInterceptor77 = builder67.requestInterceptor;
        retrofit.RestAdapter.Builder builder78 = builder28.setRequestInterceptor(requestInterceptor77);
        retrofit.RequestInterceptor requestInterceptor79 = builder78.requestInterceptor;
        restAdapter22.requestInterceptor = requestInterceptor79;
        restAdapter14.requestInterceptor = requestInterceptor79;
        retrofit.RestAdapter.Builder builder82 = builder10.setRequestInterceptor(requestInterceptor79);
        retrofit.RequestInterceptor requestInterceptor83 = builder10.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel84 = builder10.logLevel;
        retrofit.client.Client client85 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder86 = builder10.setClient(client85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor12);
        org.junit.Assert.assertNotNull(provider13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(profiler18);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(requestInterceptor77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(requestInterceptor83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07864");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel54);
        retrofit.RestAdapter.Builder builder58 = builder10.setLog(log35);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider60 = null;
        builder59.clientProvider = provider60;
        retrofit.RestAdapter.Builder builder63 = builder59.setServer("Retrofit-Idle");
        retrofit.Server server64 = builder59.server;
        retrofit.RestAdapter.Builder builder65 = builder58.setServer(server64);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        builder66.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder69 = builder66.setServer("hi!");
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter70.new RestHandler();
        retrofit.RestAdapter.Log log73 = restAdapter70.log;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter70.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder69.setLogLevel(logLevel74);
        retrofit.client.Client.Provider provider77 = null;
        builder69.clientProvider = provider77;
        retrofit.RequestInterceptor requestInterceptor79 = builder69.requestInterceptor;
        retrofit.RestAdapter restAdapter80 = builder69.build();
        java.util.concurrent.Executor executor81 = restAdapter80.callbackExecutor;
        retrofit.converter.Converter converter82 = restAdapter80.converter;
        retrofit.RestAdapter.Log log83 = restAdapter80.log;
        builder58.log = log83;
        retrofit.RestAdapter restAdapter85 = builder58.build();
        retrofit.client.Client.Provider provider86 = restAdapter85.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter85.logLevel;
        retrofit.Profiler profiler88 = null;
        restAdapter85.profiler = profiler88;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(restAdapter80);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNotNull(converter82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(restAdapter85);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07865");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.Profiler profiler7 = restAdapter0.profiler;
        retrofit.Server server8 = restAdapter0.server;
        retrofit.converter.Converter converter9 = restAdapter0.converter;
        retrofit.RequestInterceptor requestInterceptor10 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        restAdapter0.log = log11;
        retrofit.Profiler profiler13 = null;
        restAdapter0.profiler = profiler13;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(log11);
    }

    @Test
    public void test07866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07866");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.converter.Converter converter7 = builder4.converter;
        java.util.concurrent.Executor executor8 = builder4.callbackExecutor;
        retrofit.ErrorHandler errorHandler9 = builder4.errorHandler;
        retrofit.RequestInterceptor requestInterceptor10 = builder4.requestInterceptor;
        java.util.concurrent.Executor executor11 = builder4.httpExecutor;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Log log13 = builder12.log;
        retrofit.Profiler profiler14 = builder12.profiler;
        retrofit.Profiler profiler15 = builder12.profiler;
        retrofit.Profiler profiler16 = builder12.profiler;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = null;
        builder20.clientProvider = provider28;
        retrofit.ErrorHandler errorHandler30 = builder20.errorHandler;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        retrofit.Server server42 = builder34.server;
        retrofit.RestAdapter.Builder builder43 = builder20.setServer(server42);
        retrofit.RestAdapter.Log log44 = builder43.log;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.Server server46 = restAdapter45.server;
        retrofit.RequestInterceptor requestInterceptor47 = restAdapter45.requestInterceptor;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder51 = builder48.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.Log log55 = restAdapter52.log;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter52.logLevel = logLevel56;
        retrofit.RestAdapter.Builder builder58 = builder51.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("hi!");
        retrofit.client.Client.Provider provider61 = builder60.clientProvider;
        restAdapter45.clientProvider = provider61;
        retrofit.RestAdapter.Builder builder63 = builder43.setClient(provider61);
        retrofit.client.Client.Provider provider64 = builder63.clientProvider;
        retrofit.RequestInterceptor requestInterceptor65 = builder63.requestInterceptor;
        retrofit.client.Client.Provider provider66 = builder63.clientProvider;
        retrofit.client.Client.Provider provider67 = builder63.clientProvider;
        builder12.clientProvider = provider67;
        builder4.clientProvider = provider67;
        java.util.concurrent.Executor executor70 = builder4.httpExecutor;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNull(requestInterceptor10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertNull(requestInterceptor47);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(provider61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(provider66);
        org.junit.Assert.assertNotNull(provider67);
        org.junit.Assert.assertNull(executor70);
    }

    @Test
    public void test07867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07867");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor6 = builder5.callbackExecutor;
        retrofit.Profiler profiler7 = null;
        builder5.profiler = profiler7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.Server server20 = builder12.server;
        builder5.server = server20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter38.logLevel = logLevel40;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel40);
        restAdapter23.log = log37;
        builder22.log = log37;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder48 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        retrofit.RestAdapter.Log log52 = restAdapter49.log;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter49.logLevel = logLevel53;
        retrofit.RestAdapter.Builder builder55 = builder48.setLogLevel(logLevel53);
        retrofit.Server server56 = builder48.server;
        builder22.server = server56;
        builder5.server = server56;
        retrofit.RestAdapter.Builder builder59 = builder4.setServer(server56);
        retrofit.RestAdapter restAdapter60 = builder4.build();
        retrofit.RestAdapter restAdapter61 = builder4.build();
        java.util.concurrent.Executor executor62 = builder4.httpExecutor;
        java.util.concurrent.Executor executor63 = builder4.httpExecutor;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(restAdapter60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(executor63);
    }

    @Test
    public void test07868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07868");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor28 = builder27.callbackExecutor;
        retrofit.Profiler profiler29 = null;
        builder27.profiler = profiler29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        retrofit.Server server42 = builder34.server;
        builder27.server = server42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.Log log48 = restAdapter45.log;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter45.logLevel = logLevel49;
        retrofit.Server server51 = null;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter60.logLevel = logLevel62;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel62);
        restAdapter45.log = log59;
        builder44.log = log59;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.Log log74 = restAdapter71.log;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter71.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = builder70.setLogLevel(logLevel75);
        retrofit.Server server78 = builder70.server;
        builder44.server = server78;
        builder27.server = server78;
        retrofit.RestAdapter.Builder builder81 = builder24.setServer(server78);
        retrofit.RestAdapter.Builder builder82 = builder3.setServer(server78);
        builder82.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter84 = builder82.build();
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter85.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler87 = restAdapter85.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter85.getLogLevel();
        retrofit.Profiler profiler89 = null;
        restAdapter85.profiler = profiler89;
        retrofit.Server server91 = restAdapter85.server;
        retrofit.RestAdapter.LogLevel logLevel92 = retrofit.RestAdapter.LogLevel.FULL;
        boolean boolean93 = logLevel92.log();
        restAdapter85.logLevel = logLevel92;
        boolean boolean95 = logLevel92.log();
        retrofit.RestAdapter.Builder builder96 = builder82.setLogLevel(logLevel92);
        retrofit.RestAdapter.Log log97 = builder82.log;
        java.util.concurrent.Executor executor98 = builder82.httpExecutor;
        retrofit.ErrorHandler errorHandler99 = builder82.errorHandler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(server78);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(restAdapter84);
        org.junit.Assert.assertNull(logLevel86);
        org.junit.Assert.assertNull(logLevel88);
        org.junit.Assert.assertNull(server91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNotNull(log97);
        org.junit.Assert.assertNotNull(executor98);
        org.junit.Assert.assertNotNull(errorHandler99);
    }

    @Test
    public void test07869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07869");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.converter.Converter converter7 = null;
        restAdapter0.converter = converter7;
        retrofit.converter.Converter converter9 = restAdapter0.converter;
        java.util.concurrent.Executor executor10 = restAdapter0.callbackExecutor;
        retrofit.Profiler profiler11 = null;
        restAdapter0.profiler = profiler11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        builder23.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor25 = builder23.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor25;
        retrofit.converter.Converter converter27 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor29 = restAdapter0.callbackExecutor;
        retrofit.Profiler profiler30 = restAdapter0.profiler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNull(profiler30);
    }

    @Test
    public void test07870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07870");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        java.util.concurrent.Executor executor5 = builder3.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor6 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = builder0.setRequestInterceptor(requestInterceptor6);
        retrofit.converter.Converter converter8 = builder0.converter;
        retrofit.RestAdapter.Builder builder10 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder14 = builder11.setServer("hi!");
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter15.new RestHandler();
        retrofit.RestAdapter.Log log18 = restAdapter15.log;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter15.logLevel = logLevel19;
        retrofit.RestAdapter.Builder builder21 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder31 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.Log log35 = restAdapter32.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter32.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = builder31.setLogLevel(logLevel36);
        java.util.concurrent.Executor executor39 = builder31.callbackExecutor;
        restAdapter24.callbackExecutor = executor39;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder48 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        retrofit.RestAdapter.Log log52 = restAdapter49.log;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter49.logLevel = logLevel53;
        retrofit.RestAdapter.Builder builder55 = builder48.setLogLevel(logLevel53);
        java.util.concurrent.Executor executor56 = builder48.callbackExecutor;
        restAdapter41.callbackExecutor = executor56;
        retrofit.RestAdapter.Builder builder58 = builder23.setExecutors(executor39, executor56);
        java.util.concurrent.Executor executor59 = builder58.httpExecutor;
        builder10.httpExecutor = executor59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.Log log68 = restAdapter65.log;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter65.logLevel = logLevel69;
        retrofit.RestAdapter.Builder builder71 = builder64.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider72 = null;
        builder64.clientProvider = provider72;
        retrofit.RequestInterceptor requestInterceptor74 = builder64.requestInterceptor;
        retrofit.RestAdapter restAdapter75 = builder64.build();
        java.util.concurrent.Executor executor76 = restAdapter75.callbackExecutor;
        retrofit.converter.Converter converter77 = restAdapter75.converter;
        retrofit.ErrorHandler errorHandler78 = restAdapter75.errorHandler;
        retrofit.RestAdapter.Builder builder79 = builder10.setErrorHandler(errorHandler78);
        java.util.concurrent.Executor executor80 = builder79.callbackExecutor;
        org.junit.Assert.assertNotNull(errorHandler2);
        org.junit.Assert.assertNotNull(executor5);
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(converter8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(requestInterceptor74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(converter77);
        org.junit.Assert.assertNotNull(errorHandler78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(executor80);
    }

    @Test
    public void test07871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07871");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        java.util.concurrent.Executor executor8 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.converter.Converter converter15 = restAdapter9.converter;
        java.util.concurrent.Executor executor16 = restAdapter9.callbackExecutor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = null;
        builder20.clientProvider = provider28;
        retrofit.RequestInterceptor requestInterceptor30 = builder20.requestInterceptor;
        retrofit.RestAdapter restAdapter31 = builder20.build();
        retrofit.ErrorHandler errorHandler32 = builder20.errorHandler;
        retrofit.converter.Converter converter33 = builder20.converter;
        restAdapter9.converter = converter33;
        restAdapter0.converter = converter33;
        retrofit.Profiler profiler36 = null;
        restAdapter0.profiler = profiler36;
        retrofit.Profiler profiler38 = null;
        restAdapter0.profiler = profiler38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder47 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter48.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder54 = builder47.setLogLevel(logLevel52);
        retrofit.client.Client.Provider provider55 = null;
        builder47.clientProvider = provider55;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Log log60 = restAdapter57.log;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter57.logLevel = logLevel61;
        retrofit.Server server63 = null;
        retrofit.client.Client.Provider provider64 = null;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.converter.Converter converter68 = null;
        retrofit.Profiler profiler69 = null;
        retrofit.ErrorHandler errorHandler70 = null;
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter72.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter72.logLevel = logLevel74;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server63, provider64, executor65, executor66, requestInterceptor67, converter68, profiler69, errorHandler70, log71, logLevel74);
        restAdapter57.log = log71;
        retrofit.RestAdapter.Builder builder78 = builder47.setLog(log71);
        log71.log("hi!");
        retrofit.RestAdapter.Builder builder81 = builder43.setLog(log71);
        java.util.concurrent.Executor executor82 = builder81.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel83 = builder81.logLevel;
        retrofit.RequestInterceptor requestInterceptor84 = builder81.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor84;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNull(logLevel73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(executor82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor84);
    }

    @Test
    public void test07872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07872");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.converter.Converter converter6 = null;
        builder0.converter = converter6;
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.RestAdapter restAdapter9 = builder0.build();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder13 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter14.logLevel = logLevel18;
        retrofit.RestAdapter.Builder builder20 = builder13.setLogLevel(logLevel18);
        retrofit.client.Client.Provider provider21 = builder20.clientProvider;
        retrofit.ErrorHandler errorHandler22 = builder20.errorHandler;
        retrofit.RestAdapter.Builder builder23 = builder0.setErrorHandler(errorHandler22);
        retrofit.converter.Converter converter24 = builder0.converter;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder28 = builder25.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.logLevel = logLevel33;
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel33);
        retrofit.client.Client.Provider provider36 = null;
        builder28.clientProvider = provider36;
        retrofit.RequestInterceptor requestInterceptor38 = builder28.requestInterceptor;
        retrofit.RestAdapter restAdapter39 = builder28.build();
        retrofit.ErrorHandler errorHandler40 = builder28.errorHandler;
        retrofit.converter.Converter converter41 = builder28.converter;
        java.util.concurrent.Executor executor42 = builder28.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor43 = builder28.requestInterceptor;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter44.logLevel = logLevel46;
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter44.getLogLevel();
        builder28.logLevel = logLevel49;
        java.util.concurrent.Executor executor51 = builder28.callbackExecutor;
        builder0.httpExecutor = executor51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Log log60 = restAdapter57.log;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter57.logLevel = logLevel61;
        retrofit.RestAdapter.Builder builder63 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder65 = builder63.setServer("hi!");
        retrofit.RestAdapter.Log log66 = builder65.log;
        retrofit.converter.Converter converter67 = builder65.converter;
        retrofit.RestAdapter.Builder builder68 = builder0.setConverter(converter67);
        retrofit.client.Client client69 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder70 = builder68.setClient(client69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider21);
        org.junit.Assert.assertNotNull(errorHandler22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(converter24);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertNotNull(converter41);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNotNull(requestInterceptor43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(converter67);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test07873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07873");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        java.util.concurrent.Executor executor13 = builder3.callbackExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        java.util.concurrent.Executor executor25 = builder17.callbackExecutor;
        retrofit.Profiler profiler26 = null;
        builder17.profiler = profiler26;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter28.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder35 = builder32.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter36.new RestHandler();
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter36.logLevel = logLevel40;
        retrofit.RestAdapter.Builder builder42 = builder35.setLogLevel(logLevel40);
        java.util.concurrent.Executor executor43 = builder35.callbackExecutor;
        restAdapter28.callbackExecutor = executor43;
        builder17.callbackExecutor = executor43;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter46.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter54.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel58);
        java.util.concurrent.Executor executor61 = builder53.callbackExecutor;
        restAdapter46.callbackExecutor = executor61;
        builder17.httpExecutor = executor61;
        retrofit.Server server64 = builder17.server;
        retrofit.RestAdapter restAdapter65 = builder17.build();
        builder17.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor67 = builder17.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor68 = builder17.requestInterceptor;
        retrofit.RestAdapter.Builder builder69 = builder3.setRequestInterceptor(requestInterceptor68);
        builder69.ensureSaneDefaults();
        retrofit.RestAdapter.Log log71 = builder69.log;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(requestInterceptor67);
        org.junit.Assert.assertNotNull(requestInterceptor68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(log71);
    }

    @Test
    public void test07874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07874");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.Server server4 = builder3.server;
        retrofit.RestAdapter.Builder builder6 = builder3.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.converter.Converter converter13 = restAdapter7.converter;
        java.util.concurrent.Executor executor14 = restAdapter7.callbackExecutor;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        retrofit.client.Client.Provider provider26 = null;
        builder18.clientProvider = provider26;
        retrofit.RequestInterceptor requestInterceptor28 = builder18.requestInterceptor;
        retrofit.RestAdapter restAdapter29 = builder18.build();
        retrofit.ErrorHandler errorHandler30 = builder18.errorHandler;
        retrofit.converter.Converter converter31 = builder18.converter;
        restAdapter7.converter = converter31;
        builder3.converter = converter31;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        builder34.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder37 = builder34.setServer("hi!");
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter38.new RestHandler();
        retrofit.RestAdapter.Log log41 = restAdapter38.log;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter38.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider45 = null;
        builder37.clientProvider = provider45;
        retrofit.ErrorHandler errorHandler47 = builder37.errorHandler;
        retrofit.Server server48 = builder37.server;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder52 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.RestAdapter.Builder builder59 = builder52.setLogLevel(logLevel57);
        retrofit.client.Client.Provider provider60 = builder59.clientProvider;
        retrofit.RestAdapter.Builder builder61 = builder37.setClient(provider60);
        retrofit.RestAdapter.Builder builder62 = builder3.setClient(provider60);
        retrofit.RestAdapter.Log log63 = builder3.log;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(converter31);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(errorHandler47);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(provider60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log63);
    }

    @Test
    public void test07875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07875");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = null;
        builder17.clientProvider = provider25;
        retrofit.RequestInterceptor requestInterceptor27 = builder17.requestInterceptor;
        retrofit.RestAdapter.Builder builder28 = builder3.setRequestInterceptor(requestInterceptor27);
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.Profiler profiler30 = restAdapter29.profiler;
        retrofit.Profiler profiler31 = restAdapter29.profiler;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider33 = null;
        builder32.clientProvider = provider33;
        retrofit.RestAdapter.Builder builder36 = builder32.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder32.server;
        restAdapter29.server = server37;
        retrofit.RestAdapter.Builder builder39 = builder28.setServer(server37);
        retrofit.Server server40 = null;
        builder39.server = server40;
        retrofit.Profiler profiler42 = builder39.profiler;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("hi!");
        retrofit.client.Client.Provider provider56 = builder55.clientProvider;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder62 = builder57.setLogLevel(logLevel61);
        retrofit.Server server63 = null;
        builder57.server = server63;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder68 = builder65.setServer("hi!");
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter69.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler71 = restAdapter69.new RestHandler();
        retrofit.RestAdapter.Log log72 = restAdapter69.log;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter69.logLevel = logLevel73;
        retrofit.RestAdapter.Builder builder75 = builder68.setLogLevel(logLevel73);
        retrofit.client.Client.Provider provider76 = null;
        builder68.clientProvider = provider76;
        retrofit.RequestInterceptor requestInterceptor78 = builder68.requestInterceptor;
        retrofit.RestAdapter restAdapter79 = builder68.build();
        retrofit.ErrorHandler errorHandler80 = builder68.errorHandler;
        retrofit.converter.Converter converter81 = builder68.converter;
        retrofit.RestAdapter.Builder builder82 = builder57.setConverter(converter81);
        retrofit.RestAdapter.Log log83 = builder57.log;
        retrofit.RestAdapter.Builder builder84 = builder55.setLog(log83);
        builder84.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor86 = builder84.requestInterceptor;
        retrofit.RestAdapter.Builder builder87 = builder39.setRequestInterceptor(requestInterceptor86);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(provider56);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(logLevel70);
        org.junit.Assert.assertNull(log72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(errorHandler80);
        org.junit.Assert.assertNotNull(converter81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(requestInterceptor86);
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test07876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07876");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter6.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.Log log9 = restAdapter6.log;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter6.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter restAdapter13 = builder5.build();
        retrofit.client.Response response15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response17 = restAdapter13.logAndReplaceResponse("", response15, (long) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(restAdapter13);
    }

    @Test
    public void test07877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07877");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.Server server14 = restAdapter13.server;
        retrofit.RequestInterceptor requestInterceptor15 = restAdapter13.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter13.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel16);
        java.util.concurrent.Executor executor19 = builder18.httpExecutor;
        retrofit.RestAdapter.Log log20 = builder18.log;
        retrofit.RestAdapter restAdapter21 = builder18.build();
        retrofit.Server server22 = null;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter46.logLevel = logLevel48;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel48);
        restAdapter31.log = log45;
        builder30.log = log45;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log45, logLevel53);
        retrofit.RestAdapter.Log log55 = restAdapter54.log;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.Profiler profiler57 = restAdapter56.profiler;
        retrofit.Profiler profiler58 = restAdapter56.profiler;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider60 = null;
        builder59.clientProvider = provider60;
        retrofit.RestAdapter.Builder builder63 = builder59.setServer("Retrofit-Idle");
        retrofit.Server server64 = builder59.server;
        restAdapter56.server = server64;
        restAdapter54.server = server64;
        builder18.server = server64;
        retrofit.ErrorHandler errorHandler68 = builder18.errorHandler;
        retrofit.client.Client client69 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder70 = builder18.setClient(client69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(requestInterceptor15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertNull(profiler58);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(errorHandler68);
    }

    @Test
    public void test07878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07878");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.Profiler profiler7 = restAdapter0.profiler;
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.Server server23 = builder15.server;
        restAdapter8.server = server23;
        restAdapter0.server = server23;
        java.util.concurrent.Executor executor26 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider38 = null;
        builder30.clientProvider = provider38;
        retrofit.RequestInterceptor requestInterceptor40 = builder30.requestInterceptor;
        retrofit.RestAdapter restAdapter41 = builder30.build();
        retrofit.Profiler profiler42 = builder30.profiler;
        retrofit.ErrorHandler errorHandler43 = builder30.errorHandler;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter44.logLevel = logLevel46;
        retrofit.ErrorHandler errorHandler48 = null;
        restAdapter44.errorHandler = errorHandler48;
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter44.logLevel;
        retrofit.converter.Converter converter51 = null;
        restAdapter44.converter = converter51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Log log60 = restAdapter57.log;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter57.logLevel = logLevel61;
        retrofit.RestAdapter.Builder builder63 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder65 = builder63.setServer("hi!");
        retrofit.client.Client.Provider provider66 = builder65.clientProvider;
        restAdapter44.clientProvider = provider66;
        builder30.clientProvider = provider66;
        restAdapter0.clientProvider = provider66;
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(restAdapter41);
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(provider66);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test07879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07879");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.Server server25 = builder17.server;
        retrofit.RestAdapter.Builder builder26 = builder3.setServer(server25);
        retrofit.Profiler profiler27 = null;
        builder26.profiler = profiler27;
        retrofit.client.Client.Provider provider29 = builder26.clientProvider;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder33 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.RestAdapter.Builder builder40 = builder33.setLogLevel(logLevel38);
        retrofit.client.Client.Provider provider41 = null;
        builder33.clientProvider = provider41;
        retrofit.RequestInterceptor requestInterceptor43 = builder33.requestInterceptor;
        retrofit.RestAdapter restAdapter44 = builder33.build();
        retrofit.ErrorHandler errorHandler45 = builder33.errorHandler;
        retrofit.ErrorHandler errorHandler46 = builder33.errorHandler;
        java.util.concurrent.Executor executor47 = builder33.callbackExecutor;
        retrofit.converter.Converter converter48 = builder33.converter;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder52 = builder49.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder54 = builder49.setLogLevel(logLevel53);
        retrofit.Server server55 = null;
        builder49.server = server55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        retrofit.client.Client.Provider provider68 = null;
        builder60.clientProvider = provider68;
        retrofit.RequestInterceptor requestInterceptor70 = builder60.requestInterceptor;
        retrofit.RestAdapter restAdapter71 = builder60.build();
        retrofit.ErrorHandler errorHandler72 = builder60.errorHandler;
        retrofit.converter.Converter converter73 = builder60.converter;
        retrofit.RestAdapter.Builder builder74 = builder49.setConverter(converter73);
        retrofit.Profiler profiler75 = null;
        builder74.profiler = profiler75;
        retrofit.Profiler profiler77 = null;
        builder74.profiler = profiler77;
        java.util.concurrent.Executor executor79 = builder74.httpExecutor;
        retrofit.ErrorHandler errorHandler80 = builder74.errorHandler;
        retrofit.RestAdapter.Builder builder81 = builder33.setErrorHandler(errorHandler80);
        retrofit.RestAdapter.Builder builder82 = builder26.setErrorHandler(errorHandler80);
        retrofit.client.Client.Provider provider83 = builder26.clientProvider;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(requestInterceptor43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(errorHandler45);
        org.junit.Assert.assertNotNull(errorHandler46);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(converter48);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(restAdapter71);
        org.junit.Assert.assertNotNull(errorHandler72);
        org.junit.Assert.assertNotNull(converter73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(executor79);
        org.junit.Assert.assertNotNull(errorHandler80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(provider83);
    }

    @Test
    public void test07880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07880");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.ErrorHandler errorHandler7 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Log log9 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter0.getLogLevel();
        retrofit.Server server11 = restAdapter0.server;
        retrofit.Profiler profiler12 = restAdapter0.profiler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertNull(profiler12);
    }

    @Test
    public void test07881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07881");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.converter.Converter converter6 = null;
        builder0.converter = converter6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider19 = null;
        builder11.clientProvider = provider19;
        retrofit.RequestInterceptor requestInterceptor21 = builder11.requestInterceptor;
        retrofit.RestAdapter restAdapter22 = builder11.build();
        retrofit.Profiler profiler23 = builder11.profiler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel42);
        restAdapter25.log = log39;
        builder24.log = log39;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder50 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        retrofit.RestAdapter.Log log54 = restAdapter51.log;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter51.logLevel = logLevel55;
        retrofit.RestAdapter.Builder builder57 = builder50.setLogLevel(logLevel55);
        retrofit.Server server58 = builder50.server;
        builder24.server = server58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder60.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter64.new RestHandler();
        retrofit.RestAdapter.Log log67 = restAdapter64.log;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter64.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder70 = builder63.setLogLevel(logLevel68);
        retrofit.client.Client.Provider provider71 = null;
        builder63.clientProvider = provider71;
        retrofit.RequestInterceptor requestInterceptor73 = builder63.requestInterceptor;
        retrofit.RestAdapter.Builder builder74 = builder24.setRequestInterceptor(requestInterceptor73);
        retrofit.RestAdapter.Builder builder75 = builder11.setRequestInterceptor(requestInterceptor73);
        retrofit.RestAdapter.Builder builder76 = builder0.setRequestInterceptor(requestInterceptor73);
        retrofit.Profiler profiler77 = null;
        builder76.profiler = profiler77;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test07882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07882");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("hi!");
        retrofit.client.Client.Provider provider17 = builder16.clientProvider;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter18.logLevel = logLevel20;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        restAdapter18.requestInterceptor = requestInterceptor22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel42);
        restAdapter25.log = log39;
        builder24.log = log39;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder50 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        retrofit.RestAdapter.Log log54 = restAdapter51.log;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter51.logLevel = logLevel55;
        retrofit.RestAdapter.Builder builder57 = builder50.setLogLevel(logLevel55);
        retrofit.Server server58 = builder50.server;
        builder24.server = server58;
        restAdapter18.server = server58;
        retrofit.RestAdapter.Builder builder61 = builder16.setServer(server58);
        java.util.concurrent.Executor executor62 = builder16.callbackExecutor;
        restAdapter0.httpExecutor = executor62;
        java.util.concurrent.Executor executor64 = restAdapter0.callbackExecutor;
        retrofit.converter.Converter converter65 = restAdapter0.converter;
        retrofit.client.Client.Provider provider66 = restAdapter0.clientProvider;
        java.util.concurrent.Executor executor67 = restAdapter0.callbackExecutor;
        java.lang.Throwable throwable68 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable68, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNull(executor64);
        org.junit.Assert.assertNull(converter65);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertNull(executor67);
    }

    @Test
    public void test07883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07883");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        java.util.concurrent.Executor executor15 = builder7.callbackExecutor;
        restAdapter0.callbackExecutor = executor15;
        java.util.concurrent.Executor executor17 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter0.getLogLevel();
        java.util.concurrent.Executor executor19 = restAdapter0.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        java.util.concurrent.Executor executor32 = builder24.callbackExecutor;
        retrofit.Profiler profiler33 = null;
        builder24.profiler = profiler33;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        java.util.concurrent.Executor executor50 = builder42.callbackExecutor;
        restAdapter35.callbackExecutor = executor50;
        builder24.callbackExecutor = executor50;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        java.util.concurrent.Executor executor68 = builder60.callbackExecutor;
        restAdapter53.callbackExecutor = executor68;
        builder24.httpExecutor = executor68;
        retrofit.Server server71 = builder24.server;
        retrofit.RestAdapter restAdapter72 = builder24.build();
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder76 = builder73.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter77.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler79 = restAdapter77.new RestHandler();
        retrofit.RestAdapter.Log log80 = restAdapter77.log;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter77.logLevel = logLevel81;
        retrofit.RestAdapter.Builder builder83 = builder76.setLogLevel(logLevel81);
        retrofit.client.Client.Provider provider84 = null;
        builder76.clientProvider = provider84;
        retrofit.RequestInterceptor requestInterceptor86 = builder76.requestInterceptor;
        restAdapter72.requestInterceptor = requestInterceptor86;
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        builder88.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder91 = builder88.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel92 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder93 = builder88.setLogLevel(logLevel92);
        retrofit.RestAdapter.Log log94 = builder88.log;
        restAdapter72.log = log94;
        restAdapter0.log = log94;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNull(requestInterceptor20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(server71);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(logLevel78);
        org.junit.Assert.assertNull(log80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(requestInterceptor86);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(log94);
    }

    @Test
    public void test07884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07884");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder19 = builder14.setLogLevel(logLevel18);
        retrofit.converter.Converter converter20 = null;
        builder14.converter = converter20;
        java.util.concurrent.Executor executor22 = builder14.callbackExecutor;
        retrofit.RestAdapter restAdapter23 = builder14.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder27 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter28.new RestHandler();
        retrofit.RestAdapter.Log log31 = restAdapter28.log;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter28.logLevel = logLevel32;
        retrofit.RestAdapter.Builder builder34 = builder27.setLogLevel(logLevel32);
        retrofit.client.Client.Provider provider35 = builder34.clientProvider;
        retrofit.ErrorHandler errorHandler36 = builder34.errorHandler;
        retrofit.RestAdapter.Builder builder37 = builder14.setErrorHandler(errorHandler36);
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.Profiler profiler39 = restAdapter38.profiler;
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter38.new RestHandler();
        retrofit.converter.Converter converter41 = restAdapter38.converter;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter38.logLevel = logLevel42;
        retrofit.Profiler profiler44 = restAdapter38.profiler;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder48 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        retrofit.RestAdapter.Log log52 = restAdapter49.log;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter49.logLevel = logLevel53;
        retrofit.RestAdapter.Builder builder55 = builder48.setLogLevel(logLevel53);
        builder55.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor57 = builder55.requestInterceptor;
        retrofit.client.Client.Provider provider58 = builder55.clientProvider;
        restAdapter38.clientProvider = provider58;
        retrofit.RestAdapter.Builder builder60 = builder37.setClient(provider58);
        retrofit.RestAdapter.Builder builder61 = builder3.setClient(provider58);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder65 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter66.log;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter66.logLevel = logLevel70;
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder74 = builder72.setServer("hi!");
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor76 = builder75.callbackExecutor;
        retrofit.Profiler profiler77 = null;
        builder75.profiler = profiler77;
        retrofit.RestAdapter.Log log79 = builder75.log;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        builder80.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder83 = builder80.setServer("hi!");
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel85 = restAdapter84.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler86 = restAdapter84.new RestHandler();
        retrofit.RestAdapter.Log log87 = restAdapter84.log;
        retrofit.RestAdapter.LogLevel logLevel88 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter84.logLevel = logLevel88;
        retrofit.RestAdapter.Builder builder90 = builder83.setLogLevel(logLevel88);
        java.util.concurrent.Executor executor91 = builder83.callbackExecutor;
        builder75.httpExecutor = executor91;
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel94 = builder75.logLevel;
        builder74.logLevel = logLevel94;
        retrofit.RestAdapter restAdapter96 = builder74.build();
        retrofit.client.Client.Provider provider97 = builder74.clientProvider;
        builder3.clientProvider = provider97;
        retrofit.ErrorHandler errorHandler99 = builder3.errorHandler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(profiler39);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler44);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(executor76);
        org.junit.Assert.assertNull(log79);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNull(logLevel85);
        org.junit.Assert.assertNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(executor91);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(restAdapter96);
        org.junit.Assert.assertNotNull(provider97);
        org.junit.Assert.assertNotNull(errorHandler99);
    }

    @Test
    public void test07885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07885");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.ErrorHandler errorHandler12 = builder10.errorHandler;
        retrofit.Server server13 = builder10.server;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider15 = null;
        builder14.clientProvider = provider15;
        retrofit.RestAdapter.Builder builder18 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log19 = builder18.log;
        retrofit.client.Client.Provider provider20 = builder18.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel21 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder18.setServer("hi!");
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder27 = builder24.setServer("hi!");
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.converter.Converter converter37 = restAdapter31.converter;
        java.util.concurrent.Executor executor38 = restAdapter31.callbackExecutor;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        retrofit.client.Client.Provider provider50 = null;
        builder42.clientProvider = provider50;
        retrofit.RequestInterceptor requestInterceptor52 = builder42.requestInterceptor;
        retrofit.RestAdapter restAdapter53 = builder42.build();
        retrofit.ErrorHandler errorHandler54 = builder42.errorHandler;
        retrofit.converter.Converter converter55 = builder42.converter;
        restAdapter31.converter = converter55;
        builder27.converter = converter55;
        builder18.converter = converter55;
        builder10.converter = converter55;
        retrofit.RequestInterceptor requestInterceptor60 = builder10.requestInterceptor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(errorHandler12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(requestInterceptor52);
        org.junit.Assert.assertNotNull(restAdapter53);
        org.junit.Assert.assertNotNull(errorHandler54);
        org.junit.Assert.assertNotNull(converter55);
        org.junit.Assert.assertNotNull(requestInterceptor60);
    }

    @Test
    public void test07886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07886");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter24.logLevel = logLevel26;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel26);
        restAdapter9.log = log23;
        builder8.log = log23;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log23, logLevel31);
        retrofit.RestAdapter.Log log33 = restAdapter32.log;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter34.getLogLevel();
        retrofit.Profiler profiler38 = null;
        restAdapter34.profiler = profiler38;
        retrofit.Server server40 = restAdapter34.server;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.FULL;
        boolean boolean42 = logLevel41.log();
        restAdapter34.logLevel = logLevel41;
        restAdapter32.logLevel = logLevel41;
        retrofit.client.Client.Provider provider45 = restAdapter32.clientProvider;
        java.lang.Throwable throwable46 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter32.logException(throwable46, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(provider45);
    }

    @Test
    public void test07887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07887");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        java.util.concurrent.Executor executor16 = builder8.callbackExecutor;
        builder0.httpExecutor = executor16;
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider19 = builder0.clientProvider;
        java.util.concurrent.Executor executor20 = builder0.httpExecutor;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter21.logLevel = logLevel23;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter25.logLevel = logLevel27;
        retrofit.ErrorHandler errorHandler29 = null;
        restAdapter25.errorHandler = errorHandler29;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter25.logLevel;
        restAdapter21.logLevel = logLevel31;
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter21.new RestHandler();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.Profiler profiler35 = restAdapter34.profiler;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.ErrorHandler errorHandler49 = builder39.errorHandler;
        restAdapter34.errorHandler = errorHandler49;
        restAdapter21.errorHandler = errorHandler49;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel70);
        restAdapter53.log = log67;
        builder52.log = log67;
        restAdapter21.log = log67;
        retrofit.RestAdapter.Builder builder76 = builder0.setLog(log67);
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor78 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(executor78);
    }

    @Test
    public void test07888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07888");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter24.logLevel = logLevel26;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel26);
        restAdapter9.log = log23;
        builder8.log = log23;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log23, logLevel31);
        retrofit.Profiler profiler33 = null;
        restAdapter32.profiler = profiler33;
        retrofit.ErrorHandler errorHandler35 = restAdapter32.errorHandler;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter37.log;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter37.logLevel = logLevel41;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        restAdapter37.log = log51;
        builder36.log = log51;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        builder59.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder62 = builder59.setServer("hi!");
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler65 = restAdapter63.new RestHandler();
        retrofit.RestAdapter.Log log66 = restAdapter63.log;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter63.logLevel = logLevel67;
        retrofit.RestAdapter.Builder builder69 = builder62.setLogLevel(logLevel67);
        retrofit.Server server70 = builder62.server;
        builder36.server = server70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder75 = builder72.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter76.new RestHandler();
        retrofit.RestAdapter.Log log79 = restAdapter76.log;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter76.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = builder75.setLogLevel(logLevel80);
        retrofit.client.Client.Provider provider83 = null;
        builder75.clientProvider = provider83;
        retrofit.RequestInterceptor requestInterceptor85 = builder75.requestInterceptor;
        retrofit.RestAdapter.Builder builder86 = builder36.setRequestInterceptor(requestInterceptor85);
        retrofit.RestAdapter.LogLevel logLevel87 = builder86.logLevel;
        restAdapter32.logLevel = logLevel87;
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(errorHandler35);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(server70);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(logLevel77);
        org.junit.Assert.assertNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(requestInterceptor85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test07889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07889");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel54);
        retrofit.RestAdapter.Builder builder58 = builder10.setLog(log35);
        retrofit.RestAdapter restAdapter59 = builder10.build();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder60.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter64.new RestHandler();
        retrofit.RestAdapter.Log log67 = restAdapter64.log;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter64.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder70 = builder63.setLogLevel(logLevel68);
        retrofit.client.Client.Provider provider71 = null;
        builder63.clientProvider = provider71;
        retrofit.RequestInterceptor requestInterceptor73 = builder63.requestInterceptor;
        retrofit.RestAdapter.Builder builder74 = builder10.setRequestInterceptor(requestInterceptor73);
        retrofit.Server server75 = builder74.server;
        retrofit.RestAdapter.Log log76 = builder74.log;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        builder77.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder80 = builder77.setServer("hi!");
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter81.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler83 = restAdapter81.new RestHandler();
        retrofit.RestAdapter.Log log84 = restAdapter81.log;
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter81.logLevel = logLevel85;
        retrofit.RestAdapter.Builder builder87 = builder80.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder89 = builder87.setServer("hi!");
        retrofit.Profiler profiler90 = builder87.profiler;
        retrofit.ErrorHandler errorHandler91 = builder87.errorHandler;
        retrofit.Server server92 = builder87.server;
        retrofit.RestAdapter.Log log93 = builder87.log;
        retrofit.RestAdapter.LogLevel logLevel94 = builder87.logLevel;
        retrofit.RestAdapter.Builder builder95 = builder74.setLogLevel(logLevel94);
        retrofit.Profiler profiler96 = null;
        builder74.profiler = profiler96;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(server75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNull(logLevel82);
        org.junit.Assert.assertNull(log84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNull(profiler90);
        org.junit.Assert.assertNotNull(errorHandler91);
        org.junit.Assert.assertNotNull(server92);
        org.junit.Assert.assertNotNull(log93);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test07890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07890");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("hi!");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor28 = builder27.callbackExecutor;
        retrofit.Profiler profiler29 = null;
        builder27.profiler = profiler29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        retrofit.Server server42 = builder34.server;
        builder27.server = server42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.Log log48 = restAdapter45.log;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter45.logLevel = logLevel49;
        retrofit.Server server51 = null;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter60.logLevel = logLevel62;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel62);
        restAdapter45.log = log59;
        builder44.log = log59;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.Log log74 = restAdapter71.log;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter71.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = builder70.setLogLevel(logLevel75);
        retrofit.Server server78 = builder70.server;
        builder44.server = server78;
        builder27.server = server78;
        retrofit.RestAdapter.Builder builder81 = builder24.setServer(server78);
        retrofit.RestAdapter.Builder builder82 = builder3.setServer(server78);
        builder82.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter84 = builder82.build();
        retrofit.RequestInterceptor requestInterceptor85 = builder82.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel86 = builder82.logLevel;
        retrofit.client.Client.Provider provider87 = builder82.clientProvider;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(server78);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(restAdapter84);
        org.junit.Assert.assertNotNull(requestInterceptor85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(provider87);
    }

    @Test
    public void test07891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07891");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.Profiler profiler7 = restAdapter6.profiler;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider19 = null;
        builder11.clientProvider = provider19;
        retrofit.ErrorHandler errorHandler21 = builder11.errorHandler;
        restAdapter6.errorHandler = errorHandler21;
        retrofit.RestAdapter.Builder builder23 = builder4.setErrorHandler(errorHandler21);
        retrofit.RestAdapter restAdapter24 = builder4.build();
        retrofit.converter.Converter converter25 = restAdapter24.converter;
        retrofit.Profiler profiler26 = restAdapter24.profiler;
        java.util.concurrent.Executor executor27 = restAdapter24.httpExecutor;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(restAdapter24);
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(executor27);
    }

    @Test
    public void test07892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07892");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.Profiler profiler2 = restAdapter0.profiler;
        retrofit.RequestInterceptor requestInterceptor3 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.NONE;
        boolean boolean5 = logLevel4.log();
        restAdapter0.logLevel = logLevel4;
        retrofit.client.Request request7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request8 = restAdapter0.logAndReplaceRequest(request7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test07893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07893");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.Server server14 = builder3.server;
        java.util.concurrent.Executor executor15 = builder3.httpExecutor;
        retrofit.ErrorHandler errorHandler16 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = null;
        builder20.clientProvider = provider28;
        retrofit.RequestInterceptor requestInterceptor30 = builder20.requestInterceptor;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter restAdapter42 = builder34.build();
        retrofit.converter.Converter converter43 = builder34.converter;
        retrofit.RestAdapter.Builder builder44 = builder20.setConverter(converter43);
        retrofit.RestAdapter.Builder builder45 = builder3.setConverter(converter43);
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter46.new RestHandler();
        retrofit.RestAdapter.Log log49 = restAdapter46.log;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter46.logLevel = logLevel50;
        retrofit.converter.Converter converter52 = restAdapter46.converter;
        java.util.concurrent.Executor executor53 = restAdapter46.callbackExecutor;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.Log log61 = restAdapter58.log;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        retrofit.client.Client.Provider provider65 = null;
        builder57.clientProvider = provider65;
        retrofit.RequestInterceptor requestInterceptor67 = builder57.requestInterceptor;
        retrofit.RestAdapter restAdapter68 = builder57.build();
        java.util.concurrent.Executor executor69 = restAdapter68.callbackExecutor;
        retrofit.converter.Converter converter70 = restAdapter68.converter;
        retrofit.RestAdapter.RestHandler restHandler71 = restAdapter68.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter68.logLevel;
        restAdapter46.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder77 = builder74.setServer("hi!");
        java.util.concurrent.Executor executor78 = builder74.callbackExecutor;
        retrofit.converter.Converter converter79 = builder74.converter;
        restAdapter46.converter = converter79;
        retrofit.RestAdapter.Builder builder81 = builder45.setConverter(converter79);
        retrofit.RequestInterceptor requestInterceptor82 = builder81.requestInterceptor;
        retrofit.Profiler profiler83 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder84 = builder81.setProfiler(profiler83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(converter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(requestInterceptor67);
        org.junit.Assert.assertNotNull(restAdapter68);
        org.junit.Assert.assertNotNull(executor69);
        org.junit.Assert.assertNotNull(converter70);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(converter79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(requestInterceptor82);
    }

    @Test
    public void test07894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07894");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Server server1 = restAdapter0.server;
        retrofit.RequestInterceptor requestInterceptor2 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder6 = builder3.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.RestAdapter.Builder builder13 = builder6.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("hi!");
        retrofit.client.Client.Provider provider16 = builder15.clientProvider;
        restAdapter0.clientProvider = provider16;
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter0.new RestHandler();
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.ErrorHandler errorHandler21 = null;
        restAdapter19.errorHandler = errorHandler21;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.Server server24 = restAdapter23.server;
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel51);
        restAdapter34.log = log48;
        builder33.log = log48;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel67);
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log48, logLevel67);
        restAdapter23.log = log48;
        restAdapter19.log = log48;
        restAdapter0.log = log48;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.FULL;
        boolean boolean75 = logLevel74.log();
        restAdapter0.logLevel = logLevel74;
        retrofit.Profiler profiler77 = null;
        restAdapter0.profiler = profiler77;
        java.lang.Class<?> wildcardClass79 = restAdapter0.getClass();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider16);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test07895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07895");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter9.logLevel = logLevel11;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel11);
        retrofit.Profiler profiler14 = restAdapter13.profiler;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("hi!");
        retrofit.client.Client.Provider provider28 = builder27.clientProvider;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter29.logLevel = logLevel31;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        restAdapter29.requestInterceptor = requestInterceptor33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter36.new RestHandler();
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter36.logLevel = logLevel40;
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter51.logLevel = logLevel53;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel53);
        restAdapter36.log = log50;
        builder35.log = log50;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder61 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter62.new RestHandler();
        retrofit.RestAdapter.Log log65 = restAdapter62.log;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter62.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder68 = builder61.setLogLevel(logLevel66);
        retrofit.Server server69 = builder61.server;
        builder35.server = server69;
        restAdapter29.server = server69;
        retrofit.RestAdapter.Builder builder72 = builder27.setServer(server69);
        restAdapter13.server = server69;
        retrofit.RequestInterceptor requestInterceptor74 = restAdapter13.requestInterceptor;
        java.util.concurrent.Executor executor75 = restAdapter13.callbackExecutor;
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(provider28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(server69);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(requestInterceptor74);
        org.junit.Assert.assertNull(executor75);
    }

    @Test
    public void test07896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07896");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.Log log42 = restAdapter39.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.logLevel = logLevel43;
        retrofit.Server server45 = null;
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter54.logLevel = logLevel56;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel56);
        restAdapter39.log = log53;
        builder38.log = log53;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.Log log68 = restAdapter65.log;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter65.logLevel = logLevel69;
        retrofit.RestAdapter.Builder builder71 = builder64.setLogLevel(logLevel69);
        retrofit.Server server72 = builder64.server;
        builder38.server = server72;
        retrofit.RestAdapter.LogLevel logLevel74 = builder38.logLevel;
        builder36.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder0.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("hi!");
        builder76.ensureSaneDefaults();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
    }

    @Test
    public void test07897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07897");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter15.new RestHandler();
        retrofit.RestAdapter.Log log18 = restAdapter15.log;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter15.logLevel = logLevel19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel32);
        restAdapter15.log = log29;
        builder14.log = log29;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter46.logLevel = logLevel48;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel48);
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log29, logLevel48);
        retrofit.RestAdapter.Builder builder52 = builder0.setLog(log29);
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = builder53.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder58 = builder53.setLogLevel(logLevel57);
        retrofit.Server server59 = null;
        builder53.server = server59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.Log log68 = restAdapter65.log;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter65.logLevel = logLevel69;
        retrofit.RestAdapter.Builder builder71 = builder64.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider72 = null;
        builder64.clientProvider = provider72;
        retrofit.RequestInterceptor requestInterceptor74 = builder64.requestInterceptor;
        retrofit.RestAdapter restAdapter75 = builder64.build();
        retrofit.ErrorHandler errorHandler76 = builder64.errorHandler;
        retrofit.converter.Converter converter77 = builder64.converter;
        retrofit.RestAdapter.Builder builder78 = builder53.setConverter(converter77);
        retrofit.RestAdapter.Log log79 = builder53.log;
        retrofit.RestAdapter.Builder builder80 = builder0.setLog(log79);
        retrofit.client.Client.Provider provider81 = builder80.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel82 = builder80.logLevel;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(requestInterceptor74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertNotNull(errorHandler76);
        org.junit.Assert.assertNotNull(converter77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(provider81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test07898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07898");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder9 = builder4.setLogLevel(logLevel8);
        retrofit.ErrorHandler errorHandler10 = builder9.errorHandler;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder14 = builder11.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder16 = builder11.setLogLevel(logLevel15);
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log29 = restAdapter26.log;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.logLevel = logLevel30;
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter41.logLevel = logLevel43;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel43);
        restAdapter26.log = log40;
        builder25.log = log40;
        retrofit.Server server48 = null;
        retrofit.client.Client.Provider provider49 = null;
        java.util.concurrent.Executor executor50 = null;
        java.util.concurrent.Executor executor51 = null;
        retrofit.RequestInterceptor requestInterceptor52 = null;
        retrofit.converter.Converter converter53 = null;
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter57.logLevel = logLevel59;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server48, provider49, executor50, executor51, requestInterceptor52, converter53, profiler54, errorHandler55, log56, logLevel59);
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log40, logLevel59);
        retrofit.RestAdapter.Builder builder63 = builder11.setLog(log40);
        retrofit.ErrorHandler errorHandler64 = builder11.errorHandler;
        builder9.errorHandler = errorHandler64;
        retrofit.RestAdapter.Builder builder66 = builder0.setErrorHandler(errorHandler64);
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.Profiler profiler68 = restAdapter67.profiler;
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.client.Client.Provider provider70 = restAdapter67.clientProvider;
        retrofit.Profiler profiler71 = restAdapter67.profiler;
        retrofit.client.Client.Provider provider72 = restAdapter67.clientProvider;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder76 = builder73.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter77.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler79 = restAdapter77.new RestHandler();
        retrofit.RestAdapter.Log log80 = restAdapter77.log;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter77.logLevel = logLevel81;
        retrofit.RestAdapter.Builder builder83 = builder76.setLogLevel(logLevel81);
        retrofit.client.Client.Provider provider84 = null;
        builder76.clientProvider = provider84;
        retrofit.RequestInterceptor requestInterceptor86 = builder76.requestInterceptor;
        retrofit.RestAdapter restAdapter87 = builder76.build();
        retrofit.ErrorHandler errorHandler88 = builder76.errorHandler;
        retrofit.ErrorHandler errorHandler89 = builder76.errorHandler;
        restAdapter67.errorHandler = errorHandler89;
        retrofit.RestAdapter.Builder builder91 = builder66.setErrorHandler(errorHandler89);
        java.util.concurrent.Executor executor92 = builder91.callbackExecutor;
        java.util.concurrent.Executor executor93 = builder91.callbackExecutor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(errorHandler10);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(errorHandler64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(profiler68);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(profiler71);
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(logLevel78);
        org.junit.Assert.assertNull(log80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(requestInterceptor86);
        org.junit.Assert.assertNotNull(restAdapter87);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertNotNull(errorHandler89);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNull(executor92);
        org.junit.Assert.assertNull(executor93);
    }

    @Test
    public void test07899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07899");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.logLevel;
        retrofit.RestAdapter.Log log4 = restAdapter0.log;
        retrofit.Server server5 = restAdapter0.server;
        java.util.concurrent.Executor executor6 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider8 = null;
        builder7.clientProvider = provider8;
        retrofit.RestAdapter.Builder builder11 = builder7.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider23 = null;
        builder15.clientProvider = provider23;
        retrofit.RequestInterceptor requestInterceptor25 = builder15.requestInterceptor;
        retrofit.RestAdapter restAdapter26 = builder15.build();
        retrofit.ErrorHandler errorHandler27 = builder15.errorHandler;
        retrofit.RestAdapter.Builder builder28 = builder7.setErrorHandler(errorHandler27);
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.Log log31 = restAdapter29.log;
        java.util.concurrent.Executor executor32 = restAdapter29.httpExecutor;
        retrofit.Server server33 = null;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter42.logLevel = logLevel44;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel44);
        restAdapter29.log = log41;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder51 = builder48.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder53 = builder48.setLogLevel(logLevel52);
        restAdapter29.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder55 = builder28.setLogLevel(logLevel52);
        retrofit.RequestInterceptor requestInterceptor56 = builder55.requestInterceptor;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        retrofit.client.Client.Provider provider68 = null;
        builder60.clientProvider = provider68;
        retrofit.Server server70 = null;
        builder60.server = server70;
        retrofit.RequestInterceptor requestInterceptor72 = builder60.requestInterceptor;
        builder55.requestInterceptor = requestInterceptor72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        builder74.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder77 = builder74.setServer("hi!");
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter78.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler80 = restAdapter78.new RestHandler();
        retrofit.RestAdapter.Log log81 = restAdapter78.log;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter78.logLevel = logLevel82;
        retrofit.RestAdapter.Builder builder84 = builder77.setLogLevel(logLevel82);
        retrofit.client.Client.Provider provider85 = null;
        builder77.clientProvider = provider85;
        retrofit.RequestInterceptor requestInterceptor87 = builder77.requestInterceptor;
        retrofit.RestAdapter restAdapter88 = builder77.build();
        java.util.concurrent.Executor executor89 = restAdapter88.callbackExecutor;
        retrofit.converter.Converter converter90 = restAdapter88.converter;
        retrofit.RestAdapter.Builder builder91 = builder55.setConverter(converter90);
        retrofit.Server server92 = builder91.server;
        restAdapter0.server = server92;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(requestInterceptor56);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(requestInterceptor72);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(logLevel79);
        org.junit.Assert.assertNull(log81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(requestInterceptor87);
        org.junit.Assert.assertNotNull(restAdapter88);
        org.junit.Assert.assertNotNull(executor89);
        org.junit.Assert.assertNotNull(converter90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(server92);
    }

    @Test
    public void test07900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07900");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = null;
        builder8.clientProvider = provider16;
        retrofit.RequestInterceptor requestInterceptor18 = builder8.requestInterceptor;
        retrofit.RestAdapter restAdapter19 = builder8.build();
        retrofit.ErrorHandler errorHandler20 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder21 = builder0.setErrorHandler(errorHandler20);
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter22.logLevel = logLevel24;
        retrofit.ErrorHandler errorHandler26 = null;
        restAdapter22.errorHandler = errorHandler26;
        java.util.concurrent.Executor executor28 = restAdapter22.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter22.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder21.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder32 = builder21.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider33 = builder21.clientProvider;
        retrofit.Profiler profiler34 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder35 = builder21.setProfiler(profiler34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(restAdapter19);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(provider33);
    }

    @Test
    public void test07901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07901");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.converter.Converter converter2 = null;
        restAdapter0.converter = converter2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler5 = null;
        restAdapter0.profiler = profiler5;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler8 = restAdapter0.errorHandler;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.Profiler profiler10 = restAdapter9.profiler;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.client.Client.Provider provider12 = restAdapter9.clientProvider;
        retrofit.Profiler profiler13 = restAdapter9.profiler;
        retrofit.client.Client.Provider provider14 = restAdapter9.clientProvider;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        retrofit.client.Client.Provider provider26 = null;
        builder18.clientProvider = provider26;
        retrofit.RequestInterceptor requestInterceptor28 = builder18.requestInterceptor;
        retrofit.RestAdapter restAdapter29 = builder18.build();
        retrofit.ErrorHandler errorHandler30 = builder18.errorHandler;
        retrofit.ErrorHandler errorHandler31 = builder18.errorHandler;
        restAdapter9.errorHandler = errorHandler31;
        restAdapter0.errorHandler = errorHandler31;
        retrofit.Profiler profiler34 = null;
        restAdapter0.profiler = profiler34;
        retrofit.RestAdapter.Log log36 = restAdapter0.log;
        retrofit.RestAdapter.Log log37 = restAdapter0.log;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass38 = log37.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(errorHandler8);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(requestInterceptor28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(errorHandler31);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertNull(log37);
    }

    @Test
    public void test07902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07902");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor4 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = null;
        builder8.clientProvider = provider16;
        retrofit.ErrorHandler errorHandler18 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder29 = builder22.setLogLevel(logLevel27);
        retrofit.Server server30 = builder22.server;
        retrofit.RestAdapter.Builder builder31 = builder8.setServer(server30);
        java.util.concurrent.Executor executor32 = builder31.httpExecutor;
        restAdapter0.httpExecutor = executor32;
        retrofit.ErrorHandler errorHandler34 = null;
        restAdapter0.errorHandler = errorHandler34;
        retrofit.converter.Converter converter36 = restAdapter0.converter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = converter36.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNull(converter36);
    }

    @Test
    public void test07903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07903");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        java.util.concurrent.Executor executor26 = builder18.callbackExecutor;
        retrofit.Profiler profiler27 = null;
        builder18.profiler = profiler27;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder36 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter37.log;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter37.logLevel = logLevel41;
        retrofit.RestAdapter.Builder builder43 = builder36.setLogLevel(logLevel41);
        java.util.concurrent.Executor executor44 = builder36.callbackExecutor;
        restAdapter29.callbackExecutor = executor44;
        builder18.callbackExecutor = executor44;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter55.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder54.setLogLevel(logLevel59);
        java.util.concurrent.Executor executor62 = builder54.callbackExecutor;
        restAdapter47.callbackExecutor = executor62;
        builder18.httpExecutor = executor62;
        retrofit.Server server65 = builder18.server;
        retrofit.RestAdapter restAdapter66 = builder18.build();
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.Log log74 = restAdapter71.log;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter71.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = builder70.setLogLevel(logLevel75);
        retrofit.client.Client.Provider provider78 = null;
        builder70.clientProvider = provider78;
        retrofit.RequestInterceptor requestInterceptor80 = builder70.requestInterceptor;
        restAdapter66.requestInterceptor = requestInterceptor80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder85 = builder82.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder87 = builder82.setLogLevel(logLevel86);
        retrofit.RestAdapter.Log log88 = builder82.log;
        restAdapter66.log = log88;
        retrofit.RestAdapter.LogLevel logLevel90 = restAdapter66.logLevel;
        restAdapter14.setLogLevel(logLevel90);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter14.getLogLevel();
        retrofit.ErrorHandler errorHandler93 = restAdapter14.errorHandler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(server65);
        org.junit.Assert.assertNotNull(restAdapter66);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(requestInterceptor80);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(log88);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(errorHandler93);
    }

    @Test
    public void test07904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07904");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        java.util.concurrent.Executor executor2 = null;
        restAdapter0.httpExecutor = executor2;
        java.util.concurrent.Executor executor4 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = null;
        builder8.clientProvider = provider16;
        retrofit.RequestInterceptor requestInterceptor18 = builder8.requestInterceptor;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder29 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider30 = null;
        builder22.clientProvider = provider30;
        retrofit.RequestInterceptor requestInterceptor32 = builder22.requestInterceptor;
        retrofit.RestAdapter.Builder builder33 = builder8.setRequestInterceptor(requestInterceptor32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor35 = builder34.callbackExecutor;
        retrofit.Profiler profiler36 = null;
        builder34.profiler = profiler36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder41 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log45 = restAdapter42.log;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter42.logLevel = logLevel46;
        retrofit.RestAdapter.Builder builder48 = builder41.setLogLevel(logLevel46);
        retrofit.Server server49 = builder41.server;
        builder34.server = server49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter53.getLogLevel();
        java.util.concurrent.Executor executor57 = restAdapter53.callbackExecutor;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder61 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter62.new RestHandler();
        retrofit.RestAdapter.Log log65 = restAdapter62.log;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter62.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder68 = builder61.setLogLevel(logLevel66);
        retrofit.client.Client.Provider provider69 = null;
        builder61.clientProvider = provider69;
        retrofit.RequestInterceptor requestInterceptor71 = builder61.requestInterceptor;
        retrofit.RestAdapter restAdapter72 = builder61.build();
        retrofit.ErrorHandler errorHandler73 = builder61.errorHandler;
        retrofit.converter.Converter converter74 = builder61.converter;
        restAdapter53.converter = converter74;
        builder51.converter = converter74;
        retrofit.RestAdapter.Builder builder77 = builder34.setConverter(converter74);
        builder33.converter = converter74;
        java.util.concurrent.Executor executor79 = builder33.callbackExecutor;
        restAdapter0.httpExecutor = executor79;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertNotNull(errorHandler73);
        org.junit.Assert.assertNotNull(converter74);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(executor79);
    }

    @Test
    public void test07905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07905");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.logLevel;
        retrofit.Profiler profiler2 = null;
        restAdapter0.profiler = profiler2;
        java.util.concurrent.Executor executor4 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter6.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.Log log9 = restAdapter6.log;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter6.logLevel = logLevel10;
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter21.logLevel = logLevel23;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log20, logLevel23);
        restAdapter6.log = log20;
        builder5.log = log20;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder31 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.Log log35 = restAdapter32.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter32.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = builder31.setLogLevel(logLevel36);
        retrofit.Server server39 = builder31.server;
        builder5.server = server39;
        retrofit.RestAdapter.LogLevel logLevel41 = builder5.logLevel;
        restAdapter0.logLevel = logLevel41;
        retrofit.Profiler profiler43 = restAdapter0.profiler;
        java.util.concurrent.Executor executor44 = restAdapter0.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor45 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder49 = builder46.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.Log log53 = restAdapter50.log;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter50.logLevel = logLevel54;
        retrofit.RestAdapter.Builder builder56 = builder49.setLogLevel(logLevel54);
        retrofit.client.Client.Provider provider57 = null;
        builder49.clientProvider = provider57;
        retrofit.RequestInterceptor requestInterceptor59 = builder49.requestInterceptor;
        retrofit.RestAdapter restAdapter60 = builder49.build();
        retrofit.ErrorHandler errorHandler61 = builder49.errorHandler;
        java.util.concurrent.Executor executor62 = builder49.callbackExecutor;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter67.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider74 = null;
        builder66.clientProvider = provider74;
        retrofit.Server server76 = null;
        builder66.server = server76;
        retrofit.RequestInterceptor requestInterceptor78 = builder66.requestInterceptor;
        builder49.requestInterceptor = requestInterceptor78;
        retrofit.Profiler profiler80 = null;
        builder49.profiler = profiler80;
        retrofit.RequestInterceptor requestInterceptor82 = builder49.requestInterceptor;
        retrofit.RestAdapter restAdapter83 = builder49.build();
        retrofit.converter.Converter converter84 = restAdapter83.converter;
        restAdapter0.converter = converter84;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(requestInterceptor59);
        org.junit.Assert.assertNotNull(restAdapter60);
        org.junit.Assert.assertNotNull(errorHandler61);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertNotNull(requestInterceptor82);
        org.junit.Assert.assertNotNull(restAdapter83);
        org.junit.Assert.assertNotNull(converter84);
    }

    @Test
    public void test07906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07906");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = null;
        builder17.clientProvider = provider25;
        retrofit.RequestInterceptor requestInterceptor27 = builder17.requestInterceptor;
        retrofit.RestAdapter.Builder builder28 = builder3.setRequestInterceptor(requestInterceptor27);
        retrofit.converter.Converter converter29 = builder28.converter;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler32 = builder30.errorHandler;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        java.util.concurrent.Executor executor35 = builder33.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor36 = builder33.requestInterceptor;
        retrofit.RestAdapter.Builder builder37 = builder30.setRequestInterceptor(requestInterceptor36);
        retrofit.converter.Converter converter38 = builder30.converter;
        builder28.converter = converter38;
        retrofit.client.Client.Provider provider40 = builder28.clientProvider;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.Profiler profiler42 = restAdapter41.profiler;
        retrofit.Profiler profiler43 = restAdapter41.profiler;
        retrofit.RequestInterceptor requestInterceptor44 = restAdapter41.requestInterceptor;
        retrofit.Server server45 = restAdapter41.server;
        retrofit.Server server46 = restAdapter41.server;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter48.logLevel = logLevel52;
        retrofit.Server server54 = null;
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter63.logLevel = logLevel65;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log62, logLevel65);
        restAdapter48.log = log62;
        builder47.log = log62;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        builder70.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder73 = builder70.setServer("hi!");
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter74.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler76 = restAdapter74.new RestHandler();
        retrofit.RestAdapter.Log log77 = restAdapter74.log;
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter74.logLevel = logLevel78;
        retrofit.RestAdapter.Builder builder80 = builder73.setLogLevel(logLevel78);
        retrofit.Server server81 = builder73.server;
        builder47.server = server81;
        retrofit.Server server83 = builder47.server;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.NONE;
        builder47.logLevel = logLevel84;
        retrofit.RestAdapter.LogLevel logLevel86 = builder47.logLevel;
        restAdapter41.logLevel = logLevel86;
        builder28.logLevel = logLevel86;
        boolean boolean89 = logLevel86.log();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(converter29);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertNull(requestInterceptor44);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(logLevel75);
        org.junit.Assert.assertNull(log77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(server83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test07907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07907");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder6 = builder3.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.RestAdapter.Builder builder13 = builder6.setLogLevel(logLevel11);
        retrofit.client.Client.Provider provider14 = null;
        builder6.clientProvider = provider14;
        retrofit.RequestInterceptor requestInterceptor16 = builder6.requestInterceptor;
        retrofit.RestAdapter restAdapter17 = builder6.build();
        java.util.concurrent.Executor executor18 = restAdapter17.callbackExecutor;
        retrofit.converter.Converter converter19 = restAdapter17.converter;
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.client.Client.Provider provider32 = null;
        builder24.clientProvider = provider32;
        retrofit.ErrorHandler errorHandler34 = builder24.errorHandler;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        builder35.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder38 = builder35.setServer("hi!");
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.Log log42 = restAdapter39.log;
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter39.logLevel = logLevel43;
        retrofit.RestAdapter.Builder builder45 = builder38.setLogLevel(logLevel43);
        retrofit.Server server46 = builder38.server;
        retrofit.RestAdapter.Builder builder47 = builder24.setServer(server46);
        java.util.concurrent.Executor executor48 = builder47.httpExecutor;
        restAdapter17.callbackExecutor = executor48;
        restAdapter0.httpExecutor = executor48;
        retrofit.Server server51 = restAdapter0.server;
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler53 = restAdapter0.profiler;
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter0.getLogLevel();
        retrofit.Server server55 = restAdapter0.server;
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter0.logLevel;
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter0.new RestHandler();
        java.lang.Throwable throwable58 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable58, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(requestInterceptor16);
        org.junit.Assert.assertNotNull(restAdapter17);
        org.junit.Assert.assertNotNull(executor18);
        org.junit.Assert.assertNotNull(converter19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertNull(logLevel56);
    }

    @Test
    public void test07908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07908");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = null;
        builder17.clientProvider = provider25;
        retrofit.RequestInterceptor requestInterceptor27 = builder17.requestInterceptor;
        retrofit.RestAdapter.Builder builder28 = builder3.setRequestInterceptor(requestInterceptor27);
        retrofit.converter.Converter converter29 = builder28.converter;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler32 = builder30.errorHandler;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        java.util.concurrent.Executor executor35 = builder33.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor36 = builder33.requestInterceptor;
        retrofit.RestAdapter.Builder builder37 = builder30.setRequestInterceptor(requestInterceptor36);
        retrofit.converter.Converter converter38 = builder30.converter;
        builder28.converter = converter38;
        retrofit.client.Client.Provider provider40 = builder28.clientProvider;
        retrofit.converter.Converter converter41 = builder28.converter;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder45 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter46.new RestHandler();
        retrofit.RestAdapter.Log log49 = restAdapter46.log;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter46.logLevel = logLevel50;
        retrofit.RestAdapter.Builder builder52 = builder45.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        builder59.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder62 = builder59.setServer("hi!");
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler65 = restAdapter63.new RestHandler();
        retrofit.RestAdapter.Log log66 = restAdapter63.log;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter63.logLevel = logLevel67;
        retrofit.RestAdapter.Builder builder69 = builder62.setLogLevel(logLevel67);
        java.util.concurrent.Executor executor70 = builder62.callbackExecutor;
        restAdapter55.callbackExecutor = executor70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter72.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler74 = restAdapter72.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter72.getLogLevel();
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder79 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler82 = restAdapter80.new RestHandler();
        retrofit.RestAdapter.Log log83 = restAdapter80.log;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter80.logLevel = logLevel84;
        retrofit.RestAdapter.Builder builder86 = builder79.setLogLevel(logLevel84);
        java.util.concurrent.Executor executor87 = builder79.callbackExecutor;
        restAdapter72.callbackExecutor = executor87;
        retrofit.RestAdapter.Builder builder89 = builder54.setExecutors(executor70, executor87);
        retrofit.RequestInterceptor requestInterceptor90 = builder54.requestInterceptor;
        builder28.requestInterceptor = requestInterceptor90;
        retrofit.Profiler profiler92 = null;
        builder28.profiler = profiler92;
        retrofit.RestAdapter restAdapter94 = builder28.build();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(converter29);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(converter38);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNotNull(converter41);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(executor70);
        org.junit.Assert.assertNull(logLevel73);
        org.junit.Assert.assertNull(logLevel75);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(logLevel81);
        org.junit.Assert.assertNull(log83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(executor87);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(requestInterceptor90);
        org.junit.Assert.assertNotNull(restAdapter94);
    }

    @Test
    public void test07909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07909");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.client.Client.Provider provider15 = null;
        builder7.clientProvider = provider15;
        retrofit.ErrorHandler errorHandler17 = builder7.errorHandler;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        retrofit.Server server29 = builder21.server;
        retrofit.RestAdapter.Builder builder30 = builder7.setServer(server29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        retrofit.client.Client.Provider provider42 = null;
        builder34.clientProvider = provider42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder47 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter48.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder54 = builder47.setLogLevel(logLevel52);
        retrofit.client.Client.Provider provider55 = null;
        builder47.clientProvider = provider55;
        retrofit.ErrorHandler errorHandler57 = builder47.errorHandler;
        retrofit.RestAdapter.Builder builder58 = builder34.setErrorHandler(errorHandler57);
        java.util.concurrent.Executor executor59 = builder58.httpExecutor;
        builder30.httpExecutor = executor59;
        java.util.concurrent.Executor executor61 = builder30.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel62 = builder30.logLevel;
        restAdapter0.logLevel = logLevel62;
        java.util.concurrent.Executor executor64 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter0.logLevel;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(errorHandler17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07910");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter restAdapter3 = new retrofit.RestAdapter();
        retrofit.Server server4 = restAdapter3.server;
        retrofit.RequestInterceptor requestInterceptor5 = restAdapter3.requestInterceptor;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder9 = builder6.setServer("hi!");
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Log log13 = restAdapter10.log;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.logLevel = logLevel14;
        retrofit.RestAdapter.Builder builder16 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("hi!");
        retrofit.client.Client.Provider provider19 = builder18.clientProvider;
        restAdapter3.clientProvider = provider19;
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter3.new RestHandler();
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.ErrorHandler errorHandler24 = null;
        restAdapter22.errorHandler = errorHandler24;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.Server server27 = restAdapter26.server;
        retrofit.Server server28 = null;
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.converter.Converter converter33 = null;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter37.log;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter37.logLevel = logLevel41;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        restAdapter37.log = log51;
        builder36.log = log51;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel70);
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor32, converter33, profiler34, errorHandler35, log51, logLevel70);
        restAdapter26.log = log51;
        restAdapter22.log = log51;
        restAdapter3.log = log51;
        retrofit.RestAdapter.Builder builder77 = builder0.setLog(log51);
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter78.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter78.logLevel = logLevel80;
        retrofit.ErrorHandler errorHandler82 = null;
        restAdapter78.errorHandler = errorHandler82;
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter78.logLevel;
        boolean boolean85 = logLevel84.log();
        retrofit.RestAdapter.Builder builder86 = builder0.setLogLevel(logLevel84);
        retrofit.RequestInterceptor requestInterceptor87 = builder86.requestInterceptor;
        retrofit.client.Client.Provider provider88 = builder86.clientProvider;
        retrofit.client.Client.Provider provider89 = builder86.clientProvider;
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(requestInterceptor5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(logLevel79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(requestInterceptor87);
        org.junit.Assert.assertNull(provider88);
        org.junit.Assert.assertNull(provider89);
    }

    @Test
    public void test07911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07911");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter4.logLevel = logLevel6;
        retrofit.ErrorHandler errorHandler8 = null;
        restAdapter4.errorHandler = errorHandler8;
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter4.logLevel;
        restAdapter0.logLevel = logLevel10;
        java.util.concurrent.Executor executor12 = restAdapter0.httpExecutor;
        retrofit.converter.Converter converter13 = null;
        restAdapter0.converter = converter13;
        java.util.concurrent.Executor executor15 = restAdapter0.callbackExecutor;
        java.util.concurrent.Executor executor16 = restAdapter0.httpExecutor;
        retrofit.client.Client.Provider provider17 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider19 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        builder20.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder23 = builder20.setServer("hi!");
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.Log log27 = restAdapter24.log;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter24.logLevel = logLevel28;
        retrofit.RestAdapter.Builder builder30 = builder23.setLogLevel(logLevel28);
        retrofit.Server server31 = builder23.server;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder35 = builder32.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter36.new RestHandler();
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter36.logLevel = logLevel40;
        retrofit.RestAdapter.Builder builder42 = builder35.setLogLevel(logLevel40);
        retrofit.client.Client.Provider provider43 = builder42.clientProvider;
        builder23.clientProvider = provider43;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter45.logLevel = logLevel47;
        retrofit.ErrorHandler errorHandler49 = null;
        restAdapter45.errorHandler = errorHandler49;
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter45.logLevel;
        builder23.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = builder53.setServer("hi!");
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Log log60 = restAdapter57.log;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter57.logLevel = logLevel61;
        retrofit.RestAdapter.Builder builder63 = builder56.setLogLevel(logLevel61);
        retrofit.client.Client.Provider provider64 = null;
        builder56.clientProvider = provider64;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter66.log;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter66.logLevel = logLevel70;
        retrofit.Server server72 = null;
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.RequestInterceptor requestInterceptor76 = null;
        retrofit.converter.Converter converter77 = null;
        retrofit.Profiler profiler78 = null;
        retrofit.ErrorHandler errorHandler79 = null;
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter81.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter81.logLevel = logLevel83;
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor76, converter77, profiler78, errorHandler79, log80, logLevel83);
        restAdapter66.log = log80;
        retrofit.RestAdapter.Builder builder87 = builder56.setLog(log80);
        log80.log("hi!");
        builder23.log = log80;
        restAdapter0.log = log80;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(provider43);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNull(logLevel82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test07912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07912");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter36.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        java.util.concurrent.Executor executor51 = builder43.callbackExecutor;
        restAdapter36.callbackExecutor = executor51;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        java.util.concurrent.Executor executor68 = builder60.callbackExecutor;
        restAdapter53.callbackExecutor = executor68;
        retrofit.RestAdapter.Builder builder70 = builder35.setExecutors(executor51, executor68);
        java.util.concurrent.Executor executor71 = builder70.callbackExecutor;
        builder0.callbackExecutor = executor71;
        retrofit.Server server73 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor74 = builder0.requestInterceptor;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter75 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(executor71);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertNull(requestInterceptor74);
    }

    @Test
    public void test07913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07913");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor4 = restAdapter0.requestInterceptor;
        retrofit.converter.Converter converter5 = null;
        restAdapter0.converter = converter5;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        retrofit.converter.Converter converter8 = null;
        restAdapter0.converter = converter8;
        java.util.concurrent.Executor executor10 = restAdapter0.httpExecutor;
        retrofit.client.Client.Provider provider11 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.converter.Converter converter25 = restAdapter19.converter;
        retrofit.converter.Converter converter26 = restAdapter19.converter;
        java.util.concurrent.Executor executor27 = restAdapter19.callbackExecutor;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter28.new RestHandler();
        retrofit.RestAdapter.Log log31 = restAdapter28.log;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter28.logLevel = logLevel32;
        retrofit.converter.Converter converter34 = restAdapter28.converter;
        java.util.concurrent.Executor executor35 = restAdapter28.callbackExecutor;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.RequestInterceptor requestInterceptor49 = builder39.requestInterceptor;
        retrofit.RestAdapter restAdapter50 = builder39.build();
        retrofit.ErrorHandler errorHandler51 = builder39.errorHandler;
        retrofit.converter.Converter converter52 = builder39.converter;
        restAdapter28.converter = converter52;
        restAdapter19.converter = converter52;
        retrofit.RestAdapter.Builder builder55 = builder18.setConverter(converter52);
        retrofit.Profiler profiler56 = null;
        builder55.profiler = profiler56;
        retrofit.RestAdapter.LogLevel logLevel58 = builder55.logLevel;
        restAdapter0.logLevel = logLevel58;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(converter26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(converter52);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test07914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07914");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler6 = null;
        restAdapter0.profiler = profiler6;
        retrofit.ErrorHandler errorHandler8 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.Profiler profiler22 = builder19.profiler;
        retrofit.ErrorHandler errorHandler23 = builder19.errorHandler;
        builder19.ensureSaneDefaults();
        retrofit.Server server25 = builder19.server;
        java.util.concurrent.Executor executor26 = builder19.callbackExecutor;
        restAdapter0.callbackExecutor = executor26;
        retrofit.Profiler profiler28 = null;
        restAdapter0.profiler = profiler28;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(errorHandler8);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(executor26);
    }

    @Test
    public void test07915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07915");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.client.Client.Provider provider15 = null;
        builder7.clientProvider = provider15;
        retrofit.ErrorHandler errorHandler17 = builder7.errorHandler;
        retrofit.Server server18 = builder7.server;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder29 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider30 = builder29.clientProvider;
        retrofit.RestAdapter.Builder builder31 = builder7.setClient(provider30);
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder36 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter37.log;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter37.logLevel = logLevel41;
        retrofit.RestAdapter.Builder builder43 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("hi!");
        retrofit.client.Client.Provider provider46 = builder45.clientProvider;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.converter.Converter converter53 = restAdapter47.converter;
        retrofit.Profiler profiler54 = restAdapter47.profiler;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter56.new RestHandler();
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter56.logLevel = logLevel60;
        retrofit.Server server62 = null;
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.converter.Converter converter67 = null;
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter71.logLevel = logLevel73;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor66, converter67, profiler68, errorHandler69, log70, logLevel73);
        restAdapter56.log = log70;
        builder55.log = log70;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        builder78.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder81 = builder78.setServer("hi!");
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter82.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler84 = restAdapter82.new RestHandler();
        retrofit.RestAdapter.Log log85 = restAdapter82.log;
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter82.logLevel = logLevel86;
        retrofit.RestAdapter.Builder builder88 = builder81.setLogLevel(logLevel86);
        retrofit.Server server89 = builder81.server;
        builder55.server = server89;
        retrofit.RestAdapter.LogLevel logLevel91 = builder55.logLevel;
        restAdapter47.setLogLevel(logLevel91);
        builder45.logLevel = logLevel91;
        retrofit.RestAdapter.Log log94 = builder45.log;
        retrofit.ErrorHandler errorHandler95 = builder45.errorHandler;
        retrofit.RestAdapter.Builder builder96 = builder31.setErrorHandler(errorHandler95);
        retrofit.RequestInterceptor requestInterceptor97 = builder96.requestInterceptor;
        retrofit.RestAdapter.Builder builder98 = builder0.setRequestInterceptor(requestInterceptor97);
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(errorHandler17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(provider30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(provider46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNull(profiler54);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(logLevel83);
        org.junit.Assert.assertNull(log85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(server89);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log94);
        org.junit.Assert.assertNotNull(errorHandler95);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNotNull(requestInterceptor97);
        org.junit.Assert.assertNotNull(builder98);
    }

    @Test
    public void test07916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07916");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter24.logLevel = logLevel26;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel26);
        restAdapter9.log = log23;
        builder8.log = log23;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel42);
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log23, logLevel42);
        retrofit.RestAdapter.Log log46 = restAdapter45.log;
        retrofit.converter.Converter converter47 = restAdapter45.converter;
        retrofit.ErrorHandler errorHandler48 = restAdapter45.errorHandler;
        retrofit.client.Request request49 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request50 = restAdapter45.logAndReplaceRequest(request49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNull(converter47);
        org.junit.Assert.assertNull(errorHandler48);
    }

    @Test
    public void test07917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07917");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        java.util.concurrent.Executor executor5 = builder3.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor6 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = builder0.setRequestInterceptor(requestInterceptor6);
        retrofit.converter.Converter converter8 = builder0.converter;
        retrofit.RestAdapter.Builder builder10 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter11.logLevel = logLevel13;
        retrofit.client.Client.Provider provider15 = restAdapter11.clientProvider;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider17 = null;
        builder16.clientProvider = provider17;
        retrofit.RestAdapter.Builder builder20 = builder16.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.client.Client.Provider provider32 = null;
        builder24.clientProvider = provider32;
        retrofit.RequestInterceptor requestInterceptor34 = builder24.requestInterceptor;
        retrofit.RestAdapter restAdapter35 = builder24.build();
        retrofit.ErrorHandler errorHandler36 = builder24.errorHandler;
        retrofit.RestAdapter.Builder builder37 = builder16.setErrorHandler(errorHandler36);
        restAdapter11.errorHandler = errorHandler36;
        retrofit.RestAdapter.Builder builder39 = builder10.setErrorHandler(errorHandler36);
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel70);
        restAdapter53.log = log67;
        retrofit.RestAdapter.Builder builder74 = builder43.setLog(log67);
        retrofit.Profiler profiler75 = builder43.profiler;
        java.util.concurrent.Executor executor76 = builder43.httpExecutor;
        builder39.callbackExecutor = executor76;
        org.junit.Assert.assertNotNull(errorHandler2);
        org.junit.Assert.assertNotNull(executor5);
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(converter8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertNotNull(restAdapter35);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(profiler75);
        org.junit.Assert.assertNotNull(executor76);
    }

    @Test
    public void test07918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07918");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.ErrorHandler errorHandler7 = restAdapter0.errorHandler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(errorHandler7);
    }

    @Test
    public void test07919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07919");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.ErrorHandler errorHandler15 = builder3.errorHandler;
        java.util.concurrent.Executor executor16 = builder3.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel17 = builder3.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder3.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter20 = builder19.converter;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        java.util.concurrent.Executor executor32 = builder24.callbackExecutor;
        retrofit.Profiler profiler33 = null;
        builder24.profiler = profiler33;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        java.util.concurrent.Executor executor50 = builder42.callbackExecutor;
        restAdapter35.callbackExecutor = executor50;
        builder24.callbackExecutor = executor50;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        java.util.concurrent.Executor executor68 = builder60.callbackExecutor;
        restAdapter53.callbackExecutor = executor68;
        builder24.httpExecutor = executor68;
        java.util.concurrent.Executor executor71 = builder24.callbackExecutor;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        java.util.concurrent.Executor executor74 = builder72.httpExecutor;
        builder24.httpExecutor = executor74;
        builder19.callbackExecutor = executor74;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(converter20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(executor71);
        org.junit.Assert.assertNotNull(executor74);
    }

    @Test
    public void test07920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07920");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        java.util.concurrent.Executor executor23 = builder15.callbackExecutor;
        retrofit.Profiler profiler24 = null;
        builder15.profiler = profiler24;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder33 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.RestAdapter.Builder builder40 = builder33.setLogLevel(logLevel38);
        java.util.concurrent.Executor executor41 = builder33.callbackExecutor;
        restAdapter26.callbackExecutor = executor41;
        builder15.callbackExecutor = executor41;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder51 = builder48.setServer("hi!");
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.Log log55 = restAdapter52.log;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter52.logLevel = logLevel56;
        retrofit.RestAdapter.Builder builder58 = builder51.setLogLevel(logLevel56);
        java.util.concurrent.Executor executor59 = builder51.callbackExecutor;
        restAdapter44.callbackExecutor = executor59;
        builder15.httpExecutor = executor59;
        builder10.httpExecutor = executor59;
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder67 = builder64.setServer("hi!");
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler70 = restAdapter68.new RestHandler();
        retrofit.RestAdapter.Log log71 = restAdapter68.log;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter68.logLevel = logLevel72;
        retrofit.RestAdapter.Builder builder74 = builder67.setLogLevel(logLevel72);
        retrofit.client.Client.Provider provider75 = null;
        builder67.clientProvider = provider75;
        retrofit.RequestInterceptor requestInterceptor77 = builder67.requestInterceptor;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        builder78.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder81 = builder78.setServer("hi!");
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter82.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler84 = restAdapter82.new RestHandler();
        retrofit.RestAdapter.Log log85 = restAdapter82.log;
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter82.logLevel = logLevel86;
        retrofit.RestAdapter.Builder builder88 = builder81.setLogLevel(logLevel86);
        retrofit.client.Client.Provider provider89 = null;
        builder81.clientProvider = provider89;
        retrofit.RequestInterceptor requestInterceptor91 = builder81.requestInterceptor;
        retrofit.RestAdapter.Builder builder92 = builder67.setRequestInterceptor(requestInterceptor91);
        retrofit.RestAdapter.Builder builder93 = builder10.setRequestInterceptor(requestInterceptor91);
        retrofit.Server server94 = builder10.server;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(executor23);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(requestInterceptor77);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(logLevel83);
        org.junit.Assert.assertNull(log85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(requestInterceptor91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(server94);
    }

    @Test
    public void test07921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07921");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        java.util.concurrent.Executor executor11 = builder3.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel12 = builder3.logLevel;
        retrofit.ErrorHandler errorHandler13 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = null;
        builder17.clientProvider = provider25;
        retrofit.ErrorHandler errorHandler27 = builder17.errorHandler;
        retrofit.Server server28 = builder17.server;
        java.util.concurrent.Executor executor29 = builder17.httpExecutor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder33 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.RestAdapter.Builder builder40 = builder33.setLogLevel(logLevel38);
        retrofit.client.Client.Provider provider41 = null;
        builder33.clientProvider = provider41;
        retrofit.RequestInterceptor requestInterceptor43 = builder33.requestInterceptor;
        retrofit.RestAdapter restAdapter44 = builder33.build();
        java.util.concurrent.Executor executor45 = restAdapter44.callbackExecutor;
        retrofit.RestAdapter.Builder builder46 = builder3.setExecutors(executor29, executor45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder50 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        retrofit.RestAdapter.Log log54 = restAdapter51.log;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter51.logLevel = logLevel55;
        retrofit.RestAdapter.Builder builder57 = builder50.setLogLevel(logLevel55);
        retrofit.client.Client.Provider provider58 = null;
        builder50.clientProvider = provider58;
        retrofit.RequestInterceptor requestInterceptor60 = builder50.requestInterceptor;
        retrofit.RestAdapter restAdapter61 = builder50.build();
        java.util.concurrent.Executor executor62 = restAdapter61.callbackExecutor;
        retrofit.converter.Converter converter63 = restAdapter61.converter;
        retrofit.RestAdapter.Builder builder64 = builder46.setConverter(converter63);
        retrofit.client.Client.Provider provider65 = builder64.clientProvider;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(requestInterceptor43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(converter63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(provider65);
    }

    @Test
    public void test07922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07922");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        java.util.concurrent.Executor executor16 = builder8.callbackExecutor;
        builder0.httpExecutor = executor16;
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider19 = builder0.clientProvider;
        java.util.concurrent.Executor executor20 = builder0.httpExecutor;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter21.logLevel = logLevel23;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter25.logLevel = logLevel27;
        retrofit.ErrorHandler errorHandler29 = null;
        restAdapter25.errorHandler = errorHandler29;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter25.logLevel;
        restAdapter21.logLevel = logLevel31;
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter21.new RestHandler();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.Profiler profiler35 = restAdapter34.profiler;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.ErrorHandler errorHandler49 = builder39.errorHandler;
        restAdapter34.errorHandler = errorHandler49;
        restAdapter21.errorHandler = errorHandler49;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel70);
        restAdapter53.log = log67;
        builder52.log = log67;
        restAdapter21.log = log67;
        retrofit.RestAdapter.Builder builder76 = builder0.setLog(log67);
        retrofit.Server server77 = null;
        builder76.server = server77;
        retrofit.Profiler profiler79 = null;
        builder76.profiler = profiler79;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test07923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07923");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.ErrorHandler errorHandler6 = null;
        builder0.errorHandler = errorHandler6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        java.util.concurrent.Executor executor19 = builder11.callbackExecutor;
        builder0.httpExecutor = executor19;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.ErrorHandler errorHandler23 = null;
        restAdapter21.errorHandler = errorHandler23;
        retrofit.client.Client.Provider provider25 = restAdapter21.clientProvider;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.Profiler profiler27 = restAdapter26.profiler;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder31 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.Log log35 = restAdapter32.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter32.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = builder31.setLogLevel(logLevel36);
        retrofit.client.Client.Provider provider39 = null;
        builder31.clientProvider = provider39;
        retrofit.ErrorHandler errorHandler41 = builder31.errorHandler;
        restAdapter26.errorHandler = errorHandler41;
        restAdapter21.errorHandler = errorHandler41;
        retrofit.RestAdapter.Builder builder44 = builder0.setErrorHandler(errorHandler41);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder48 = builder45.setServer("hi!");
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        retrofit.RestAdapter.Log log52 = restAdapter49.log;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter49.logLevel = logLevel53;
        retrofit.RestAdapter.Builder builder55 = builder48.setLogLevel(logLevel53);
        retrofit.client.Client.Provider provider56 = null;
        builder48.clientProvider = provider56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder61 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter62.new RestHandler();
        retrofit.RestAdapter.Log log65 = restAdapter62.log;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter62.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder68 = builder61.setLogLevel(logLevel66);
        retrofit.client.Client.Provider provider69 = null;
        builder61.clientProvider = provider69;
        retrofit.ErrorHandler errorHandler71 = builder61.errorHandler;
        retrofit.RestAdapter.Builder builder72 = builder48.setErrorHandler(errorHandler71);
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter73.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter73.logLevel = logLevel75;
        builder48.logLevel = logLevel75;
        retrofit.converter.Converter converter78 = null;
        builder48.converter = converter78;
        retrofit.RestAdapter.Log log80 = builder48.log;
        log80.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder83 = builder0.setLog(log80);
        retrofit.Profiler profiler84 = null;
        builder83.profiler = profiler84;
        retrofit.RestAdapter.Builder builder87 = builder83.setServer("Retrofit-Idle");
        builder83.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler89 = builder83.errorHandler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(errorHandler71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(logLevel74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(errorHandler89);
    }

    @Test
    public void test07924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07924");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider16 = null;
        builder8.clientProvider = provider16;
        retrofit.RequestInterceptor requestInterceptor18 = builder8.requestInterceptor;
        retrofit.RestAdapter restAdapter19 = builder8.build();
        retrofit.ErrorHandler errorHandler20 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder21 = builder0.setErrorHandler(errorHandler20);
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.Log log24 = restAdapter22.log;
        java.util.concurrent.Executor executor25 = restAdapter22.httpExecutor;
        retrofit.Server server26 = null;
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.converter.Converter converter31 = null;
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter35.logLevel = logLevel37;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor30, converter31, profiler32, errorHandler33, log34, logLevel37);
        restAdapter22.log = log34;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder44 = builder41.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder46 = builder41.setLogLevel(logLevel45);
        restAdapter22.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder48 = builder21.setLogLevel(logLevel45);
        retrofit.RequestInterceptor requestInterceptor49 = builder48.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        builder50.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = builder50.setServer("hi!");
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter54.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Log log57 = restAdapter54.log;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter54.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder60 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider61 = null;
        builder53.clientProvider = provider61;
        retrofit.Server server63 = null;
        builder53.server = server63;
        retrofit.RequestInterceptor requestInterceptor65 = builder53.requestInterceptor;
        builder48.requestInterceptor = requestInterceptor65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor68 = builder67.callbackExecutor;
        retrofit.Profiler profiler69 = null;
        builder67.profiler = profiler69;
        retrofit.RestAdapter.Log log71 = builder67.log;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder75 = builder72.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter76.new RestHandler();
        retrofit.RestAdapter.Log log79 = restAdapter76.log;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter76.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = builder75.setLogLevel(logLevel80);
        java.util.concurrent.Executor executor83 = builder75.callbackExecutor;
        builder67.httpExecutor = executor83;
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter85.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter85.logLevel = logLevel87;
        retrofit.ErrorHandler errorHandler89 = null;
        restAdapter85.errorHandler = errorHandler89;
        java.util.concurrent.Executor executor91 = restAdapter85.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter85.logLevel;
        retrofit.RestAdapter.Builder builder93 = builder67.setLogLevel(logLevel92);
        builder48.logLevel = logLevel92;
        retrofit.converter.Converter converter95 = builder48.converter;
        retrofit.Profiler profiler96 = builder48.profiler;
        retrofit.RequestInterceptor requestInterceptor97 = builder48.requestInterceptor;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(restAdapter19);
        org.junit.Assert.assertNotNull(errorHandler20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(log57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(logLevel77);
        org.junit.Assert.assertNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(executor83);
        org.junit.Assert.assertNull(logLevel86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNull(converter95);
        org.junit.Assert.assertNull(profiler96);
        org.junit.Assert.assertNotNull(requestInterceptor97);
    }

    @Test
    public void test07925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07925");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider19 = null;
        builder11.clientProvider = provider19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = builder21.setServer("hi!");
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder31 = builder24.setLogLevel(logLevel29);
        retrofit.client.Client.Provider provider32 = null;
        builder24.clientProvider = provider32;
        retrofit.ErrorHandler errorHandler34 = builder24.errorHandler;
        retrofit.RestAdapter.Builder builder35 = builder11.setErrorHandler(errorHandler34);
        java.util.concurrent.Executor executor36 = builder35.httpExecutor;
        restAdapter0.callbackExecutor = executor36;
        retrofit.client.Client.Provider provider38 = restAdapter0.clientProvider;
        retrofit.client.Client.Provider provider39 = restAdapter0.clientProvider;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(provider39);
    }

    @Test
    public void test07926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07926");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider25 = null;
        builder17.clientProvider = provider25;
        retrofit.RequestInterceptor requestInterceptor27 = builder17.requestInterceptor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder31 = builder28.setServer("hi!");
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.Log log35 = restAdapter32.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter32.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = builder31.setLogLevel(logLevel36);
        retrofit.client.Client.Provider provider39 = null;
        builder31.clientProvider = provider39;
        retrofit.RequestInterceptor requestInterceptor41 = builder31.requestInterceptor;
        retrofit.RestAdapter.Builder builder42 = builder17.setRequestInterceptor(requestInterceptor41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor44 = builder43.callbackExecutor;
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder50 = builder47.setServer("hi!");
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter51.new RestHandler();
        retrofit.RestAdapter.Log log54 = restAdapter51.log;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter51.logLevel = logLevel55;
        retrofit.RestAdapter.Builder builder57 = builder50.setLogLevel(logLevel55);
        retrofit.Server server58 = builder50.server;
        builder43.server = server58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter62.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter62.getLogLevel();
        java.util.concurrent.Executor executor66 = restAdapter62.callbackExecutor;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder70 = builder67.setServer("hi!");
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.RestAdapter.Log log74 = restAdapter71.log;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter71.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = builder70.setLogLevel(logLevel75);
        retrofit.client.Client.Provider provider78 = null;
        builder70.clientProvider = provider78;
        retrofit.RequestInterceptor requestInterceptor80 = builder70.requestInterceptor;
        retrofit.RestAdapter restAdapter81 = builder70.build();
        retrofit.ErrorHandler errorHandler82 = builder70.errorHandler;
        retrofit.converter.Converter converter83 = builder70.converter;
        restAdapter62.converter = converter83;
        builder60.converter = converter83;
        retrofit.RestAdapter.Builder builder86 = builder43.setConverter(converter83);
        builder42.converter = converter83;
        builder3.converter = converter83;
        builder3.ensureSaneDefaults();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder91 = builder3.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(requestInterceptor41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(requestInterceptor80);
        org.junit.Assert.assertNotNull(restAdapter81);
        org.junit.Assert.assertNotNull(errorHandler82);
        org.junit.Assert.assertNotNull(converter83);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test07927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07927");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.client.Client.Provider provider4 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider6 = null;
        builder5.clientProvider = provider6;
        retrofit.RestAdapter.Builder builder9 = builder5.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder13 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter14.logLevel = logLevel18;
        retrofit.RestAdapter.Builder builder20 = builder13.setLogLevel(logLevel18);
        retrofit.client.Client.Provider provider21 = null;
        builder13.clientProvider = provider21;
        retrofit.RequestInterceptor requestInterceptor23 = builder13.requestInterceptor;
        retrofit.RestAdapter restAdapter24 = builder13.build();
        retrofit.ErrorHandler errorHandler25 = builder13.errorHandler;
        retrofit.RestAdapter.Builder builder26 = builder5.setErrorHandler(errorHandler25);
        restAdapter0.errorHandler = errorHandler25;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder31 = builder28.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder33 = builder28.setLogLevel(logLevel32);
        retrofit.converter.Converter converter34 = null;
        builder28.converter = converter34;
        java.util.concurrent.Executor executor36 = builder28.callbackExecutor;
        retrofit.RestAdapter restAdapter37 = builder28.build();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder41 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log45 = restAdapter42.log;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter42.logLevel = logLevel46;
        retrofit.RestAdapter.Builder builder48 = builder41.setLogLevel(logLevel46);
        retrofit.client.Client.Provider provider49 = builder48.clientProvider;
        retrofit.ErrorHandler errorHandler50 = builder48.errorHandler;
        retrofit.RestAdapter.Builder builder51 = builder28.setErrorHandler(errorHandler50);
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.Profiler profiler53 = restAdapter52.profiler;
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter52.new RestHandler();
        retrofit.converter.Converter converter55 = restAdapter52.converter;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel56;
        retrofit.Profiler profiler58 = restAdapter52.profiler;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        builder59.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder62 = builder59.setServer("hi!");
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler65 = restAdapter63.new RestHandler();
        retrofit.RestAdapter.Log log66 = restAdapter63.log;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter63.logLevel = logLevel67;
        retrofit.RestAdapter.Builder builder69 = builder62.setLogLevel(logLevel67);
        builder69.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor71 = builder69.requestInterceptor;
        retrofit.client.Client.Provider provider72 = builder69.clientProvider;
        restAdapter52.clientProvider = provider72;
        retrofit.RestAdapter.Builder builder74 = builder51.setClient(provider72);
        restAdapter0.clientProvider = provider72;
        java.util.concurrent.Executor executor76 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Log log77 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter0.getLogLevel();
        retrofit.Profiler profiler79 = restAdapter0.profiler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(restAdapter24);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(provider49);
        org.junit.Assert.assertNotNull(errorHandler50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler58);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(requestInterceptor71);
        org.junit.Assert.assertNotNull(provider72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(executor76);
        org.junit.Assert.assertNull(log77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler79);
    }

    @Test
    public void test07928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07928");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RequestInterceptor requestInterceptor4 = restAdapter0.requestInterceptor;
        retrofit.converter.Converter converter5 = null;
        restAdapter0.converter = converter5;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        retrofit.converter.Converter converter8 = null;
        restAdapter0.converter = converter8;
        retrofit.client.Client.Provider provider10 = restAdapter0.clientProvider;
        retrofit.converter.Converter converter11 = restAdapter0.converter;
        retrofit.client.Client.Provider provider12 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("hi!");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.RestAdapter.Builder builder23 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("hi!");
        retrofit.client.Client.Provider provider26 = builder25.clientProvider;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter27.logLevel = logLevel29;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        restAdapter27.requestInterceptor = requestInterceptor31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel51);
        restAdapter34.log = log48;
        builder33.log = log48;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        builder56.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder59 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter60.new RestHandler();
        retrofit.RestAdapter.Log log63 = restAdapter60.log;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter60.logLevel = logLevel64;
        retrofit.RestAdapter.Builder builder66 = builder59.setLogLevel(logLevel64);
        retrofit.Server server67 = builder59.server;
        builder33.server = server67;
        restAdapter27.server = server67;
        retrofit.RestAdapter.Builder builder70 = builder25.setServer(server67);
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.Profiler profiler72 = restAdapter71.profiler;
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.converter.Converter converter74 = restAdapter71.converter;
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter71.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = builder70.setLogLevel(logLevel75);
        retrofit.RestAdapter.Log log78 = builder70.log;
        restAdapter0.log = log78;
        retrofit.RestAdapter.Log log80 = restAdapter0.log;
        retrofit.Server server81 = restAdapter0.server;
        retrofit.Profiler profiler82 = restAdapter0.profiler;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(provider26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNull(log63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(server67);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(profiler72);
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNull(server81);
        org.junit.Assert.assertNull(profiler82);
    }

    @Test
    public void test07929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07929");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        java.util.concurrent.Executor executor16 = builder8.callbackExecutor;
        builder0.httpExecutor = executor16;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter18.logLevel = logLevel20;
        retrofit.ErrorHandler errorHandler22 = null;
        restAdapter18.errorHandler = errorHandler22;
        java.util.concurrent.Executor executor24 = restAdapter18.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter18.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder0.setLogLevel(logLevel25);
        retrofit.RequestInterceptor requestInterceptor27 = builder0.requestInterceptor;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        builder39.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor41 = builder39.requestInterceptor;
        retrofit.client.Client.Provider provider42 = builder39.clientProvider;
        retrofit.RestAdapter.Builder builder43 = builder0.setClient(provider42);
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(requestInterceptor41);
        org.junit.Assert.assertNotNull(provider42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test07930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07930");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel7 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder9 = builder4.setServer("hi!");
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder13 = builder10.setServer("hi!");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder16 = builder13.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.converter.Converter converter23 = restAdapter17.converter;
        java.util.concurrent.Executor executor24 = restAdapter17.callbackExecutor;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder28 = builder25.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.logLevel = logLevel33;
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel33);
        retrofit.client.Client.Provider provider36 = null;
        builder28.clientProvider = provider36;
        retrofit.RequestInterceptor requestInterceptor38 = builder28.requestInterceptor;
        retrofit.RestAdapter restAdapter39 = builder28.build();
        retrofit.ErrorHandler errorHandler40 = builder28.errorHandler;
        retrofit.converter.Converter converter41 = builder28.converter;
        restAdapter17.converter = converter41;
        builder13.converter = converter41;
        builder4.converter = converter41;
        retrofit.Profiler profiler45 = builder4.profiler;
        java.util.concurrent.Executor executor46 = builder4.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel47 = builder4.logLevel;
        boolean boolean48 = logLevel47.log();
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertNotNull(converter41);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test07931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07931");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.converter.Converter converter7 = builder4.converter;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = builder21.callbackExecutor;
        retrofit.Profiler profiler23 = null;
        builder21.profiler = profiler23;
        retrofit.RestAdapter.Log log25 = builder21.log;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder29 = builder26.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter30.new RestHandler();
        retrofit.RestAdapter.Log log33 = restAdapter30.log;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter30.logLevel = logLevel34;
        retrofit.RestAdapter.Builder builder36 = builder29.setLogLevel(logLevel34);
        java.util.concurrent.Executor executor37 = builder29.callbackExecutor;
        builder21.httpExecutor = executor37;
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel40 = builder21.logLevel;
        builder20.logLevel = logLevel40;
        retrofit.RestAdapter.Builder builder42 = builder4.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder44 = builder4.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider45 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        builder46.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder49 = builder46.setServer("hi!");
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.Log log53 = restAdapter50.log;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter50.logLevel = logLevel54;
        retrofit.RestAdapter.Builder builder56 = builder49.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter();
        retrofit.Server server60 = restAdapter59.server;
        retrofit.RequestInterceptor requestInterceptor61 = restAdapter59.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter59.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder58.setLogLevel(logLevel62);
        java.util.concurrent.Executor executor65 = builder64.httpExecutor;
        retrofit.RestAdapter.Log log66 = builder64.log;
        retrofit.RestAdapter restAdapter67 = builder64.build();
        retrofit.ErrorHandler errorHandler68 = restAdapter67.errorHandler;
        retrofit.RestAdapter.Builder builder69 = builder4.setErrorHandler(errorHandler68);
        retrofit.RestAdapter restAdapter70 = builder4.build();
        retrofit.client.Client.Provider provider71 = builder4.clientProvider;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertNull(requestInterceptor61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(executor65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(restAdapter67);
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(provider71);
    }

    @Test
    public void test07932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07932");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        java.util.concurrent.Executor executor8 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider10 = null;
        builder9.clientProvider = provider10;
        retrofit.RestAdapter.Builder builder13 = builder9.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = builder14.callbackExecutor;
        retrofit.Profiler profiler16 = null;
        builder14.profiler = profiler16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        retrofit.Server server29 = builder21.server;
        builder14.server = server29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.Log log35 = restAdapter32.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter32.logLevel = logLevel36;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter47.logLevel = logLevel49;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel49);
        restAdapter32.log = log46;
        builder31.log = log46;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.Log log61 = restAdapter58.log;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        retrofit.Server server65 = builder57.server;
        builder31.server = server65;
        builder14.server = server65;
        retrofit.RestAdapter.Builder builder68 = builder13.setServer(server65);
        retrofit.RestAdapter.LogLevel logLevel69 = builder13.logLevel;
        restAdapter0.logLevel = logLevel69;
        retrofit.client.Client.Provider provider71 = restAdapter0.clientProvider;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter72.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler74 = restAdapter72.new RestHandler();
        retrofit.RestAdapter.Log log75 = restAdapter72.log;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter72.logLevel = logLevel76;
        retrofit.converter.Converter converter78 = restAdapter72.converter;
        retrofit.converter.Converter converter79 = restAdapter72.converter;
        java.util.concurrent.Executor executor80 = restAdapter72.callbackExecutor;
        java.util.concurrent.Executor executor81 = restAdapter72.callbackExecutor;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        builder82.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder85 = builder82.setServer("hi!");
        retrofit.RestAdapter restAdapter86 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter86.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler88 = restAdapter86.new RestHandler();
        retrofit.RestAdapter.Log log89 = restAdapter86.log;
        retrofit.RestAdapter.LogLevel logLevel90 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter86.logLevel = logLevel90;
        retrofit.RestAdapter.Builder builder92 = builder85.setLogLevel(logLevel90);
        retrofit.RestAdapter.Builder builder94 = builder92.setServer("hi!");
        retrofit.RestAdapter.Log log95 = builder94.log;
        restAdapter72.log = log95;
        restAdapter0.log = log95;
        retrofit.Server server98 = restAdapter0.server;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(server65);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNull(logLevel73);
        org.junit.Assert.assertNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter78);
        org.junit.Assert.assertNull(converter79);
        org.junit.Assert.assertNull(executor80);
        org.junit.Assert.assertNull(executor81);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNull(logLevel87);
        org.junit.Assert.assertNull(log89);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(log95);
        org.junit.Assert.assertNull(server98);
    }

    @Test
    public void test07933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07933");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.ErrorHandler errorHandler15 = builder3.errorHandler;
        retrofit.converter.Converter converter16 = builder3.converter;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = builder27.clientProvider;
        retrofit.Server server29 = null;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter38.new RestHandler();
        retrofit.RestAdapter.Log log41 = restAdapter38.log;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter38.logLevel = logLevel42;
        retrofit.Server server44 = null;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter53.logLevel = logLevel55;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel55);
        restAdapter38.log = log52;
        builder37.log = log52;
        retrofit.Server server60 = null;
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.RequestInterceptor requestInterceptor64 = null;
        retrofit.converter.Converter converter65 = null;
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter69.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter69.logLevel = logLevel71;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor64, converter65, profiler66, errorHandler67, log68, logLevel71);
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log52, logLevel71);
        retrofit.RestAdapter.Builder builder75 = builder27.setLog(log52);
        retrofit.RestAdapter restAdapter76 = builder27.build();
        retrofit.RestAdapter.LogLevel logLevel77 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder79 = builder27.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter80 = builder79.converter;
        retrofit.RestAdapter.Builder builder81 = builder3.setConverter(converter80);
        retrofit.RestAdapter.Log log82 = builder81.log;
        retrofit.converter.Converter converter83 = builder81.converter;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNotNull(converter16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(provider28);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNull(logLevel70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(restAdapter76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(converter80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNotNull(converter83);
    }

    @Test
    public void test07934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07934");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.Server server36 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        builder0.logLevel = logLevel37;
        retrofit.converter.Converter converter39 = builder0.converter;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        retrofit.RestAdapter.Log log52 = restAdapter49.log;
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter49.logLevel = logLevel53;
        retrofit.Server server55 = null;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter64.logLevel = logLevel66;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log63, logLevel66);
        restAdapter49.log = log63;
        builder48.log = log63;
        retrofit.Server server71 = null;
        retrofit.client.Client.Provider provider72 = null;
        java.util.concurrent.Executor executor73 = null;
        java.util.concurrent.Executor executor74 = null;
        retrofit.RequestInterceptor requestInterceptor75 = null;
        retrofit.converter.Converter converter76 = null;
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter80.logLevel = logLevel82;
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server71, provider72, executor73, executor74, requestInterceptor75, converter76, profiler77, errorHandler78, log79, logLevel82);
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log63, logLevel82);
        boolean boolean86 = logLevel82.log();
        boolean boolean87 = logLevel82.log();
        retrofit.RestAdapter.Builder builder88 = builder0.setLogLevel(logLevel82);
        retrofit.Profiler profiler89 = null;
        builder0.profiler = profiler89;
        retrofit.ErrorHandler errorHandler91 = builder0.errorHandler;
        retrofit.Profiler profiler92 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder93 = builder0.setProfiler(profiler92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNull(logLevel81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(errorHandler91);
    }

    @Test
    public void test07935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07935");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter1 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter1.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter1.new RestHandler();
        retrofit.RestAdapter.Log log4 = restAdapter1.log;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter1.logLevel = logLevel5;
        retrofit.Server server7 = null;
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter16.logLevel = logLevel18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel18);
        restAdapter1.log = log15;
        builder0.log = log15;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.Server server34 = builder26.server;
        builder0.server = server34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.RequestInterceptor requestInterceptor49 = builder39.requestInterceptor;
        retrofit.RestAdapter.Builder builder50 = builder0.setRequestInterceptor(requestInterceptor49);
        retrofit.RequestInterceptor requestInterceptor51 = builder50.requestInterceptor;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel70);
        restAdapter53.log = log67;
        builder52.log = log67;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.Server server86 = builder78.server;
        builder52.server = server86;
        retrofit.RestAdapter.Builder builder88 = builder50.setServer(server86);
        retrofit.Server server89 = builder88.server;
        retrofit.ErrorHandler errorHandler90 = builder88.errorHandler;
        retrofit.ErrorHandler errorHandler91 = builder88.errorHandler;
        retrofit.ErrorHandler errorHandler92 = builder88.errorHandler;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(server86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(server89);
        org.junit.Assert.assertNull(errorHandler90);
        org.junit.Assert.assertNull(errorHandler91);
        org.junit.Assert.assertNull(errorHandler92);
    }

    @Test
    public void test07936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07936");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.converter.Converter converter7 = null;
        restAdapter0.converter = converter7;
        retrofit.Profiler profiler9 = restAdapter0.profiler;
        retrofit.RestAdapter.Log log10 = restAdapter0.log;
        retrofit.RequestInterceptor requestInterceptor11 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider23 = null;
        builder15.clientProvider = provider23;
        retrofit.ErrorHandler errorHandler25 = builder15.errorHandler;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder29 = builder26.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter30.new RestHandler();
        retrofit.RestAdapter.Log log33 = restAdapter30.log;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter30.logLevel = logLevel34;
        retrofit.RestAdapter.Builder builder36 = builder29.setLogLevel(logLevel34);
        retrofit.Server server37 = builder29.server;
        retrofit.RestAdapter.Builder builder38 = builder15.setServer(server37);
        java.util.concurrent.Executor executor39 = builder38.httpExecutor;
        retrofit.converter.Converter converter40 = builder38.converter;
        retrofit.RestAdapter.LogLevel logLevel41 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder45 = builder42.setServer("hi!");
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Builder builder48 = builder45.setServer("Retrofit-Idle");
        retrofit.Profiler profiler49 = builder45.profiler;
        java.util.concurrent.Executor executor50 = builder45.callbackExecutor;
        builder38.httpExecutor = executor50;
        restAdapter0.callbackExecutor = executor50;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertNull(requestInterceptor11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNotNull(converter40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertNotNull(executor50);
    }

    @Test
    public void test07937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07937");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.ErrorHandler errorHandler15 = builder3.errorHandler;
        retrofit.Profiler profiler16 = builder3.profiler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNull(profiler16);
    }

    @Test
    public void test07938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07938");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.Profiler profiler15 = builder3.profiler;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.Log log18 = restAdapter16.log;
        retrofit.ErrorHandler errorHandler19 = restAdapter16.errorHandler;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter16.requestInterceptor;
        retrofit.converter.Converter converter21 = null;
        restAdapter16.converter = converter21;
        retrofit.converter.Converter converter23 = restAdapter16.converter;
        retrofit.converter.Converter converter24 = null;
        restAdapter16.converter = converter24;
        java.util.concurrent.Executor executor26 = restAdapter16.httpExecutor;
        retrofit.RestAdapter.Log log27 = restAdapter16.log;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter28.logLevel = logLevel30;
        retrofit.ErrorHandler errorHandler32 = null;
        restAdapter28.errorHandler = errorHandler32;
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter28.logLevel;
        restAdapter16.logLevel = logLevel34;
        retrofit.RestAdapter.Builder builder36 = builder3.setLogLevel(logLevel34);
        retrofit.RestAdapter restAdapter37 = builder3.build();
        retrofit.RequestInterceptor requestInterceptor38 = builder3.requestInterceptor;
        retrofit.Profiler profiler39 = builder3.profiler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNull(requestInterceptor20);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNull(profiler39);
    }

    @Test
    public void test07939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07939");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Server server1 = restAdapter0.server;
        retrofit.RequestInterceptor requestInterceptor2 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder6 = builder3.setServer("hi!");
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.RestAdapter.Builder builder13 = builder6.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("hi!");
        retrofit.client.Client.Provider provider16 = builder15.clientProvider;
        restAdapter0.clientProvider = provider16;
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter0.new RestHandler();
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.ErrorHandler errorHandler21 = null;
        restAdapter19.errorHandler = errorHandler21;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.Server server24 = restAdapter23.server;
        retrofit.Server server25 = null;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.Server server40 = null;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter49.logLevel = logLevel51;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel51);
        restAdapter34.log = log48;
        builder33.log = log48;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel67);
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log48, logLevel67);
        restAdapter23.log = log48;
        restAdapter19.log = log48;
        restAdapter0.log = log48;
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.client.Client.Provider provider86 = null;
        builder78.clientProvider = provider86;
        retrofit.RequestInterceptor requestInterceptor88 = builder78.requestInterceptor;
        retrofit.RestAdapter restAdapter89 = builder78.build();
        retrofit.ErrorHandler errorHandler90 = builder78.errorHandler;
        retrofit.converter.Converter converter91 = builder78.converter;
        restAdapter0.converter = converter91;
        retrofit.client.Request request93 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request94 = restAdapter0.logAndReplaceRequest(request93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(provider16);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel74);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(requestInterceptor88);
        org.junit.Assert.assertNotNull(restAdapter89);
        org.junit.Assert.assertNotNull(errorHandler90);
        org.junit.Assert.assertNotNull(converter91);
    }

    @Test
    public void test07940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07940");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter6.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter6.logLevel = logLevel8;
        retrofit.ErrorHandler errorHandler10 = null;
        restAdapter6.errorHandler = errorHandler10;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter6.logLevel;
        retrofit.client.Client.Provider provider13 = restAdapter6.clientProvider;
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter6.requestInterceptor;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter15.errorHandler = errorHandler17;
        retrofit.Profiler profiler19 = restAdapter15.profiler;
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter15.new RestHandler();
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter30.new RestHandler();
        retrofit.RestAdapter.Log log33 = restAdapter30.log;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter30.logLevel = logLevel34;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter45.logLevel = logLevel47;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel47);
        restAdapter30.log = log44;
        builder29.log = log44;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log44, logLevel52);
        restAdapter15.logLevel = logLevel52;
        restAdapter6.logLevel = logLevel52;
        builder4.logLevel = logLevel52;
        retrofit.RestAdapter restAdapter57 = builder4.build();
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(profiler19);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(restAdapter57);
    }

    @Test
    public void test07941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07941");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.Server server15 = builder7.server;
        builder0.server = server15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter19.getLogLevel();
        java.util.concurrent.Executor executor23 = restAdapter19.callbackExecutor;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder27 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter28.new RestHandler();
        retrofit.RestAdapter.Log log31 = restAdapter28.log;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter28.logLevel = logLevel32;
        retrofit.RestAdapter.Builder builder34 = builder27.setLogLevel(logLevel32);
        retrofit.client.Client.Provider provider35 = null;
        builder27.clientProvider = provider35;
        retrofit.RequestInterceptor requestInterceptor37 = builder27.requestInterceptor;
        retrofit.RestAdapter restAdapter38 = builder27.build();
        retrofit.ErrorHandler errorHandler39 = builder27.errorHandler;
        retrofit.converter.Converter converter40 = builder27.converter;
        restAdapter19.converter = converter40;
        builder17.converter = converter40;
        retrofit.RestAdapter.Builder builder43 = builder0.setConverter(converter40);
        java.util.concurrent.Executor executor44 = null;
        builder43.callbackExecutor = executor44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider47 = null;
        builder46.clientProvider = provider47;
        retrofit.RestAdapter.Builder builder50 = builder46.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log51 = builder50.log;
        retrofit.client.Client.Provider provider52 = builder50.clientProvider;
        retrofit.converter.Converter converter53 = builder50.converter;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.Log log61 = restAdapter58.log;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder66 = builder64.setServer("hi!");
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor68 = builder67.callbackExecutor;
        retrofit.Profiler profiler69 = null;
        builder67.profiler = profiler69;
        retrofit.RestAdapter.Log log71 = builder67.log;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder75 = builder72.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter76.new RestHandler();
        retrofit.RestAdapter.Log log79 = restAdapter76.log;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter76.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = builder75.setLogLevel(logLevel80);
        java.util.concurrent.Executor executor83 = builder75.callbackExecutor;
        builder67.httpExecutor = executor83;
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel86 = builder67.logLevel;
        builder66.logLevel = logLevel86;
        retrofit.RestAdapter.Builder builder88 = builder50.setLogLevel(logLevel86);
        retrofit.RestAdapter restAdapter89 = builder88.build();
        retrofit.RequestInterceptor requestInterceptor90 = builder88.requestInterceptor;
        retrofit.RestAdapter.Builder builder91 = builder43.setRequestInterceptor(requestInterceptor90);
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(converter40);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(log51);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(logLevel77);
        org.junit.Assert.assertNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(executor83);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(restAdapter89);
        org.junit.Assert.assertNotNull(requestInterceptor90);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test07942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07942");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        builder2.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder5 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter6.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.Log log9 = restAdapter6.log;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter6.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = builder5.setLogLevel(logLevel10);
        retrofit.client.Client.Provider provider13 = null;
        builder5.clientProvider = provider13;
        retrofit.ErrorHandler errorHandler15 = builder5.errorHandler;
        restAdapter0.errorHandler = errorHandler15;
        retrofit.Server server17 = null;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log29 = restAdapter26.log;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.logLevel = logLevel30;
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter41.logLevel = logLevel43;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel43);
        restAdapter26.log = log40;
        builder25.log = log40;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log40, logLevel48);
        restAdapter0.logLevel = logLevel48;
        retrofit.Profiler profiler51 = null;
        restAdapter0.profiler = profiler51;
        retrofit.Profiler profiler53 = restAdapter0.profiler;
        retrofit.client.Client.Provider provider54 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter0.logLevel;
        retrofit.RequestInterceptor requestInterceptor57 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler59 = null;
        restAdapter0.profiler = profiler59;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.converter.Converter converter67 = restAdapter61.converter;
        java.util.concurrent.Executor executor68 = restAdapter61.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter61.getLogLevel();
        restAdapter0.setLogLevel(logLevel69);
        retrofit.Profiler profiler71 = restAdapter0.profiler;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNull(requestInterceptor57);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter67);
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler71);
    }

    @Test
    public void test07943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07943");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        java.util.concurrent.Executor executor8 = restAdapter0.callbackExecutor;
        retrofit.converter.Converter converter9 = restAdapter0.converter;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(converter9);
    }

    @Test
    public void test07944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07944");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        retrofit.client.Client.Provider provider6 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider8 = null;
        builder7.clientProvider = provider8;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter10.getLogLevel();
        retrofit.ErrorHandler errorHandler12 = null;
        restAdapter10.errorHandler = errorHandler12;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.Server server15 = restAdapter14.server;
        retrofit.Server server16 = null;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log28 = restAdapter25.log;
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter25.logLevel = logLevel29;
        retrofit.Server server31 = null;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter40.logLevel = logLevel42;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel42);
        restAdapter25.log = log39;
        builder24.log = log39;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter56.logLevel = logLevel58;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel58);
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log39, logLevel58);
        restAdapter14.log = log39;
        restAdapter10.log = log39;
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        builder65.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder68 = builder65.setServer("hi!");
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter69.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler71 = restAdapter69.new RestHandler();
        retrofit.RestAdapter.Log log72 = restAdapter69.log;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter69.logLevel = logLevel73;
        retrofit.RestAdapter.Builder builder75 = builder68.setLogLevel(logLevel73);
        retrofit.Server server76 = builder68.server;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        builder77.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder80 = builder77.setServer("hi!");
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter81.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler83 = restAdapter81.new RestHandler();
        retrofit.RestAdapter.Log log84 = restAdapter81.log;
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter81.logLevel = logLevel85;
        retrofit.RestAdapter.Builder builder87 = builder80.setLogLevel(logLevel85);
        retrofit.client.Client.Provider provider88 = builder87.clientProvider;
        builder68.clientProvider = provider88;
        restAdapter10.clientProvider = provider88;
        retrofit.RestAdapter.Builder builder91 = builder7.setClient(provider88);
        retrofit.RestAdapter.Builder builder92 = builder4.setClient(provider88);
        java.util.concurrent.Executor executor93 = builder4.callbackExecutor;
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(logLevel70);
        org.junit.Assert.assertNull(log72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(server76);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNull(logLevel82);
        org.junit.Assert.assertNull(log84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(provider88);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNull(executor93);
    }

    @Test
    public void test07945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07945");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        restAdapter0.requestInterceptor = requestInterceptor4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder12 = builder7.setLogLevel(logLevel11);
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        restAdapter0.setLogLevel(logLevel17);
        retrofit.RequestInterceptor requestInterceptor21 = restAdapter0.requestInterceptor;
        retrofit.Server server22 = restAdapter0.server;
        retrofit.RequestInterceptor requestInterceptor23 = restAdapter0.requestInterceptor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(requestInterceptor21);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertNull(requestInterceptor23);
    }

    @Test
    public void test07946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07946");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter15.logLevel = logLevel17;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log14, logLevel17);
        restAdapter0.log = log14;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter21.logLevel = logLevel23;
        retrofit.ErrorHandler errorHandler25 = null;
        restAdapter21.errorHandler = errorHandler25;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.Server server28 = restAdapter27.server;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter27.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder33 = builder30.setServer("hi!");
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter34.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter34.logLevel = logLevel38;
        retrofit.RestAdapter.Builder builder40 = builder33.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("hi!");
        retrofit.client.Client.Provider provider43 = builder42.clientProvider;
        restAdapter27.clientProvider = provider43;
        restAdapter21.clientProvider = provider43;
        restAdapter0.clientProvider = provider43;
        retrofit.client.Client.Provider provider47 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Log log48 = restAdapter0.log;
        retrofit.Server server49 = restAdapter0.server;
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter0.logLevel;
        retrofit.Server server51 = restAdapter0.server;
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter0.logLevel;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertNull(requestInterceptor29);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(provider43);
        org.junit.Assert.assertNotNull(provider47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07947");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.Server server3 = restAdapter0.server;
        java.util.concurrent.Executor executor4 = restAdapter0.callbackExecutor;
        retrofit.client.Client.Provider provider5 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        java.util.concurrent.Executor executor8 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        java.util.concurrent.Executor executor20 = builder12.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel21 = builder12.logLevel;
        retrofit.ErrorHandler errorHandler22 = builder12.errorHandler;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.client.Client.Provider provider34 = builder33.clientProvider;
        java.util.concurrent.Executor executor35 = builder33.callbackExecutor;
        retrofit.Server server36 = builder33.server;
        retrofit.Server server37 = null;
        builder33.server = server37;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter48.logLevel = logLevel52;
        retrofit.Server server54 = null;
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter63.logLevel = logLevel65;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log62, logLevel65);
        restAdapter48.log = log62;
        builder47.log = log62;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log62, logLevel70);
        retrofit.RestAdapter.Log log72 = restAdapter71.log;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter();
        retrofit.Profiler profiler74 = restAdapter73.profiler;
        retrofit.Profiler profiler75 = restAdapter73.profiler;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider77 = null;
        builder76.clientProvider = provider77;
        retrofit.RestAdapter.Builder builder80 = builder76.setServer("Retrofit-Idle");
        retrofit.Server server81 = builder76.server;
        restAdapter73.server = server81;
        restAdapter71.server = server81;
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter71.logLevel;
        retrofit.client.Client.Provider provider85 = null;
        restAdapter71.clientProvider = provider85;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        log87.log("");
        restAdapter71.log = log87;
        retrofit.RestAdapter.Builder builder91 = builder33.setLog(log87);
        java.util.concurrent.Executor executor92 = builder91.callbackExecutor;
        builder12.callbackExecutor = executor92;
        restAdapter0.callbackExecutor = executor92;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(errorHandler22);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(provider34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNull(profiler74);
        org.junit.Assert.assertNull(profiler75);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(executor92);
    }

    @Test
    public void test07948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07948");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.Profiler profiler15 = builder3.profiler;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter17.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Log log20 = restAdapter17.log;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter17.logLevel = logLevel21;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel34);
        restAdapter17.log = log31;
        builder16.log = log31;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        builder39.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder39.setServer("hi!");
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter43.new RestHandler();
        retrofit.RestAdapter.Log log46 = restAdapter43.log;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter43.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = builder42.setLogLevel(logLevel47);
        retrofit.Server server50 = builder42.server;
        builder16.server = server50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder55 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter56.new RestHandler();
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter56.logLevel = logLevel60;
        retrofit.RestAdapter.Builder builder62 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider63 = null;
        builder55.clientProvider = provider63;
        retrofit.RequestInterceptor requestInterceptor65 = builder55.requestInterceptor;
        retrofit.RestAdapter.Builder builder66 = builder16.setRequestInterceptor(requestInterceptor65);
        retrofit.RestAdapter.Builder builder67 = builder3.setRequestInterceptor(requestInterceptor65);
        retrofit.client.Client.Provider provider68 = builder67.clientProvider;
        builder67.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor70 = builder67.requestInterceptor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(requestInterceptor70);
    }

    @Test
    public void test07949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07949");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter4.logLevel = logLevel6;
        retrofit.ErrorHandler errorHandler8 = null;
        restAdapter4.errorHandler = errorHandler8;
        java.util.concurrent.Executor executor10 = restAdapter4.httpExecutor;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log12 = restAdapter11.log;
        java.util.concurrent.Executor executor13 = null;
        restAdapter11.callbackExecutor = executor13;
        retrofit.RestAdapter.Log log15 = restAdapter11.log;
        retrofit.Server server16 = restAdapter11.server;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = null;
        builder20.clientProvider = provider28;
        retrofit.RequestInterceptor requestInterceptor30 = builder20.requestInterceptor;
        retrofit.RestAdapter restAdapter31 = builder20.build();
        retrofit.Profiler profiler32 = builder20.profiler;
        retrofit.ErrorHandler errorHandler33 = builder20.errorHandler;
        restAdapter11.errorHandler = errorHandler33;
        restAdapter4.errorHandler = errorHandler33;
        retrofit.ErrorHandler errorHandler36 = restAdapter4.errorHandler;
        retrofit.RestAdapter.Builder builder37 = builder0.setErrorHandler(errorHandler36);
        retrofit.ErrorHandler errorHandler38 = builder37.errorHandler;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = builder39.callbackExecutor;
        retrofit.Profiler profiler41 = null;
        builder39.profiler = profiler41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.Server server54 = builder46.server;
        builder39.server = server54;
        retrofit.RestAdapter restAdapter56 = builder39.build();
        retrofit.RestAdapter.Log log57 = restAdapter56.log;
        retrofit.ErrorHandler errorHandler58 = restAdapter56.errorHandler;
        java.util.concurrent.Executor executor59 = restAdapter56.httpExecutor;
        builder37.callbackExecutor = executor59;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(errorHandler36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(restAdapter56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNotNull(executor59);
    }

    @Test
    public void test07950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07950");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        java.util.concurrent.Executor executor8 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider10 = null;
        builder9.clientProvider = provider10;
        retrofit.RestAdapter.Builder builder13 = builder9.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = builder14.callbackExecutor;
        retrofit.Profiler profiler16 = null;
        builder14.profiler = profiler16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        retrofit.Server server29 = builder21.server;
        builder14.server = server29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.Log log35 = restAdapter32.log;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter32.logLevel = logLevel36;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter47.logLevel = logLevel49;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel49);
        restAdapter32.log = log46;
        builder31.log = log46;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.Log log61 = restAdapter58.log;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        retrofit.Server server65 = builder57.server;
        builder31.server = server65;
        builder14.server = server65;
        retrofit.RestAdapter.Builder builder68 = builder13.setServer(server65);
        retrofit.RestAdapter.LogLevel logLevel69 = builder13.logLevel;
        restAdapter0.logLevel = logLevel69;
        retrofit.client.Client.Provider provider71 = restAdapter0.clientProvider;
        retrofit.client.Request request72 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request73 = restAdapter0.logAndReplaceRequest(request72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(server65);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider71);
    }

    @Test
    public void test07951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07951");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.converter.Converter converter7 = null;
        restAdapter0.converter = converter7;
        retrofit.Profiler profiler9 = restAdapter0.profiler;
        retrofit.Profiler profiler10 = null;
        restAdapter0.profiler = profiler10;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter0.logLevel;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter22.logLevel = logLevel24;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel24);
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter26.new RestHandler();
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.Log log30 = restAdapter28.log;
        java.util.concurrent.Executor executor31 = restAdapter28.httpExecutor;
        retrofit.Server server32 = null;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter41.logLevel = logLevel43;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel43);
        restAdapter28.log = log40;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        builder47.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder50 = builder47.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder52 = builder47.setLogLevel(logLevel51);
        restAdapter28.logLevel = logLevel51;
        boolean boolean54 = logLevel51.log();
        restAdapter26.setLogLevel(logLevel51);
        restAdapter0.setLogLevel(logLevel51);
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter0.logLevel;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.HEADERS));
    }

    @Test
    public void test07952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07952");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        java.util.concurrent.Executor executor11 = builder3.callbackExecutor;
        retrofit.Profiler profiler12 = null;
        builder3.profiler = profiler12;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        java.util.concurrent.Executor executor29 = builder21.callbackExecutor;
        restAdapter14.callbackExecutor = executor29;
        builder3.callbackExecutor = executor29;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        java.util.concurrent.Executor executor47 = builder39.callbackExecutor;
        restAdapter32.callbackExecutor = executor47;
        builder3.httpExecutor = executor47;
        java.util.concurrent.Executor executor50 = builder3.callbackExecutor;
        retrofit.ErrorHandler errorHandler51 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder55 = builder52.setServer("hi!");
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Builder builder58 = builder55.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        builder59.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder62 = builder59.setServer("hi!");
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter63.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler65 = restAdapter63.new RestHandler();
        retrofit.RestAdapter.Log log66 = restAdapter63.log;
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter63.logLevel = logLevel67;
        retrofit.RestAdapter.Builder builder69 = builder62.setLogLevel(logLevel67);
        retrofit.client.Client.Provider provider70 = null;
        builder62.clientProvider = provider70;
        retrofit.ErrorHandler errorHandler72 = builder62.errorHandler;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder76 = builder73.setServer("hi!");
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter77.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler79 = restAdapter77.new RestHandler();
        retrofit.RestAdapter.Log log80 = restAdapter77.log;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter77.logLevel = logLevel81;
        retrofit.RestAdapter.Builder builder83 = builder76.setLogLevel(logLevel81);
        retrofit.Server server84 = builder76.server;
        retrofit.RestAdapter.Builder builder85 = builder62.setServer(server84);
        retrofit.converter.Converter converter86 = builder85.converter;
        java.util.concurrent.Executor executor87 = builder85.callbackExecutor;
        retrofit.client.Client.Provider provider88 = builder85.clientProvider;
        retrofit.RestAdapter.Log log89 = builder85.log;
        retrofit.RestAdapter.Builder builder90 = builder55.setLog(log89);
        retrofit.RestAdapter.Builder builder91 = builder3.setLog(log89);
        retrofit.RestAdapter restAdapter92 = builder3.build();
        retrofit.RestAdapter.Builder builder94 = builder3.setServer("Retrofit-Idle");
        retrofit.Profiler profiler95 = builder3.profiler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(errorHandler72);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(logLevel78);
        org.junit.Assert.assertNull(log80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(server84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(converter86);
        org.junit.Assert.assertNotNull(executor87);
        org.junit.Assert.assertNull(provider88);
        org.junit.Assert.assertNotNull(log89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(restAdapter92);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNull(profiler95);
    }

    @Test
    public void test07953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07953");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter22.logLevel = logLevel24;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel24);
        restAdapter7.log = log21;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter28.logLevel = logLevel30;
        retrofit.ErrorHandler errorHandler32 = null;
        restAdapter28.errorHandler = errorHandler32;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.Server server35 = restAdapter34.server;
        retrofit.RequestInterceptor requestInterceptor36 = restAdapter34.requestInterceptor;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder47 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("hi!");
        retrofit.client.Client.Provider provider50 = builder49.clientProvider;
        restAdapter34.clientProvider = provider50;
        restAdapter28.clientProvider = provider50;
        restAdapter7.clientProvider = provider50;
        restAdapter0.clientProvider = provider50;
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor56 = restAdapter0.callbackExecutor;
        retrofit.converter.Converter converter57 = restAdapter0.converter;
        java.lang.Throwable throwable58 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable58, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(provider50);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNull(converter57);
    }

    @Test
    public void test07954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07954");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.client.Client.Provider provider15 = null;
        builder7.clientProvider = provider15;
        retrofit.Server server17 = null;
        builder7.server = server17;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.Log log21 = restAdapter19.log;
        java.util.concurrent.Executor executor22 = restAdapter19.httpExecutor;
        retrofit.Server server23 = null;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel34;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel34);
        restAdapter19.log = log31;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder41 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log45 = restAdapter42.log;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter42.logLevel = logLevel46;
        retrofit.RestAdapter.Builder builder48 = builder41.setLogLevel(logLevel46);
        java.util.concurrent.Executor executor49 = builder41.callbackExecutor;
        restAdapter19.callbackExecutor = executor49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter55.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder54.setLogLevel(logLevel59);
        java.util.concurrent.Executor executor62 = builder54.callbackExecutor;
        retrofit.Profiler profiler63 = null;
        builder54.profiler = profiler63;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        builder69.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder72 = builder69.setServer("hi!");
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter73.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler75 = restAdapter73.new RestHandler();
        retrofit.RestAdapter.Log log76 = restAdapter73.log;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter73.logLevel = logLevel77;
        retrofit.RestAdapter.Builder builder79 = builder72.setLogLevel(logLevel77);
        java.util.concurrent.Executor executor80 = builder72.callbackExecutor;
        restAdapter65.callbackExecutor = executor80;
        builder54.callbackExecutor = executor80;
        retrofit.RestAdapter.Builder builder83 = builder7.setExecutors(executor49, executor80);
        restAdapter0.callbackExecutor = executor80;
        java.util.concurrent.Executor executor85 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor86 = null;
        restAdapter0.callbackExecutor = executor86;
        java.lang.Class<?> wildcardClass88 = restAdapter0.getClass();
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(logLevel74);
        org.junit.Assert.assertNull(log76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(executor80);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test07955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07955");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.Server server5 = builder4.server;
        retrofit.Server server6 = builder4.server;
        retrofit.client.Client client7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder8 = builder4.setClient(client7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(server6);
    }

    @Test
    public void test07956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07956");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        restAdapter0.requestInterceptor = requestInterceptor4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder12 = builder7.setLogLevel(logLevel11);
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        restAdapter0.setLogLevel(logLevel17);
        retrofit.Server server21 = restAdapter0.server;
        retrofit.ErrorHandler errorHandler22 = restAdapter0.errorHandler;
        retrofit.ErrorHandler errorHandler23 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder27 = builder24.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder29 = builder24.setLogLevel(logLevel28);
        retrofit.Server server30 = null;
        builder24.server = server30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder35 = builder32.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter36.new RestHandler();
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter36.logLevel = logLevel40;
        retrofit.RestAdapter.Builder builder42 = builder35.setLogLevel(logLevel40);
        retrofit.client.Client.Provider provider43 = null;
        builder35.clientProvider = provider43;
        retrofit.RequestInterceptor requestInterceptor45 = builder35.requestInterceptor;
        retrofit.RestAdapter restAdapter46 = builder35.build();
        retrofit.ErrorHandler errorHandler47 = builder35.errorHandler;
        retrofit.converter.Converter converter48 = builder35.converter;
        retrofit.RestAdapter.Builder builder49 = builder24.setConverter(converter48);
        java.util.concurrent.Executor executor50 = builder24.callbackExecutor;
        java.util.concurrent.Executor executor51 = null;
        builder24.callbackExecutor = executor51;
        retrofit.converter.Converter converter53 = builder24.converter;
        retrofit.converter.Converter converter54 = builder24.converter;
        restAdapter0.converter = converter54;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertNull(errorHandler22);
        org.junit.Assert.assertNull(errorHandler23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(errorHandler47);
        org.junit.Assert.assertNotNull(converter48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNotNull(converter53);
        org.junit.Assert.assertNotNull(converter54);
    }

    @Test
    public void test07957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07957");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.Profiler profiler2 = restAdapter0.profiler;
        retrofit.RequestInterceptor requestInterceptor3 = restAdapter0.requestInterceptor;
        retrofit.Server server4 = restAdapter0.server;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.ErrorHandler errorHandler6 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.client.Response response9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response11 = restAdapter0.logAndReplaceResponse("hi!", response9, (long) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(errorHandler6);
    }

    @Test
    public void test07958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07958");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        builder3.ensureSaneDefaults();
        java.util.concurrent.Executor executor5 = builder3.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor6 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = builder0.setRequestInterceptor(requestInterceptor6);
        retrofit.converter.Converter converter8 = builder0.converter;
        retrofit.Profiler profiler9 = builder0.profiler;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder13 = builder10.setServer("hi!");
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter14.logLevel = logLevel18;
        retrofit.RestAdapter.Builder builder20 = builder13.setLogLevel(logLevel18);
        retrofit.Server server21 = builder13.server;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder25 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log29 = restAdapter26.log;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.logLevel = logLevel30;
        retrofit.RestAdapter.Builder builder32 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider33 = builder32.clientProvider;
        builder13.clientProvider = provider33;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter35.logLevel = logLevel37;
        retrofit.ErrorHandler errorHandler39 = null;
        restAdapter35.errorHandler = errorHandler39;
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter35.logLevel;
        builder13.logLevel = logLevel41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        builder43.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder46 = builder43.setServer("hi!");
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.RestAdapter.Builder builder53 = builder46.setLogLevel(logLevel51);
        retrofit.client.Client.Provider provider54 = null;
        builder46.clientProvider = provider54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter56.new RestHandler();
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter56.logLevel = logLevel60;
        retrofit.Server server62 = null;
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.converter.Converter converter67 = null;
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter71.logLevel = logLevel73;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor66, converter67, profiler68, errorHandler69, log70, logLevel73);
        restAdapter56.log = log70;
        retrofit.RestAdapter.Builder builder77 = builder46.setLog(log70);
        log70.log("hi!");
        builder13.log = log70;
        retrofit.RestAdapter restAdapter81 = builder13.build();
        retrofit.Server server82 = builder13.server;
        builder0.server = server82;
        retrofit.Server server84 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel85 = builder0.logLevel;
        org.junit.Assert.assertNotNull(errorHandler2);
        org.junit.Assert.assertNotNull(executor5);
        org.junit.Assert.assertNotNull(requestInterceptor6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(converter8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(provider33);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(restAdapter81);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNotNull(server84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test07959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07959");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.Server server4 = builder3.server;
        retrofit.RestAdapter.Builder builder6 = builder3.setServer("Retrofit-Idle");
        retrofit.Profiler profiler7 = builder3.profiler;
        retrofit.RestAdapter.LogLevel logLevel8 = builder3.logLevel;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder25 = builder22.setServer("hi!");
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.Log log29 = restAdapter26.log;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter26.logLevel = logLevel30;
        retrofit.RestAdapter.Builder builder32 = builder25.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder34 = builder32.setServer("hi!");
        retrofit.client.Client.Provider provider35 = builder34.clientProvider;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder41 = builder36.setLogLevel(logLevel40);
        retrofit.Server server42 = null;
        builder36.server = server42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder47 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter48.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder54 = builder47.setLogLevel(logLevel52);
        retrofit.client.Client.Provider provider55 = null;
        builder47.clientProvider = provider55;
        retrofit.RequestInterceptor requestInterceptor57 = builder47.requestInterceptor;
        retrofit.RestAdapter restAdapter58 = builder47.build();
        retrofit.ErrorHandler errorHandler59 = builder47.errorHandler;
        retrofit.converter.Converter converter60 = builder47.converter;
        retrofit.RestAdapter.Builder builder61 = builder36.setConverter(converter60);
        retrofit.RestAdapter.Log log62 = builder36.log;
        retrofit.RestAdapter.Builder builder63 = builder34.setLog(log62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder67 = builder64.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder69 = builder64.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = builder63.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        builder71.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler73 = builder71.errorHandler;
        retrofit.RestAdapter.Builder builder74 = builder70.setErrorHandler(errorHandler73);
        builder19.errorHandler = errorHandler73;
        java.util.concurrent.Executor executor76 = builder19.httpExecutor;
        java.util.concurrent.Executor executor77 = null;
        retrofit.RestAdapter.Builder builder78 = builder3.setExecutors(executor76, executor77);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(errorHandler59);
        org.junit.Assert.assertNotNull(converter60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(errorHandler73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(builder78);
    }

    @Test
    public void test07960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07960");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        java.util.concurrent.Executor executor15 = restAdapter14.callbackExecutor;
        retrofit.converter.Converter converter16 = restAdapter14.converter;
        retrofit.RestAdapter.Log log17 = restAdapter14.log;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        retrofit.client.Client.Provider provider29 = builder28.clientProvider;
        restAdapter14.clientProvider = provider29;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter14.getLogLevel();
        retrofit.Server server32 = restAdapter14.server;
        retrofit.ErrorHandler errorHandler33 = restAdapter14.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter14.getLogLevel();
        retrofit.client.Response response36 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response38 = restAdapter14.logAndReplaceResponse("Retrofit-Idle", response36, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(executor15);
        org.junit.Assert.assertNotNull(converter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(provider29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07961");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.converter.Converter converter7 = null;
        restAdapter0.converter = converter7;
        retrofit.converter.Converter converter9 = restAdapter0.converter;
        retrofit.Profiler profiler10 = null;
        restAdapter0.profiler = profiler10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("hi!");
        retrofit.client.Client.Provider provider25 = builder24.clientProvider;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter26.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter26.logLevel = logLevel28;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        restAdapter26.requestInterceptor = requestInterceptor30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.Server server39 = null;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter48.logLevel = logLevel50;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel50);
        restAdapter33.log = log47;
        builder32.log = log47;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder58 = builder55.setServer("hi!");
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter59.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler61 = restAdapter59.new RestHandler();
        retrofit.RestAdapter.Log log62 = restAdapter59.log;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter59.logLevel = logLevel63;
        retrofit.RestAdapter.Builder builder65 = builder58.setLogLevel(logLevel63);
        retrofit.Server server66 = builder58.server;
        builder32.server = server66;
        restAdapter26.server = server66;
        retrofit.RestAdapter.Builder builder69 = builder24.setServer(server66);
        restAdapter0.server = server66;
        retrofit.RestAdapter.Log log71 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler72 = restAdapter0.errorHandler;
        retrofit.Profiler profiler73 = null;
        restAdapter0.profiler = profiler73;
        retrofit.converter.Converter converter75 = restAdapter0.converter;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(provider25);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(logLevel60);
        org.junit.Assert.assertNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertNull(errorHandler72);
        org.junit.Assert.assertNull(converter75);
    }

    @Test
    public void test07962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07962");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        java.util.concurrent.Executor executor2 = null;
        restAdapter0.httpExecutor = executor2;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        retrofit.converter.Converter converter5 = null;
        restAdapter0.converter = converter5;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder13 = builder8.setLogLevel(logLevel12);
        retrofit.ErrorHandler errorHandler14 = builder13.errorHandler;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        retrofit.client.Client.Provider provider26 = builder25.clientProvider;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter36.new RestHandler();
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter36.logLevel = logLevel40;
        retrofit.Server server42 = null;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter51.logLevel = logLevel53;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel53);
        restAdapter36.log = log50;
        builder35.log = log50;
        retrofit.Server server58 = null;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter67.logLevel = logLevel69;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel69);
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log50, logLevel69);
        retrofit.RestAdapter.Builder builder73 = builder25.setLog(log50);
        retrofit.RestAdapter restAdapter74 = builder25.build();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.client.Client.Provider provider86 = null;
        builder78.clientProvider = provider86;
        retrofit.RequestInterceptor requestInterceptor88 = builder78.requestInterceptor;
        retrofit.RestAdapter.Builder builder89 = builder25.setRequestInterceptor(requestInterceptor88);
        retrofit.Profiler profiler90 = builder25.profiler;
        java.util.concurrent.Executor executor91 = builder25.callbackExecutor;
        builder13.httpExecutor = executor91;
        restAdapter0.httpExecutor = executor91;
        retrofit.Server server94 = restAdapter0.server;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(errorHandler14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(provider26);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(requestInterceptor88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNull(profiler90);
        org.junit.Assert.assertNotNull(executor91);
        org.junit.Assert.assertNull(server94);
    }

    @Test
    public void test07963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07963");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.Profiler profiler2 = restAdapter0.profiler;
        retrofit.RequestInterceptor requestInterceptor3 = restAdapter0.requestInterceptor;
        java.util.concurrent.Executor executor4 = restAdapter0.callbackExecutor;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder9 = builder6.setServer("hi!");
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Log log13 = restAdapter10.log;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.logLevel = logLevel14;
        retrofit.RestAdapter.Builder builder16 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.Server server20 = restAdapter19.server;
        retrofit.RequestInterceptor requestInterceptor21 = restAdapter19.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter19.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel22);
        java.util.concurrent.Executor executor25 = builder24.httpExecutor;
        retrofit.RestAdapter.Log log26 = builder24.log;
        retrofit.RestAdapter restAdapter27 = builder24.build();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = builder28.callbackExecutor;
        retrofit.Profiler profiler30 = null;
        builder28.profiler = profiler30;
        retrofit.RestAdapter.Log log32 = builder28.log;
        retrofit.converter.Converter converter33 = builder28.converter;
        retrofit.RestAdapter.LogLevel logLevel34 = builder28.logLevel;
        boolean boolean35 = logLevel34.log();
        restAdapter27.setLogLevel(logLevel34);
        restAdapter0.logLevel = logLevel34;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder41 = builder38.setServer("hi!");
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter42.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Log log45 = restAdapter42.log;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter42.logLevel = logLevel46;
        retrofit.RestAdapter.Builder builder48 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("hi!");
        retrofit.Profiler profiler51 = builder48.profiler;
        retrofit.ErrorHandler errorHandler52 = builder48.errorHandler;
        retrofit.Server server53 = builder48.server;
        retrofit.RestAdapter.Log log54 = builder48.log;
        retrofit.RestAdapter.LogLevel logLevel55 = builder48.logLevel;
        java.util.concurrent.Executor executor56 = builder48.callbackExecutor;
        builder48.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder59 = builder48.setServer("hi!");
        retrofit.RestAdapter restAdapter60 = builder59.build();
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.Log log68 = restAdapter65.log;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter65.logLevel = logLevel69;
        retrofit.RestAdapter.Builder builder71 = builder64.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider72 = null;
        builder64.clientProvider = provider72;
        retrofit.ErrorHandler errorHandler74 = builder64.errorHandler;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.Server server86 = builder78.server;
        retrofit.RestAdapter.Builder builder87 = builder64.setServer(server86);
        retrofit.converter.Converter converter88 = builder87.converter;
        java.util.concurrent.Executor executor89 = builder87.callbackExecutor;
        builder59.httpExecutor = executor89;
        restAdapter0.httpExecutor = executor89;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertNull(requestInterceptor21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(restAdapter27);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(restAdapter60);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(errorHandler74);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(server86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(converter88);
        org.junit.Assert.assertNotNull(executor89);
    }

    @Test
    public void test07964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07964");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter2 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter2.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter2.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter2.getLogLevel();
        java.util.concurrent.Executor executor6 = restAdapter2.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter11.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider18 = null;
        builder10.clientProvider = provider18;
        retrofit.RequestInterceptor requestInterceptor20 = builder10.requestInterceptor;
        retrofit.RestAdapter restAdapter21 = builder10.build();
        retrofit.ErrorHandler errorHandler22 = builder10.errorHandler;
        retrofit.converter.Converter converter23 = builder10.converter;
        restAdapter2.converter = converter23;
        builder0.converter = converter23;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder29 = builder26.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter30.new RestHandler();
        retrofit.RestAdapter.Log log33 = restAdapter30.log;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter30.logLevel = logLevel34;
        retrofit.RestAdapter.Builder builder36 = builder29.setLogLevel(logLevel34);
        retrofit.client.Client.Provider provider37 = builder36.clientProvider;
        retrofit.Server server38 = null;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter47.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.Log log50 = restAdapter47.log;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter47.logLevel = logLevel51;
        retrofit.Server server53 = null;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter62.logLevel = logLevel64;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel64);
        restAdapter47.log = log61;
        builder46.log = log61;
        retrofit.Server server69 = null;
        retrofit.client.Client.Provider provider70 = null;
        java.util.concurrent.Executor executor71 = null;
        java.util.concurrent.Executor executor72 = null;
        retrofit.RequestInterceptor requestInterceptor73 = null;
        retrofit.converter.Converter converter74 = null;
        retrofit.Profiler profiler75 = null;
        retrofit.ErrorHandler errorHandler76 = null;
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter78.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter78.logLevel = logLevel80;
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter(server69, provider70, executor71, executor72, requestInterceptor73, converter74, profiler75, errorHandler76, log77, logLevel80);
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log61, logLevel80);
        retrofit.RestAdapter.Builder builder84 = builder36.setLog(log61);
        retrofit.Profiler profiler85 = builder36.profiler;
        retrofit.RestAdapter.LogLevel logLevel86 = builder36.logLevel;
        builder0.logLevel = logLevel86;
        java.util.concurrent.Executor executor88 = builder0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel89 = builder0.logLevel;
        retrofit.Server server90 = null;
        builder0.server = server90;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(requestInterceptor20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(errorHandler22);
        org.junit.Assert.assertNotNull(converter23);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNull(logLevel79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNull(profiler85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test07965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07965");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.Server server13 = null;
        builder3.server = server13;
        retrofit.Server server15 = null;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter24.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.Log log27 = restAdapter24.log;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter24.logLevel = logLevel28;
        retrofit.Server server30 = null;
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.converter.Converter converter35 = null;
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter39.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter39.logLevel = logLevel41;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor34, converter35, profiler36, errorHandler37, log38, logLevel41);
        restAdapter24.log = log38;
        builder23.log = log38;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log38, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder3.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter49.logLevel = logLevel51;
        retrofit.ErrorHandler errorHandler53 = null;
        restAdapter49.errorHandler = errorHandler53;
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter49.logLevel;
        retrofit.converter.Converter converter56 = null;
        restAdapter49.converter = converter56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder61 = builder58.setServer("hi!");
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter62.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter62.new RestHandler();
        retrofit.RestAdapter.Log log65 = restAdapter62.log;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter62.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder68 = builder61.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder70 = builder68.setServer("hi!");
        retrofit.client.Client.Provider provider71 = builder70.clientProvider;
        restAdapter49.clientProvider = provider71;
        retrofit.RestAdapter.Builder builder73 = builder3.setClient(provider71);
        retrofit.RestAdapter.Builder builder75 = builder3.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler76 = builder75.errorHandler;
        builder75.ensureSaneDefaults();
        retrofit.Server server78 = builder75.server;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        builder79.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder82 = builder79.setServer("hi!");
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter83.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler85 = restAdapter83.new RestHandler();
        retrofit.RestAdapter.Log log86 = restAdapter83.log;
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter83.logLevel = logLevel87;
        retrofit.RestAdapter.Builder builder89 = builder82.setLogLevel(logLevel87);
        retrofit.client.Client.Provider provider90 = null;
        builder82.clientProvider = provider90;
        retrofit.RequestInterceptor requestInterceptor92 = builder82.requestInterceptor;
        retrofit.RestAdapter restAdapter93 = builder82.build();
        retrofit.ErrorHandler errorHandler94 = builder82.errorHandler;
        retrofit.RestAdapter.Builder builder95 = builder75.setErrorHandler(errorHandler94);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(logLevel50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertNull(log65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(provider71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(errorHandler76);
        org.junit.Assert.assertNotNull(server78);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(logLevel84);
        org.junit.Assert.assertNull(log86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(requestInterceptor92);
        org.junit.Assert.assertNotNull(restAdapter93);
        org.junit.Assert.assertNotNull(errorHandler94);
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test07966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07966");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.Server server11 = builder3.server;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider23 = builder22.clientProvider;
        builder3.clientProvider = provider23;
        builder3.ensureSaneDefaults();
        retrofit.RestAdapter.Log log26 = builder3.log;
        retrofit.Profiler profiler27 = builder3.profiler;
        retrofit.RestAdapter.LogLevel logLevel28 = builder3.logLevel;
        retrofit.ErrorHandler errorHandler29 = builder3.errorHandler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(errorHandler29);
    }

    @Test
    public void test07967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07967");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.Server server6 = restAdapter0.server;
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.Server server8 = restAdapter7.server;
        retrofit.RequestInterceptor requestInterceptor9 = restAdapter7.requestInterceptor;
        java.util.concurrent.Executor executor10 = restAdapter7.httpExecutor;
        java.util.concurrent.Executor executor11 = restAdapter7.callbackExecutor;
        retrofit.ErrorHandler errorHandler12 = restAdapter7.errorHandler;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.ErrorHandler errorHandler15 = null;
        restAdapter13.errorHandler = errorHandler15;
        retrofit.Profiler profiler17 = restAdapter13.profiler;
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter13.new RestHandler();
        retrofit.Profiler profiler19 = null;
        restAdapter13.profiler = profiler19;
        retrofit.converter.Converter converter21 = restAdapter13.converter;
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter13.new RestHandler();
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.ErrorHandler errorHandler27 = null;
        restAdapter23.errorHandler = errorHandler27;
        java.util.concurrent.Executor executor29 = restAdapter23.httpExecutor;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter30.new RestHandler();
        retrofit.RestAdapter.Log log33 = restAdapter30.log;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter30.logLevel = logLevel34;
        retrofit.Server server36 = null;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter45.logLevel = logLevel47;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel47);
        restAdapter30.log = log44;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter51.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter51.logLevel = logLevel53;
        retrofit.ErrorHandler errorHandler55 = null;
        restAdapter51.errorHandler = errorHandler55;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.Server server58 = restAdapter57.server;
        retrofit.RequestInterceptor requestInterceptor59 = restAdapter57.requestInterceptor;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder60.setServer("hi!");
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter64.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter64.new RestHandler();
        retrofit.RestAdapter.Log log67 = restAdapter64.log;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter64.logLevel = logLevel68;
        retrofit.RestAdapter.Builder builder70 = builder63.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("hi!");
        retrofit.client.Client.Provider provider73 = builder72.clientProvider;
        restAdapter57.clientProvider = provider73;
        restAdapter51.clientProvider = provider73;
        restAdapter30.clientProvider = provider73;
        restAdapter23.clientProvider = provider73;
        restAdapter13.clientProvider = provider73;
        restAdapter7.clientProvider = provider73;
        restAdapter0.clientProvider = provider73;
        java.util.concurrent.Executor executor81 = restAdapter0.callbackExecutor;
        retrofit.converter.Converter converter82 = restAdapter0.converter;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertNull(requestInterceptor59);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(provider73);
        org.junit.Assert.assertNull(executor81);
        org.junit.Assert.assertNull(converter82);
    }

    @Test
    public void test07968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07968");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.Server server15 = builder7.server;
        builder0.server = server15;
        retrofit.RestAdapter.LogLevel logLevel17 = builder0.logLevel;
        retrofit.RestAdapter.Log log18 = builder0.log;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter19.logLevel = logLevel21;
        retrofit.ErrorHandler errorHandler23 = null;
        restAdapter19.errorHandler = errorHandler23;
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter19.logLevel;
        retrofit.converter.Converter converter26 = null;
        restAdapter19.converter = converter26;
        retrofit.converter.Converter converter28 = restAdapter19.converter;
        retrofit.Profiler profiler29 = null;
        restAdapter19.profiler = profiler29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = builder31.setServer("hi!");
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter35.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter35.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder41 = builder34.setLogLevel(logLevel39);
        java.util.concurrent.Executor executor42 = builder34.callbackExecutor;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter43.logLevel = logLevel45;
        retrofit.ErrorHandler errorHandler47 = null;
        restAdapter43.errorHandler = errorHandler47;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.Server server50 = restAdapter49.server;
        retrofit.RequestInterceptor requestInterceptor51 = restAdapter49.requestInterceptor;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder55 = builder52.setServer("hi!");
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter56.new RestHandler();
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter56.logLevel = logLevel60;
        retrofit.RestAdapter.Builder builder62 = builder55.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("hi!");
        retrofit.client.Client.Provider provider65 = builder64.clientProvider;
        restAdapter49.clientProvider = provider65;
        restAdapter43.clientProvider = provider65;
        retrofit.RestAdapter.Builder builder68 = builder34.setClient(provider65);
        restAdapter19.clientProvider = provider65;
        retrofit.RestAdapter.Builder builder70 = builder0.setClient(provider65);
        retrofit.RestAdapter.Log log71 = builder70.log;
        retrofit.RestAdapter restAdapter72 = builder70.build();
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        builder73.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder76 = builder73.setServer("hi!");
        retrofit.Server server77 = builder76.server;
        retrofit.RestAdapter.Builder builder79 = builder76.setServer("Retrofit-Idle");
        java.util.concurrent.Executor executor80 = builder76.httpExecutor;
        builder70.callbackExecutor = executor80;
        builder70.ensureSaneDefaults();
        java.util.concurrent.Executor executor83 = builder70.callbackExecutor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertNull(requestInterceptor51);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(provider65);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(server77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(executor80);
        org.junit.Assert.assertNotNull(executor83);
    }

    @Test
    public void test07969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07969");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.Server server7 = restAdapter6.server;
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter6.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.client.Client.Provider provider22 = builder21.clientProvider;
        restAdapter6.clientProvider = provider22;
        restAdapter0.clientProvider = provider22;
        retrofit.RestAdapter.Log log25 = restAdapter0.log;
        java.util.concurrent.Executor executor26 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler28 = restAdapter0.profiler;
        retrofit.Profiler profiler29 = null;
        restAdapter0.profiler = profiler29;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler32 = restAdapter0.profiler;
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter0.requestInterceptor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(requestInterceptor33);
    }

    @Test
    public void test07970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07970");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.ErrorHandler errorHandler15 = builder3.errorHandler;
        retrofit.converter.Converter converter16 = builder3.converter;
        java.util.concurrent.Executor executor17 = builder3.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor18 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter19 = builder3.build();
        retrofit.RestAdapter.LogLevel logLevel20 = builder3.logLevel;
        retrofit.converter.Converter converter21 = builder3.converter;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor23 = builder22.callbackExecutor;
        retrofit.Profiler profiler24 = null;
        builder22.profiler = profiler24;
        retrofit.RestAdapter.Log log26 = builder22.log;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler33 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Log log34 = restAdapter31.log;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter31.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = builder30.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor38 = builder30.callbackExecutor;
        builder22.httpExecutor = executor38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        builder40.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder43 = builder40.setServer("hi!");
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter44.logLevel = logLevel48;
        retrofit.RestAdapter.Builder builder50 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider51 = null;
        builder43.clientProvider = provider51;
        retrofit.RequestInterceptor requestInterceptor53 = builder43.requestInterceptor;
        retrofit.RestAdapter restAdapter54 = builder43.build();
        java.util.concurrent.Executor executor55 = restAdapter54.callbackExecutor;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.getLogLevel();
        retrofit.RestAdapter.Log log58 = restAdapter56.log;
        retrofit.ErrorHandler errorHandler59 = restAdapter56.errorHandler;
        retrofit.RequestInterceptor requestInterceptor60 = restAdapter56.requestInterceptor;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        builder61.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = builder61.setServer("hi!");
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.Log log68 = restAdapter65.log;
        retrofit.RestAdapter.LogLevel logLevel69 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter65.logLevel = logLevel69;
        retrofit.RestAdapter.Builder builder71 = builder64.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider72 = null;
        builder64.clientProvider = provider72;
        retrofit.ErrorHandler errorHandler74 = builder64.errorHandler;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder78 = builder75.setServer("hi!");
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter79.new RestHandler();
        retrofit.RestAdapter.Log log82 = restAdapter79.log;
        retrofit.RestAdapter.LogLevel logLevel83 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter79.logLevel = logLevel83;
        retrofit.RestAdapter.Builder builder85 = builder78.setLogLevel(logLevel83);
        retrofit.Server server86 = builder78.server;
        retrofit.RestAdapter.Builder builder87 = builder64.setServer(server86);
        java.util.concurrent.Executor executor88 = builder87.httpExecutor;
        restAdapter56.httpExecutor = executor88;
        retrofit.RestAdapter.Builder builder90 = builder22.setExecutors(executor55, executor88);
        builder3.httpExecutor = executor55;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNotNull(converter16);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(restAdapter19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter21);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(requestInterceptor53);
        org.junit.Assert.assertNotNull(restAdapter54);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertNull(errorHandler59);
        org.junit.Assert.assertNull(requestInterceptor60);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(log68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(errorHandler74);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(log82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(server86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(executor88);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test07971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07971");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log11 = retrofit.RestAdapter.Log.NONE;
        log11.log("");
        builder10.log = log11;
        retrofit.Profiler profiler15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder16 = builder10.setProfiler(profiler15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
    }

    @Test
    public void test07972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07972");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        builder2.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder5 = builder2.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter6.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.Log log9 = restAdapter6.log;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter6.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("hi!");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("hi!");
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter28.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        builder32.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder35 = builder32.setServer("hi!");
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter36.new RestHandler();
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter36.logLevel = logLevel40;
        retrofit.RestAdapter.Builder builder42 = builder35.setLogLevel(logLevel40);
        java.util.concurrent.Executor executor43 = builder35.callbackExecutor;
        restAdapter28.callbackExecutor = executor43;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder52 = builder49.setServer("hi!");
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Log log56 = restAdapter53.log;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter53.logLevel = logLevel57;
        retrofit.RestAdapter.Builder builder59 = builder52.setLogLevel(logLevel57);
        java.util.concurrent.Executor executor60 = builder52.callbackExecutor;
        restAdapter45.callbackExecutor = executor60;
        retrofit.RestAdapter.Builder builder62 = builder27.setExecutors(executor43, executor60);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter67.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider74 = null;
        builder66.clientProvider = provider74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        builder76.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder79 = builder76.setServer("hi!");
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter80.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler82 = restAdapter80.new RestHandler();
        retrofit.RestAdapter.Log log83 = restAdapter80.log;
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter80.logLevel = logLevel84;
        retrofit.RestAdapter.Builder builder86 = builder79.setLogLevel(logLevel84);
        retrofit.client.Client.Provider provider87 = null;
        builder79.clientProvider = provider87;
        retrofit.ErrorHandler errorHandler89 = builder79.errorHandler;
        retrofit.RestAdapter.Builder builder90 = builder66.setErrorHandler(errorHandler89);
        retrofit.RestAdapter.Builder builder91 = builder27.setErrorHandler(errorHandler89);
        retrofit.RestAdapter.Builder builder92 = builder12.setErrorHandler(errorHandler89);
        restAdapter0.errorHandler = errorHandler89;
        retrofit.converter.Converter converter94 = restAdapter0.converter;
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor96 = null;
        restAdapter0.callbackExecutor = executor96;
        retrofit.RestAdapter.Log log98 = restAdapter0.log;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(logLevel81);
        org.junit.Assert.assertNull(log83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(errorHandler89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNull(converter94);
        org.junit.Assert.assertNull(logLevel95);
        org.junit.Assert.assertNull(log98);
    }

    @Test
    public void test07973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07973");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.client.Client.Provider provider4 = restAdapter0.clientProvider;
        retrofit.client.Client.Provider provider5 = null;
        restAdapter0.clientProvider = provider5;
        retrofit.ErrorHandler errorHandler7 = restAdapter0.errorHandler;
        retrofit.Server server8 = restAdapter0.server;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.Profiler profiler10 = restAdapter9.profiler;
        retrofit.Profiler profiler11 = restAdapter9.profiler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter9.requestInterceptor;
        java.util.concurrent.Executor executor13 = restAdapter9.callbackExecutor;
        java.util.concurrent.Executor executor14 = restAdapter9.httpExecutor;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        builder15.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder18 = builder15.setServer("hi!");
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter19.logLevel = logLevel23;
        retrofit.RestAdapter.Builder builder25 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("hi!");
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.Server server29 = restAdapter28.server;
        retrofit.RequestInterceptor requestInterceptor30 = restAdapter28.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter28.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel31);
        java.util.concurrent.Executor executor34 = builder33.httpExecutor;
        retrofit.RestAdapter.Log log35 = builder33.log;
        retrofit.RestAdapter restAdapter36 = builder33.build();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor38 = builder37.callbackExecutor;
        retrofit.Profiler profiler39 = null;
        builder37.profiler = profiler39;
        retrofit.RestAdapter.Log log41 = builder37.log;
        retrofit.converter.Converter converter42 = builder37.converter;
        retrofit.RestAdapter.LogLevel logLevel43 = builder37.logLevel;
        boolean boolean44 = logLevel43.log();
        restAdapter36.setLogLevel(logLevel43);
        restAdapter9.logLevel = logLevel43;
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter9.logLevel;
        restAdapter0.setLogLevel(logLevel47);
        retrofit.RestAdapter.Log log49 = restAdapter0.log;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertNull(requestInterceptor30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(log49);
    }

    @Test
    public void test07974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07974");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.converter.Converter converter6 = null;
        builder0.converter = converter6;
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.RestAdapter restAdapter9 = builder0.build();
        java.util.concurrent.Executor executor10 = restAdapter9.httpExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertNotNull(executor10);
    }

    @Test
    public void test07975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07975");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        java.util.concurrent.Executor executor16 = builder8.callbackExecutor;
        builder0.httpExecutor = executor16;
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider19 = builder0.clientProvider;
        java.util.concurrent.Executor executor20 = builder0.httpExecutor;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.Log log23 = restAdapter21.log;
        retrofit.ErrorHandler errorHandler24 = restAdapter21.errorHandler;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        builder25.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder28 = builder25.setServer("hi!");
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter29.logLevel = logLevel33;
        retrofit.RestAdapter.Builder builder35 = builder28.setLogLevel(logLevel33);
        retrofit.client.Client.Provider provider36 = null;
        builder28.clientProvider = provider36;
        retrofit.RequestInterceptor requestInterceptor38 = builder28.requestInterceptor;
        restAdapter21.requestInterceptor = requestInterceptor38;
        retrofit.RestAdapter.Builder builder40 = builder0.setRequestInterceptor(requestInterceptor38);
        retrofit.ErrorHandler errorHandler41 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder45 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter46.new RestHandler();
        retrofit.RestAdapter.Log log49 = restAdapter46.log;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter46.logLevel = logLevel50;
        retrofit.RestAdapter.Builder builder52 = builder45.setLogLevel(logLevel50);
        retrofit.client.Client.Provider provider53 = builder52.clientProvider;
        retrofit.ErrorHandler errorHandler54 = builder52.errorHandler;
        retrofit.Server server55 = builder52.server;
        retrofit.Profiler profiler56 = null;
        builder52.profiler = profiler56;
        java.util.concurrent.Executor executor58 = builder52.httpExecutor;
        builder0.httpExecutor = executor58;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log23);
        org.junit.Assert.assertNull(errorHandler24);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(provider53);
        org.junit.Assert.assertNotNull(errorHandler54);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNotNull(executor58);
    }

    @Test
    public void test07976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07976");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.logLevel;
        retrofit.Profiler profiler2 = null;
        restAdapter0.profiler = profiler2;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.Profiler profiler5 = restAdapter0.profiler;
        retrofit.Profiler profiler6 = null;
        restAdapter0.profiler = profiler6;
        retrofit.Server server8 = restAdapter0.server;
        retrofit.Profiler profiler9 = null;
        restAdapter0.profiler = profiler9;
        retrofit.converter.Converter converter11 = restAdapter0.converter;
        retrofit.converter.Converter converter12 = restAdapter0.converter;
        retrofit.RequestInterceptor requestInterceptor13 = restAdapter0.requestInterceptor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(requestInterceptor13);
    }

    @Test
    public void test07977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07977");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = builder10.clientProvider;
        java.util.concurrent.Executor executor12 = builder10.callbackExecutor;
        retrofit.Server server13 = builder10.server;
        retrofit.Server server14 = null;
        builder10.server = server14;
        retrofit.RestAdapter.LogLevel logLevel16 = builder10.logLevel;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter29 = builder27.build();
        retrofit.RequestInterceptor requestInterceptor30 = restAdapter29.requestInterceptor;
        java.util.concurrent.Executor executor31 = restAdapter29.httpExecutor;
        builder10.httpExecutor = executor31;
        retrofit.RestAdapter.Builder builder34 = builder10.setServer("Retrofit-Idle");
        java.util.concurrent.Executor executor35 = builder34.httpExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider11);
        org.junit.Assert.assertNotNull(executor12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(executor35);
    }

    @Test
    public void test07978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07978");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        java.util.concurrent.Executor executor11 = builder3.callbackExecutor;
        retrofit.Profiler profiler12 = null;
        builder3.profiler = profiler12;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        builder18.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = builder18.setServer("hi!");
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter22.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = builder21.setLogLevel(logLevel26);
        java.util.concurrent.Executor executor29 = builder21.callbackExecutor;
        restAdapter14.callbackExecutor = executor29;
        builder3.callbackExecutor = executor29;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter32.getLogLevel();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        java.util.concurrent.Executor executor47 = builder39.callbackExecutor;
        restAdapter32.callbackExecutor = executor47;
        builder3.httpExecutor = executor47;
        retrofit.Server server50 = builder3.server;
        retrofit.RestAdapter restAdapter51 = builder3.build();
        retrofit.ErrorHandler errorHandler52 = builder3.errorHandler;
        retrofit.Server server53 = builder3.server;
        retrofit.RestAdapter restAdapter54 = builder3.build();
        java.util.concurrent.Executor executor55 = restAdapter54.callbackExecutor;
        retrofit.client.Client.Provider provider56 = restAdapter54.clientProvider;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(logLevel35);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(restAdapter54);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNotNull(provider56);
    }

    @Test
    public void test07979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07979");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        java.util.concurrent.Executor executor4 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(executor4);
    }

    @Test
    public void test07980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07980");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter0.logLevel = logLevel4;
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        java.util.concurrent.Executor executor8 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.converter.Converter converter15 = restAdapter9.converter;
        java.util.concurrent.Executor executor16 = restAdapter9.callbackExecutor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = null;
        builder20.clientProvider = provider28;
        retrofit.RequestInterceptor requestInterceptor30 = builder20.requestInterceptor;
        retrofit.RestAdapter restAdapter31 = builder20.build();
        retrofit.ErrorHandler errorHandler32 = builder20.errorHandler;
        retrofit.converter.Converter converter33 = builder20.converter;
        restAdapter9.converter = converter33;
        restAdapter0.converter = converter33;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("hi!");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter40.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider47 = null;
        builder39.clientProvider = provider47;
        retrofit.ErrorHandler errorHandler49 = builder39.errorHandler;
        retrofit.Server server50 = builder39.server;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("hi!");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter55.logLevel = logLevel59;
        retrofit.RestAdapter.Builder builder61 = builder54.setLogLevel(logLevel59);
        retrofit.client.Client.Provider provider62 = builder61.clientProvider;
        retrofit.RestAdapter.Builder builder63 = builder39.setClient(provider62);
        retrofit.RestAdapter.LogLevel logLevel64 = builder63.logLevel;
        restAdapter0.logLevel = logLevel64;
        java.util.concurrent.Executor executor66 = restAdapter0.callbackExecutor;
        retrofit.Profiler profiler67 = restAdapter0.profiler;
        java.util.concurrent.Executor executor68 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNotNull(errorHandler32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(logLevel56);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNull(profiler67);
        org.junit.Assert.assertNull(executor68);
    }

    @Test
    public void test07981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07981");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter7.logLevel = logLevel11;
        retrofit.Server server13 = null;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter22.logLevel = logLevel24;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel24);
        restAdapter7.log = log21;
        builder6.log = log21;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.Server server40 = builder32.server;
        builder6.server = server40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder45 = builder42.setServer("hi!");
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter46.new RestHandler();
        retrofit.RestAdapter.Log log49 = restAdapter46.log;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter46.logLevel = logLevel50;
        retrofit.RestAdapter.Builder builder52 = builder45.setLogLevel(logLevel50);
        retrofit.client.Client.Provider provider53 = null;
        builder45.clientProvider = provider53;
        retrofit.RequestInterceptor requestInterceptor55 = builder45.requestInterceptor;
        retrofit.RestAdapter.Builder builder56 = builder6.setRequestInterceptor(requestInterceptor55);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        builder57.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder57.setServer("hi!");
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.RestAdapter.LogLevel logLevel65 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter61.logLevel = logLevel65;
        retrofit.RestAdapter.Builder builder67 = builder60.setLogLevel(logLevel65);
        retrofit.client.Client.Provider provider68 = null;
        builder60.clientProvider = provider68;
        retrofit.RequestInterceptor requestInterceptor70 = builder60.requestInterceptor;
        builder56.requestInterceptor = requestInterceptor70;
        retrofit.Server server72 = builder56.server;
        restAdapter0.server = server72;
        retrofit.Profiler profiler74 = restAdapter0.profiler;
        java.lang.Throwable throwable75 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable75, "Retrofit-Idle");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNull(profiler74);
    }

    @Test
    public void test07982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07982");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.Profiler profiler1 = restAdapter0.profiler;
        retrofit.Profiler profiler2 = restAdapter0.profiler;
        retrofit.RequestInterceptor requestInterceptor3 = restAdapter0.requestInterceptor;
        retrofit.Server server4 = restAdapter0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        builder5.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = builder5.setServer("hi!");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter9.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder15 = builder8.setLogLevel(logLevel13);
        java.util.concurrent.Executor executor16 = builder8.callbackExecutor;
        retrofit.Profiler profiler17 = null;
        builder8.profiler = profiler17;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        java.util.concurrent.Executor executor34 = builder26.callbackExecutor;
        restAdapter19.callbackExecutor = executor34;
        builder8.callbackExecutor = executor34;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder44 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.Log log48 = restAdapter45.log;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter45.logLevel = logLevel49;
        retrofit.RestAdapter.Builder builder51 = builder44.setLogLevel(logLevel49);
        java.util.concurrent.Executor executor52 = builder44.callbackExecutor;
        restAdapter37.callbackExecutor = executor52;
        builder8.httpExecutor = executor52;
        retrofit.Server server55 = builder8.server;
        restAdapter0.server = server55;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel58 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter57.getLogLevel();
        java.util.concurrent.Executor executor61 = restAdapter57.callbackExecutor;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder65 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter66.log;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter66.logLevel = logLevel70;
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel70);
        retrofit.client.Client.Provider provider73 = null;
        builder65.clientProvider = provider73;
        retrofit.RequestInterceptor requestInterceptor75 = builder65.requestInterceptor;
        retrofit.RestAdapter restAdapter76 = builder65.build();
        retrofit.ErrorHandler errorHandler77 = builder65.errorHandler;
        retrofit.converter.Converter converter78 = builder65.converter;
        restAdapter57.converter = converter78;
        restAdapter0.converter = converter78;
        retrofit.RestAdapter.Log log81 = restAdapter0.log;
        retrofit.Server server82 = restAdapter0.server;
        retrofit.Server server83 = restAdapter0.server;
        org.junit.Assert.assertNull(profiler1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(requestInterceptor3);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(executor34);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(logLevel40);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNull(logLevel58);
        org.junit.Assert.assertNull(logLevel60);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(restAdapter76);
        org.junit.Assert.assertNotNull(errorHandler77);
        org.junit.Assert.assertNotNull(converter78);
        org.junit.Assert.assertNull(log81);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNotNull(server83);
    }

    @Test
    public void test07983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07983");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        restAdapter0.requestInterceptor = requestInterceptor4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter0.requestInterceptor;
        retrofit.client.Client.Provider provider9 = restAdapter0.clientProvider;
        java.util.concurrent.Executor executor10 = restAdapter0.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor11 = restAdapter0.requestInterceptor;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(requestInterceptor11);
    }

    @Test
    public void test07984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07984");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Log log2 = restAdapter0.log;
        java.util.concurrent.Executor executor3 = restAdapter0.httpExecutor;
        retrofit.Server server4 = null;
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        retrofit.converter.Converter converter9 = null;
        retrofit.Profiler profiler10 = null;
        retrofit.ErrorHandler errorHandler11 = null;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter13.logLevel = logLevel15;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor8, converter9, profiler10, errorHandler11, log12, logLevel15);
        restAdapter0.log = log12;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder22 = builder19.setServer("hi!");
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Log log26 = restAdapter23.log;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter23.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder29 = builder22.setLogLevel(logLevel27);
        java.util.concurrent.Executor executor30 = builder22.callbackExecutor;
        restAdapter0.callbackExecutor = executor30;
        retrofit.ErrorHandler errorHandler32 = restAdapter0.errorHandler;
        java.util.concurrent.Executor executor33 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor34 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor35 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNull(errorHandler32);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNotNull(executor35);
    }

    @Test
    public void test07985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07985");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.logLevel;
        retrofit.Profiler profiler2 = null;
        restAdapter0.profiler = profiler2;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.Profiler profiler5 = restAdapter0.profiler;
        retrofit.Profiler profiler6 = null;
        restAdapter0.profiler = profiler6;
        retrofit.Server server8 = restAdapter0.server;
        java.util.concurrent.Executor executor9 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor10 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor12 = builder11.callbackExecutor;
        retrofit.Profiler profiler13 = null;
        builder11.profiler = profiler13;
        retrofit.RestAdapter.Log log15 = builder11.log;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder19 = builder16.setServer("hi!");
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter20.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.Log log23 = restAdapter20.log;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter20.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = builder19.setLogLevel(logLevel24);
        java.util.concurrent.Executor executor27 = builder19.callbackExecutor;
        builder11.httpExecutor = executor27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        builder29.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("hi!");
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel34 = restAdapter33.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log36 = restAdapter33.log;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter33.logLevel = logLevel37;
        retrofit.RestAdapter.Builder builder39 = builder32.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("hi!");
        retrofit.client.Client.Provider provider42 = builder41.clientProvider;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter43.logLevel = logLevel45;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        restAdapter43.requestInterceptor = requestInterceptor47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.Log log53 = restAdapter50.log;
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter50.logLevel = logLevel54;
        retrofit.Server server56 = null;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter65.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter65.logLevel = logLevel67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel67);
        restAdapter50.log = log64;
        builder49.log = log64;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        builder72.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder75 = builder72.setServer("hi!");
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter76.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter76.new RestHandler();
        retrofit.RestAdapter.Log log79 = restAdapter76.log;
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter76.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = builder75.setLogLevel(logLevel80);
        retrofit.Server server83 = builder75.server;
        builder49.server = server83;
        restAdapter43.server = server83;
        retrofit.RestAdapter.Builder builder86 = builder41.setServer(server83);
        retrofit.converter.Converter converter87 = builder41.converter;
        builder11.converter = converter87;
        restAdapter0.converter = converter87;
        retrofit.client.Response response91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response93 = restAdapter0.logAndReplaceResponse("", response91, (long) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(logLevel34);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(provider42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(logLevel77);
        org.junit.Assert.assertNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(server83);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(converter87);
    }

    @Test
    public void test07986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07986");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("hi!");
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter18.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter restAdapter25 = builder17.build();
        retrofit.converter.Converter converter26 = builder17.converter;
        retrofit.RestAdapter.Builder builder27 = builder3.setConverter(converter26);
        retrofit.Profiler profiler28 = builder3.profiler;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.getLogLevel();
        java.util.concurrent.Executor executor31 = null;
        restAdapter29.httpExecutor = executor31;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        restAdapter29.requestInterceptor = requestInterceptor33;
        retrofit.client.Client.Provider provider35 = restAdapter29.clientProvider;
        retrofit.RestAdapter.Log log36 = restAdapter29.log;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        builder37.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder40 = builder37.setServer("hi!");
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Log log44 = restAdapter41.log;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter41.logLevel = logLevel45;
        retrofit.RestAdapter.Builder builder47 = builder40.setLogLevel(logLevel45);
        retrofit.client.Client.Provider provider48 = null;
        builder40.clientProvider = provider48;
        retrofit.RequestInterceptor requestInterceptor50 = builder40.requestInterceptor;
        retrofit.RestAdapter restAdapter51 = builder40.build();
        retrofit.Profiler profiler52 = builder40.profiler;
        retrofit.client.Client.Provider provider53 = builder40.clientProvider;
        restAdapter29.clientProvider = provider53;
        retrofit.Profiler profiler55 = null;
        restAdapter29.profiler = profiler55;
        java.util.concurrent.Executor executor57 = restAdapter29.httpExecutor;
        retrofit.RestAdapter.Log log58 = restAdapter29.log;
        java.util.concurrent.Executor executor59 = restAdapter29.httpExecutor;
        java.util.concurrent.Executor executor60 = restAdapter29.callbackExecutor;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.Profiler profiler62 = restAdapter61.profiler;
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter61.new RestHandler();
        retrofit.Server server64 = restAdapter61.server;
        java.util.concurrent.Executor executor65 = restAdapter61.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel66 = restAdapter61.getLogLevel();
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log68 = restAdapter67.log;
        java.util.concurrent.Executor executor69 = null;
        restAdapter67.callbackExecutor = executor69;
        retrofit.RestAdapter.Log log71 = restAdapter67.log;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter();
        retrofit.RestAdapter.Log log73 = restAdapter72.log;
        java.util.concurrent.Executor executor74 = null;
        restAdapter72.callbackExecutor = executor74;
        retrofit.RestAdapter.Log log76 = restAdapter72.log;
        retrofit.Server server77 = restAdapter72.server;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        builder78.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder81 = builder78.setServer("hi!");
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter82.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler84 = restAdapter82.new RestHandler();
        retrofit.RestAdapter.Log log85 = restAdapter82.log;
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter82.logLevel = logLevel86;
        retrofit.RestAdapter.Builder builder88 = builder81.setLogLevel(logLevel86);
        retrofit.client.Client.Provider provider89 = null;
        builder81.clientProvider = provider89;
        retrofit.RequestInterceptor requestInterceptor91 = builder81.requestInterceptor;
        retrofit.RestAdapter restAdapter92 = builder81.build();
        retrofit.Profiler profiler93 = builder81.profiler;
        retrofit.ErrorHandler errorHandler94 = builder81.errorHandler;
        restAdapter72.errorHandler = errorHandler94;
        restAdapter67.errorHandler = errorHandler94;
        restAdapter61.errorHandler = errorHandler94;
        restAdapter29.errorHandler = errorHandler94;
        builder3.errorHandler = errorHandler94;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(converter26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(logLevel30);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(log36);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(restAdapter51);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNotNull(provider53);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNull(profiler62);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertNull(executor65);
        org.junit.Assert.assertNull(logLevel66);
        org.junit.Assert.assertNull(log68);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertNull(log76);
        org.junit.Assert.assertNull(server77);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(logLevel83);
        org.junit.Assert.assertNull(log85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(requestInterceptor91);
        org.junit.Assert.assertNotNull(restAdapter92);
        org.junit.Assert.assertNull(profiler93);
        org.junit.Assert.assertNotNull(errorHandler94);
    }

    @Test
    public void test07987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07987");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter restAdapter3 = new retrofit.RestAdapter();
        retrofit.Server server4 = restAdapter3.server;
        retrofit.RequestInterceptor requestInterceptor5 = restAdapter3.requestInterceptor;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        builder6.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder9 = builder6.setServer("hi!");
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Log log13 = restAdapter10.log;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter10.logLevel = logLevel14;
        retrofit.RestAdapter.Builder builder16 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("hi!");
        retrofit.client.Client.Provider provider19 = builder18.clientProvider;
        restAdapter3.clientProvider = provider19;
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter3.new RestHandler();
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter22.getLogLevel();
        retrofit.ErrorHandler errorHandler24 = null;
        restAdapter22.errorHandler = errorHandler24;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.Server server27 = restAdapter26.server;
        retrofit.Server server28 = null;
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.converter.Converter converter33 = null;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter37.log;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter37.logLevel = logLevel41;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        restAdapter37.log = log51;
        builder36.log = log51;
        retrofit.Server server59 = null;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter68.logLevel = logLevel70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel70);
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor32, converter33, profiler34, errorHandler35, log51, logLevel70);
        restAdapter26.log = log51;
        restAdapter22.log = log51;
        restAdapter3.log = log51;
        retrofit.RestAdapter.Builder builder77 = builder0.setLog(log51);
        retrofit.ErrorHandler errorHandler78 = builder77.errorHandler;
        retrofit.RestAdapter.Builder builder80 = builder77.setServer("hi!");
        retrofit.Server server81 = builder77.server;
        retrofit.RequestInterceptor requestInterceptor82 = builder77.requestInterceptor;
        retrofit.RestAdapter.Builder builder84 = builder77.setServer("hi!");
        retrofit.client.Client client85 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder86 = builder84.setClient(client85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(requestInterceptor5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(provider19);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(errorHandler78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNull(requestInterceptor82);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test07988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07988");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.Server server7 = restAdapter6.server;
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter6.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = builder9.setServer("hi!");
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter13.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Log log16 = restAdapter13.log;
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter13.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("hi!");
        retrofit.client.Client.Provider provider22 = builder21.clientProvider;
        restAdapter6.clientProvider = provider22;
        restAdapter0.clientProvider = provider22;
        retrofit.ErrorHandler errorHandler25 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter26 = restAdapter0.converter;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = builder27.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder32 = builder27.setLogLevel(logLevel31);
        retrofit.RestAdapter.Log log33 = builder27.log;
        restAdapter0.log = log33;
        retrofit.RestAdapter.LogLevel logLevel35 = restAdapter0.logLevel;
        retrofit.Server server36 = restAdapter0.server;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(provider22);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNull(converter26);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server36);
    }

    @Test
    public void test07989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07989");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.converter.Converter converter7 = null;
        restAdapter0.converter = converter7;
        retrofit.converter.Converter converter9 = restAdapter0.converter;
        java.util.concurrent.Executor executor10 = restAdapter0.callbackExecutor;
        retrofit.Profiler profiler11 = null;
        restAdapter0.profiler = profiler11;
        retrofit.RequestInterceptor requestInterceptor13 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter14.getLogLevel();
        retrofit.RestAdapter.Log log16 = restAdapter14.log;
        java.util.concurrent.Executor executor17 = restAdapter14.httpExecutor;
        retrofit.Server server18 = null;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel29 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter27.logLevel = logLevel29;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel29);
        restAdapter14.log = log26;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder36 = builder33.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder38 = builder33.setLogLevel(logLevel37);
        restAdapter14.logLevel = logLevel37;
        restAdapter0.setLogLevel(logLevel37);
        retrofit.RequestInterceptor requestInterceptor41 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor43 = restAdapter0.httpExecutor;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.Profiler profiler45 = restAdapter44.profiler;
        retrofit.converter.Converter converter46 = null;
        restAdapter44.converter = converter46;
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter44.new RestHandler();
        retrofit.Profiler profiler49 = null;
        restAdapter44.profiler = profiler49;
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter44.logLevel;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter53.logLevel = logLevel55;
        retrofit.ErrorHandler errorHandler57 = null;
        restAdapter53.errorHandler = errorHandler57;
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter53.logLevel;
        retrofit.converter.Converter converter60 = null;
        restAdapter53.converter = converter60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder65 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter66.log;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter66.logLevel = logLevel70;
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder74 = builder72.setServer("hi!");
        retrofit.client.Client.Provider provider75 = builder74.clientProvider;
        restAdapter53.clientProvider = provider75;
        restAdapter44.clientProvider = provider75;
        retrofit.client.Client.Provider provider78 = restAdapter44.clientProvider;
        restAdapter0.clientProvider = provider78;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(requestInterceptor41);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertNull(logLevel52);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(provider75);
        org.junit.Assert.assertNotNull(provider78);
    }

    @Test
    public void test07990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07990");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter12 = builder10.build();
        retrofit.Profiler profiler13 = restAdapter12.profiler;
        java.util.concurrent.Executor executor14 = restAdapter12.callbackExecutor;
        java.util.concurrent.Executor executor15 = restAdapter12.httpExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(restAdapter12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNotNull(executor15);
    }

    @Test
    public void test07991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07991");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter2 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter2.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter2.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter2.getLogLevel();
        java.util.concurrent.Executor executor6 = restAdapter2.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = builder7.setServer("hi!");
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter11.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter11.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter11.log;
        retrofit.RestAdapter.LogLevel logLevel15 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter11.logLevel = logLevel15;
        retrofit.RestAdapter.Builder builder17 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider18 = null;
        builder10.clientProvider = provider18;
        retrofit.RequestInterceptor requestInterceptor20 = builder10.requestInterceptor;
        retrofit.RestAdapter restAdapter21 = builder10.build();
        retrofit.ErrorHandler errorHandler22 = builder10.errorHandler;
        retrofit.converter.Converter converter23 = builder10.converter;
        restAdapter2.converter = converter23;
        builder0.converter = converter23;
        retrofit.RequestInterceptor requestInterceptor26 = builder0.requestInterceptor;
        retrofit.Profiler profiler27 = builder0.profiler;
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(requestInterceptor20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(errorHandler22);
        org.junit.Assert.assertNotNull(converter23);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNull(profiler27);
    }

    @Test
    public void test07992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07992");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter15.new RestHandler();
        retrofit.RestAdapter.Log log18 = restAdapter15.log;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter15.logLevel = logLevel19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel32);
        restAdapter15.log = log29;
        builder14.log = log29;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter46.logLevel = logLevel48;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel48);
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log29, logLevel48);
        retrofit.RestAdapter.Builder builder52 = builder0.setLog(log29);
        retrofit.Profiler profiler53 = null;
        builder0.profiler = profiler53;
        builder0.ensureSaneDefaults();
        retrofit.client.Client.Provider provider56 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder58 = builder0.setServer("hi!");
        retrofit.client.Client client59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder60 = builder0.setClient(client59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(provider56);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test07993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07993");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel2 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel2;
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.Profiler profiler7 = restAdapter0.profiler;
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.Server server23 = builder15.server;
        restAdapter8.server = server23;
        restAdapter0.server = server23;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder29 = builder26.setServer("hi!");
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter30.new RestHandler();
        retrofit.RestAdapter.Log log33 = restAdapter30.log;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter30.logLevel = logLevel34;
        retrofit.RestAdapter.Builder builder36 = builder29.setLogLevel(logLevel34);
        java.util.concurrent.Executor executor37 = builder29.callbackExecutor;
        retrofit.Profiler profiler38 = null;
        builder29.profiler = profiler38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel43 = restAdapter40.getLogLevel();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        builder44.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder47 = builder44.setServer("hi!");
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter48.new RestHandler();
        retrofit.RestAdapter.Log log51 = restAdapter48.log;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter48.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder54 = builder47.setLogLevel(logLevel52);
        java.util.concurrent.Executor executor55 = builder47.callbackExecutor;
        restAdapter40.callbackExecutor = executor55;
        builder29.callbackExecutor = executor55;
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        builder62.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder65 = builder62.setServer("hi!");
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter66.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter66.log;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter66.logLevel = logLevel70;
        retrofit.RestAdapter.Builder builder72 = builder65.setLogLevel(logLevel70);
        java.util.concurrent.Executor executor73 = builder65.callbackExecutor;
        restAdapter58.callbackExecutor = executor73;
        builder29.httpExecutor = executor73;
        java.util.concurrent.Executor executor76 = builder29.callbackExecutor;
        restAdapter0.callbackExecutor = executor76;
        retrofit.converter.Converter converter78 = restAdapter0.converter;
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter0.logLevel;
        boolean boolean80 = logLevel79.log();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(logLevel43);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(log51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNull(converter78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test07994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07994");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("hi!");
        retrofit.Server server13 = builder12.server;
        java.util.concurrent.Executor executor14 = null;
        builder12.callbackExecutor = executor14;
        java.util.concurrent.Executor executor16 = builder12.httpExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(executor16);
    }

    @Test
    public void test07995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07995");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.Server server11 = builder3.server;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        builder12.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = builder12.setServer("hi!");
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter16.logLevel = logLevel20;
        retrofit.RestAdapter.Builder builder22 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider23 = builder22.clientProvider;
        builder3.clientProvider = provider23;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter25.logLevel = logLevel27;
        retrofit.ErrorHandler errorHandler29 = null;
        restAdapter25.errorHandler = errorHandler29;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter25.logLevel;
        builder3.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder36 = builder33.setServer("hi!");
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter37.log;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter37.logLevel = logLevel41;
        retrofit.RestAdapter.Builder builder43 = builder36.setLogLevel(logLevel41);
        retrofit.client.Client.Provider provider44 = null;
        builder36.clientProvider = provider44;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter46.new RestHandler();
        retrofit.RestAdapter.Log log49 = restAdapter46.log;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter46.logLevel = logLevel50;
        retrofit.Server server52 = null;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter61.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter61.logLevel = logLevel63;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel63);
        restAdapter46.log = log60;
        retrofit.RestAdapter.Builder builder67 = builder36.setLog(log60);
        log60.log("hi!");
        builder3.log = log60;
        retrofit.RestAdapter restAdapter71 = builder3.build();
        retrofit.converter.Converter converter72 = restAdapter71.converter;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(restAdapter71);
        org.junit.Assert.assertNotNull(converter72);
    }

    @Test
    public void test07996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07996");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.Server server4 = builder3.server;
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        retrofit.Server server6 = restAdapter5.server;
        retrofit.RequestInterceptor requestInterceptor7 = restAdapter5.requestInterceptor;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("hi!");
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log15 = restAdapter12.log;
        retrofit.RestAdapter.LogLevel logLevel16 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter12.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = builder11.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("hi!");
        retrofit.client.Client.Provider provider21 = builder20.clientProvider;
        restAdapter5.clientProvider = provider21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = builder23.setServer("hi!");
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel28 = restAdapter27.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter27.new RestHandler();
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter27.logLevel = logLevel31;
        retrofit.RestAdapter.Builder builder33 = builder26.setLogLevel(logLevel31);
        retrofit.client.Client.Provider provider34 = null;
        builder26.clientProvider = provider34;
        retrofit.RequestInterceptor requestInterceptor36 = builder26.requestInterceptor;
        retrofit.RestAdapter restAdapter37 = builder26.build();
        retrofit.ErrorHandler errorHandler38 = builder26.errorHandler;
        restAdapter5.errorHandler = errorHandler38;
        builder3.errorHandler = errorHandler38;
        retrofit.ErrorHandler errorHandler41 = builder3.errorHandler;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(requestInterceptor7);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider21);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(logLevel28);
        org.junit.Assert.assertNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNotNull(errorHandler38);
        org.junit.Assert.assertNotNull(errorHandler41);
    }

    @Test
    public void test07997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07997");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = null;
        builder0.profiler = profiler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("hi!");
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter8.logLevel = logLevel12;
        retrofit.RestAdapter.Builder builder14 = builder7.setLogLevel(logLevel12);
        retrofit.Server server15 = builder7.server;
        builder0.server = server15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter19.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter19.getLogLevel();
        java.util.concurrent.Executor executor23 = restAdapter19.callbackExecutor;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder27 = builder24.setServer("hi!");
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter28.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter28.new RestHandler();
        retrofit.RestAdapter.Log log31 = restAdapter28.log;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter28.logLevel = logLevel32;
        retrofit.RestAdapter.Builder builder34 = builder27.setLogLevel(logLevel32);
        retrofit.client.Client.Provider provider35 = null;
        builder27.clientProvider = provider35;
        retrofit.RequestInterceptor requestInterceptor37 = builder27.requestInterceptor;
        retrofit.RestAdapter restAdapter38 = builder27.build();
        retrofit.ErrorHandler errorHandler39 = builder27.errorHandler;
        retrofit.converter.Converter converter40 = builder27.converter;
        restAdapter19.converter = converter40;
        builder17.converter = converter40;
        retrofit.RestAdapter.Builder builder43 = builder0.setConverter(converter40);
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter44.getLogLevel();
        retrofit.ErrorHandler errorHandler46 = null;
        restAdapter44.errorHandler = errorHandler46;
        retrofit.Profiler profiler48 = restAdapter44.profiler;
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter44.new RestHandler();
        retrofit.Profiler profiler50 = null;
        restAdapter44.profiler = profiler50;
        retrofit.converter.Converter converter52 = restAdapter44.converter;
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = builder54.setServer("hi!");
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter58.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.Log log61 = restAdapter58.log;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter58.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = builder57.setLogLevel(logLevel62);
        retrofit.client.Client.Provider provider65 = null;
        builder57.clientProvider = provider65;
        retrofit.ErrorHandler errorHandler67 = builder57.errorHandler;
        restAdapter44.errorHandler = errorHandler67;
        builder43.errorHandler = errorHandler67;
        retrofit.RestAdapter.Log log70 = builder43.log;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(logLevel29);
        org.junit.Assert.assertNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(converter40);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(logLevel45);
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(errorHandler67);
        org.junit.Assert.assertNull(log70);
    }

    @Test
    public void test07998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07998");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = null;
        builder0.clientProvider = provider1;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder4.log;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter7.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter7.logLevel = logLevel9;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter7.new RestHandler();
        retrofit.Server server12 = null;
        retrofit.client.Client.Provider provider13 = null;
        java.util.concurrent.Executor executor14 = null;
        java.util.concurrent.Executor executor15 = null;
        retrofit.RequestInterceptor requestInterceptor16 = null;
        retrofit.converter.Converter converter17 = null;
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.Server server27 = null;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter36.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter36.logLevel = logLevel38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        restAdapter21.log = log35;
        builder20.log = log35;
        retrofit.Server server43 = null;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter52.logLevel = logLevel54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel54);
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server12, provider13, executor14, executor15, requestInterceptor16, converter17, profiler18, errorHandler19, log35, logLevel54);
        restAdapter7.setLogLevel(logLevel54);
        boolean boolean59 = logLevel54.log();
        retrofit.RestAdapter.Builder builder60 = builder4.setLogLevel(logLevel54);
        retrofit.client.Client.Provider provider61 = builder4.clientProvider;
        retrofit.RestAdapter.Builder builder63 = builder4.setServer("hi!");
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(provider61);
        org.junit.Assert.assertNotNull(builder63);
    }

    @Test
    public void test07999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07999");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter4.log;
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter4.logLevel = logLevel8;
        retrofit.RestAdapter.Builder builder10 = builder3.setLogLevel(logLevel8);
        retrofit.client.Client.Provider provider11 = null;
        builder3.clientProvider = provider11;
        retrofit.RequestInterceptor requestInterceptor13 = builder3.requestInterceptor;
        retrofit.RestAdapter restAdapter14 = builder3.build();
        retrofit.ErrorHandler errorHandler15 = builder3.errorHandler;
        java.util.concurrent.Executor executor16 = builder3.callbackExecutor;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder20 = builder17.setServer("hi!");
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Log log24 = restAdapter21.log;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter21.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder27 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider28 = null;
        builder20.clientProvider = provider28;
        retrofit.Server server30 = null;
        builder20.server = server30;
        retrofit.RequestInterceptor requestInterceptor32 = builder20.requestInterceptor;
        builder3.requestInterceptor = requestInterceptor32;
        retrofit.Profiler profiler34 = null;
        builder3.profiler = profiler34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor37 = builder36.callbackExecutor;
        retrofit.Profiler profiler38 = null;
        builder36.profiler = profiler38;
        retrofit.RestAdapter.Log log40 = builder36.log;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        builder41.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder44 = builder41.setServer("hi!");
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.Log log48 = restAdapter45.log;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter45.logLevel = logLevel49;
        retrofit.RestAdapter.Builder builder51 = builder44.setLogLevel(logLevel49);
        java.util.concurrent.Executor executor52 = builder44.callbackExecutor;
        builder36.httpExecutor = executor52;
        builder36.ensureSaneDefaults();
        retrofit.client.Client.Provider provider55 = builder36.clientProvider;
        retrofit.RestAdapter.Builder builder57 = builder36.setServer("Retrofit-Idle");
        retrofit.RequestInterceptor requestInterceptor58 = builder57.requestInterceptor;
        retrofit.RestAdapter.Builder builder59 = builder3.setRequestInterceptor(requestInterceptor58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = builder60.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder65 = builder60.setLogLevel(logLevel64);
        retrofit.Server server66 = null;
        builder60.server = server66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        builder68.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder71 = builder68.setServer("hi!");
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter72.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler74 = restAdapter72.new RestHandler();
        retrofit.RestAdapter.Log log75 = restAdapter72.log;
        retrofit.RestAdapter.LogLevel logLevel76 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter72.logLevel = logLevel76;
        retrofit.RestAdapter.Builder builder78 = builder71.setLogLevel(logLevel76);
        retrofit.client.Client.Provider provider79 = null;
        builder71.clientProvider = provider79;
        retrofit.RequestInterceptor requestInterceptor81 = builder71.requestInterceptor;
        retrofit.RestAdapter restAdapter82 = builder71.build();
        retrofit.ErrorHandler errorHandler83 = builder71.errorHandler;
        retrofit.converter.Converter converter84 = builder71.converter;
        retrofit.RestAdapter.Builder builder85 = builder60.setConverter(converter84);
        retrofit.RestAdapter.Builder builder86 = builder59.setConverter(converter84);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(logLevel22);
        org.junit.Assert.assertNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(requestInterceptor32);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNotNull(provider55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(logLevel73);
        org.junit.Assert.assertNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(requestInterceptor81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertNotNull(errorHandler83);
        org.junit.Assert.assertNotNull(converter84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test08000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test08000");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder3 = builder0.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel4 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder5 = builder0.setLogLevel(logLevel4);
        retrofit.Server server6 = null;
        retrofit.client.Client.Provider provider7 = null;
        java.util.concurrent.Executor executor8 = null;
        java.util.concurrent.Executor executor9 = null;
        retrofit.RequestInterceptor requestInterceptor10 = null;
        retrofit.converter.Converter converter11 = null;
        retrofit.Profiler profiler12 = null;
        retrofit.ErrorHandler errorHandler13 = null;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter15.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter15.new RestHandler();
        retrofit.RestAdapter.Log log18 = restAdapter15.log;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter15.logLevel = logLevel19;
        retrofit.Server server21 = null;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter30.logLevel = logLevel32;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel32);
        restAdapter15.log = log29;
        builder14.log = log29;
        retrofit.Server server37 = null;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter46.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter46.logLevel = logLevel48;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel48);
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server6, provider7, executor8, executor9, requestInterceptor10, converter11, profiler12, errorHandler13, log29, logLevel48);
        retrofit.RestAdapter.Builder builder52 = builder0.setLog(log29);
        retrofit.converter.Converter converter53 = null;
        builder0.converter = converter53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder58 = builder55.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        retrofit.RestAdapter.Builder builder60 = builder55.setLogLevel(logLevel59);
        retrofit.Server server61 = null;
        builder55.server = server61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder66 = builder63.setServer("hi!");
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter67.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.Log log70 = restAdapter67.log;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        restAdapter67.logLevel = logLevel71;
        retrofit.RestAdapter.Builder builder73 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider74 = null;
        builder66.clientProvider = provider74;
        retrofit.RequestInterceptor requestInterceptor76 = builder66.requestInterceptor;
        retrofit.RestAdapter restAdapter77 = builder66.build();
        retrofit.ErrorHandler errorHandler78 = builder66.errorHandler;
        retrofit.converter.Converter converter79 = builder66.converter;
        retrofit.RestAdapter.Builder builder80 = builder55.setConverter(converter79);
        builder0.converter = converter79;
        builder0.ensureSaneDefaults();
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor84 = builder0.httpExecutor;
        java.util.concurrent.Executor executor85 = builder0.httpExecutor;
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNull(logLevel31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(requestInterceptor76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(errorHandler78);
        org.junit.Assert.assertNotNull(converter79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(executor84);
        org.junit.Assert.assertNotNull(executor85);
    }
}

