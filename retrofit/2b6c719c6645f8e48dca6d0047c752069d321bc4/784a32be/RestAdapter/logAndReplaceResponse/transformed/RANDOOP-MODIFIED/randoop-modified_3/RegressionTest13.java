import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest13 {

    public static boolean debug = false;

    @Test
    public void test06501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06501");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        retrofit.RestAdapter.Builder builder13 = builder8.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log23;
        retrofit.RestAdapter.Builder builder25 = builder14.setLog(log23);
        retrofit.Profiler profiler26 = builder14.profiler;
        java.util.concurrent.Executor executor27 = null;
        builder14.callbackExecutor = executor27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.client.Client.Provider provider36 = builder29.clientProvider;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        builder29.log = log37;
        builder14.log = log37;
        retrofit.RestAdapter.Builder builder40 = builder13.setLog(log37);
        retrofit.RestAdapter.Builder builder42 = builder13.setServer("hi!");
        retrofit.client.Client.Provider provider43 = builder42.clientProvider;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder48.setLogLevel(logLevel53);
        retrofit.client.Client.Provider provider55 = builder48.clientProvider;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        builder48.log = log56;
        retrofit.RestAdapter.Builder builder58 = builder44.setLog(log56);
        retrofit.Server server59 = builder44.server;
        java.util.concurrent.Executor executor60 = builder44.callbackExecutor;
        retrofit.client.Client.Provider provider61 = builder44.clientProvider;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = builder68.setServer("Retrofit-Idle");
        retrofit.Profiler profiler71 = builder68.profiler;
        java.util.concurrent.Executor executor72 = builder68.callbackExecutor;
        retrofit.Server server73 = builder68.server;
        builder44.server = server73;
        retrofit.RestAdapter.Builder builder75 = builder42.setServer(server73);
        retrofit.ErrorHandler errorHandler76 = builder75.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(profiler71);
        org.junit.Assert.assertNull(executor72);
        org.junit.Assert.assertNotNull(server73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(errorHandler76);
    }

    @Test
    public void test06502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06502");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.Profiler profiler10 = null;
        builder8.profiler = profiler10;
        retrofit.Profiler profiler12 = null;
        builder8.profiler = profiler12;
        retrofit.RestAdapter restAdapter14 = builder8.build();
        retrofit.RequestInterceptor requestInterceptor15 = restAdapter14.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter14.getLogLevel();
        boolean boolean17 = logLevel16.log();
        boolean boolean18 = logLevel16.log();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(requestInterceptor15);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06503");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        builder25.logLevel = logLevel27;
        boolean boolean29 = logLevel27.log();
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel27);
        retrofit.Profiler profiler31 = null;
        restAdapter30.profiler = profiler31;
        retrofit.converter.Converter converter33 = null;
        restAdapter30.converter = converter33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Profiler profiler47 = null;
        builder43.profiler = profiler47;
        retrofit.converter.Converter converter49 = builder43.converter;
        restAdapter30.converter = converter49;
        restAdapter0.converter = converter49;
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler53 = restAdapter0.errorHandler;
        java.lang.Throwable throwable54 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable54, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(converter49);
        org.junit.Assert.assertNull(errorHandler53);
    }

    @Test
    public void test06504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06504");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor3 = builder2.callbackExecutor;
        retrofit.Profiler profiler4 = builder2.profiler;
        retrofit.RestAdapter.Builder builder6 = builder2.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Builder builder17 = builder6.setServer(server16);
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("Retrofit-Idle");
        retrofit.Server server44 = builder43.server;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.Server server62 = builder61.server;
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.converter.Converter converter67 = null;
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = null;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor66, converter67, profiler68, errorHandler69, log70, logLevel76);
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel76);
        builder25.log = log52;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel85 = builder84.logLevel;
        builder83.logLevel = logLevel85;
        builder81.logLevel = logLevel85;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server16, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log52, logLevel85);
        builder0.server = server16;
        retrofit.Profiler profiler90 = builder0.profiler;
        java.util.concurrent.Executor executor91 = null;
        builder0.callbackExecutor = executor91;
        retrofit.RestAdapter.Builder builder94 = builder0.setServer("hi!");
        retrofit.ErrorHandler errorHandler95 = builder94.errorHandler;
        retrofit.client.Client.Provider provider96 = builder94.clientProvider;
        retrofit.Profiler profiler97 = builder94.profiler;
        retrofit.RestAdapter.Builder builder99 = builder94.setServer("Retrofit-");
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler90);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNull(errorHandler95);
        org.junit.Assert.assertNull(provider96);
        org.junit.Assert.assertNull(profiler97);
        org.junit.Assert.assertNotNull(builder99);
    }

    @Test
    public void test06505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06505");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler9 = builder8.errorHandler;
        retrofit.RestAdapter restAdapter10 = builder8.build();
        java.util.concurrent.Executor executor11 = null;
        restAdapter10.httpExecutor = executor11;
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter10.new RestHandler();
        retrofit.ErrorHandler errorHandler15 = restAdapter10.errorHandler;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor17 = null;
        restAdapter16.callbackExecutor = executor17;
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.converter.Converter converter20 = restAdapter16.converter;
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        restAdapter16.logLevel = logLevel23;
        restAdapter10.setLogLevel(logLevel23);
        retrofit.RestAdapter.Log log26 = restAdapter10.log;
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter10.requestInterceptor;
        retrofit.Profiler profiler28 = restAdapter10.profiler;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = builder37.setLog(log38);
        retrofit.RestAdapter.Log log40 = builder37.log;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("Retrofit-Idle");
        retrofit.Server server50 = builder49.server;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = builder63.logLevel;
        retrofit.RestAdapter.Builder builder65 = builder59.setLogLevel(logLevel64);
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel64);
        retrofit.RestAdapter.Builder builder67 = builder37.setServer(server50);
        retrofit.RestAdapter.Log log68 = builder67.log;
        restAdapter10.log = log68;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNotNull(restAdapter10);
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log68);
    }

    @Test
    public void test06506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06506");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.httpExecutor = executor1;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.httpExecutor = executor3;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor12 = restAdapter0.callbackExecutor;
        java.util.concurrent.Executor executor13 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        builder22.logLevel = logLevel24;
        boolean boolean26 = logLevel24.log();
        builder15.logLevel = logLevel24;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        builder15.requestInterceptor = requestInterceptor28;
        java.util.concurrent.Executor executor30 = null;
        builder15.httpExecutor = executor30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider39 = builder32.clientProvider;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log40;
        builder15.log = log40;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor44 = builder43.callbackExecutor;
        retrofit.Profiler profiler45 = builder43.profiler;
        retrofit.RestAdapter.Builder builder47 = builder43.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder48.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("Retrofit-Idle");
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Builder builder58 = builder47.setServer(server57);
        retrofit.RestAdapter restAdapter59 = builder58.build();
        java.util.concurrent.Executor executor60 = restAdapter59.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler61 = restAdapter59.new RestHandler();
        retrofit.ErrorHandler errorHandler62 = restAdapter59.errorHandler;
        retrofit.RestAdapter.Builder builder63 = builder15.setErrorHandler(errorHandler62);
        restAdapter0.errorHandler = errorHandler62;
        java.lang.Class<?> wildcardClass65 = restAdapter0.getClass();
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(errorHandler62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test06507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06507");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor12 = builder11.callbackExecutor;
        retrofit.Profiler profiler13 = builder11.profiler;
        retrofit.RestAdapter.Builder builder15 = builder11.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Builder builder26 = builder15.setServer(server25);
        retrofit.RestAdapter restAdapter27 = builder26.build();
        retrofit.client.Client.Provider provider28 = null;
        restAdapter27.clientProvider = provider28;
        retrofit.RestAdapter.Log log30 = restAdapter27.log;
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter27.getLogLevel();
        retrofit.Profiler profiler32 = restAdapter27.profiler;
        retrofit.Server server33 = restAdapter27.server;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        builder41.logLevel = logLevel43;
        boolean boolean45 = logLevel43.log();
        builder34.logLevel = logLevel43;
        retrofit.RestAdapter.LogLevel logLevel47 = builder34.logLevel;
        java.util.concurrent.Executor executor48 = builder34.callbackExecutor;
        java.util.concurrent.Executor executor49 = builder34.callbackExecutor;
        retrofit.Profiler profiler50 = null;
        builder34.profiler = profiler50;
        retrofit.client.Client.Provider provider52 = builder34.clientProvider;
        retrofit.converter.Converter converter53 = builder34.converter;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.Server server55 = builder54.server;
        retrofit.RestAdapter.Log log56 = null;
        builder54.log = log56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = builder58.logLevel;
        retrofit.RestAdapter.Builder builder60 = builder54.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder62 = builder60.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        java.util.concurrent.Executor executor65 = builder62.httpExecutor;
        java.util.concurrent.Executor executor66 = null;
        builder62.httpExecutor = executor66;
        retrofit.RestAdapter restAdapter68 = builder62.build();
        builder62.ensureSaneDefaults();
        retrofit.client.Client.Provider provider70 = builder62.clientProvider;
        builder34.clientProvider = provider70;
        restAdapter27.clientProvider = provider70;
        builder8.clientProvider = provider70;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(restAdapter27);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNull(executor49);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(executor65);
        org.junit.Assert.assertNotNull(restAdapter68);
        org.junit.Assert.assertNotNull(provider70);
    }

    @Test
    public void test06508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06508");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.httpExecutor = executor1;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.httpExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        restAdapter0.clientProvider = provider5;
        retrofit.ErrorHandler errorHandler7 = restAdapter0.errorHandler;
        retrofit.Profiler profiler8 = null;
        restAdapter0.profiler = profiler8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler19 = builder18.errorHandler;
        retrofit.RestAdapter restAdapter20 = builder18.build();
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter21.new RestHandler();
        java.util.concurrent.Executor executor23 = restAdapter21.httpExecutor;
        retrofit.Profiler profiler24 = restAdapter21.profiler;
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter21.new RestHandler();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = builder26.callbackExecutor;
        retrofit.Profiler profiler28 = builder26.profiler;
        retrofit.RestAdapter.Builder builder30 = builder26.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel31 = builder26.logLevel;
        boolean boolean32 = logLevel31.log();
        restAdapter21.logLevel = logLevel31;
        restAdapter20.setLogLevel(logLevel31);
        boolean boolean35 = logLevel31.log();
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.setLogLevel(logLevel31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNotNull(restAdapter20);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test06509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06509");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.Server server19 = builder18.server;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder36.server;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel51);
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel51);
        builder0.log = log27;
        java.util.concurrent.Executor executor56 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = builder57.server;
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = builder61.logLevel;
        retrofit.RestAdapter.Builder builder63 = builder57.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder65 = builder63.setServer("Retrofit-Idle");
        retrofit.Server server66 = builder65.server;
        retrofit.client.Client.Provider provider67 = null;
        java.util.concurrent.Executor executor68 = null;
        java.util.concurrent.Executor executor69 = null;
        retrofit.RequestInterceptor requestInterceptor70 = null;
        retrofit.converter.Converter converter71 = null;
        retrofit.Profiler profiler72 = null;
        retrofit.ErrorHandler errorHandler73 = null;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.Server server76 = builder75.server;
        retrofit.RestAdapter.Log log77 = null;
        builder75.log = log77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel80 = builder79.logLevel;
        retrofit.RestAdapter.Builder builder81 = builder75.setLogLevel(logLevel80);
        retrofit.client.Client.Provider provider82 = builder75.clientProvider;
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        builder75.log = log83;
        retrofit.RestAdapter.Builder builder85 = builder74.setLog(log83);
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter87 = new retrofit.RestAdapter(server66, provider67, executor68, executor69, requestInterceptor70, converter71, profiler72, errorHandler73, log83, logLevel86);
        retrofit.RestAdapter.Builder builder88 = builder0.setServer(server66);
        retrofit.RestAdapter.LogLevel logLevel89 = builder88.logLevel;
        retrofit.Server server90 = builder88.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNull(server76);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(provider82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server90);
    }

    @Test
    public void test06510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06510");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        java.util.concurrent.Executor executor4 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLog(log14);
        java.util.concurrent.Executor executor16 = builder13.httpExecutor;
        java.util.concurrent.Executor executor17 = null;
        builder13.httpExecutor = executor17;
        retrofit.RestAdapter restAdapter19 = builder13.build();
        retrofit.RestAdapter.Log log20 = restAdapter19.log;
        log20.log("");
        restAdapter0.log = log20;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = builder24.callbackExecutor;
        retrofit.Profiler profiler26 = builder24.profiler;
        retrofit.RestAdapter.Builder builder28 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Builder builder39 = builder28.setServer(server38);
        retrofit.RestAdapter restAdapter40 = builder39.build();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        builder48.logLevel = logLevel50;
        boolean boolean52 = logLevel50.log();
        builder41.logLevel = logLevel50;
        retrofit.RestAdapter.LogLevel logLevel54 = builder41.logLevel;
        retrofit.RestAdapter.Builder builder55 = builder39.setLogLevel(logLevel54);
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        retrofit.Profiler profiler57 = null;
        builder55.profiler = profiler57;
        retrofit.ErrorHandler errorHandler59 = builder55.errorHandler;
        retrofit.converter.Converter converter60 = null;
        builder55.converter = converter60;
        retrofit.ErrorHandler errorHandler62 = builder55.errorHandler;
        restAdapter0.errorHandler = errorHandler62;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNotNull(restAdapter19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(restAdapter40);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler59);
        org.junit.Assert.assertNotNull(errorHandler62);
    }

    @Test
    public void test06511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06511");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = builder0.errorHandler;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.Server server4 = builder3.server;
        retrofit.RestAdapter.Log log5 = null;
        builder3.log = log5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel8 = builder7.logLevel;
        retrofit.RestAdapter.Builder builder9 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        builder10.logLevel = logLevel12;
        boolean boolean14 = logLevel12.log();
        builder3.logLevel = logLevel12;
        java.util.concurrent.Executor executor16 = null;
        builder3.httpExecutor = executor16;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor19 = null;
        restAdapter18.callbackExecutor = executor19;
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.converter.Converter converter22 = restAdapter18.converter;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        restAdapter18.logLevel = logLevel25;
        builder3.logLevel = logLevel25;
        retrofit.RestAdapter.LogLevel logLevel28 = builder3.logLevel;
        retrofit.RequestInterceptor requestInterceptor29 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.client.Client.Provider provider41 = builder34.clientProvider;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder34.log = log42;
        retrofit.RestAdapter.Builder builder44 = builder30.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = builder53.logLevel;
        retrofit.RestAdapter.Builder builder55 = builder49.setLogLevel(logLevel54);
        retrofit.client.Client.Provider provider56 = builder49.clientProvider;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        builder49.log = log57;
        retrofit.RestAdapter.Builder builder59 = builder45.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = builder30.setLog(log57);
        log57.log("");
        log57.log("Retrofit-");
        log57.log("");
        builder3.log = log57;
        retrofit.RestAdapter.Builder builder68 = builder0.setLog(log57);
        retrofit.Profiler profiler69 = null;
        builder0.profiler = profiler69;
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertNull(converter22);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test06512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06512");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.Server server3 = builder0.server;
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter4.new RestHandler();
        retrofit.ErrorHandler errorHandler6 = null;
        restAdapter4.errorHandler = errorHandler6;
        retrofit.RestAdapter.Log log8 = restAdapter4.log;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder17 = builder11.setLogLevel(logLevel16);
        java.util.concurrent.Executor executor18 = builder17.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor19 = builder17.requestInterceptor;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter29 = builder28.build();
        retrofit.Profiler profiler30 = null;
        builder28.profiler = profiler30;
        retrofit.Profiler profiler32 = null;
        builder28.profiler = profiler32;
        retrofit.converter.Converter converter34 = builder28.converter;
        retrofit.RestAdapter.Builder builder35 = builder17.setConverter(converter34);
        restAdapter4.converter = converter34;
        retrofit.RestAdapter.Builder builder37 = builder0.setConverter(converter34);
        retrofit.RestAdapter.Log log38 = builder0.log;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor40 = null;
        restAdapter39.callbackExecutor = executor40;
        retrofit.converter.Converter converter42 = restAdapter39.converter;
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter39.new RestHandler();
        java.util.concurrent.Executor executor44 = restAdapter39.httpExecutor;
        retrofit.Server server45 = restAdapter39.server;
        retrofit.Profiler profiler46 = null;
        restAdapter39.profiler = profiler46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter49 = null;
        builder48.converter = converter49;
        java.util.concurrent.Executor executor51 = builder48.callbackExecutor;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter52.logLevel;
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter52.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = builder57.server;
        retrofit.ErrorHandler errorHandler59 = builder57.errorHandler;
        retrofit.Server server60 = builder57.server;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter61.new RestHandler();
        retrofit.ErrorHandler errorHandler63 = null;
        restAdapter61.errorHandler = errorHandler63;
        retrofit.RestAdapter.Log log65 = restAdapter61.log;
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.Server server69 = builder68.server;
        retrofit.RestAdapter.Log log70 = null;
        builder68.log = log70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = builder72.logLevel;
        retrofit.RestAdapter.Builder builder74 = builder68.setLogLevel(logLevel73);
        java.util.concurrent.Executor executor75 = builder74.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor76 = builder74.requestInterceptor;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.Server server78 = builder77.server;
        retrofit.RestAdapter.Log log79 = null;
        builder77.log = log79;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        retrofit.RestAdapter.Builder builder83 = builder77.setLogLevel(logLevel82);
        retrofit.RestAdapter.Builder builder85 = builder83.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter86 = builder85.build();
        retrofit.Profiler profiler87 = null;
        builder85.profiler = profiler87;
        retrofit.Profiler profiler89 = null;
        builder85.profiler = profiler89;
        retrofit.converter.Converter converter91 = builder85.converter;
        retrofit.RestAdapter.Builder builder92 = builder74.setConverter(converter91);
        restAdapter61.converter = converter91;
        retrofit.RestAdapter.Builder builder94 = builder57.setConverter(converter91);
        restAdapter52.converter = converter91;
        retrofit.RestAdapter.Builder builder96 = builder48.setConverter(converter91);
        restAdapter39.converter = converter91;
        builder0.converter = converter91;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(requestInterceptor19);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(converter34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertNull(errorHandler59);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertNull(log65);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(executor75);
        org.junit.Assert.assertNull(requestInterceptor76);
        org.junit.Assert.assertNull(server78);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(restAdapter86);
        org.junit.Assert.assertNotNull(converter91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test06513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06513");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        retrofit.Profiler profiler5 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        retrofit.Profiler profiler8 = builder6.profiler;
        retrofit.RestAdapter.Builder builder10 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder17 = builder11.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder19 = builder17.setServer("Retrofit-Idle");
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Builder builder21 = builder10.setServer(server20);
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.client.Client.Provider provider23 = null;
        restAdapter22.clientProvider = provider23;
        retrofit.RestAdapter.Log log25 = restAdapter22.log;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter22.getLogLevel();
        retrofit.RequestInterceptor requestInterceptor27 = restAdapter22.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter22.new RestHandler();
        java.util.concurrent.Executor executor29 = restAdapter22.httpExecutor;
        restAdapter0.callbackExecutor = executor29;
        retrofit.Profiler profiler31 = null;
        restAdapter0.profiler = profiler31;
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(profiler8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(executor29);
    }

    @Test
    public void test06514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06514");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = builder8.build();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.logLevel;
        retrofit.RestAdapter.Log log11 = restAdapter9.log;
        retrofit.Profiler profiler12 = null;
        restAdapter9.profiler = profiler12;
        retrofit.Profiler profiler14 = restAdapter9.profiler;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider27 = builder20.clientProvider;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log28;
        retrofit.RestAdapter.Builder builder30 = builder16.setLog(log28);
        retrofit.Server server31 = builder16.server;
        java.util.concurrent.Executor executor32 = builder16.callbackExecutor;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider44 = builder37.clientProvider;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log45;
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log45);
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter48.new RestHandler();
        java.util.concurrent.Executor executor50 = restAdapter48.httpExecutor;
        java.util.concurrent.Executor executor51 = null;
        restAdapter48.callbackExecutor = executor51;
        retrofit.ErrorHandler errorHandler53 = null;
        restAdapter48.errorHandler = errorHandler53;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter48.logLevel = logLevel55;
        builder33.logLevel = logLevel55;
        builder16.logLevel = logLevel55;
        retrofit.RestAdapter.Log log59 = builder16.log;
        restAdapter9.log = log59;
        retrofit.client.Response response62 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response64 = restAdapter9.logAndReplaceResponse("Retrofit-", response62, (long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log59);
    }

    @Test
    public void test06515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06515");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        builder25.logLevel = logLevel27;
        boolean boolean29 = logLevel27.log();
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel27);
        retrofit.Profiler profiler31 = null;
        restAdapter30.profiler = profiler31;
        retrofit.converter.Converter converter33 = null;
        restAdapter30.converter = converter33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Profiler profiler47 = null;
        builder43.profiler = profiler47;
        retrofit.converter.Converter converter49 = builder43.converter;
        restAdapter30.converter = converter49;
        restAdapter0.converter = converter49;
        retrofit.RestAdapter.Log log52 = null;
        restAdapter0.log = log52;
        retrofit.ErrorHandler errorHandler54 = restAdapter0.errorHandler;
        retrofit.client.Response response56 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response58 = restAdapter0.logAndReplaceResponse("", response56, (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(converter49);
        org.junit.Assert.assertNull(errorHandler54);
    }

    @Test
    public void test06516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06516");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RequestInterceptor requestInterceptor7 = null;
        builder0.requestInterceptor = requestInterceptor7;
        retrofit.RestAdapter.Log log9 = builder0.log;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        builder17.logLevel = logLevel19;
        boolean boolean21 = logLevel19.log();
        builder10.logLevel = logLevel19;
        retrofit.RestAdapter.Builder builder23 = builder0.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("Retrofit-Idle");
        retrofit.Server server33 = builder32.server;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        retrofit.client.Client.Provider provider49 = builder42.clientProvider;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log50;
        retrofit.RestAdapter.Builder builder52 = builder41.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log50, logLevel53);
        builder23.logLevel = logLevel53;
        retrofit.Server server56 = builder23.server;
        java.util.concurrent.Executor executor57 = builder23.callbackExecutor;
        retrofit.Server server58 = builder23.server;
        retrofit.client.Client client59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder60 = builder23.setClient(client59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNull(server58);
    }

    @Test
    public void test06517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06517");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter15.new RestHandler();
        java.util.concurrent.Executor executor17 = restAdapter15.httpExecutor;
        java.util.concurrent.Executor executor18 = null;
        restAdapter15.callbackExecutor = executor18;
        retrofit.ErrorHandler errorHandler20 = null;
        restAdapter15.errorHandler = errorHandler20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter15.logLevel = logLevel22;
        builder0.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder26 = builder0.setServer("Retrofit-Idle");
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        builder35.logLevel = logLevel37;
        boolean boolean39 = logLevel37.log();
        builder28.logLevel = logLevel37;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        builder28.requestInterceptor = requestInterceptor41;
        java.util.concurrent.Executor executor43 = null;
        builder28.httpExecutor = executor43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.client.Client.Provider provider52 = builder45.clientProvider;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log53;
        builder28.log = log53;
        retrofit.Profiler profiler56 = null;
        builder28.profiler = profiler56;
        retrofit.client.Client.Provider provider58 = builder28.clientProvider;
        java.util.concurrent.Executor executor59 = builder28.callbackExecutor;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel65);
        java.util.concurrent.Executor executor67 = builder66.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor68 = builder66.requestInterceptor;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.Server server70 = builder69.server;
        retrofit.RestAdapter.Log log71 = null;
        builder69.log = log71;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel74 = builder73.logLevel;
        retrofit.RestAdapter.Builder builder75 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder77 = builder75.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter78 = builder77.build();
        retrofit.Profiler profiler79 = null;
        builder77.profiler = profiler79;
        retrofit.Profiler profiler81 = null;
        builder77.profiler = profiler81;
        retrofit.converter.Converter converter83 = builder77.converter;
        retrofit.RestAdapter.Builder builder84 = builder66.setConverter(converter83);
        retrofit.RestAdapter.Builder builder85 = builder28.setConverter(converter83);
        retrofit.RestAdapter.Builder builder86 = builder0.setConverter(converter83);
        retrofit.Profiler profiler87 = builder86.profiler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(executor67);
        org.junit.Assert.assertNull(requestInterceptor68);
        org.junit.Assert.assertNull(server70);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(restAdapter78);
        org.junit.Assert.assertNotNull(converter83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(profiler87);
    }

    @Test
    public void test06518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06518");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = null;
        builder0.converter = converter1;
        retrofit.Profiler profiler3 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler13 = builder12.errorHandler;
        retrofit.RestAdapter restAdapter14 = builder12.build();
        java.util.concurrent.Executor executor15 = null;
        restAdapter14.httpExecutor = executor15;
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter14.new RestHandler();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter19 = null;
        builder18.converter = converter19;
        java.util.concurrent.Executor executor21 = builder18.callbackExecutor;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler31 = builder30.errorHandler;
        retrofit.RestAdapter restAdapter32 = builder30.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter35.new RestHandler();
        java.util.concurrent.Executor executor37 = restAdapter35.httpExecutor;
        java.util.concurrent.Executor executor38 = null;
        restAdapter35.callbackExecutor = executor38;
        retrofit.client.Client.Provider provider40 = null;
        restAdapter35.clientProvider = provider40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("Retrofit-Idle");
        retrofit.Server server51 = builder50.server;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder68 = builder66.setServer("Retrofit-Idle");
        retrofit.Server server69 = builder68.server;
        retrofit.client.Client.Provider provider70 = null;
        java.util.concurrent.Executor executor71 = null;
        java.util.concurrent.Executor executor72 = null;
        retrofit.RequestInterceptor requestInterceptor73 = null;
        retrofit.converter.Converter converter74 = null;
        retrofit.Profiler profiler75 = null;
        retrofit.ErrorHandler errorHandler76 = null;
        retrofit.RestAdapter.Log log77 = null;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.Server server79 = builder78.server;
        retrofit.RestAdapter.Log log80 = null;
        builder78.log = log80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = builder82.logLevel;
        retrofit.RestAdapter.Builder builder84 = builder78.setLogLevel(logLevel83);
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server69, provider70, executor71, executor72, requestInterceptor73, converter74, profiler75, errorHandler76, log77, logLevel83);
        retrofit.RestAdapter restAdapter86 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel83);
        restAdapter35.log = log59;
        log59.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder90 = builder33.setLog(log59);
        builder30.log = log59;
        retrofit.ErrorHandler errorHandler92 = builder30.errorHandler;
        builder18.errorHandler = errorHandler92;
        restAdapter14.errorHandler = errorHandler92;
        retrofit.RestAdapter.Log log95 = restAdapter14.log;
        retrofit.RestAdapter.Builder builder96 = builder0.setLog(log95);
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel98 = builder0.logLevel;
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(errorHandler31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(server69);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(errorHandler92);
        org.junit.Assert.assertNotNull(log95);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertTrue("'" + logLevel98 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel98.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06519");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.Server server2 = builder1.server;
        retrofit.RestAdapter.Log log3 = null;
        builder1.log = log3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder7 = builder1.setLogLevel(logLevel6);
        retrofit.client.Client.Provider provider8 = builder1.clientProvider;
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        builder1.log = log9;
        retrofit.RestAdapter.Builder builder11 = builder0.setLog(log9);
        retrofit.Profiler profiler12 = builder0.profiler;
        java.util.concurrent.Executor executor13 = null;
        builder0.callbackExecutor = executor13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log23;
        builder0.log = log23;
        retrofit.Profiler profiler26 = builder0.profiler;
        retrofit.Server server27 = builder0.server;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = builder28.callbackExecutor;
        retrofit.Profiler profiler30 = builder28.profiler;
        retrofit.RestAdapter.Builder builder32 = builder28.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = builder37.logLevel;
        retrofit.RestAdapter.Builder builder39 = builder33.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("Retrofit-Idle");
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Builder builder43 = builder32.setServer(server42);
        retrofit.RestAdapter restAdapter44 = builder43.build();
        java.util.concurrent.Executor executor45 = restAdapter44.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter44.new RestHandler();
        retrofit.ErrorHandler errorHandler47 = restAdapter44.errorHandler;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor49 = builder48.callbackExecutor;
        retrofit.Profiler profiler50 = builder48.profiler;
        retrofit.RestAdapter.Builder builder52 = builder48.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.Server server62 = builder61.server;
        retrofit.RestAdapter.Builder builder63 = builder52.setServer(server62);
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.client.Client.Provider provider65 = null;
        restAdapter64.clientProvider = provider65;
        retrofit.RestAdapter.Log log67 = restAdapter64.log;
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter64.getLogLevel();
        restAdapter44.logLevel = logLevel68;
        boolean boolean70 = logLevel68.log();
        builder0.logLevel = logLevel68;
        boolean boolean72 = logLevel68.log();
        boolean boolean73 = logLevel68.log();
        org.junit.Assert.assertNull(server2);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(errorHandler47);
        org.junit.Assert.assertNull(executor49);
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test06520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06520");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        java.util.concurrent.Executor executor5 = null;
        restAdapter0.callbackExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        restAdapter0.httpExecutor = executor7;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter10 = restAdapter0.converter;
        retrofit.Profiler profiler11 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter0.new RestHandler();
        java.lang.Class<?> wildcardClass13 = restHandler12.getClass();
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06521");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = null;
        builder0.converter = converter1;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.Server server4 = builder3.server;
        java.util.concurrent.Executor executor5 = null;
        builder3.httpExecutor = executor5;
        retrofit.Server server7 = builder3.server;
        retrofit.RestAdapter.LogLevel logLevel8 = builder3.logLevel;
        retrofit.client.Client.Provider provider9 = null;
        builder3.clientProvider = provider9;
        retrofit.Server server11 = builder3.server;
        retrofit.converter.Converter converter12 = builder3.converter;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        java.util.concurrent.Executor executor24 = builder21.httpExecutor;
        java.util.concurrent.Executor executor25 = null;
        builder21.httpExecutor = executor25;
        java.util.concurrent.Executor executor27 = builder21.callbackExecutor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        java.util.concurrent.Executor executor39 = builder36.httpExecutor;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.client.Client.Provider provider51 = builder44.clientProvider;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        builder44.log = log52;
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = builder63.logLevel;
        retrofit.RestAdapter.Builder builder65 = builder59.setLogLevel(logLevel64);
        retrofit.client.Client.Provider provider66 = builder59.clientProvider;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        builder59.log = log67;
        retrofit.RestAdapter.Builder builder69 = builder55.setLog(log67);
        retrofit.RestAdapter.Builder builder70 = builder40.setLog(log67);
        log67.log("");
        log67.log("Retrofit-");
        retrofit.RestAdapter.Builder builder75 = builder36.setLog(log67);
        builder21.log = log67;
        builder3.log = log67;
        log67.log("Retrofit-");
        builder0.log = log67;
        log67.log("Retrofit-");
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test06522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06522");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.Server server2 = builder1.server;
        retrofit.RestAdapter.Log log3 = null;
        builder1.log = log3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder7 = builder1.setLogLevel(logLevel6);
        retrofit.client.Client.Provider provider8 = builder1.clientProvider;
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        builder1.log = log9;
        retrofit.RestAdapter.Builder builder11 = builder0.setLog(log9);
        retrofit.Profiler profiler12 = builder0.profiler;
        retrofit.ErrorHandler errorHandler13 = builder0.errorHandler;
        retrofit.ErrorHandler errorHandler14 = builder0.errorHandler;
        org.junit.Assert.assertNull(server2);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertNull(errorHandler14);
    }

    @Test
    public void test06523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06523");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor6 = null;
        restAdapter5.callbackExecutor = executor6;
        retrofit.RestAdapter.Log log8 = restAdapter5.log;
        retrofit.converter.Converter converter9 = restAdapter5.converter;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        java.util.concurrent.Executor executor17 = builder16.callbackExecutor;
        java.util.concurrent.Executor executor18 = builder16.callbackExecutor;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        java.util.concurrent.Executor executor30 = builder27.httpExecutor;
        retrofit.RestAdapter restAdapter31 = builder27.build();
        java.util.concurrent.Executor executor32 = restAdapter31.httpExecutor;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = builder37.logLevel;
        retrofit.RestAdapter.Builder builder39 = builder33.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = builder41.setLog(log42);
        java.util.concurrent.Executor executor44 = builder41.httpExecutor;
        retrofit.RestAdapter restAdapter45 = builder41.build();
        java.util.concurrent.Executor executor46 = restAdapter45.httpExecutor;
        retrofit.RestAdapter.Builder builder47 = builder16.setExecutors(executor32, executor46);
        restAdapter5.callbackExecutor = executor46;
        builder0.callbackExecutor = executor46;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter50.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter50.new RestHandler();
        retrofit.ErrorHandler errorHandler54 = restAdapter50.errorHandler;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("Retrofit-Idle");
        retrofit.Server server64 = builder63.server;
        restAdapter50.server = server64;
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter50.new RestHandler();
        retrofit.Profiler profiler67 = null;
        restAdapter50.profiler = profiler67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.Server server70 = builder69.server;
        retrofit.RestAdapter.Log log71 = null;
        builder69.log = log71;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel74 = builder73.logLevel;
        retrofit.RestAdapter.Builder builder75 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder77 = builder75.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler78 = builder77.errorHandler;
        retrofit.RestAdapter restAdapter79 = builder77.build();
        java.util.concurrent.Executor executor80 = null;
        restAdapter79.httpExecutor = executor80;
        retrofit.RestAdapter.RestHandler restHandler82 = restAdapter79.new RestHandler();
        retrofit.client.Client.Provider provider83 = null;
        restAdapter79.clientProvider = provider83;
        retrofit.Profiler profiler85 = null;
        restAdapter79.profiler = profiler85;
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter79.logLevel;
        retrofit.Profiler profiler88 = null;
        restAdapter79.profiler = profiler88;
        retrofit.ErrorHandler errorHandler90 = restAdapter79.errorHandler;
        restAdapter50.errorHandler = errorHandler90;
        builder0.errorHandler = errorHandler90;
        retrofit.client.Client.Provider provider93 = builder0.clientProvider;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(errorHandler54);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNull(server70);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(errorHandler78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler90);
        org.junit.Assert.assertNull(provider93);
    }

    @Test
    public void test06524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06524");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.client.Client.Provider provider26 = builder19.clientProvider;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        builder19.log = log27;
        retrofit.RestAdapter.Builder builder29 = builder15.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = builder0.setLog(log27);
        log27.log("");
        log27.log("Retrofit-");
        log27.log("hi!");
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test06525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06525");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider29 = builder22.clientProvider;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log30;
        retrofit.RestAdapter.Builder builder32 = builder21.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log30, logLevel33);
        builder0.logLevel = logLevel33;
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        retrofit.Profiler profiler37 = null;
        builder0.profiler = profiler37;
        retrofit.RestAdapter.Builder builder40 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder42 = builder0.setServer("Retrofit-Idle");
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test06526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06526");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.Server server2 = builder1.server;
        retrofit.RestAdapter.Log log3 = null;
        builder1.log = log3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder7 = builder1.setLogLevel(logLevel6);
        retrofit.client.Client.Provider provider8 = builder1.clientProvider;
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        builder1.log = log9;
        retrofit.RestAdapter.Builder builder11 = builder0.setLog(log9);
        retrofit.Profiler profiler12 = builder0.profiler;
        java.util.concurrent.Executor executor13 = null;
        builder0.callbackExecutor = executor13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log23;
        builder0.log = log23;
        retrofit.Profiler profiler26 = builder0.profiler;
        retrofit.Server server27 = builder0.server;
        retrofit.RestAdapter.Builder builder29 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = builder30.callbackExecutor;
        java.util.concurrent.Executor executor32 = null;
        builder30.httpExecutor = executor32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.Server server43 = builder42.server;
        retrofit.Profiler profiler44 = null;
        builder42.profiler = profiler44;
        retrofit.Profiler profiler46 = null;
        builder42.profiler = profiler46;
        retrofit.RestAdapter restAdapter48 = builder42.build();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = builder53.logLevel;
        retrofit.RestAdapter.Builder builder55 = builder49.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder55.setServer("Retrofit-Idle");
        retrofit.Server server58 = builder57.server;
        java.util.concurrent.Executor executor59 = builder57.httpExecutor;
        java.util.concurrent.Executor executor60 = builder57.callbackExecutor;
        retrofit.ErrorHandler errorHandler61 = null;
        builder57.errorHandler = errorHandler61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        java.util.concurrent.Executor executor70 = builder69.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor71 = builder69.requestInterceptor;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.Server server73 = builder72.server;
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel77 = builder76.logLevel;
        retrofit.RestAdapter.Builder builder78 = builder72.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder80 = builder78.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter81 = builder80.build();
        retrofit.Profiler profiler82 = null;
        builder80.profiler = profiler82;
        retrofit.Profiler profiler84 = null;
        builder80.profiler = profiler84;
        retrofit.converter.Converter converter86 = builder80.converter;
        retrofit.RestAdapter.Builder builder87 = builder69.setConverter(converter86);
        retrofit.RestAdapter.Builder builder88 = builder57.setConverter(converter86);
        restAdapter48.converter = converter86;
        retrofit.RestAdapter.Builder builder90 = builder30.setConverter(converter86);
        builder29.converter = converter86;
        retrofit.RequestInterceptor requestInterceptor92 = builder29.requestInterceptor;
        org.junit.Assert.assertNull(server2);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(restAdapter48);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(executor70);
        org.junit.Assert.assertNull(requestInterceptor71);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(restAdapter81);
        org.junit.Assert.assertNotNull(converter86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNull(requestInterceptor92);
    }

    @Test
    public void test06527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06527");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.Server server7 = builder6.server;
        retrofit.RestAdapter.Log log8 = null;
        builder6.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = builder10.logLevel;
        retrofit.RestAdapter.Builder builder12 = builder6.setLogLevel(logLevel11);
        java.util.concurrent.Executor executor13 = builder12.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor14 = builder12.requestInterceptor;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter24 = builder23.build();
        retrofit.Profiler profiler25 = null;
        builder23.profiler = profiler25;
        retrofit.Profiler profiler27 = null;
        builder23.profiler = profiler27;
        retrofit.converter.Converter converter29 = builder23.converter;
        retrofit.RestAdapter.Builder builder30 = builder12.setConverter(converter29);
        builder0.converter = converter29;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder0.setLogLevel(logLevel39);
        retrofit.Profiler profiler41 = builder40.profiler;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor43 = builder42.callbackExecutor;
        retrofit.Profiler profiler44 = builder42.profiler;
        retrofit.RestAdapter.Builder builder46 = builder42.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel47 = builder42.logLevel;
        retrofit.RequestInterceptor requestInterceptor48 = builder42.requestInterceptor;
        retrofit.client.Client.Provider provider49 = builder42.clientProvider;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("Retrofit-Idle");
        retrofit.Server server59 = builder58.server;
        java.util.concurrent.Executor executor60 = builder58.httpExecutor;
        java.util.concurrent.Executor executor61 = builder58.httpExecutor;
        builder58.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.converter.Converter converter64 = null;
        restAdapter63.converter = converter64;
        java.util.concurrent.Executor executor66 = restAdapter63.callbackExecutor;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor68 = builder67.callbackExecutor;
        retrofit.Profiler profiler69 = builder67.profiler;
        retrofit.RestAdapter.Builder builder71 = builder67.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.Server server73 = builder72.server;
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel77 = builder76.logLevel;
        retrofit.RestAdapter.Builder builder78 = builder72.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder80 = builder78.setServer("Retrofit-Idle");
        retrofit.Server server81 = builder80.server;
        retrofit.RestAdapter.Builder builder82 = builder71.setServer(server81);
        retrofit.RestAdapter restAdapter83 = builder82.build();
        java.util.concurrent.Executor executor84 = restAdapter83.callbackExecutor;
        retrofit.client.Client.Provider provider85 = restAdapter83.clientProvider;
        restAdapter63.clientProvider = provider85;
        retrofit.RestAdapter.Builder builder87 = builder58.setClient(provider85);
        retrofit.RestAdapter.Builder builder88 = builder42.setClient(provider85);
        builder40.clientProvider = provider85;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(restAdapter24);
        org.junit.Assert.assertNotNull(converter29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(profiler44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor48);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(server59);
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(restAdapter83);
        org.junit.Assert.assertNotNull(executor84);
        org.junit.Assert.assertNotNull(provider85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test06528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06528");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.getLogLevel();
        retrofit.converter.Converter converter5 = null;
        restAdapter0.converter = converter5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("Retrofit-Idle");
        retrofit.Server server34 = builder33.server;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.Server server44 = builder43.server;
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel48 = builder47.logLevel;
        retrofit.RestAdapter.Builder builder49 = builder43.setLogLevel(logLevel48);
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel48);
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel48);
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel65);
        retrofit.client.Client.Provider provider67 = builder60.clientProvider;
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        builder60.log = log68;
        retrofit.RestAdapter.Builder builder70 = builder59.setLog(log68);
        retrofit.converter.Converter converter71 = null;
        builder59.converter = converter71;
        retrofit.RestAdapter.Log log73 = builder59.log;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor75 = builder74.callbackExecutor;
        retrofit.Profiler profiler76 = builder74.profiler;
        retrofit.RestAdapter.Builder builder78 = builder74.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel79 = builder74.logLevel;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server16, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log73, logLevel79);
        restAdapter0.log = log73;
        retrofit.client.Client.Provider provider82 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler83 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler84 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNull(executor75);
        org.junit.Assert.assertNull(profiler76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider82);
    }

    @Test
    public void test06529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06529");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        java.util.concurrent.Executor executor3 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor4 = builder0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.RestAdapter.LogLevel logLevel6 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder17 = builder11.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder19 = builder17.setServer("Retrofit-Idle");
        retrofit.Server server20 = builder19.server;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.client.Client.Provider provider36 = builder29.clientProvider;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        builder29.log = log37;
        retrofit.RestAdapter.Builder builder39 = builder28.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log37, logLevel40);
        builder7.logLevel = logLevel40;
        retrofit.RestAdapter.LogLevel logLevel43 = builder7.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder7.setServer("Retrofit-Idle");
        retrofit.Server server46 = builder7.server;
        builder0.server = server46;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(server46);
    }

    @Test
    public void test06530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06530");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor3 = builder2.callbackExecutor;
        retrofit.Profiler profiler4 = builder2.profiler;
        retrofit.RestAdapter.Builder builder6 = builder2.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Builder builder17 = builder6.setServer(server16);
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("Retrofit-Idle");
        retrofit.Server server44 = builder43.server;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.Server server62 = builder61.server;
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.converter.Converter converter67 = null;
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = null;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor66, converter67, profiler68, errorHandler69, log70, logLevel76);
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel76);
        builder25.log = log52;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel85 = builder84.logLevel;
        builder83.logLevel = logLevel85;
        builder81.logLevel = logLevel85;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server16, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log52, logLevel85);
        builder0.server = server16;
        retrofit.Profiler profiler90 = builder0.profiler;
        retrofit.RequestInterceptor requestInterceptor91 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel92 = builder0.logLevel;
        retrofit.client.Client.Provider provider93 = builder0.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler90);
        org.junit.Assert.assertNull(requestInterceptor91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider93);
    }

    @Test
    public void test06531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06531");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        retrofit.Profiler profiler14 = builder0.profiler;
        retrofit.client.Client.Provider provider15 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.Server server25 = builder24.server;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = null;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        builder34.logLevel = logLevel36;
        boolean boolean38 = logLevel36.log();
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel36);
        retrofit.Profiler profiler40 = null;
        restAdapter39.profiler = profiler40;
        retrofit.Server server42 = restAdapter39.server;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor44 = builder43.callbackExecutor;
        retrofit.Profiler profiler45 = builder43.profiler;
        retrofit.RestAdapter.Builder builder47 = builder43.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder48.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("Retrofit-Idle");
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Builder builder58 = builder47.setServer(server57);
        retrofit.RequestInterceptor requestInterceptor59 = builder58.requestInterceptor;
        retrofit.converter.Converter converter60 = null;
        builder58.converter = converter60;
        java.util.concurrent.Executor executor62 = builder58.callbackExecutor;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter63.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter63.logLevel;
        retrofit.ErrorHandler errorHandler66 = restAdapter63.errorHandler;
        retrofit.converter.Converter converter67 = null;
        restAdapter63.converter = converter67;
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter63.logLevel;
        java.util.concurrent.Executor executor70 = restAdapter63.httpExecutor;
        retrofit.RestAdapter.Log log71 = restAdapter63.log;
        retrofit.Profiler profiler72 = null;
        restAdapter63.profiler = profiler72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        builder74.logLevel = logLevel76;
        boolean boolean78 = logLevel76.log();
        restAdapter63.logLevel = logLevel76;
        builder58.logLevel = logLevel76;
        restAdapter39.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder82 = builder0.setLogLevel(logLevel76);
        java.util.concurrent.Executor executor83 = builder0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel84 = builder0.logLevel;
        retrofit.Profiler profiler85 = builder0.profiler;
        retrofit.RestAdapter.Builder builder87 = builder0.setServer("Retrofit-");
        retrofit.Profiler profiler88 = builder0.profiler;
        retrofit.RequestInterceptor requestInterceptor89 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(requestInterceptor59);
        org.junit.Assert.assertNull(executor62);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(errorHandler66);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertNull(executor70);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(executor83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNull(profiler88);
        org.junit.Assert.assertNull(requestInterceptor89);
    }

    @Test
    public void test06532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06532");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.ErrorHandler errorHandler7 = null;
        restAdapter0.errorHandler = errorHandler7;
        retrofit.client.Client.Provider provider9 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler19 = builder18.errorHandler;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor21 = builder20.callbackExecutor;
        retrofit.Profiler profiler22 = builder20.profiler;
        retrofit.RestAdapter.Builder builder24 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("Retrofit-Idle");
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Builder builder35 = builder24.setServer(server34);
        retrofit.RestAdapter restAdapter36 = builder35.build();
        java.util.concurrent.Executor executor37 = restAdapter36.callbackExecutor;
        builder18.callbackExecutor = executor37;
        restAdapter0.callbackExecutor = executor37;
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel42 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.setLogLevel(logLevel42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNull(logLevel41);
    }

    @Test
    public void test06533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06533");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.Profiler profiler10 = null;
        builder8.profiler = profiler10;
        retrofit.Profiler profiler12 = null;
        builder8.profiler = profiler12;
        retrofit.RestAdapter.LogLevel logLevel14 = builder8.logLevel;
        retrofit.Profiler profiler15 = builder8.profiler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler15);
    }

    @Test
    public void test06534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06534");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = null;
        builder0.converter = converter1;
        retrofit.Profiler profiler3 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel27);
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.client.Client.Provider provider48 = builder41.clientProvider;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log49;
        retrofit.RestAdapter.Builder builder51 = builder37.setLog(log49);
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server13, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log49, logLevel52);
        retrofit.converter.Converter converter54 = null;
        restAdapter53.converter = converter54;
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter53.new RestHandler();
        retrofit.Profiler profiler57 = null;
        restAdapter53.profiler = profiler57;
        retrofit.Profiler profiler59 = null;
        restAdapter53.profiler = profiler59;
        retrofit.ErrorHandler errorHandler61 = restAdapter53.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter53.getLogLevel();
        retrofit.RestAdapter.Builder builder63 = builder0.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder65 = builder63.setServer("Retrofit-Idle");
        java.util.concurrent.Executor executor66 = builder65.httpExecutor;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter67.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter67.logLevel;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.client.Client.Provider provider78 = builder71.clientProvider;
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        builder71.log = log79;
        retrofit.RestAdapter.Builder builder81 = builder70.setLog(log79);
        retrofit.converter.Converter converter82 = null;
        builder70.converter = converter82;
        retrofit.RestAdapter.Log log84 = builder70.log;
        restAdapter67.log = log84;
        builder65.log = log84;
        retrofit.RestAdapter.Builder builder88 = builder65.setServer("hi!");
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNull(logLevel69);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test06535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06535");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler9 = builder8.errorHandler;
        retrofit.RestAdapter restAdapter10 = builder8.build();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter13.new RestHandler();
        java.util.concurrent.Executor executor15 = restAdapter13.httpExecutor;
        java.util.concurrent.Executor executor16 = null;
        restAdapter13.callbackExecutor = executor16;
        retrofit.client.Client.Provider provider18 = null;
        restAdapter13.clientProvider = provider18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("Retrofit-Idle");
        retrofit.Server server29 = builder28.server;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel61);
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel61);
        restAdapter13.log = log37;
        log37.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder68 = builder11.setLog(log37);
        builder8.log = log37;
        retrofit.RestAdapter.Log log70 = builder8.log;
        retrofit.client.Client.Provider provider71 = builder8.clientProvider;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor73 = restAdapter72.requestInterceptor;
        retrofit.client.Client.Provider provider74 = restAdapter72.clientProvider;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor76 = null;
        restAdapter75.callbackExecutor = executor76;
        retrofit.RestAdapter.Log log78 = restAdapter75.log;
        retrofit.converter.Converter converter79 = restAdapter75.converter;
        retrofit.RestAdapter.RestHandler restHandler80 = restAdapter75.new RestHandler();
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        restAdapter75.logLevel = logLevel82;
        restAdapter72.logLevel = logLevel82;
        boolean boolean85 = logLevel82.log();
        retrofit.RestAdapter.Builder builder86 = builder8.setLogLevel(logLevel82);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNotNull(restAdapter10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(provider71);
        org.junit.Assert.assertNull(requestInterceptor73);
        org.junit.Assert.assertNull(provider74);
        org.junit.Assert.assertNull(log78);
        org.junit.Assert.assertNull(converter79);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test06536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06536");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.client.Client.Provider provider30 = builder23.clientProvider;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        builder23.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = builder37.logLevel;
        retrofit.RestAdapter.Builder builder39 = builder33.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("Retrofit-Idle");
        retrofit.Server server42 = builder41.server;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        retrofit.RestAdapter.Builder builder57 = builder51.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder59 = builder57.setServer("Retrofit-Idle");
        retrofit.Server server60 = builder59.server;
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.RequestInterceptor requestInterceptor64 = null;
        retrofit.converter.Converter converter65 = null;
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = null;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.Server server70 = builder69.server;
        retrofit.RestAdapter.Log log71 = null;
        builder69.log = log71;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel74 = builder73.logLevel;
        retrofit.RestAdapter.Builder builder75 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor64, converter65, profiler66, errorHandler67, log68, logLevel74);
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel74);
        builder23.log = log50;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel80 = builder79.logLevel;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = builder82.logLevel;
        builder81.logLevel = logLevel83;
        builder79.logLevel = logLevel83;
        retrofit.RestAdapter restAdapter86 = new retrofit.RestAdapter(server14, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log50, logLevel83);
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel89 = builder88.logLevel;
        builder87.logLevel = logLevel89;
        restAdapter86.logLevel = logLevel89;
        retrofit.Profiler profiler92 = restAdapter86.profiler;
        retrofit.RestAdapter.RestHandler restHandler93 = restAdapter86.new RestHandler();
        retrofit.client.Client.Provider provider94 = restAdapter86.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel95 = null;
        restAdapter86.setLogLevel(logLevel95);
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNull(server70);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler92);
        org.junit.Assert.assertNull(provider94);
    }

    @Test
    public void test06537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06537");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.Profiler profiler11 = builder10.profiler;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("Retrofit-Idle");
        retrofit.Server server21 = builder20.server;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder10.setServer(server21);
        java.util.concurrent.Executor executor39 = builder38.httpExecutor;
        java.util.concurrent.Executor executor40 = null;
        builder38.callbackExecutor = executor40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        java.util.concurrent.Executor executor49 = builder48.callbackExecutor;
        retrofit.converter.Converter converter50 = null;
        builder48.converter = converter50;
        retrofit.client.Client.Provider provider52 = builder48.clientProvider;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter62 = builder61.build();
        retrofit.converter.Converter converter63 = restAdapter62.converter;
        retrofit.RestAdapter.Builder builder64 = builder48.setConverter(converter63);
        retrofit.RestAdapter.Builder builder65 = builder38.setConverter(converter63);
        retrofit.RestAdapter.Log log66 = builder38.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(executor49);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(restAdapter62);
        org.junit.Assert.assertNotNull(converter63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(log66);
    }

    @Test
    public void test06538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06538");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.Server server15 = builder0.server;
        java.util.concurrent.Executor executor16 = null;
        builder0.callbackExecutor = executor16;
        retrofit.converter.Converter converter18 = builder0.converter;
        retrofit.RestAdapter.Log log19 = builder0.log;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        builder27.logLevel = logLevel29;
        boolean boolean31 = logLevel29.log();
        builder20.logLevel = logLevel29;
        retrofit.RestAdapter.LogLevel logLevel33 = builder20.logLevel;
        retrofit.Profiler profiler34 = builder20.profiler;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor36 = null;
        restAdapter35.callbackExecutor = executor36;
        retrofit.RestAdapter.Log log38 = restAdapter35.log;
        retrofit.converter.Converter converter39 = restAdapter35.converter;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = builder40.callbackExecutor;
        retrofit.Profiler profiler42 = builder40.profiler;
        retrofit.RestAdapter.Builder builder44 = builder40.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("Retrofit-Idle");
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Builder builder55 = builder44.setServer(server54);
        restAdapter35.server = server54;
        retrofit.RestAdapter.Builder builder57 = builder20.setServer(server54);
        retrofit.RestAdapter.Builder builder58 = builder0.setServer(server54);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = builder63.logLevel;
        retrofit.RestAdapter.Builder builder65 = builder59.setLogLevel(logLevel64);
        retrofit.RequestInterceptor requestInterceptor66 = null;
        builder59.requestInterceptor = requestInterceptor66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.Server server69 = builder68.server;
        retrofit.RestAdapter.Log log70 = null;
        builder68.log = log70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = builder72.logLevel;
        retrofit.RestAdapter.Builder builder74 = builder68.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter77 = builder76.build();
        retrofit.RestAdapter.LogLevel logLevel78 = retrofit.RestAdapter.LogLevel.NONE;
        builder76.logLevel = logLevel78;
        retrofit.RestAdapter.Log log80 = builder76.log;
        log80.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder83 = builder59.setLog(log80);
        retrofit.RestAdapter.Log log84 = builder83.log;
        builder0.log = log84;
        log84.log("hi!");
        log84.log("Retrofit-Idle");
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler34);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(log84);
    }

    @Test
    public void test06539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06539");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.RestAdapter.Log log17 = builder15.log;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler27 = builder26.errorHandler;
        retrofit.RestAdapter restAdapter28 = builder26.build();
        java.util.concurrent.Executor executor29 = null;
        restAdapter28.httpExecutor = executor29;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter28.new RestHandler();
        retrofit.client.Client.Provider provider32 = null;
        restAdapter28.clientProvider = provider32;
        retrofit.converter.Converter converter34 = restAdapter28.converter;
        retrofit.RestAdapter.Builder builder35 = builder15.setConverter(converter34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.client.Client.Provider provider47 = builder40.clientProvider;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        builder40.log = log48;
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log48);
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter51.new RestHandler();
        java.util.concurrent.Executor executor53 = restAdapter51.httpExecutor;
        java.util.concurrent.Executor executor54 = null;
        restAdapter51.callbackExecutor = executor54;
        retrofit.ErrorHandler errorHandler56 = null;
        restAdapter51.errorHandler = errorHandler56;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter51.logLevel = logLevel58;
        builder36.logLevel = logLevel58;
        retrofit.RestAdapter.Builder builder62 = builder36.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log63 = builder62.log;
        builder35.log = log63;
        retrofit.Server server65 = builder35.server;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertNotNull(restAdapter28);
        org.junit.Assert.assertNotNull(converter34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(server65);
    }

    @Test
    public void test06540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06540");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        java.util.concurrent.Executor executor10 = builder8.httpExecutor;
        java.util.concurrent.Executor executor11 = builder8.callbackExecutor;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter14.new RestHandler();
        java.util.concurrent.Executor executor16 = restAdapter14.httpExecutor;
        java.util.concurrent.Executor executor17 = null;
        restAdapter14.callbackExecutor = executor17;
        retrofit.client.Client.Provider provider19 = null;
        restAdapter14.clientProvider = provider19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = builder21.server;
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        retrofit.RestAdapter.Builder builder27 = builder21.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("Retrofit-Idle");
        retrofit.Server server30 = builder29.server;
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.converter.Converter converter35 = null;
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder39.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("Retrofit-Idle");
        retrofit.Server server48 = builder47.server;
        retrofit.client.Client.Provider provider49 = null;
        java.util.concurrent.Executor executor50 = null;
        java.util.concurrent.Executor executor51 = null;
        retrofit.RequestInterceptor requestInterceptor52 = null;
        retrofit.converter.Converter converter53 = null;
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Log log56 = null;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = builder57.server;
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = builder61.logLevel;
        retrofit.RestAdapter.Builder builder63 = builder57.setLogLevel(logLevel62);
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server48, provider49, executor50, executor51, requestInterceptor52, converter53, profiler54, errorHandler55, log56, logLevel62);
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor34, converter35, profiler36, errorHandler37, log38, logLevel62);
        restAdapter14.log = log38;
        log38.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder69 = builder12.setLog(log38);
        retrofit.RestAdapter.Builder builder70 = builder8.setLog(log38);
        retrofit.ErrorHandler errorHandler71 = builder8.errorHandler;
        retrofit.RestAdapter.Log log72 = builder8.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(errorHandler71);
        org.junit.Assert.assertNotNull(log72);
    }

    @Test
    public void test06541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06541");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor8 = builder6.requestInterceptor;
        retrofit.converter.Converter converter9 = null;
        builder6.converter = converter9;
        retrofit.RestAdapter restAdapter11 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter11.new RestHandler();
        java.util.concurrent.Executor executor13 = restAdapter11.httpExecutor;
        java.util.concurrent.Executor executor14 = null;
        restAdapter11.callbackExecutor = executor14;
        retrofit.client.Client.Provider provider16 = null;
        restAdapter11.clientProvider = provider16;
        java.util.concurrent.Executor executor18 = null;
        restAdapter11.callbackExecutor = executor18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter29 = builder28.build();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter29.logLevel;
        retrofit.RequestInterceptor requestInterceptor31 = restAdapter29.requestInterceptor;
        restAdapter11.requestInterceptor = requestInterceptor31;
        retrofit.RestAdapter.Builder builder33 = builder6.setRequestInterceptor(requestInterceptor31);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.Server server43 = builder42.server;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel57);
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter59.getLogLevel();
        builder6.logLevel = logLevel60;
        retrofit.Profiler profiler62 = null;
        builder6.profiler = profiler62;
        retrofit.Profiler profiler64 = null;
        builder6.profiler = profiler64;
        retrofit.Profiler profiler66 = builder6.profiler;
        builder6.ensureSaneDefaults();
        builder6.ensureSaneDefaults();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler66);
    }

    @Test
    public void test06542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06542");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.client.Client.Provider provider17 = null;
        restAdapter16.clientProvider = provider17;
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor21 = null;
        restAdapter20.httpExecutor = executor21;
        java.util.concurrent.Executor executor23 = null;
        restAdapter20.httpExecutor = executor23;
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder34 = builder32.setServer("Retrofit-Idle");
        retrofit.Server server35 = builder34.server;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = null;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel49);
        boolean boolean52 = logLevel49.log();
        restAdapter20.logLevel = logLevel49;
        restAdapter16.logLevel = logLevel49;
        retrofit.ErrorHandler errorHandler55 = restAdapter16.errorHandler;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(errorHandler55);
    }

    @Test
    public void test06543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06543");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter9.logLevel;
        retrofit.ErrorHandler errorHandler12 = restAdapter9.errorHandler;
        retrofit.converter.Converter converter13 = null;
        restAdapter9.converter = converter13;
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter9.logLevel;
        java.util.concurrent.Executor executor16 = restAdapter9.httpExecutor;
        retrofit.RestAdapter.Log log17 = restAdapter9.log;
        retrofit.Profiler profiler18 = null;
        restAdapter9.profiler = profiler18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        builder20.logLevel = logLevel22;
        boolean boolean24 = logLevel22.log();
        restAdapter9.logLevel = logLevel22;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter9.logLevel;
        retrofit.ErrorHandler errorHandler27 = null;
        restAdapter9.errorHandler = errorHandler27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        builder29.logLevel = logLevel31;
        boolean boolean33 = logLevel31.log();
        restAdapter9.setLogLevel(logLevel31);
        boolean boolean35 = logLevel31.log();
        retrofit.RestAdapter.Builder builder36 = builder6.setLogLevel(logLevel31);
        retrofit.converter.Converter converter37 = builder6.converter;
        retrofit.ErrorHandler errorHandler38 = builder6.errorHandler;
        retrofit.RestAdapter restAdapter39 = builder6.build();
        retrofit.client.Client.Provider provider40 = restAdapter39.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertNull(errorHandler38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNotNull(provider40);
    }

    @Test
    public void test06544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06544");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = builder10.callbackExecutor;
        retrofit.Profiler profiler12 = builder10.profiler;
        retrofit.RestAdapter.Builder builder14 = builder10.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter15 = builder14.converter;
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("Retrofit-Idle");
        retrofit.Server server18 = builder14.server;
        builder0.server = server18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("Retrofit-Idle");
        retrofit.Server server29 = builder28.server;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel43);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        java.util.concurrent.Executor executor48 = null;
        builder46.httpExecutor = executor48;
        retrofit.Server server50 = builder46.server;
        retrofit.RestAdapter.LogLevel logLevel51 = builder46.logLevel;
        restAdapter45.logLevel = logLevel51;
        retrofit.Profiler profiler53 = null;
        restAdapter45.profiler = profiler53;
        retrofit.Server server55 = restAdapter45.server;
        builder0.server = server55;
        retrofit.RestAdapter.LogLevel logLevel57 = builder0.logLevel;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06545");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel23);
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider44 = builder37.clientProvider;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log45;
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server9, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log45, logLevel48);
        retrofit.converter.Converter converter50 = null;
        restAdapter49.converter = converter50;
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter49.new RestHandler();
        retrofit.Profiler profiler53 = null;
        restAdapter49.profiler = profiler53;
        retrofit.Profiler profiler55 = null;
        restAdapter49.profiler = profiler55;
        retrofit.ErrorHandler errorHandler57 = restAdapter49.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter49.new RestHandler();
        java.util.concurrent.Executor executor59 = restAdapter49.callbackExecutor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler57);
        org.junit.Assert.assertNull(executor59);
    }

    @Test
    public void test06546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06546");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = null;
        restAdapter0.errorHandler = errorHandler3;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler6 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.Server server8 = restAdapter0.server;
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter0.logLevel;
        retrofit.Server server10 = restAdapter0.server;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(server10);
    }

    @Test
    public void test06547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06547");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.converter.Converter converter4 = builder0.converter;
        java.util.concurrent.Executor executor5 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(executor5);
    }

    @Test
    public void test06548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06548");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler7 = restAdapter0.profiler;
        java.util.concurrent.Executor executor8 = null;
        restAdapter0.callbackExecutor = executor8;
        java.util.concurrent.Executor executor10 = null;
        restAdapter0.callbackExecutor = executor10;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter12.logLevel;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = builder17.callbackExecutor;
        retrofit.Profiler profiler19 = builder17.profiler;
        retrofit.RestAdapter.Builder builder21 = builder17.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("Retrofit-Idle");
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Builder builder32 = builder21.setServer(server31);
        retrofit.RestAdapter restAdapter33 = builder32.build();
        retrofit.client.Client.Provider provider34 = null;
        restAdapter33.clientProvider = provider34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor37 = builder36.callbackExecutor;
        retrofit.Profiler profiler38 = builder36.profiler;
        retrofit.RestAdapter.Builder builder40 = builder36.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        builder45.logLevel = logLevel47;
        java.util.concurrent.Executor executor49 = null;
        builder45.callbackExecutor = executor49;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor52 = null;
        restAdapter51.callbackExecutor = executor52;
        retrofit.converter.Converter converter54 = restAdapter51.converter;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        restAdapter51.log = log55;
        builder45.log = log55;
        builder41.log = log55;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter59.new RestHandler();
        java.util.concurrent.Executor executor61 = restAdapter59.httpExecutor;
        java.util.concurrent.Executor executor62 = null;
        restAdapter59.callbackExecutor = executor62;
        retrofit.client.Client.Provider provider64 = null;
        restAdapter59.clientProvider = provider64;
        java.util.concurrent.Executor executor66 = null;
        restAdapter59.callbackExecutor = executor66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.Server server69 = builder68.server;
        retrofit.RestAdapter.Log log70 = null;
        builder68.log = log70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = builder72.logLevel;
        retrofit.RestAdapter.Builder builder74 = builder68.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter77 = builder76.build();
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter77.logLevel;
        retrofit.RequestInterceptor requestInterceptor79 = restAdapter77.requestInterceptor;
        restAdapter59.requestInterceptor = requestInterceptor79;
        builder41.requestInterceptor = requestInterceptor79;
        builder40.requestInterceptor = requestInterceptor79;
        restAdapter33.requestInterceptor = requestInterceptor79;
        restAdapter12.requestInterceptor = requestInterceptor79;
        restAdapter0.requestInterceptor = requestInterceptor79;
        retrofit.Profiler profiler86 = restAdapter0.profiler;
        retrofit.RestAdapter.Log log87 = restAdapter0.log;
        retrofit.RestAdapter.RestHandler restHandler88 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler89 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor90 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(profiler19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(restAdapter33);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNull(profiler86);
        org.junit.Assert.assertNull(log87);
        org.junit.Assert.assertNull(executor90);
    }

    @Test
    public void test06549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06549");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = builder8.build();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        builder8.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter21 = builder20.build();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter21.logLevel;
        retrofit.ErrorHandler errorHandler23 = null;
        restAdapter21.errorHandler = errorHandler23;
        retrofit.Server server25 = restAdapter21.server;
        retrofit.RestAdapter.Builder builder26 = builder8.setServer(server25);
        retrofit.client.Client.Provider provider27 = builder8.clientProvider;
        retrofit.RestAdapter.Log log28 = builder8.log;
        log28.log("hi!");
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNotNull(log28);
    }

    @Test
    public void test06550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06550");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.httpExecutor = executor1;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.httpExecutor = executor3;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.Server server6 = restAdapter0.server;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler9 = null;
        restAdapter0.errorHandler = errorHandler9;
        java.util.concurrent.Executor executor11 = restAdapter0.callbackExecutor;
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test06551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06551");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler9 = builder8.errorHandler;
        retrofit.RestAdapter restAdapter10 = builder8.build();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter13.new RestHandler();
        java.util.concurrent.Executor executor15 = restAdapter13.httpExecutor;
        java.util.concurrent.Executor executor16 = null;
        restAdapter13.callbackExecutor = executor16;
        retrofit.client.Client.Provider provider18 = null;
        restAdapter13.clientProvider = provider18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("Retrofit-Idle");
        retrofit.Server server29 = builder28.server;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel61);
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel61);
        restAdapter13.log = log37;
        log37.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder68 = builder11.setLog(log37);
        builder8.log = log37;
        retrofit.RestAdapter.Log log70 = builder8.log;
        java.util.concurrent.Executor executor71 = builder8.httpExecutor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNotNull(restAdapter10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(executor71);
    }

    @Test
    public void test06552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06552");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder0.requestInterceptor = requestInterceptor13;
        java.util.concurrent.Executor executor15 = null;
        builder0.httpExecutor = executor15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.client.Client.Provider provider25 = builder18.clientProvider;
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        builder18.log = log26;
        retrofit.RestAdapter.Builder builder28 = builder17.setLog(log26);
        retrofit.converter.Converter converter29 = null;
        builder17.converter = converter29;
        retrofit.RestAdapter.Log log31 = builder17.log;
        retrofit.RestAdapter.Builder builder32 = builder0.setLog(log31);
        retrofit.RestAdapter.Builder builder34 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Log log35 = builder34.log;
        retrofit.RestAdapter.LogLevel logLevel36 = builder34.logLevel;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06553");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        java.util.concurrent.Executor executor4 = null;
        builder0.callbackExecutor = executor4;
        retrofit.converter.Converter converter6 = null;
        builder0.converter = converter6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.Server server9 = builder8.server;
        retrofit.RestAdapter.Log log10 = null;
        builder8.log = log10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.RestAdapter.Builder builder14 = builder8.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        builder15.logLevel = logLevel17;
        boolean boolean19 = logLevel17.log();
        builder8.logLevel = logLevel17;
        retrofit.RestAdapter.LogLevel logLevel21 = builder8.logLevel;
        retrofit.RestAdapter.LogLevel logLevel22 = null;
        builder8.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder25 = builder8.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = builder26.callbackExecutor;
        retrofit.Profiler profiler28 = builder26.profiler;
        retrofit.RestAdapter.Builder builder30 = builder26.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        retrofit.RestAdapter.Builder builder37 = builder31.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = builder37.setServer("Retrofit-Idle");
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Builder builder41 = builder30.setServer(server40);
        retrofit.RestAdapter restAdapter42 = builder41.build();
        retrofit.Profiler profiler43 = builder41.profiler;
        retrofit.RestAdapter.LogLevel logLevel44 = builder41.logLevel;
        java.util.concurrent.Executor executor45 = builder41.callbackExecutor;
        retrofit.converter.Converter converter46 = builder41.converter;
        builder8.converter = converter46;
        builder0.converter = converter46;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log50 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder51 = builder0.setLog(log50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(converter46);
    }

    @Test
    public void test06554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06554");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = null;
        restAdapter0.converter = converter3;
        java.util.concurrent.Executor executor5 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.RequestInterceptor requestInterceptor9 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Log log10 = restAdapter0.log;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertNull(log10);
    }

    @Test
    public void test06555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06555");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        java.util.concurrent.Executor executor3 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider4 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor6 = builder5.callbackExecutor;
        retrofit.Profiler profiler7 = builder5.profiler;
        retrofit.RestAdapter.Builder builder9 = builder5.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Builder builder20 = builder9.setServer(server19);
        retrofit.RestAdapter restAdapter21 = builder20.build();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        builder29.logLevel = logLevel31;
        boolean boolean33 = logLevel31.log();
        builder22.logLevel = logLevel31;
        retrofit.RestAdapter.LogLevel logLevel35 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder20.setLogLevel(logLevel35);
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder0.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = builder39.callbackExecutor;
        retrofit.Profiler profiler41 = builder39.profiler;
        retrofit.RestAdapter.Builder builder43 = builder39.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("Retrofit-Idle");
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Builder builder54 = builder43.setServer(server53);
        java.util.concurrent.Executor executor55 = builder54.callbackExecutor;
        java.util.concurrent.Executor executor56 = null;
        builder54.callbackExecutor = executor56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = builder58.callbackExecutor;
        retrofit.Profiler profiler60 = builder58.profiler;
        retrofit.RestAdapter.Builder builder62 = builder58.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("Retrofit-Idle");
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Builder builder73 = builder62.setServer(server72);
        java.util.concurrent.Executor executor74 = builder73.callbackExecutor;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor76 = null;
        restAdapter75.callbackExecutor = executor76;
        retrofit.converter.Converter converter78 = restAdapter75.converter;
        retrofit.RestAdapter.RestHandler restHandler79 = restAdapter75.new RestHandler();
        retrofit.converter.Converter converter80 = restAdapter75.converter;
        java.util.concurrent.Executor executor81 = restAdapter75.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter75.logLevel = logLevel82;
        retrofit.RestAdapter.Builder builder84 = builder73.setLogLevel(logLevel82);
        retrofit.RestAdapter.Builder builder85 = builder54.setLogLevel(logLevel82);
        retrofit.RestAdapter.Builder builder86 = builder38.setLogLevel(logLevel82);
        java.util.concurrent.Executor executor87 = builder38.callbackExecutor;
        retrofit.converter.Converter converter88 = builder38.converter;
        retrofit.ErrorHandler errorHandler89 = builder38.errorHandler;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNull(profiler60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(executor74);
        org.junit.Assert.assertNull(converter78);
        org.junit.Assert.assertNull(converter80);
        org.junit.Assert.assertNull(executor81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(executor87);
        org.junit.Assert.assertNull(converter88);
        org.junit.Assert.assertNull(errorHandler89);
    }

    @Test
    public void test06556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06556");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        builder24.logLevel = logLevel26;
        boolean boolean28 = logLevel26.log();
        builder17.logLevel = logLevel26;
        retrofit.RestAdapter.LogLevel logLevel30 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder15.setLogLevel(logLevel30);
        retrofit.converter.Converter converter32 = builder31.converter;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(converter32);
    }

    @Test
    public void test06557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06557");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        builder24.logLevel = logLevel26;
        boolean boolean28 = logLevel26.log();
        builder17.logLevel = logLevel26;
        retrofit.RestAdapter.LogLevel logLevel30 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder15.setLogLevel(logLevel30);
        retrofit.ErrorHandler errorHandler32 = null;
        builder31.errorHandler = errorHandler32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor35 = builder34.callbackExecutor;
        retrofit.Profiler profiler36 = builder34.profiler;
        retrofit.RestAdapter.Builder builder38 = builder34.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder39.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("Retrofit-Idle");
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Builder builder49 = builder38.setServer(server48);
        retrofit.RestAdapter restAdapter50 = builder49.build();
        retrofit.Profiler profiler51 = builder49.profiler;
        retrofit.RestAdapter.LogLevel logLevel52 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder49.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = builder63.logLevel;
        builder62.logLevel = logLevel64;
        boolean boolean66 = logLevel64.log();
        builder55.logLevel = logLevel64;
        retrofit.RestAdapter.LogLevel logLevel68 = builder55.logLevel;
        retrofit.Profiler profiler69 = builder55.profiler;
        java.util.concurrent.Executor executor70 = null;
        builder55.httpExecutor = executor70;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter72.new RestHandler();
        java.util.concurrent.Executor executor74 = restAdapter72.httpExecutor;
        java.util.concurrent.Executor executor75 = null;
        restAdapter72.callbackExecutor = executor75;
        retrofit.ErrorHandler errorHandler77 = null;
        restAdapter72.errorHandler = errorHandler77;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter72.logLevel = logLevel79;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter72.logLevel = logLevel81;
        boolean boolean83 = logLevel81.log();
        retrofit.RestAdapter.Builder builder84 = builder55.setLogLevel(logLevel81);
        retrofit.RestAdapter.LogLevel logLevel85 = builder84.logLevel;
        boolean boolean86 = logLevel85.log();
        retrofit.RestAdapter.Builder builder87 = builder54.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder88 = builder31.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder90 = builder31.setServer("hi!");
        retrofit.client.Client client91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder90.setClient(client91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertNull(executor74);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test06558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06558");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        java.util.concurrent.Executor executor14 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor15 = builder0.callbackExecutor;
        retrofit.Profiler profiler16 = null;
        builder0.profiler = profiler16;
        retrofit.client.Client.Provider provider18 = builder0.clientProvider;
        retrofit.converter.Converter converter19 = builder0.converter;
        retrofit.RestAdapter.Builder builder21 = builder0.setServer("hi!");
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test06559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06559");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = null;
        restAdapter0.errorHandler = errorHandler3;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.ErrorHandler errorHandler6 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Log log7 = restAdapter0.log;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor9 = restAdapter0.requestInterceptor;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertNull(requestInterceptor9);
    }

    @Test
    public void test06560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06560");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel23);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        java.util.concurrent.Executor executor28 = null;
        builder26.httpExecutor = executor28;
        retrofit.Server server30 = builder26.server;
        retrofit.RestAdapter.LogLevel logLevel31 = builder26.logLevel;
        restAdapter25.logLevel = logLevel31;
        retrofit.Profiler profiler33 = restAdapter25.profiler;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor35 = null;
        restAdapter34.callbackExecutor = executor35;
        retrofit.RestAdapter.Log log37 = restAdapter34.log;
        retrofit.converter.Converter converter38 = restAdapter34.converter;
        java.util.concurrent.Executor executor39 = null;
        restAdapter34.callbackExecutor = executor39;
        java.util.concurrent.Executor executor41 = null;
        restAdapter34.httpExecutor = executor41;
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter34.new RestHandler();
        retrofit.converter.Converter converter44 = restAdapter34.converter;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("Retrofit-Idle");
        retrofit.Server server54 = builder53.server;
        retrofit.Profiler profiler55 = null;
        builder53.profiler = profiler55;
        retrofit.Profiler profiler57 = null;
        builder53.profiler = profiler57;
        retrofit.RestAdapter restAdapter59 = builder53.build();
        retrofit.ErrorHandler errorHandler60 = builder53.errorHandler;
        restAdapter34.errorHandler = errorHandler60;
        restAdapter25.errorHandler = errorHandler60;
        retrofit.RestAdapter.Log log63 = restAdapter25.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNull(log37);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertNull(log63);
    }

    @Test
    public void test06561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06561");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler4 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler7 = restAdapter0.errorHandler;
        retrofit.Profiler profiler8 = null;
        restAdapter0.profiler = profiler8;
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(errorHandler4);
        org.junit.Assert.assertNull(errorHandler7);
    }

    @Test
    public void test06562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06562");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.Server server19 = builder18.server;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder36.server;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel51);
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel51);
        builder0.log = log27;
        retrofit.client.Client.Provider provider56 = null;
        builder0.clientProvider = provider56;
        retrofit.RequestInterceptor requestInterceptor58 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        retrofit.client.Client.Provider provider70 = builder63.clientProvider;
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        builder63.log = log71;
        retrofit.RestAdapter.Builder builder73 = builder59.setLog(log71);
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler75 = restAdapter74.new RestHandler();
        java.util.concurrent.Executor executor76 = restAdapter74.httpExecutor;
        java.util.concurrent.Executor executor77 = null;
        restAdapter74.callbackExecutor = executor77;
        retrofit.ErrorHandler errorHandler79 = null;
        restAdapter74.errorHandler = errorHandler79;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter74.logLevel = logLevel81;
        builder59.logLevel = logLevel81;
        retrofit.ErrorHandler errorHandler84 = builder59.errorHandler;
        retrofit.RestAdapter.Builder builder86 = builder59.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter87 = null;
        builder59.converter = converter87;
        retrofit.Server server89 = builder59.server;
        retrofit.RestAdapter.Builder builder90 = builder0.setServer(server89);
        retrofit.RequestInterceptor requestInterceptor91 = builder90.requestInterceptor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(requestInterceptor58);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(executor76);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(server89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNull(requestInterceptor91);
    }

    @Test
    public void test06563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06563");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        java.util.concurrent.Executor executor4 = restAdapter0.httpExecutor;
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log9 = restAdapter0.log;
        retrofit.RequestInterceptor requestInterceptor10 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler12 = restAdapter0.profiler;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(requestInterceptor10);
        org.junit.Assert.assertNull(profiler12);
    }

    @Test
    public void test06564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06564");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.client.Client.Provider provider16 = builder9.clientProvider;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder9.log = log17;
        retrofit.RestAdapter.Builder builder19 = builder8.setLog(log17);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler29 = builder28.errorHandler;
        retrofit.RestAdapter restAdapter30 = builder28.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter33.new RestHandler();
        java.util.concurrent.Executor executor35 = restAdapter33.httpExecutor;
        java.util.concurrent.Executor executor36 = null;
        restAdapter33.callbackExecutor = executor36;
        retrofit.client.Client.Provider provider38 = null;
        restAdapter33.clientProvider = provider38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("Retrofit-Idle");
        retrofit.Server server49 = builder48.server;
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = builder62.logLevel;
        retrofit.RestAdapter.Builder builder64 = builder58.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder64.setServer("Retrofit-Idle");
        retrofit.Server server67 = builder66.server;
        retrofit.client.Client.Provider provider68 = null;
        java.util.concurrent.Executor executor69 = null;
        java.util.concurrent.Executor executor70 = null;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        retrofit.converter.Converter converter72 = null;
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = null;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.Server server77 = builder76.server;
        retrofit.RestAdapter.Log log78 = null;
        builder76.log = log78;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel81 = builder80.logLevel;
        retrofit.RestAdapter.Builder builder82 = builder76.setLogLevel(logLevel81);
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter(server67, provider68, executor69, executor70, requestInterceptor71, converter72, profiler73, errorHandler74, log75, logLevel81);
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log57, logLevel81);
        restAdapter33.log = log57;
        log57.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder88 = builder31.setLog(log57);
        builder28.log = log57;
        retrofit.RequestInterceptor requestInterceptor90 = builder28.requestInterceptor;
        builder8.requestInterceptor = requestInterceptor90;
        builder6.requestInterceptor = requestInterceptor90;
        java.util.concurrent.Executor executor93 = builder6.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor94 = builder6.requestInterceptor;
        retrofit.client.Client.Provider provider95 = builder6.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(server67);
        org.junit.Assert.assertNull(server77);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(requestInterceptor90);
        org.junit.Assert.assertNull(executor93);
        org.junit.Assert.assertNotNull(requestInterceptor94);
        org.junit.Assert.assertNull(provider95);
    }

    @Test
    public void test06565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06565");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.Server server7 = builder6.server;
        retrofit.RestAdapter.Log log8 = null;
        builder6.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider17 = builder10.clientProvider;
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        builder10.log = log18;
        retrofit.RestAdapter.Builder builder20 = builder6.setLog(log18);
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = builder21.server;
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log33;
        retrofit.RestAdapter.Builder builder35 = builder21.setLog(log33);
        retrofit.RestAdapter.Builder builder36 = builder6.setLog(log33);
        builder36.ensureSaneDefaults();
        retrofit.client.Client.Provider provider38 = null;
        builder36.clientProvider = provider38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.client.Client.Provider provider48 = builder41.clientProvider;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log49;
        retrofit.RestAdapter.Builder builder51 = builder40.setLog(log49);
        retrofit.Profiler profiler52 = builder40.profiler;
        java.util.concurrent.Executor executor53 = null;
        builder40.callbackExecutor = executor53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider62 = builder55.clientProvider;
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        builder55.log = log63;
        builder40.log = log63;
        builder36.log = log63;
        retrofit.RestAdapter.Builder builder68 = builder36.setServer("Retrofit-Idle");
        retrofit.RequestInterceptor requestInterceptor69 = builder68.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor69;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLog(log80);
        java.util.concurrent.Executor executor82 = builder79.httpExecutor;
        java.util.concurrent.Executor executor83 = null;
        builder79.httpExecutor = executor83;
        retrofit.RestAdapter restAdapter85 = builder79.build();
        builder79.ensureSaneDefaults();
        retrofit.client.Client.Provider provider87 = builder79.clientProvider;
        restAdapter0.clientProvider = provider87;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(requestInterceptor69);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(executor82);
        org.junit.Assert.assertNotNull(restAdapter85);
        org.junit.Assert.assertNotNull(provider87);
    }

    @Test
    public void test06566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06566");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.Profiler profiler10 = null;
        builder8.profiler = profiler10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler21 = builder20.errorHandler;
        retrofit.RestAdapter restAdapter22 = builder20.build();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter25.new RestHandler();
        java.util.concurrent.Executor executor27 = restAdapter25.httpExecutor;
        java.util.concurrent.Executor executor28 = null;
        restAdapter25.callbackExecutor = executor28;
        retrofit.client.Client.Provider provider30 = null;
        restAdapter25.clientProvider = provider30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("Retrofit-Idle");
        retrofit.Server server41 = builder40.server;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("Retrofit-Idle");
        retrofit.Server server59 = builder58.server;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Log log67 = null;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.Server server69 = builder68.server;
        retrofit.RestAdapter.Log log70 = null;
        builder68.log = log70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = builder72.logLevel;
        retrofit.RestAdapter.Builder builder74 = builder68.setLogLevel(logLevel73);
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log67, logLevel73);
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log49, logLevel73);
        restAdapter25.log = log49;
        log49.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder80 = builder23.setLog(log49);
        builder20.log = log49;
        retrofit.RestAdapter.Log log82 = builder20.log;
        retrofit.client.Client.Provider provider83 = builder20.clientProvider;
        builder8.clientProvider = provider83;
        retrofit.RestAdapter restAdapter85 = builder8.build();
        java.util.concurrent.Executor executor86 = restAdapter85.httpExecutor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(errorHandler21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(server59);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNotNull(provider83);
        org.junit.Assert.assertNotNull(restAdapter85);
        org.junit.Assert.assertNotNull(executor86);
    }

    @Test
    public void test06567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06567");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = builder0.errorHandler;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.Server server4 = builder3.server;
        retrofit.RestAdapter.Log log5 = null;
        builder3.log = log5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel8 = builder7.logLevel;
        retrofit.RestAdapter.Builder builder9 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        builder10.logLevel = logLevel12;
        boolean boolean14 = logLevel12.log();
        builder3.logLevel = logLevel12;
        java.util.concurrent.Executor executor16 = null;
        builder3.httpExecutor = executor16;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor19 = null;
        restAdapter18.callbackExecutor = executor19;
        retrofit.RestAdapter.Log log21 = restAdapter18.log;
        retrofit.converter.Converter converter22 = restAdapter18.converter;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter18.new RestHandler();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        restAdapter18.logLevel = logLevel25;
        builder3.logLevel = logLevel25;
        retrofit.RestAdapter.LogLevel logLevel28 = builder3.logLevel;
        retrofit.RequestInterceptor requestInterceptor29 = builder3.requestInterceptor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.client.Client.Provider provider41 = builder34.clientProvider;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder34.log = log42;
        retrofit.RestAdapter.Builder builder44 = builder30.setLog(log42);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = builder53.logLevel;
        retrofit.RestAdapter.Builder builder55 = builder49.setLogLevel(logLevel54);
        retrofit.client.Client.Provider provider56 = builder49.clientProvider;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        builder49.log = log57;
        retrofit.RestAdapter.Builder builder59 = builder45.setLog(log57);
        retrofit.RestAdapter.Builder builder60 = builder30.setLog(log57);
        log57.log("");
        log57.log("Retrofit-");
        log57.log("");
        builder3.log = log57;
        retrofit.RestAdapter.Builder builder68 = builder0.setLog(log57);
        java.util.concurrent.Executor executor69 = builder68.httpExecutor;
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(log21);
        org.junit.Assert.assertNull(converter22);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(executor69);
    }

    @Test
    public void test06568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06568");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        java.util.concurrent.Executor executor8 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        builder16.logLevel = logLevel18;
        boolean boolean20 = logLevel18.log();
        builder9.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel22 = builder9.logLevel;
        retrofit.Profiler profiler23 = builder9.profiler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = builder24.callbackExecutor;
        retrofit.Profiler profiler26 = builder24.profiler;
        retrofit.RestAdapter.Builder builder28 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Builder builder39 = builder28.setServer(server38);
        retrofit.RestAdapter.Builder builder40 = builder9.setServer(server38);
        retrofit.RestAdapter.Builder builder41 = builder6.setServer(server38);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.ErrorHandler errorHandler44 = null;
        builder42.errorHandler = errorHandler44;
        retrofit.converter.Converter converter46 = builder42.converter;
        retrofit.RestAdapter.LogLevel logLevel47 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder41.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = builder50.callbackExecutor;
        retrofit.Profiler profiler52 = builder50.profiler;
        retrofit.RestAdapter.Builder builder54 = builder50.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("Retrofit-Idle");
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Builder builder65 = builder54.setServer(server64);
        retrofit.RestAdapter restAdapter66 = builder65.build();
        retrofit.RestAdapter.Log log67 = builder65.log;
        retrofit.Profiler profiler68 = builder65.profiler;
        retrofit.RequestInterceptor requestInterceptor69 = builder65.requestInterceptor;
        retrofit.RestAdapter.Builder builder70 = builder48.setRequestInterceptor(requestInterceptor69);
        retrofit.RestAdapter.Builder builder72 = builder48.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder74 = builder48.setServer("hi!");
        retrofit.client.Client.Provider provider75 = builder74.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(restAdapter66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(profiler68);
        org.junit.Assert.assertNotNull(requestInterceptor69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(provider75);
    }

    @Test
    public void test06569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06569");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = builder8.build();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        builder8.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.ErrorHandler errorHandler14 = null;
        builder12.errorHandler = errorHandler14;
        retrofit.converter.Converter converter16 = builder12.converter;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor18 = null;
        restAdapter17.callbackExecutor = executor18;
        retrofit.converter.Converter converter20 = null;
        restAdapter17.converter = converter20;
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor24 = builder23.callbackExecutor;
        retrofit.Profiler profiler25 = builder23.profiler;
        retrofit.RestAdapter.Builder builder27 = builder23.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Builder builder38 = builder27.setServer(server37);
        retrofit.RestAdapter restAdapter39 = builder38.build();
        java.util.concurrent.Executor executor40 = restAdapter39.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.ErrorHandler errorHandler42 = restAdapter39.errorHandler;
        restAdapter17.errorHandler = errorHandler42;
        builder12.errorHandler = errorHandler42;
        builder8.errorHandler = errorHandler42;
        java.util.concurrent.Executor executor46 = builder8.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel47 = builder8.logLevel;
        retrofit.RestAdapter.Log log48 = builder8.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log48);
    }

    @Test
    public void test06570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06570");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder0.requestInterceptor = requestInterceptor13;
        java.util.concurrent.Executor executor15 = null;
        builder0.httpExecutor = executor15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider24 = builder17.clientProvider;
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log25;
        builder0.log = log25;
        retrofit.Profiler profiler28 = null;
        builder0.profiler = profiler28;
        retrofit.client.Client.Provider provider30 = builder0.clientProvider;
        java.util.concurrent.Executor executor31 = builder0.callbackExecutor;
        retrofit.Profiler profiler32 = builder0.profiler;
        java.util.concurrent.Executor executor33 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(executor33);
    }

    @Test
    public void test06571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06571");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.Server server15 = builder0.server;
        retrofit.converter.Converter converter16 = builder0.converter;
        retrofit.RequestInterceptor requestInterceptor17 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        java.util.concurrent.Executor executor29 = builder26.httpExecutor;
        retrofit.RestAdapter.Builder builder31 = builder26.setServer("Retrofit-Idle");
        java.util.concurrent.Executor executor32 = builder31.httpExecutor;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter33.new RestHandler();
        java.util.concurrent.Executor executor35 = restAdapter33.httpExecutor;
        retrofit.Profiler profiler36 = restAdapter33.profiler;
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        java.util.concurrent.Executor executor42 = null;
        builder40.httpExecutor = executor42;
        retrofit.Server server44 = builder40.server;
        retrofit.converter.Converter converter45 = null;
        builder40.converter = converter45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        java.util.concurrent.Executor executor58 = builder55.httpExecutor;
        java.util.concurrent.Executor executor59 = null;
        builder55.httpExecutor = executor59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.Server server62 = builder61.server;
        retrofit.RestAdapter.Log log63 = null;
        builder61.log = log63;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel66 = builder65.logLevel;
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder69 = builder67.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter70 = builder69.build();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter70.logLevel;
        builder55.logLevel = logLevel71;
        builder55.ensureSaneDefaults();
        retrofit.client.Client.Provider provider74 = builder55.clientProvider;
        builder40.clientProvider = provider74;
        restAdapter33.clientProvider = provider74;
        retrofit.client.Client.Provider provider77 = restAdapter33.clientProvider;
        builder31.clientProvider = provider77;
        retrofit.RestAdapter.Builder builder79 = builder0.setClient(provider77);
        retrofit.client.Client.Provider provider80 = builder0.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(requestInterceptor17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(executor58);
        org.junit.Assert.assertNull(server62);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(provider77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(provider80);
    }

    @Test
    public void test06572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06572");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = builder8.build();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        builder8.logLevel = logLevel10;
        retrofit.converter.Converter converter12 = builder8.converter;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider24 = builder17.clientProvider;
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log25;
        retrofit.RestAdapter.Builder builder27 = builder13.setLog(log25);
        retrofit.Server server28 = builder13.server;
        java.util.concurrent.Executor executor29 = null;
        builder13.callbackExecutor = executor29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        retrofit.RestAdapter.Builder builder37 = builder31.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        builder38.logLevel = logLevel40;
        boolean boolean42 = logLevel40.log();
        builder31.logLevel = logLevel40;
        retrofit.RestAdapter.LogLevel logLevel44 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder13.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.RestAdapter.Log log57 = builder54.log;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = builder62.logLevel;
        retrofit.RestAdapter.Builder builder64 = builder58.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder64.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        builder54.log = log67;
        builder13.log = log67;
        log67.log("Retrofit-");
        builder8.log = log67;
        retrofit.client.Client.Provider provider74 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder75 = builder8.setClient(provider74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client provider may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(converter12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test06573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06573");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RequestInterceptor requestInterceptor7 = null;
        builder0.requestInterceptor = requestInterceptor7;
        retrofit.RestAdapter.Log log9 = builder0.log;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        builder17.logLevel = logLevel19;
        boolean boolean21 = logLevel19.log();
        builder10.logLevel = logLevel19;
        retrofit.RestAdapter.Builder builder23 = builder0.setLogLevel(logLevel19);
        retrofit.Profiler profiler24 = builder23.profiler;
        retrofit.client.Client.Provider provider25 = builder23.clientProvider;
        java.util.concurrent.Executor executor26 = builder23.httpExecutor;
        retrofit.Profiler profiler27 = builder23.profiler;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider39 = builder32.clientProvider;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log40;
        retrofit.RestAdapter.Builder builder42 = builder28.setLog(log40);
        retrofit.Server server43 = builder28.server;
        java.util.concurrent.Executor executor44 = null;
        builder28.callbackExecutor = executor44;
        retrofit.converter.Converter converter46 = builder28.converter;
        retrofit.RestAdapter.Log log47 = builder28.log;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder48.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        builder55.logLevel = logLevel57;
        boolean boolean59 = logLevel57.log();
        builder48.logLevel = logLevel57;
        retrofit.RestAdapter.LogLevel logLevel61 = builder48.logLevel;
        retrofit.Profiler profiler62 = builder48.profiler;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor64 = null;
        restAdapter63.callbackExecutor = executor64;
        retrofit.RestAdapter.Log log66 = restAdapter63.log;
        retrofit.converter.Converter converter67 = restAdapter63.converter;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor69 = builder68.callbackExecutor;
        retrofit.Profiler profiler70 = builder68.profiler;
        retrofit.RestAdapter.Builder builder72 = builder68.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Log log75 = null;
        builder73.log = log75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("Retrofit-Idle");
        retrofit.Server server82 = builder81.server;
        retrofit.RestAdapter.Builder builder83 = builder72.setServer(server82);
        restAdapter63.server = server82;
        retrofit.RestAdapter.Builder builder85 = builder48.setServer(server82);
        retrofit.RestAdapter.Builder builder86 = builder28.setServer(server82);
        retrofit.RestAdapter.Builder builder87 = builder23.setServer(server82);
        retrofit.Profiler profiler88 = null;
        builder87.profiler = profiler88;
        builder87.ensureSaneDefaults();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler62);
        org.junit.Assert.assertNull(log66);
        org.junit.Assert.assertNull(converter67);
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test06574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06574");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor5 = null;
        restAdapter4.callbackExecutor = executor5;
        retrofit.converter.Converter converter7 = restAdapter4.converter;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter4.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor9 = null;
        restAdapter4.requestInterceptor = requestInterceptor9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder17 = builder11.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder19 = builder17.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder21 = builder19.setLog(log20);
        java.util.concurrent.Executor executor22 = builder19.httpExecutor;
        retrofit.RestAdapter restAdapter23 = builder19.build();
        java.util.concurrent.Executor executor24 = restAdapter23.httpExecutor;
        retrofit.converter.Converter converter25 = restAdapter23.converter;
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        builder34.logLevel = logLevel36;
        boolean boolean38 = logLevel36.log();
        builder27.logLevel = logLevel36;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        builder27.requestInterceptor = requestInterceptor40;
        java.util.concurrent.Executor executor42 = null;
        builder27.httpExecutor = executor42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.client.Client.Provider provider52 = builder45.clientProvider;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log53;
        retrofit.RestAdapter.Builder builder55 = builder44.setLog(log53);
        retrofit.converter.Converter converter56 = null;
        builder44.converter = converter56;
        retrofit.RestAdapter.Log log58 = builder44.log;
        retrofit.RestAdapter.Builder builder59 = builder27.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.ErrorHandler errorHandler61 = builder59.errorHandler;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor63 = builder62.callbackExecutor;
        retrofit.Profiler profiler64 = builder62.profiler;
        retrofit.RestAdapter.Builder builder66 = builder62.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.Server server68 = builder67.server;
        retrofit.RestAdapter.Log log69 = null;
        builder67.log = log69;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel72 = builder71.logLevel;
        retrofit.RestAdapter.Builder builder73 = builder67.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("Retrofit-Idle");
        retrofit.Server server76 = builder75.server;
        retrofit.RestAdapter.Builder builder77 = builder66.setServer(server76);
        retrofit.RestAdapter restAdapter78 = builder77.build();
        java.util.concurrent.Executor executor79 = restAdapter78.callbackExecutor;
        builder59.callbackExecutor = executor79;
        restAdapter23.httpExecutor = executor79;
        restAdapter4.callbackExecutor = executor79;
        restAdapter0.callbackExecutor = executor79;
        retrofit.RestAdapter.LogLevel logLevel84 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler61);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNull(profiler64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(server76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(restAdapter78);
        org.junit.Assert.assertNotNull(executor79);
        org.junit.Assert.assertNull(logLevel84);
    }

    @Test
    public void test06575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06575");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        builder25.logLevel = logLevel27;
        boolean boolean29 = logLevel27.log();
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel27);
        retrofit.Profiler profiler31 = null;
        restAdapter30.profiler = profiler31;
        retrofit.converter.Converter converter33 = null;
        restAdapter30.converter = converter33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Profiler profiler47 = null;
        builder43.profiler = profiler47;
        retrofit.converter.Converter converter49 = builder43.converter;
        restAdapter30.converter = converter49;
        restAdapter0.converter = converter49;
        retrofit.client.Client.Provider provider52 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = builder53.logLevel;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("Retrofit-Idle");
        retrofit.Server server64 = builder63.server;
        retrofit.client.Client.Provider provider65 = null;
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        retrofit.RequestInterceptor requestInterceptor68 = null;
        retrofit.converter.Converter converter69 = null;
        retrofit.Profiler profiler70 = null;
        retrofit.ErrorHandler errorHandler71 = null;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Log log75 = null;
        builder73.log = log75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel78);
        retrofit.client.Client.Provider provider80 = builder73.clientProvider;
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        builder73.log = log81;
        retrofit.RestAdapter.Builder builder83 = builder72.setLog(log81);
        retrofit.RestAdapter.LogLevel logLevel84 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server64, provider65, executor66, executor67, requestInterceptor68, converter69, profiler70, errorHandler71, log81, logLevel84);
        retrofit.RestAdapter.Builder builder86 = builder53.setServer(server64);
        restAdapter0.server = server64;
        java.util.concurrent.Executor executor88 = restAdapter0.callbackExecutor;
        retrofit.client.Request request89 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request90 = restAdapter0.logAndReplaceRequest(request89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(converter49);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(provider80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(executor88);
    }

    @Test
    public void test06576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06576");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = null;
        restAdapter0.httpExecutor = executor2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Log log21 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("Retrofit-Idle");
        retrofit.Server server31 = builder30.server;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel45);
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log21, logLevel45);
        retrofit.client.Client.Provider provider49 = null;
        java.util.concurrent.Executor executor50 = null;
        java.util.concurrent.Executor executor51 = null;
        retrofit.RequestInterceptor requestInterceptor52 = null;
        retrofit.converter.Converter converter53 = null;
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = builder57.server;
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = builder61.logLevel;
        retrofit.RestAdapter.Builder builder63 = builder57.setLogLevel(logLevel62);
        retrofit.client.Client.Provider provider64 = builder57.clientProvider;
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        builder57.log = log65;
        retrofit.RestAdapter.Builder builder67 = builder56.setLog(log65);
        retrofit.converter.Converter converter68 = null;
        builder56.converter = converter68;
        retrofit.RestAdapter.Log log70 = builder56.log;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor72 = builder71.callbackExecutor;
        retrofit.Profiler profiler73 = builder71.profiler;
        retrofit.RestAdapter.Builder builder75 = builder71.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel76 = builder71.logLevel;
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server13, provider49, executor50, executor51, requestInterceptor52, converter53, profiler54, errorHandler55, log70, logLevel76);
        restAdapter0.server = server13;
        retrofit.Profiler profiler79 = restAdapter0.profiler;
        java.lang.Throwable throwable80 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable80, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNull(executor72);
        org.junit.Assert.assertNull(profiler73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler79);
    }

    @Test
    public void test06577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06577");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log5 = restAdapter0.log;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.Server server7 = builder6.server;
        retrofit.RestAdapter.Log log8 = null;
        builder6.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = builder10.logLevel;
        retrofit.RestAdapter.Builder builder12 = builder6.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("Retrofit-Idle");
        retrofit.Server server15 = builder14.server;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = null;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel29);
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.Server server44 = builder43.server;
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel48 = builder47.logLevel;
        retrofit.RestAdapter.Builder builder49 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider50 = builder43.clientProvider;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        builder43.log = log51;
        retrofit.RestAdapter.Builder builder53 = builder39.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server15, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log51, logLevel54);
        restAdapter0.server = server15;
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter59 = restAdapter0.converter;
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertNull(logLevel60);
    }

    @Test
    public void test06578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06578");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = null;
        restAdapter0.errorHandler = errorHandler3;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor6 = null;
        restAdapter0.httpExecutor = executor6;
        retrofit.ErrorHandler errorHandler8 = restAdapter0.errorHandler;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor10 = null;
        restAdapter9.requestInterceptor = requestInterceptor10;
        retrofit.Profiler profiler12 = null;
        restAdapter9.profiler = profiler12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = builder14.callbackExecutor;
        retrofit.Profiler profiler16 = builder14.profiler;
        retrofit.RestAdapter.Builder builder18 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("Retrofit-Idle");
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Builder builder29 = builder18.setServer(server28);
        retrofit.RestAdapter restAdapter30 = builder29.build();
        java.util.concurrent.Executor executor31 = restAdapter30.callbackExecutor;
        restAdapter9.callbackExecutor = executor31;
        restAdapter0.httpExecutor = executor31;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        java.util.concurrent.Executor executor45 = builder42.httpExecutor;
        retrofit.RestAdapter restAdapter46 = builder42.build();
        java.util.concurrent.Executor executor47 = restAdapter46.httpExecutor;
        restAdapter0.callbackExecutor = executor47;
        retrofit.ErrorHandler errorHandler49 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(errorHandler8);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNull(errorHandler49);
    }

    @Test
    public void test06579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06579");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider29 = builder22.clientProvider;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log30;
        retrofit.RestAdapter.Builder builder32 = builder21.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log30, logLevel33);
        builder0.logLevel = logLevel33;
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        retrofit.Profiler profiler37 = builder0.profiler;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter39 = null;
        builder38.converter = converter39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.Profiler profiler52 = builder51.profiler;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.Server server62 = builder61.server;
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.converter.Converter converter67 = null;
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = null;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor66, converter67, profiler68, errorHandler69, log70, logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder51.setServer(server62);
        retrofit.RestAdapter.Builder builder80 = builder38.setServer(server62);
        retrofit.client.Client.Provider provider81 = null;
        java.util.concurrent.Executor executor82 = null;
        java.util.concurrent.Executor executor83 = null;
        retrofit.RequestInterceptor requestInterceptor84 = null;
        retrofit.converter.Converter converter85 = null;
        retrofit.Profiler profiler86 = null;
        retrofit.ErrorHandler errorHandler87 = null;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor89 = null;
        restAdapter88.callbackExecutor = executor89;
        retrofit.converter.Converter converter91 = restAdapter88.converter;
        retrofit.RestAdapter.Log log92 = retrofit.RestAdapter.Log.NONE;
        restAdapter88.log = log92;
        retrofit.RestAdapter.LogLevel logLevel94 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter95 = new retrofit.RestAdapter(server62, provider81, executor82, executor83, requestInterceptor84, converter85, profiler86, errorHandler87, log92, logLevel94);
        retrofit.RestAdapter.Builder builder96 = builder0.setServer(server62);
        java.util.concurrent.Executor executor97 = builder96.callbackExecutor;
        java.util.concurrent.Executor executor98 = builder96.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNull(converter91);
        org.junit.Assert.assertNotNull(log92);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNull(executor97);
        org.junit.Assert.assertNull(executor98);
    }

    @Test
    public void test06580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06580");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.Server server27 = builder26.server;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel41);
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel41);
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.Server server62 = builder61.server;
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.converter.Converter converter67 = null;
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = null;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor66, converter67, profiler68, errorHandler69, log70, logLevel76);
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.Server server80 = builder79.server;
        java.util.concurrent.Executor executor81 = null;
        builder79.httpExecutor = executor81;
        retrofit.Server server83 = builder79.server;
        retrofit.RestAdapter.LogLevel logLevel84 = builder79.logLevel;
        restAdapter78.logLevel = logLevel84;
        retrofit.RestAdapter restAdapter86 = new retrofit.RestAdapter(server9, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel84);
        retrofit.Profiler profiler87 = null;
        restAdapter86.profiler = profiler87;
        retrofit.converter.Converter converter89 = restAdapter86.converter;
        retrofit.Profiler profiler90 = restAdapter86.profiler;
        retrofit.RestAdapter.RestHandler restHandler91 = restAdapter86.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor92 = restAdapter86.requestInterceptor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(server80);
        org.junit.Assert.assertNull(server83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter89);
        org.junit.Assert.assertNull(profiler90);
        org.junit.Assert.assertNull(requestInterceptor92);
    }

    @Test
    public void test06581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06581");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel6 = null;
        restAdapter0.logLevel = logLevel6;
        java.util.concurrent.Executor executor8 = null;
        restAdapter0.httpExecutor = executor8;
        retrofit.converter.Converter converter10 = null;
        restAdapter0.converter = converter10;
        retrofit.Profiler profiler12 = null;
        restAdapter0.profiler = profiler12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        java.util.concurrent.Executor executor16 = null;
        builder14.httpExecutor = executor16;
        retrofit.Server server18 = builder14.server;
        retrofit.RestAdapter.LogLevel logLevel19 = builder14.logLevel;
        retrofit.client.Client.Provider provider20 = null;
        builder14.clientProvider = provider20;
        retrofit.Server server22 = builder14.server;
        retrofit.converter.Converter converter23 = builder14.converter;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        java.util.concurrent.Executor executor35 = builder32.httpExecutor;
        java.util.concurrent.Executor executor36 = null;
        builder32.httpExecutor = executor36;
        java.util.concurrent.Executor executor38 = builder32.callbackExecutor;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder39.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        java.util.concurrent.Executor executor50 = builder47.httpExecutor;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider62 = builder55.clientProvider;
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        builder55.log = log63;
        retrofit.RestAdapter.Builder builder65 = builder51.setLog(log63);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.Server server67 = builder66.server;
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.Server server71 = builder70.server;
        retrofit.RestAdapter.Log log72 = null;
        builder70.log = log72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = builder74.logLevel;
        retrofit.RestAdapter.Builder builder76 = builder70.setLogLevel(logLevel75);
        retrofit.client.Client.Provider provider77 = builder70.clientProvider;
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        builder70.log = log78;
        retrofit.RestAdapter.Builder builder80 = builder66.setLog(log78);
        retrofit.RestAdapter.Builder builder81 = builder51.setLog(log78);
        log78.log("");
        log78.log("Retrofit-");
        retrofit.RestAdapter.Builder builder86 = builder47.setLog(log78);
        builder32.log = log78;
        builder14.log = log78;
        restAdapter0.log = log78;
        retrofit.RestAdapter.RestHandler restHandler90 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(provider77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test06582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06582");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider29 = builder22.clientProvider;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log30;
        retrofit.RestAdapter.Builder builder32 = builder21.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log30, logLevel33);
        builder0.logLevel = logLevel33;
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        retrofit.Profiler profiler37 = builder0.profiler;
        retrofit.RestAdapter.LogLevel logLevel38 = builder0.logLevel;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter39.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter39.logLevel;
        retrofit.ErrorHandler errorHandler42 = null;
        restAdapter39.errorHandler = errorHandler42;
        java.util.concurrent.Executor executor44 = null;
        restAdapter39.callbackExecutor = executor44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor47 = builder46.callbackExecutor;
        retrofit.Profiler profiler48 = builder46.profiler;
        retrofit.RestAdapter.Builder builder50 = builder46.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        retrofit.RestAdapter.Builder builder57 = builder51.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder59 = builder57.setServer("Retrofit-Idle");
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Builder builder61 = builder50.setServer(server60);
        retrofit.RestAdapter restAdapter62 = builder61.build();
        java.util.concurrent.Executor executor63 = restAdapter62.callbackExecutor;
        retrofit.client.Client.Provider provider64 = restAdapter62.clientProvider;
        restAdapter39.clientProvider = provider64;
        builder0.clientProvider = provider64;
        retrofit.Profiler profiler67 = builder0.profiler;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.Server server69 = builder68.server;
        retrofit.RestAdapter.Log log70 = null;
        builder68.log = log70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = builder72.logLevel;
        retrofit.RestAdapter.Builder builder74 = builder68.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        java.util.concurrent.Executor executor79 = builder76.httpExecutor;
        retrofit.RestAdapter.Builder builder81 = builder76.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler82 = builder76.errorHandler;
        retrofit.RestAdapter restAdapter83 = builder76.build();
        retrofit.RequestInterceptor requestInterceptor84 = restAdapter83.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel85 = restAdapter83.logLevel;
        retrofit.ErrorHandler errorHandler86 = restAdapter83.errorHandler;
        builder0.errorHandler = errorHandler86;
        java.lang.Class<?> wildcardClass88 = builder0.getClass();
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(logLevel41);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(restAdapter62);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertNotNull(provider64);
        org.junit.Assert.assertNull(profiler67);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(executor79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(errorHandler82);
        org.junit.Assert.assertNotNull(restAdapter83);
        org.junit.Assert.assertNotNull(requestInterceptor84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test06583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06583");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.client.Client.Provider provider7 = restAdapter0.clientProvider;
        retrofit.converter.Converter converter8 = restAdapter0.converter;
        retrofit.Profiler profiler9 = restAdapter0.profiler;
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter0.logLevel;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter12.new RestHandler();
        retrofit.ErrorHandler errorHandler14 = null;
        restAdapter12.errorHandler = errorHandler14;
        retrofit.RestAdapter.Log log16 = restAdapter12.log;
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter12.new RestHandler();
        retrofit.Server server20 = restAdapter12.server;
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter12.new RestHandler();
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor23 = null;
        restAdapter22.callbackExecutor = executor23;
        retrofit.converter.Converter converter25 = restAdapter22.converter;
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter22.new RestHandler();
        retrofit.converter.Converter converter27 = restAdapter22.converter;
        java.util.concurrent.Executor executor28 = restAdapter22.httpExecutor;
        retrofit.client.Client.Provider provider29 = restAdapter22.clientProvider;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        java.util.concurrent.Executor executor32 = null;
        builder30.httpExecutor = executor32;
        retrofit.Server server34 = builder30.server;
        retrofit.RestAdapter.LogLevel logLevel35 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        java.util.concurrent.Executor executor43 = builder42.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor44 = builder42.requestInterceptor;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter54 = builder53.build();
        retrofit.Profiler profiler55 = null;
        builder53.profiler = profiler55;
        retrofit.Profiler profiler57 = null;
        builder53.profiler = profiler57;
        retrofit.converter.Converter converter59 = builder53.converter;
        retrofit.RestAdapter.Builder builder60 = builder42.setConverter(converter59);
        builder30.converter = converter59;
        restAdapter22.converter = converter59;
        restAdapter12.converter = converter59;
        restAdapter0.converter = converter59;
        retrofit.client.Request request65 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request66 = restAdapter0.logAndReplaceRequest(request65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(requestInterceptor44);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(restAdapter54);
        org.junit.Assert.assertNotNull(converter59);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test06584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06584");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.httpExecutor = executor3;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        java.lang.Class<?> wildcardClass6 = restAdapter0.getClass();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test06585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06585");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RequestInterceptor requestInterceptor7 = null;
        builder0.requestInterceptor = requestInterceptor7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor10 = builder9.callbackExecutor;
        retrofit.Profiler profiler11 = builder9.profiler;
        retrofit.RestAdapter.Builder builder13 = builder9.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Builder builder24 = builder13.setServer(server23);
        retrofit.RestAdapter restAdapter25 = builder24.build();
        java.util.concurrent.Executor executor26 = restAdapter25.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter25.new RestHandler();
        retrofit.ErrorHandler errorHandler28 = restAdapter25.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel29 = restAdapter25.logLevel;
        java.util.concurrent.Executor executor30 = restAdapter25.httpExecutor;
        builder0.callbackExecutor = executor30;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor33 = null;
        restAdapter32.callbackExecutor = executor33;
        retrofit.converter.Converter converter35 = null;
        restAdapter32.converter = converter35;
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter32.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter32.logLevel;
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter32.logLevel;
        retrofit.RestAdapter.Log log40 = restAdapter32.log;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        retrofit.client.Client.Provider provider49 = builder42.clientProvider;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log50;
        retrofit.RestAdapter.Builder builder52 = builder41.setLog(log50);
        retrofit.RestAdapter.Log log53 = builder52.log;
        log53.log("");
        restAdapter32.log = log53;
        retrofit.RestAdapter.Builder builder57 = builder0.setLog(log53);
        retrofit.client.Client client58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder59 = builder57.setClient(client58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNull(logLevel38);
        org.junit.Assert.assertNull(logLevel39);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test06586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06586");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        retrofit.Profiler profiler14 = builder0.profiler;
        java.util.concurrent.Executor executor15 = null;
        builder0.httpExecutor = executor15;
        retrofit.client.Client.Provider provider17 = null;
        builder0.clientProvider = provider17;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter19.logLevel;
        retrofit.ErrorHandler errorHandler22 = restAdapter19.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel23 = restAdapter19.logLevel;
        retrofit.Server server24 = restAdapter19.server;
        java.util.concurrent.Executor executor25 = restAdapter19.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        java.util.concurrent.Executor executor38 = builder35.httpExecutor;
        retrofit.RestAdapter restAdapter39 = builder35.build();
        java.util.concurrent.Executor executor40 = restAdapter39.httpExecutor;
        retrofit.converter.Converter converter41 = restAdapter39.converter;
        restAdapter19.converter = converter41;
        retrofit.converter.Converter converter43 = restAdapter19.converter;
        builder0.converter = converter43;
        retrofit.Profiler profiler45 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder46 = builder0.setProfiler(profiler45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertNull(errorHandler22);
        org.junit.Assert.assertNull(logLevel23);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNotNull(converter41);
        org.junit.Assert.assertNotNull(converter43);
    }

    @Test
    public void test06587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06587");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log33;
        retrofit.RestAdapter.Builder builder35 = builder24.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log33, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder5.setServer(server16);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder39.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter48 = builder47.build();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.logLevel;
        retrofit.RequestInterceptor requestInterceptor50 = restAdapter48.requestInterceptor;
        retrofit.RestAdapter.Builder builder51 = builder38.setRequestInterceptor(requestInterceptor50);
        retrofit.RestAdapter.Builder builder52 = builder0.setRequestInterceptor(requestInterceptor50);
        retrofit.Profiler profiler53 = builder0.profiler;
        retrofit.RequestInterceptor requestInterceptor54 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(restAdapter48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNotNull(requestInterceptor54);
    }

    @Test
    public void test06588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06588");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = null;
        restAdapter0.errorHandler = errorHandler3;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor6 = null;
        restAdapter0.httpExecutor = executor6;
        retrofit.ErrorHandler errorHandler8 = restAdapter0.errorHandler;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor10 = null;
        restAdapter9.requestInterceptor = requestInterceptor10;
        retrofit.Profiler profiler12 = null;
        restAdapter9.profiler = profiler12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = builder14.callbackExecutor;
        retrofit.Profiler profiler16 = builder14.profiler;
        retrofit.RestAdapter.Builder builder18 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("Retrofit-Idle");
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Builder builder29 = builder18.setServer(server28);
        retrofit.RestAdapter restAdapter30 = builder29.build();
        java.util.concurrent.Executor executor31 = restAdapter30.callbackExecutor;
        restAdapter9.callbackExecutor = executor31;
        restAdapter0.httpExecutor = executor31;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        java.util.concurrent.Executor executor45 = builder42.httpExecutor;
        retrofit.RestAdapter restAdapter46 = builder42.build();
        java.util.concurrent.Executor executor47 = restAdapter46.httpExecutor;
        restAdapter0.callbackExecutor = executor47;
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(errorHandler8);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNull(logLevel49);
    }

    @Test
    public void test06589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06589");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider29 = builder22.clientProvider;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log30;
        retrofit.RestAdapter.Builder builder32 = builder21.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log30, logLevel33);
        builder0.logLevel = logLevel33;
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        retrofit.Profiler profiler37 = builder0.profiler;
        retrofit.RestAdapter.Builder builder39 = builder0.setServer("Retrofit-");
        retrofit.client.Client client40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder41 = builder39.setClient(client40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNotNull(builder39);
    }

    @Test
    public void test06590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06590");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler6 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder17 = builder11.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder19 = builder17.setServer("Retrofit-Idle");
        retrofit.Server server20 = builder19.server;
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.RequestInterceptor requestInterceptor24 = null;
        retrofit.converter.Converter converter25 = null;
        retrofit.Profiler profiler26 = null;
        retrofit.ErrorHandler errorHandler27 = null;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.client.Client.Provider provider36 = builder29.clientProvider;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        builder29.log = log37;
        retrofit.RestAdapter.Builder builder39 = builder28.setLog(log37);
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor24, converter25, profiler26, errorHandler27, log37, logLevel40);
        builder7.logLevel = logLevel40;
        retrofit.RestAdapter.LogLevel logLevel43 = builder7.logLevel;
        retrofit.Profiler profiler44 = builder7.profiler;
        retrofit.RestAdapter.Builder builder46 = builder7.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter56 = builder55.build();
        retrofit.Profiler profiler57 = null;
        builder55.profiler = profiler57;
        retrofit.Profiler profiler59 = null;
        builder55.profiler = profiler59;
        retrofit.converter.Converter converter61 = builder55.converter;
        builder46.converter = converter61;
        retrofit.RestAdapter.Builder builder63 = builder0.setConverter(converter61);
        retrofit.converter.Converter converter64 = builder63.converter;
        retrofit.RestAdapter.LogLevel logLevel65 = builder63.logLevel;
        java.util.concurrent.Executor executor66 = null;
        builder63.callbackExecutor = executor66;
        retrofit.RestAdapter.Log log68 = builder63.log;
        retrofit.client.Client client69 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder70 = builder63.setClient(client69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(restAdapter56);
        org.junit.Assert.assertNotNull(converter61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(converter64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(log68);
    }

    @Test
    public void test06591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06591");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        java.util.concurrent.Executor executor4 = restAdapter0.httpExecutor;
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        java.util.concurrent.Executor executor18 = builder15.httpExecutor;
        retrofit.RestAdapter.Builder builder20 = builder15.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter21 = null;
        builder20.converter = converter21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        java.util.concurrent.Executor executor34 = builder31.httpExecutor;
        retrofit.RestAdapter restAdapter35 = builder31.build();
        java.util.concurrent.Executor executor36 = restAdapter35.httpExecutor;
        builder20.callbackExecutor = executor36;
        restAdapter0.httpExecutor = executor36;
        retrofit.Server server39 = restAdapter0.server;
        retrofit.ErrorHandler errorHandler40 = restAdapter0.errorHandler;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNotNull(restAdapter35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertNull(errorHandler40);
    }

    @Test
    public void test06592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06592");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.Profiler profiler11 = builder10.profiler;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("Retrofit-Idle");
        retrofit.Server server21 = builder20.server;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder10.setServer(server21);
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.Server server40 = builder38.server;
        builder38.ensureSaneDefaults();
        retrofit.converter.Converter converter42 = builder38.converter;
        java.util.concurrent.Executor executor43 = builder38.callbackExecutor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNotNull(executor43);
    }

    @Test
    public void test06593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06593");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        java.util.concurrent.Executor executor4 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.client.Client.Provider provider16 = builder9.clientProvider;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder9.log = log17;
        retrofit.RestAdapter.Builder builder19 = builder5.setLog(log17);
        retrofit.Server server20 = builder5.server;
        java.util.concurrent.Executor executor21 = null;
        builder5.callbackExecutor = executor21;
        retrofit.converter.Converter converter23 = builder5.converter;
        retrofit.ErrorHandler errorHandler24 = builder5.errorHandler;
        java.util.concurrent.Executor executor25 = null;
        builder5.callbackExecutor = executor25;
        retrofit.RestAdapter.LogLevel logLevel27 = builder5.logLevel;
        restAdapter0.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = builder29.callbackExecutor;
        retrofit.Profiler profiler31 = builder29.profiler;
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Builder builder44 = builder33.setServer(server43);
        retrofit.RestAdapter.Log log45 = builder44.log;
        java.util.concurrent.Executor executor46 = builder44.httpExecutor;
        retrofit.Profiler profiler47 = null;
        builder44.profiler = profiler47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor50 = builder49.callbackExecutor;
        retrofit.Profiler profiler51 = builder49.profiler;
        retrofit.RestAdapter.Builder builder53 = builder49.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.Server server55 = builder54.server;
        retrofit.RestAdapter.Log log56 = null;
        builder54.log = log56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = builder58.logLevel;
        retrofit.RestAdapter.Builder builder60 = builder54.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder62 = builder60.setServer("Retrofit-Idle");
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Builder builder64 = builder53.setServer(server63);
        retrofit.RestAdapter restAdapter65 = builder64.build();
        java.util.concurrent.Executor executor66 = restAdapter65.callbackExecutor;
        retrofit.client.Client.Provider provider67 = restAdapter65.clientProvider;
        builder44.clientProvider = provider67;
        restAdapter0.clientProvider = provider67;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(errorHandler24);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(server63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(executor66);
        org.junit.Assert.assertNotNull(provider67);
    }

    @Test
    public void test06594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06594");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        retrofit.converter.Converter converter8 = null;
        builder6.converter = converter8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = builder10.logLevel;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("Retrofit-Idle");
        retrofit.Server server21 = builder20.server;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider37 = builder30.clientProvider;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        builder30.log = log38;
        retrofit.RestAdapter.Builder builder40 = builder29.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log38, logLevel41);
        retrofit.RestAdapter.Builder builder43 = builder10.setServer(server21);
        builder6.server = server21;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        java.util.concurrent.Executor executor47 = null;
        builder45.httpExecutor = executor47;
        retrofit.Server server49 = builder45.server;
        retrofit.RestAdapter.LogLevel logLevel50 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        retrofit.RestAdapter.Builder builder57 = builder51.setLogLevel(logLevel56);
        java.util.concurrent.Executor executor58 = builder57.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor59 = builder57.requestInterceptor;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder68 = builder66.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter69 = builder68.build();
        retrofit.Profiler profiler70 = null;
        builder68.profiler = profiler70;
        retrofit.Profiler profiler72 = null;
        builder68.profiler = profiler72;
        retrofit.converter.Converter converter74 = builder68.converter;
        retrofit.RestAdapter.Builder builder75 = builder57.setConverter(converter74);
        builder45.converter = converter74;
        retrofit.RestAdapter.Builder builder77 = builder6.setConverter(converter74);
        retrofit.Profiler profiler78 = null;
        builder77.profiler = profiler78;
        retrofit.RestAdapter.Log log80 = builder77.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(executor58);
        org.junit.Assert.assertNull(requestInterceptor59);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(restAdapter69);
        org.junit.Assert.assertNotNull(converter74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(log80);
    }

    @Test
    public void test06595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06595");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel6 = null;
        restAdapter0.logLevel = logLevel6;
        java.util.concurrent.Executor executor8 = null;
        restAdapter0.httpExecutor = executor8;
        java.util.concurrent.Executor executor10 = null;
        restAdapter0.callbackExecutor = executor10;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider13 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = builder14.callbackExecutor;
        retrofit.Profiler profiler16 = builder14.profiler;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        java.util.concurrent.Executor executor19 = null;
        builder17.httpExecutor = executor19;
        retrofit.Server server21 = builder17.server;
        java.util.concurrent.Executor executor22 = null;
        builder17.callbackExecutor = executor22;
        retrofit.Server server24 = builder17.server;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        java.util.concurrent.Executor executor27 = null;
        builder25.httpExecutor = executor27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        retrofit.RestAdapter.Builder builder37 = builder31.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = builder37.setServer("Retrofit-Idle");
        retrofit.Server server40 = builder39.server;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = builder53.logLevel;
        retrofit.RestAdapter.Builder builder55 = builder49.setLogLevel(logLevel54);
        retrofit.client.Client.Provider provider56 = builder49.clientProvider;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        builder49.log = log57;
        retrofit.RestAdapter.Builder builder59 = builder48.setLog(log57);
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log57, logLevel60);
        retrofit.RestAdapter.Builder builder62 = builder29.setServer(server40);
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter72 = builder71.build();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter72.logLevel;
        retrofit.RequestInterceptor requestInterceptor74 = restAdapter72.requestInterceptor;
        retrofit.RestAdapter.Builder builder75 = builder62.setRequestInterceptor(requestInterceptor74);
        retrofit.RestAdapter.Builder builder76 = builder25.setRequestInterceptor(requestInterceptor74);
        retrofit.RestAdapter.Builder builder77 = builder17.setRequestInterceptor(requestInterceptor74);
        retrofit.RestAdapter.Builder builder78 = builder14.setRequestInterceptor(requestInterceptor74);
        restAdapter0.requestInterceptor = requestInterceptor74;
        retrofit.client.Client.Provider provider80 = restAdapter0.clientProvider;
        retrofit.RequestInterceptor requestInterceptor81 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.Server server83 = builder82.server;
        retrofit.RestAdapter.Log log84 = null;
        builder82.log = log84;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel87 = builder86.logLevel;
        retrofit.RestAdapter.Builder builder88 = builder82.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder90 = builder88.setServer("Retrofit-Idle");
        retrofit.Server server91 = builder90.server;
        retrofit.Profiler profiler92 = null;
        builder90.profiler = profiler92;
        retrofit.Profiler profiler94 = null;
        builder90.profiler = profiler94;
        retrofit.RestAdapter restAdapter96 = builder90.build();
        retrofit.RequestInterceptor requestInterceptor97 = restAdapter96.requestInterceptor;
        java.util.concurrent.Executor executor98 = restAdapter96.callbackExecutor;
        restAdapter0.httpExecutor = executor98;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(provider80);
        org.junit.Assert.assertNotNull(requestInterceptor81);
        org.junit.Assert.assertNull(server83);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(server91);
        org.junit.Assert.assertNotNull(restAdapter96);
        org.junit.Assert.assertNotNull(requestInterceptor97);
        org.junit.Assert.assertNotNull(executor98);
    }

    @Test
    public void test06596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06596");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter5 = builder4.converter;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = builder6.logLevel;
        retrofit.ErrorHandler errorHandler8 = null;
        builder6.errorHandler = errorHandler8;
        retrofit.converter.Converter converter10 = builder6.converter;
        retrofit.RestAdapter.LogLevel logLevel11 = builder6.logLevel;
        retrofit.RestAdapter.Builder builder12 = builder4.setLogLevel(logLevel11);
        java.util.concurrent.Executor executor13 = builder4.httpExecutor;
        retrofit.Server server14 = builder4.server;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        java.util.concurrent.Executor executor26 = builder23.httpExecutor;
        retrofit.RestAdapter.Builder builder28 = builder23.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider29 = builder28.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel30 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder4.setLogLevel(logLevel30);
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test06597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06597");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter0.logLevel = logLevel7;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor10 = restAdapter0.callbackExecutor;
        retrofit.Profiler profiler11 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        java.util.concurrent.Executor executor19 = builder18.callbackExecutor;
        retrofit.converter.Converter converter20 = null;
        builder18.converter = converter20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        builder22.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder34 = builder32.setServer("Retrofit-Idle");
        retrofit.Server server35 = builder34.server;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.client.Client.Provider provider51 = builder44.clientProvider;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        builder44.log = log52;
        retrofit.RestAdapter.Builder builder54 = builder43.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log52, logLevel55);
        builder22.logLevel = logLevel55;
        retrofit.RestAdapter.LogLevel logLevel58 = builder22.logLevel;
        builder18.logLevel = logLevel58;
        restAdapter0.logLevel = logLevel58;
        retrofit.RestAdapter.RestHandler restHandler61 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test06598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06598");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor4 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        builder23.logLevel = logLevel25;
        boolean boolean27 = logLevel25.log();
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel25);
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.converter.Converter converter33 = null;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.client.Client.Provider provider47 = builder40.clientProvider;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        builder40.log = log48;
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider62 = builder55.clientProvider;
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        builder55.log = log63;
        retrofit.RestAdapter.Builder builder65 = builder51.setLog(log63);
        retrofit.RestAdapter.Builder builder66 = builder36.setLog(log63);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.Server server68 = builder67.server;
        java.util.concurrent.Executor executor69 = null;
        builder67.httpExecutor = executor69;
        retrofit.Server server71 = builder67.server;
        retrofit.RestAdapter.LogLevel logLevel72 = builder67.logLevel;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server14, provider29, executor30, executor31, requestInterceptor32, converter33, profiler34, errorHandler35, log63, logLevel72);
        restAdapter0.server = server14;
        retrofit.RestAdapter.Log log75 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler76 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(log75);
        org.junit.Assert.assertNull(errorHandler76);
    }

    @Test
    public void test06599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06599");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter.Log log16 = builder15.log;
        retrofit.RestAdapter.LogLevel logLevel17 = builder15.logLevel;
        java.util.concurrent.Executor executor18 = builder15.callbackExecutor;
        retrofit.RestAdapter.Builder builder20 = builder15.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder22 = builder15.setServer("hi!");
        retrofit.ErrorHandler errorHandler23 = builder22.errorHandler;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(errorHandler23);
    }

    @Test
    public void test06600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06600");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        java.util.concurrent.Executor executor9 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Log log10 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter0.new RestHandler();
        retrofit.Server server13 = restAdapter0.server;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("Retrofit-Idle");
        retrofit.Server server24 = builder23.server;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = builder37.logLevel;
        retrofit.RestAdapter.Builder builder39 = builder33.setLogLevel(logLevel38);
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel38);
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.client.Client.Provider provider59 = builder52.clientProvider;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        builder52.log = log60;
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server24, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log60, logLevel63);
        boolean boolean65 = logLevel63.log();
        boolean boolean66 = logLevel63.log();
        restAdapter0.logLevel = logLevel63;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test06601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06601");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter5.new RestHandler();
        java.util.concurrent.Executor executor7 = restAdapter5.httpExecutor;
        java.util.concurrent.Executor executor8 = null;
        restAdapter5.callbackExecutor = executor8;
        retrofit.ErrorHandler errorHandler10 = null;
        restAdapter5.errorHandler = errorHandler10;
        retrofit.RestAdapter.LogLevel logLevel12 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter5.logLevel = logLevel12;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter5.logLevel = logLevel14;
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter5.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter5.getLogLevel();
        builder0.logLevel = logLevel17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider27 = builder20.clientProvider;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log28;
        retrofit.RestAdapter.Builder builder30 = builder19.setLog(log28);
        java.util.concurrent.Executor executor31 = builder30.callbackExecutor;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler41 = builder40.errorHandler;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor43 = builder42.callbackExecutor;
        retrofit.Profiler profiler44 = builder42.profiler;
        retrofit.RestAdapter.Builder builder46 = builder42.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("Retrofit-Idle");
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Builder builder57 = builder46.setServer(server56);
        retrofit.RestAdapter restAdapter58 = builder57.build();
        java.util.concurrent.Executor executor59 = restAdapter58.callbackExecutor;
        builder40.callbackExecutor = executor59;
        builder30.callbackExecutor = executor59;
        retrofit.RestAdapter.LogLevel logLevel62 = builder30.logLevel;
        builder0.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("Retrofit-Idle");
        retrofit.Server server73 = builder72.server;
        retrofit.RestAdapter.Builder builder75 = builder72.setServer("Retrofit-Idle");
        builder72.ensureSaneDefaults();
        java.util.concurrent.Executor executor77 = builder72.callbackExecutor;
        retrofit.ErrorHandler errorHandler78 = builder72.errorHandler;
        retrofit.RestAdapter.Builder builder79 = builder0.setErrorHandler(errorHandler78);
        java.util.concurrent.Executor executor80 = builder0.httpExecutor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(errorHandler41);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(profiler44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(restAdapter58);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(server73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(executor77);
        org.junit.Assert.assertNotNull(errorHandler78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(executor80);
    }

    @Test
    public void test06602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06602");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.Profiler profiler3 = null;
        builder0.profiler = profiler3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler14 = builder13.errorHandler;
        retrofit.RestAdapter restAdapter15 = builder13.build();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter18.new RestHandler();
        java.util.concurrent.Executor executor20 = restAdapter18.httpExecutor;
        java.util.concurrent.Executor executor21 = null;
        restAdapter18.callbackExecutor = executor21;
        retrofit.client.Client.Provider provider23 = null;
        restAdapter18.clientProvider = provider23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("Retrofit-Idle");
        retrofit.Server server34 = builder33.server;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.Server server44 = builder43.server;
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel48 = builder47.logLevel;
        retrofit.RestAdapter.Builder builder49 = builder43.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("Retrofit-Idle");
        retrofit.Server server52 = builder51.server;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = null;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.Server server62 = builder61.server;
        retrofit.RestAdapter.Log log63 = null;
        builder61.log = log63;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel66 = builder65.logLevel;
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel66);
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel66);
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel66);
        restAdapter18.log = log42;
        log42.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder73 = builder16.setLog(log42);
        builder13.log = log42;
        retrofit.RestAdapter.Log log75 = builder13.log;
        retrofit.client.Client.Provider provider76 = builder13.clientProvider;
        builder0.clientProvider = provider76;
        retrofit.Profiler profiler78 = builder0.profiler;
        retrofit.ErrorHandler errorHandler79 = builder0.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(errorHandler14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(server52);
        org.junit.Assert.assertNull(server62);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(provider76);
        org.junit.Assert.assertNull(profiler78);
        org.junit.Assert.assertNull(errorHandler79);
    }

    @Test
    public void test06603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06603");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler4 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter9 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(errorHandler4);
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(converter9);
    }

    @Test
    public void test06604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06604");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        java.util.concurrent.Executor executor8 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        builder16.logLevel = logLevel18;
        boolean boolean20 = logLevel18.log();
        builder9.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel22 = builder9.logLevel;
        retrofit.Profiler profiler23 = builder9.profiler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = builder24.callbackExecutor;
        retrofit.Profiler profiler26 = builder24.profiler;
        retrofit.RestAdapter.Builder builder28 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Builder builder39 = builder28.setServer(server38);
        retrofit.RestAdapter.Builder builder40 = builder9.setServer(server38);
        retrofit.RestAdapter.Builder builder41 = builder6.setServer(server38);
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider60 = builder53.clientProvider;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log61;
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter73 = builder72.build();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter73.logLevel;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server38, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log61, logLevel74);
        boolean boolean76 = logLevel74.log();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(restAdapter73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test06605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06605");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel23);
        retrofit.client.Client.Provider provider26 = restAdapter25.clientProvider;
        java.util.concurrent.Executor executor27 = restAdapter25.callbackExecutor;
        java.lang.Class<?> wildcardClass28 = restAdapter25.getClass();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test06606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06606");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider29 = builder22.clientProvider;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log30;
        retrofit.RestAdapter.Builder builder32 = builder21.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log30, logLevel33);
        builder0.logLevel = logLevel33;
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = builder39.callbackExecutor;
        retrofit.Profiler profiler41 = builder39.profiler;
        retrofit.RestAdapter.Builder builder43 = builder39.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("Retrofit-Idle");
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Builder builder54 = builder43.setServer(server53);
        retrofit.RestAdapter restAdapter55 = builder54.build();
        retrofit.Profiler profiler56 = builder54.profiler;
        retrofit.RestAdapter.LogLevel logLevel57 = builder54.logLevel;
        java.util.concurrent.Executor executor58 = builder54.callbackExecutor;
        java.util.concurrent.Executor executor59 = builder54.httpExecutor;
        builder54.ensureSaneDefaults();
        java.util.concurrent.Executor executor61 = builder54.httpExecutor;
        builder38.httpExecutor = executor61;
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNull(profiler56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(executor61);
    }

    @Test
    public void test06607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06607");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider29 = builder22.clientProvider;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log30;
        retrofit.RestAdapter.Builder builder32 = builder21.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log30, logLevel33);
        builder0.logLevel = logLevel33;
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        retrofit.Profiler profiler37 = null;
        builder0.profiler = profiler37;
        retrofit.RestAdapter.Builder builder40 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.converter.Converter converter42 = builder40.converter;
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(converter42);
    }

    @Test
    public void test06608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06608");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor3 = builder2.callbackExecutor;
        retrofit.Profiler profiler4 = builder2.profiler;
        retrofit.RestAdapter.Builder builder6 = builder2.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Builder builder17 = builder6.setServer(server16);
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("Retrofit-Idle");
        retrofit.Server server44 = builder43.server;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.Server server62 = builder61.server;
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.converter.Converter converter67 = null;
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = null;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor66, converter67, profiler68, errorHandler69, log70, logLevel76);
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel76);
        builder25.log = log52;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel85 = builder84.logLevel;
        builder83.logLevel = logLevel85;
        builder81.logLevel = logLevel85;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server16, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log52, logLevel85);
        builder0.server = server16;
        retrofit.Profiler profiler90 = builder0.profiler;
        java.util.concurrent.Executor executor91 = null;
        builder0.callbackExecutor = executor91;
        retrofit.RestAdapter.Builder builder94 = builder0.setServer("hi!");
        builder94.ensureSaneDefaults();
        builder94.ensureSaneDefaults();
        java.util.concurrent.Executor executor97 = builder94.callbackExecutor;
        retrofit.RestAdapter restAdapter98 = builder94.build();
        retrofit.RestAdapter.Log log99 = restAdapter98.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler90);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(executor97);
        org.junit.Assert.assertNotNull(restAdapter98);
        org.junit.Assert.assertNotNull(log99);
    }

    @Test
    public void test06609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06609");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.httpExecutor = executor1;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.httpExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        restAdapter0.clientProvider = provider5;
        retrofit.RestAdapter.Log log7 = restAdapter0.log;
        retrofit.Server server8 = restAdapter0.server;
        retrofit.RequestInterceptor requestInterceptor9 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RequestInterceptor requestInterceptor17 = null;
        builder10.requestInterceptor = requestInterceptor17;
        retrofit.RestAdapter.Log log19 = builder10.log;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        builder27.logLevel = logLevel29;
        boolean boolean31 = logLevel29.log();
        builder20.logLevel = logLevel29;
        retrofit.RestAdapter.Builder builder33 = builder10.setLogLevel(logLevel29);
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.setLogLevel(logLevel29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test06610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06610");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel23);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        java.util.concurrent.Executor executor28 = null;
        builder26.httpExecutor = executor28;
        retrofit.Server server30 = builder26.server;
        retrofit.RestAdapter.LogLevel logLevel31 = builder26.logLevel;
        restAdapter25.logLevel = logLevel31;
        retrofit.Profiler profiler33 = restAdapter25.profiler;
        java.util.concurrent.Executor executor34 = restAdapter25.httpExecutor;
        retrofit.Profiler profiler35 = restAdapter25.profiler;
        retrofit.RequestInterceptor requestInterceptor36 = restAdapter25.requestInterceptor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNull(requestInterceptor36);
    }

    @Test
    public void test06611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06611");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = null;
        restAdapter0.errorHandler = errorHandler3;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler6 = restAdapter0.profiler;
        retrofit.Profiler profiler7 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider17 = builder10.clientProvider;
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        builder10.log = log18;
        retrofit.RestAdapter.Builder builder20 = builder9.setLog(log18);
        builder9.ensureSaneDefaults();
        retrofit.Server server22 = builder9.server;
        retrofit.converter.Converter converter23 = builder9.converter;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler33 = builder32.errorHandler;
        retrofit.RestAdapter restAdapter34 = builder32.build();
        java.util.concurrent.Executor executor35 = restAdapter34.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor36 = restAdapter34.requestInterceptor;
        builder9.requestInterceptor = requestInterceptor36;
        java.lang.reflect.Method method38 = null;
        java.lang.Object[] objArray39 = new java.lang.Object[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = restHandler8.invoke((java.lang.Object) builder9, method38, objArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertNotNull(converter23);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(errorHandler33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(executor35);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
    }

    @Test
    public void test06612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06612");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter8.logLevel;
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter8.getLogLevel();
        retrofit.ErrorHandler errorHandler12 = null;
        restAdapter8.errorHandler = errorHandler12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.Server server23 = builder22.server;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel37);
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        retrofit.RestAdapter.Builder builder57 = builder51.setLogLevel(logLevel56);
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        builder51.log = log59;
        retrofit.RestAdapter.Builder builder61 = builder47.setLog(log59);
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server23, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log59, logLevel62);
        log59.log("Retrofit-");
        restAdapter8.log = log59;
        log59.log("");
        builder6.log = log59;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06613");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        restAdapter0.clientProvider = provider5;
        java.util.concurrent.Executor executor7 = null;
        restAdapter0.callbackExecutor = executor7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter18 = builder17.build();
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter18.logLevel;
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter18.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor20;
        retrofit.client.Client.Provider provider22 = restAdapter0.clientProvider;
        retrofit.converter.Converter converter23 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(restAdapter18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor20);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNull(converter23);
    }

    @Test
    public void test06614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06614");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter15.new RestHandler();
        java.util.concurrent.Executor executor17 = restAdapter15.httpExecutor;
        java.util.concurrent.Executor executor18 = null;
        restAdapter15.callbackExecutor = executor18;
        retrofit.ErrorHandler errorHandler20 = null;
        restAdapter15.errorHandler = errorHandler20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter15.logLevel = logLevel22;
        builder0.logLevel = logLevel22;
        retrofit.ErrorHandler errorHandler25 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder27 = builder0.setServer("Retrofit-Idle");
        retrofit.Profiler profiler28 = null;
        builder0.profiler = profiler28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter38.new RestHandler();
        java.util.concurrent.Executor executor40 = restAdapter38.httpExecutor;
        java.util.concurrent.Executor executor41 = null;
        restAdapter38.callbackExecutor = executor41;
        retrofit.client.Client.Provider provider43 = null;
        restAdapter38.clientProvider = provider43;
        java.util.concurrent.Executor executor45 = null;
        restAdapter38.callbackExecutor = executor45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter56 = builder55.build();
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter56.logLevel;
        retrofit.RequestInterceptor requestInterceptor58 = restAdapter56.requestInterceptor;
        restAdapter38.requestInterceptor = requestInterceptor58;
        retrofit.RestAdapter.Builder builder60 = builder36.setRequestInterceptor(requestInterceptor58);
        builder0.requestInterceptor = requestInterceptor58;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = builder0.setServer("hi!");
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(restAdapter56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test06615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06615");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider2 = null;
        builder0.clientProvider = provider2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter restAdapter6 = builder0.build();
        retrofit.Profiler profiler7 = restAdapter6.profiler;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(restAdapter6);
        org.junit.Assert.assertNull(profiler7);
    }

    @Test
    public void test06616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06616");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.getLogLevel();
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler6 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider19 = null;
        builder16.clientProvider = provider19;
        retrofit.Server server21 = builder16.server;
        retrofit.RestAdapter restAdapter22 = builder16.build();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter22.new RestHandler();
        java.util.concurrent.Executor executor24 = restAdapter22.httpExecutor;
        restAdapter0.callbackExecutor = executor24;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter0.logLevel;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNull(logLevel26);
    }

    @Test
    public void test06617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06617");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider29 = builder22.clientProvider;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log30;
        retrofit.RestAdapter.Builder builder32 = builder21.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log30, logLevel33);
        builder0.logLevel = logLevel33;
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder39.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider48 = null;
        builder45.clientProvider = provider48;
        retrofit.Server server50 = builder45.server;
        builder38.server = server50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = builder60.setLog(log61);
        java.util.concurrent.Executor executor63 = builder60.httpExecutor;
        retrofit.RestAdapter restAdapter64 = builder60.build();
        java.util.concurrent.Executor executor65 = restAdapter64.httpExecutor;
        retrofit.converter.Converter converter66 = restAdapter64.converter;
        retrofit.Profiler profiler67 = restAdapter64.profiler;
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter64.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter64.getLogLevel();
        retrofit.ErrorHandler errorHandler70 = restAdapter64.errorHandler;
        builder38.errorHandler = errorHandler70;
        retrofit.RestAdapter.Log log72 = builder38.log;
        retrofit.Profiler profiler73 = builder38.profiler;
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(executor65);
        org.junit.Assert.assertNotNull(converter66);
        org.junit.Assert.assertNull(profiler67);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNull(log72);
        org.junit.Assert.assertNull(profiler73);
    }

    @Test
    public void test06618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06618");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel8 = builder0.logLevel;
        retrofit.Profiler profiler9 = null;
        builder0.profiler = profiler9;
        retrofit.client.Client.Provider provider11 = builder0.clientProvider;
        retrofit.converter.Converter converter12 = builder0.converter;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(converter12);
    }

    @Test
    public void test06619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06619");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter.Log log16 = builder15.log;
        retrofit.RestAdapter.LogLevel logLevel17 = builder15.logLevel;
        java.util.concurrent.Executor executor18 = builder15.callbackExecutor;
        retrofit.RestAdapter.Builder builder20 = builder15.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder22 = builder15.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        builder30.logLevel = logLevel32;
        boolean boolean34 = logLevel32.log();
        builder23.logLevel = logLevel32;
        retrofit.RestAdapter.LogLevel logLevel36 = builder23.logLevel;
        retrofit.Profiler profiler37 = builder23.profiler;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor39 = null;
        restAdapter38.callbackExecutor = executor39;
        retrofit.RestAdapter.Log log41 = restAdapter38.log;
        retrofit.converter.Converter converter42 = restAdapter38.converter;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor44 = builder43.callbackExecutor;
        retrofit.Profiler profiler45 = builder43.profiler;
        retrofit.RestAdapter.Builder builder47 = builder43.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder48.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("Retrofit-Idle");
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Builder builder58 = builder47.setServer(server57);
        restAdapter38.server = server57;
        retrofit.RestAdapter.Builder builder60 = builder23.setServer(server57);
        retrofit.RestAdapter.LogLevel logLevel61 = null;
        builder23.logLevel = logLevel61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.Server server68 = builder67.server;
        retrofit.RestAdapter.Log log69 = null;
        builder67.log = log69;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel72 = builder71.logLevel;
        retrofit.RestAdapter.Builder builder73 = builder67.setLogLevel(logLevel72);
        retrofit.client.Client.Provider provider74 = builder67.clientProvider;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        builder67.log = log75;
        retrofit.RestAdapter.Builder builder77 = builder63.setLog(log75);
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler79 = restAdapter78.new RestHandler();
        java.util.concurrent.Executor executor80 = restAdapter78.httpExecutor;
        java.util.concurrent.Executor executor81 = null;
        restAdapter78.callbackExecutor = executor81;
        retrofit.ErrorHandler errorHandler83 = null;
        restAdapter78.errorHandler = errorHandler83;
        retrofit.RestAdapter.LogLevel logLevel85 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter78.logLevel = logLevel85;
        builder63.logLevel = logLevel85;
        retrofit.RestAdapter.Builder builder89 = builder63.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log90 = builder89.log;
        builder23.log = log90;
        retrofit.RestAdapter.Builder builder92 = builder22.setLog(log90);
        retrofit.Server server93 = builder92.server;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNull(log41);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(provider74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(executor80);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(log90);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(server93);
    }

    @Test
    public void test06620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06620");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = null;
        restAdapter0.converter = converter3;
        java.util.concurrent.Executor executor5 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor8 = builder7.callbackExecutor;
        retrofit.Profiler profiler9 = builder7.profiler;
        retrofit.RestAdapter.Builder builder11 = builder7.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("Retrofit-Idle");
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Builder builder22 = builder11.setServer(server21);
        retrofit.RestAdapter restAdapter23 = builder22.build();
        java.util.concurrent.Executor executor24 = restAdapter23.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter23.new RestHandler();
        retrofit.ErrorHandler errorHandler26 = restAdapter23.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter23.logLevel;
        java.util.concurrent.Executor executor28 = restAdapter23.httpExecutor;
        retrofit.ErrorHandler errorHandler29 = restAdapter23.errorHandler;
        restAdapter0.errorHandler = errorHandler29;
        retrofit.RequestInterceptor requestInterceptor31 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(errorHandler26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNull(requestInterceptor31);
        org.junit.Assert.assertNull(logLevel32);
    }

    @Test
    public void test06621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06621");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = null;
        restAdapter0.errorHandler = errorHandler3;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor6 = null;
        restAdapter0.httpExecutor = executor6;
        retrofit.ErrorHandler errorHandler8 = restAdapter0.errorHandler;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor10 = null;
        restAdapter9.requestInterceptor = requestInterceptor10;
        retrofit.Profiler profiler12 = null;
        restAdapter9.profiler = profiler12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = builder14.callbackExecutor;
        retrofit.Profiler profiler16 = builder14.profiler;
        retrofit.RestAdapter.Builder builder18 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("Retrofit-Idle");
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Builder builder29 = builder18.setServer(server28);
        retrofit.RestAdapter restAdapter30 = builder29.build();
        java.util.concurrent.Executor executor31 = restAdapter30.callbackExecutor;
        restAdapter9.callbackExecutor = executor31;
        restAdapter0.httpExecutor = executor31;
        retrofit.Profiler profiler34 = null;
        restAdapter0.profiler = profiler34;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor37 = null;
        restAdapter0.httpExecutor = executor37;
        retrofit.Profiler profiler39 = restAdapter0.profiler;
        retrofit.Profiler profiler40 = restAdapter0.profiler;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(errorHandler8);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(profiler39);
        org.junit.Assert.assertNull(profiler40);
    }

    @Test
    public void test06622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06622");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        builder18.logLevel = logLevel20;
        boolean boolean22 = logLevel20.log();
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel20);
        retrofit.Profiler profiler24 = null;
        restAdapter23.profiler = profiler24;
        retrofit.converter.Converter converter26 = null;
        restAdapter23.converter = converter26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Builder builder39 = builder36.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter40.new RestHandler();
        java.util.concurrent.Executor executor42 = restAdapter40.httpExecutor;
        java.util.concurrent.Executor executor43 = null;
        restAdapter40.callbackExecutor = executor43;
        retrofit.client.Client.Provider provider45 = null;
        restAdapter40.clientProvider = provider45;
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter40.logLevel;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        builder48.logLevel = logLevel50;
        java.util.concurrent.Executor executor52 = null;
        builder48.callbackExecutor = executor52;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor55 = null;
        restAdapter54.callbackExecutor = executor55;
        retrofit.converter.Converter converter57 = restAdapter54.converter;
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        restAdapter54.log = log58;
        builder48.log = log58;
        restAdapter40.log = log58;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = builder68.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter71 = builder70.build();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.logLevel;
        retrofit.RequestInterceptor requestInterceptor73 = restAdapter71.requestInterceptor;
        restAdapter40.requestInterceptor = requestInterceptor73;
        builder36.requestInterceptor = requestInterceptor73;
        restAdapter23.requestInterceptor = requestInterceptor73;
        java.util.concurrent.Executor executor77 = restAdapter23.httpExecutor;
        retrofit.Server server78 = restAdapter23.server;
        retrofit.client.Client.Provider provider79 = restAdapter23.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNull(logLevel47);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(restAdapter71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNull(executor77);
        org.junit.Assert.assertNotNull(server78);
        org.junit.Assert.assertNull(provider79);
    }

    @Test
    public void test06623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06623");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        java.util.concurrent.Executor executor5 = null;
        builder0.callbackExecutor = executor5;
        retrofit.Server server7 = builder0.server;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.Server server9 = builder8.server;
        java.util.concurrent.Executor executor10 = null;
        builder8.httpExecutor = executor10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.Server server23 = builder22.server;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider39 = builder32.clientProvider;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log40;
        retrofit.RestAdapter.Builder builder42 = builder31.setLog(log40);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log40, logLevel43);
        retrofit.RestAdapter.Builder builder45 = builder12.setServer(server23);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter55 = builder54.build();
        retrofit.RestAdapter.LogLevel logLevel56 = restAdapter55.logLevel;
        retrofit.RequestInterceptor requestInterceptor57 = restAdapter55.requestInterceptor;
        retrofit.RestAdapter.Builder builder58 = builder45.setRequestInterceptor(requestInterceptor57);
        retrofit.RestAdapter.Builder builder59 = builder8.setRequestInterceptor(requestInterceptor57);
        retrofit.RestAdapter.Builder builder60 = builder0.setRequestInterceptor(requestInterceptor57);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.Server server62 = builder61.server;
        retrofit.RestAdapter.Log log63 = null;
        builder61.log = log63;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.Server server66 = builder65.server;
        retrofit.RestAdapter.Log log67 = null;
        builder65.log = log67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = builder69.logLevel;
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel70);
        retrofit.client.Client.Provider provider72 = builder65.clientProvider;
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        builder65.log = log73;
        retrofit.RestAdapter.Builder builder75 = builder61.setLog(log73);
        retrofit.Server server76 = builder61.server;
        java.util.concurrent.Executor executor77 = null;
        builder61.callbackExecutor = executor77;
        retrofit.converter.Converter converter79 = builder61.converter;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor81 = null;
        restAdapter80.callbackExecutor = executor81;
        retrofit.RestAdapter.Log log83 = restAdapter80.log;
        retrofit.converter.Converter converter84 = restAdapter80.converter;
        retrofit.RestAdapter.RestHandler restHandler85 = restAdapter80.new RestHandler();
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel87 = builder86.logLevel;
        restAdapter80.logLevel = logLevel87;
        retrofit.RestAdapter.Builder builder89 = builder61.setLogLevel(logLevel87);
        retrofit.RestAdapter.Log log90 = builder61.log;
        retrofit.RestAdapter.Builder builder91 = builder0.setLog(log90);
        retrofit.client.Client client92 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder93 = builder0.setClient(client92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(server62);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(server76);
        org.junit.Assert.assertNull(converter79);
        org.junit.Assert.assertNull(log83);
        org.junit.Assert.assertNull(converter84);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(log90);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test06624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06624");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.Server server2 = builder1.server;
        retrofit.RestAdapter.Log log3 = null;
        builder1.log = log3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder7 = builder1.setLogLevel(logLevel6);
        retrofit.client.Client.Provider provider8 = builder1.clientProvider;
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        builder1.log = log9;
        retrofit.RestAdapter.Builder builder11 = builder0.setLog(log9);
        retrofit.Profiler profiler12 = builder11.profiler;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler22 = builder21.errorHandler;
        retrofit.RestAdapter restAdapter23 = builder21.build();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter26.new RestHandler();
        java.util.concurrent.Executor executor28 = restAdapter26.httpExecutor;
        java.util.concurrent.Executor executor29 = null;
        restAdapter26.callbackExecutor = executor29;
        retrofit.client.Client.Provider provider31 = null;
        restAdapter26.clientProvider = provider31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = builder37.logLevel;
        retrofit.RestAdapter.Builder builder39 = builder33.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("Retrofit-Idle");
        retrofit.Server server42 = builder41.server;
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        retrofit.RestAdapter.Builder builder57 = builder51.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder59 = builder57.setServer("Retrofit-Idle");
        retrofit.Server server60 = builder59.server;
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.RequestInterceptor requestInterceptor64 = null;
        retrofit.converter.Converter converter65 = null;
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Log log68 = null;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.Server server70 = builder69.server;
        retrofit.RestAdapter.Log log71 = null;
        builder69.log = log71;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel74 = builder73.logLevel;
        retrofit.RestAdapter.Builder builder75 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor64, converter65, profiler66, errorHandler67, log68, logLevel74);
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server42, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log50, logLevel74);
        restAdapter26.log = log50;
        log50.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder81 = builder24.setLog(log50);
        builder21.log = log50;
        retrofit.ErrorHandler errorHandler83 = builder21.errorHandler;
        retrofit.RestAdapter.Builder builder84 = builder11.setErrorHandler(errorHandler83);
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor86 = null;
        restAdapter85.callbackExecutor = executor86;
        retrofit.converter.Converter converter88 = restAdapter85.converter;
        retrofit.RestAdapter.Log log89 = retrofit.RestAdapter.Log.NONE;
        restAdapter85.log = log89;
        retrofit.RestAdapter.Builder builder91 = builder11.setLog(log89);
        java.util.concurrent.Executor executor92 = builder11.callbackExecutor;
        org.junit.Assert.assertNull(server2);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(errorHandler22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNull(server70);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(errorHandler83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNull(converter88);
        org.junit.Assert.assertNotNull(log89);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNull(executor92);
    }

    @Test
    public void test06625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06625");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.Server server3 = builder2.server;
        retrofit.RestAdapter.Log log4 = null;
        builder2.log = log4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = builder6.logLevel;
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel7);
        retrofit.RestAdapter.Builder builder10 = builder8.setServer("Retrofit-Idle");
        retrofit.Server server11 = builder10.server;
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.RequestInterceptor requestInterceptor15 = null;
        retrofit.converter.Converter converter16 = null;
        retrofit.Profiler profiler17 = null;
        retrofit.ErrorHandler errorHandler18 = null;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider27 = builder20.clientProvider;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log28;
        retrofit.RestAdapter.Builder builder30 = builder19.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor15, converter16, profiler17, errorHandler18, log28, logLevel31);
        retrofit.RestAdapter.Builder builder33 = builder0.setServer(server11);
        retrofit.Server server34 = builder33.server;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
    }

    @Test
    public void test06626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06626");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        java.util.concurrent.Executor executor13 = null;
        builder0.httpExecutor = executor13;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor16 = null;
        restAdapter15.callbackExecutor = executor16;
        retrofit.RestAdapter.Log log18 = restAdapter15.log;
        retrofit.converter.Converter converter19 = restAdapter15.converter;
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter15.new RestHandler();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        restAdapter15.logLevel = logLevel22;
        builder0.logLevel = logLevel22;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter25.logLevel;
        retrofit.ErrorHandler errorHandler28 = null;
        restAdapter25.errorHandler = errorHandler28;
        java.util.concurrent.Executor executor30 = restAdapter25.httpExecutor;
        java.util.concurrent.Executor executor31 = null;
        restAdapter25.httpExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = restAdapter25.errorHandler;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor35 = null;
        restAdapter34.requestInterceptor = requestInterceptor35;
        retrofit.Profiler profiler37 = null;
        restAdapter34.profiler = profiler37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = builder39.callbackExecutor;
        retrofit.Profiler profiler41 = builder39.profiler;
        retrofit.RestAdapter.Builder builder43 = builder39.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("Retrofit-Idle");
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Builder builder54 = builder43.setServer(server53);
        retrofit.RestAdapter restAdapter55 = builder54.build();
        java.util.concurrent.Executor executor56 = restAdapter55.callbackExecutor;
        restAdapter34.callbackExecutor = executor56;
        restAdapter25.httpExecutor = executor56;
        builder0.httpExecutor = executor56;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor61 = null;
        restAdapter60.callbackExecutor = executor61;
        retrofit.RestAdapter.Log log63 = restAdapter60.log;
        retrofit.converter.Converter converter64 = restAdapter60.converter;
        retrofit.RestAdapter.RestHandler restHandler65 = restAdapter60.new RestHandler();
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = builder66.logLevel;
        restAdapter60.logLevel = logLevel67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.Server server70 = builder69.server;
        retrofit.RestAdapter.Log log71 = null;
        builder69.log = log71;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel74 = builder73.logLevel;
        retrofit.RestAdapter.Builder builder75 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder77 = builder75.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder79 = builder77.setLog(log78);
        java.util.concurrent.Executor executor80 = builder77.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel81 = builder77.logLevel;
        restAdapter60.setLogLevel(logLevel81);
        builder0.logLevel = logLevel81;
        retrofit.converter.Converter converter84 = builder0.converter;
        retrofit.Server server85 = builder0.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNull(errorHandler33);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNull(log63);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server70);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(executor80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter84);
        org.junit.Assert.assertNull(server85);
    }

    @Test
    public void test06627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06627");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        builder18.logLevel = logLevel20;
        boolean boolean22 = logLevel20.log();
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel20);
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.client.Client.Provider provider42 = builder35.clientProvider;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder35.log = log43;
        retrofit.RestAdapter.Builder builder45 = builder31.setLog(log43);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel55);
        retrofit.client.Client.Provider provider57 = builder50.clientProvider;
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        builder50.log = log58;
        retrofit.RestAdapter.Builder builder60 = builder46.setLog(log58);
        retrofit.RestAdapter.Builder builder61 = builder31.setLog(log58);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        java.util.concurrent.Executor executor64 = null;
        builder62.httpExecutor = executor64;
        retrofit.Server server66 = builder62.server;
        retrofit.RestAdapter.LogLevel logLevel67 = builder62.logLevel;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server9, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log58, logLevel67);
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.Profiler profiler70 = null;
        restAdapter68.profiler = profiler70;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter68.logLevel = logLevel72;
        retrofit.client.Response response75 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response77 = restAdapter68.logAndReplaceResponse("Retrofit-", response75, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test06628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06628");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.Profiler profiler11 = builder10.profiler;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("Retrofit-Idle");
        retrofit.Server server21 = builder20.server;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder10.setServer(server21);
        retrofit.client.Client.Provider provider39 = builder38.clientProvider;
        retrofit.converter.Converter converter40 = builder38.converter;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter41.new RestHandler();
        java.util.concurrent.Executor executor43 = restAdapter41.httpExecutor;
        java.util.concurrent.Executor executor44 = null;
        restAdapter41.callbackExecutor = executor44;
        retrofit.client.Client.Provider provider46 = null;
        restAdapter41.clientProvider = provider46;
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter41.logLevel;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = builder53.logLevel;
        retrofit.RestAdapter.Builder builder55 = builder49.setLogLevel(logLevel54);
        java.util.concurrent.Executor executor56 = builder55.callbackExecutor;
        java.util.concurrent.Executor executor57 = builder55.callbackExecutor;
        retrofit.Profiler profiler58 = null;
        builder55.profiler = profiler58;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler61 = restAdapter60.new RestHandler();
        java.util.concurrent.Executor executor62 = restAdapter60.httpExecutor;
        java.util.concurrent.Executor executor63 = null;
        restAdapter60.callbackExecutor = executor63;
        retrofit.client.Client.Provider provider65 = null;
        restAdapter60.clientProvider = provider65;
        java.util.concurrent.Executor executor67 = null;
        restAdapter60.callbackExecutor = executor67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.Server server70 = builder69.server;
        retrofit.RestAdapter.Log log71 = null;
        builder69.log = log71;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel74 = builder73.logLevel;
        retrofit.RestAdapter.Builder builder75 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder77 = builder75.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter78 = builder77.build();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter78.logLevel;
        retrofit.RequestInterceptor requestInterceptor80 = restAdapter78.requestInterceptor;
        restAdapter60.requestInterceptor = requestInterceptor80;
        retrofit.RestAdapter.Builder builder82 = builder55.setRequestInterceptor(requestInterceptor80);
        restAdapter41.requestInterceptor = requestInterceptor80;
        builder38.requestInterceptor = requestInterceptor80;
        retrofit.Server server85 = builder38.server;
        retrofit.RestAdapter.LogLevel logLevel86 = builder38.logLevel;
        boolean boolean87 = logLevel86.log();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(logLevel48);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNull(executor62);
        org.junit.Assert.assertNull(server70);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(restAdapter78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor80);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(server85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test06629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06629");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.Server server7 = builder6.server;
        retrofit.RestAdapter.Log log8 = null;
        builder6.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = builder10.logLevel;
        retrofit.RestAdapter.Builder builder12 = builder6.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler15 = builder14.errorHandler;
        retrofit.RestAdapter restAdapter16 = builder14.build();
        java.util.concurrent.Executor executor17 = restAdapter16.callbackExecutor;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.Server server27 = builder26.server;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = builder37.logLevel;
        builder36.logLevel = logLevel38;
        boolean boolean40 = logLevel38.log();
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel38);
        retrofit.Profiler profiler42 = null;
        restAdapter41.profiler = profiler42;
        retrofit.converter.Converter converter44 = null;
        restAdapter41.converter = converter44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter55 = builder54.build();
        retrofit.Profiler profiler56 = null;
        builder54.profiler = profiler56;
        retrofit.Profiler profiler58 = null;
        builder54.profiler = profiler58;
        retrofit.converter.Converter converter60 = builder54.converter;
        restAdapter41.converter = converter60;
        retrofit.Profiler profiler62 = null;
        restAdapter41.profiler = profiler62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder74 = builder72.setLog(log73);
        java.util.concurrent.Executor executor75 = builder72.httpExecutor;
        java.util.concurrent.Executor executor76 = null;
        builder72.httpExecutor = executor76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.Server server79 = builder78.server;
        retrofit.RestAdapter.Log log80 = null;
        builder78.log = log80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = builder82.logLevel;
        retrofit.RestAdapter.Builder builder84 = builder78.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder86 = builder84.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter87 = builder86.build();
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter87.logLevel;
        builder72.logLevel = logLevel88;
        restAdapter41.setLogLevel(logLevel88);
        retrofit.RestAdapter.Log log91 = restAdapter41.log;
        retrofit.converter.Converter converter92 = restAdapter41.converter;
        restAdapter16.converter = converter92;
        restAdapter0.converter = converter92;
        retrofit.RestAdapter.RestHandler restHandler95 = restAdapter0.new RestHandler();
        retrofit.Server server96 = restAdapter0.server;
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(converter60);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(executor75);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(restAdapter87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(log91);
        org.junit.Assert.assertNotNull(converter92);
        org.junit.Assert.assertNull(server96);
    }

    @Test
    public void test06630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06630");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        restAdapter0.clientProvider = provider9;
        retrofit.ErrorHandler errorHandler11 = null;
        restAdapter0.errorHandler = errorHandler11;
        retrofit.RestAdapter.Log log13 = restAdapter0.log;
        retrofit.converter.Converter converter14 = restAdapter0.converter;
        java.util.concurrent.Executor executor15 = restAdapter0.callbackExecutor;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(executor15);
    }

    @Test
    public void test06631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06631");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        java.util.concurrent.Executor executor14 = builder0.callbackExecutor;
        retrofit.Server server15 = builder0.server;
        java.util.concurrent.Executor executor16 = null;
        builder0.callbackExecutor = executor16;
        retrofit.converter.Converter converter18 = builder0.converter;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.client.Client.Provider provider26 = builder19.clientProvider;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        builder19.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("Retrofit-Idle");
        retrofit.Server server56 = builder55.server;
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        retrofit.converter.Converter converter61 = null;
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Log log64 = null;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.Server server66 = builder65.server;
        retrofit.RestAdapter.Log log67 = null;
        builder65.log = log67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = builder69.logLevel;
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel70);
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor60, converter61, profiler62, errorHandler63, log64, logLevel70);
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel70);
        builder19.log = log46;
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder77 = builder19.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider78 = builder19.clientProvider;
        builder0.clientProvider = provider78;
        retrofit.client.Client client80 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder81 = builder0.setClient(client80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(provider78);
    }

    @Test
    public void test06632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06632");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        restAdapter0.clientProvider = provider9;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("Retrofit-Idle");
        retrofit.Server server21 = builder20.server;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder36.setServer("Retrofit-Idle");
        retrofit.Server server39 = builder38.server;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder48.setLogLevel(logLevel53);
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel53);
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel53);
        log29.log("hi!");
        restAdapter0.log = log29;
        java.util.concurrent.Executor executor60 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel61 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.setLogLevel(logLevel61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(executor60);
    }

    @Test
    public void test06633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06633");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter15.new RestHandler();
        java.util.concurrent.Executor executor17 = restAdapter15.httpExecutor;
        java.util.concurrent.Executor executor18 = null;
        restAdapter15.callbackExecutor = executor18;
        retrofit.ErrorHandler errorHandler20 = null;
        restAdapter15.errorHandler = errorHandler20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter15.logLevel = logLevel22;
        builder0.logLevel = logLevel22;
        retrofit.ErrorHandler errorHandler25 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel26 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder37 = builder35.setLog(log36);
        java.util.concurrent.Executor executor38 = builder35.httpExecutor;
        retrofit.RestAdapter restAdapter39 = builder35.build();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor41 = null;
        restAdapter40.callbackExecutor = executor41;
        retrofit.converter.Converter converter43 = restAdapter40.converter;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        restAdapter40.log = log44;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter40.logLevel = logLevel46;
        builder35.logLevel = logLevel46;
        retrofit.Server server49 = builder35.server;
        builder0.server = server49;
        retrofit.Server server51 = builder0.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(server51);
    }

    @Test
    public void test06634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06634");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor4 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        builder23.logLevel = logLevel25;
        boolean boolean27 = logLevel25.log();
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel25);
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.RequestInterceptor requestInterceptor32 = null;
        retrofit.converter.Converter converter33 = null;
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.client.Client.Provider provider47 = builder40.clientProvider;
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        builder40.log = log48;
        retrofit.RestAdapter.Builder builder50 = builder36.setLog(log48);
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider62 = builder55.clientProvider;
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        builder55.log = log63;
        retrofit.RestAdapter.Builder builder65 = builder51.setLog(log63);
        retrofit.RestAdapter.Builder builder66 = builder36.setLog(log63);
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.Server server68 = builder67.server;
        java.util.concurrent.Executor executor69 = null;
        builder67.httpExecutor = executor69;
        retrofit.Server server71 = builder67.server;
        retrofit.RestAdapter.LogLevel logLevel72 = builder67.logLevel;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server14, provider29, executor30, executor31, requestInterceptor32, converter33, profiler34, errorHandler35, log63, logLevel72);
        restAdapter0.server = server14;
        retrofit.RequestInterceptor requestInterceptor75 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler76 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor75);
    }

    @Test
    public void test06635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06635");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor8 = builder6.requestInterceptor;
        retrofit.RestAdapter.Log log9 = builder6.log;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.Server server19 = builder18.server;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.client.Client.Provider provider35 = builder28.clientProvider;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        builder28.log = log36;
        retrofit.RestAdapter.Builder builder38 = builder27.setLog(log36);
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log36, logLevel39);
        builder6.logLevel = logLevel39;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter43 = null;
        builder42.converter = converter43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        retrofit.Profiler profiler56 = builder55.profiler;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = builder57.server;
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = builder61.logLevel;
        retrofit.RestAdapter.Builder builder63 = builder57.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder65 = builder63.setServer("Retrofit-Idle");
        retrofit.Server server66 = builder65.server;
        retrofit.client.Client.Provider provider67 = null;
        java.util.concurrent.Executor executor68 = null;
        java.util.concurrent.Executor executor69 = null;
        retrofit.RequestInterceptor requestInterceptor70 = null;
        retrofit.converter.Converter converter71 = null;
        retrofit.Profiler profiler72 = null;
        retrofit.ErrorHandler errorHandler73 = null;
        retrofit.RestAdapter.Log log74 = null;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.Server server76 = builder75.server;
        retrofit.RestAdapter.Log log77 = null;
        builder75.log = log77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel80 = builder79.logLevel;
        retrofit.RestAdapter.Builder builder81 = builder75.setLogLevel(logLevel80);
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter(server66, provider67, executor68, executor69, requestInterceptor70, converter71, profiler72, errorHandler73, log74, logLevel80);
        retrofit.RestAdapter.Builder builder83 = builder55.setServer(server66);
        retrofit.RestAdapter.Builder builder84 = builder42.setServer(server66);
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter86 = builder42.build();
        java.util.concurrent.Executor executor87 = builder42.httpExecutor;
        retrofit.Server server88 = builder42.server;
        retrofit.RestAdapter.Builder builder89 = builder6.setServer(server88);
        retrofit.RequestInterceptor requestInterceptor90 = builder89.requestInterceptor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(profiler56);
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNull(server76);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(restAdapter86);
        org.junit.Assert.assertNotNull(executor87);
        org.junit.Assert.assertNotNull(server88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNull(requestInterceptor90);
    }

    @Test
    public void test06636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06636");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.Profiler profiler4 = null;
        restAdapter0.profiler = profiler4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(logLevel7);
    }

    @Test
    public void test06637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06637");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        restAdapter0.clientProvider = provider5;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        builder8.logLevel = logLevel10;
        java.util.concurrent.Executor executor12 = null;
        builder8.callbackExecutor = executor12;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor15 = null;
        restAdapter14.callbackExecutor = executor15;
        retrofit.converter.Converter converter17 = restAdapter14.converter;
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        restAdapter14.log = log18;
        builder8.log = log18;
        restAdapter0.log = log18;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter31 = builder30.build();
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter31.logLevel;
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter31.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor33;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        restAdapter0.requestInterceptor = requestInterceptor35;
        java.util.concurrent.Executor executor37 = restAdapter0.callbackExecutor;
        retrofit.ErrorHandler errorHandler38 = null;
        restAdapter0.errorHandler = errorHandler38;
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor41 = restAdapter0.callbackExecutor;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(executor41);
    }

    @Test
    public void test06638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06638");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider2 = null;
        builder0.clientProvider = provider2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = builder4.callbackExecutor;
        retrofit.Profiler profiler6 = builder4.profiler;
        retrofit.RestAdapter.Builder builder8 = builder4.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("Retrofit-Idle");
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Builder builder19 = builder8.setServer(server18);
        retrofit.RestAdapter.Log log20 = builder19.log;
        retrofit.RestAdapter.LogLevel logLevel21 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        builder29.logLevel = logLevel31;
        boolean boolean33 = logLevel31.log();
        builder22.logLevel = logLevel31;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        builder22.requestInterceptor = requestInterceptor35;
        retrofit.converter.Converter converter37 = null;
        builder22.converter = converter37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = builder39.callbackExecutor;
        retrofit.Profiler profiler41 = builder39.profiler;
        retrofit.RestAdapter.Builder builder43 = builder39.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("Retrofit-Idle");
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Builder builder54 = builder43.setServer(server53);
        retrofit.RestAdapter restAdapter55 = builder54.build();
        java.util.concurrent.Executor executor56 = restAdapter55.callbackExecutor;
        builder22.httpExecutor = executor56;
        builder19.httpExecutor = executor56;
        builder0.httpExecutor = executor56;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter60.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter60.new RestHandler();
        retrofit.ErrorHandler errorHandler64 = restAdapter60.errorHandler;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.Server server66 = builder65.server;
        retrofit.RestAdapter.Log log67 = null;
        builder65.log = log67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = builder69.logLevel;
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder73 = builder71.setServer("Retrofit-Idle");
        retrofit.Server server74 = builder73.server;
        restAdapter60.server = server74;
        retrofit.RestAdapter.Builder builder76 = builder0.setServer(server74);
        retrofit.RequestInterceptor requestInterceptor77 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler78 = builder0.errorHandler;
        java.util.concurrent.Executor executor79 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNull(errorHandler64);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(server74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(requestInterceptor77);
        org.junit.Assert.assertNull(errorHandler78);
        org.junit.Assert.assertNull(executor79);
    }

    @Test
    public void test06639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06639");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler8 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor10 = builder9.callbackExecutor;
        retrofit.Profiler profiler11 = builder9.profiler;
        retrofit.RestAdapter.Builder builder13 = builder9.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Builder builder24 = builder13.setServer(server23);
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.Profiler profiler26 = builder24.profiler;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.NONE;
        builder35.logLevel = logLevel37;
        retrofit.RestAdapter.Log log39 = builder35.log;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter40.logLevel;
        retrofit.ErrorHandler errorHandler43 = restAdapter40.errorHandler;
        retrofit.converter.Converter converter44 = null;
        restAdapter40.converter = converter44;
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter40.logLevel;
        java.util.concurrent.Executor executor47 = restAdapter40.httpExecutor;
        retrofit.RestAdapter.Log log48 = restAdapter40.log;
        retrofit.Profiler profiler49 = null;
        restAdapter40.profiler = profiler49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        builder51.logLevel = logLevel53;
        boolean boolean55 = logLevel53.log();
        restAdapter40.logLevel = logLevel53;
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter40.logLevel;
        retrofit.ErrorHandler errorHandler58 = null;
        restAdapter40.errorHandler = errorHandler58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = builder61.logLevel;
        builder60.logLevel = logLevel62;
        boolean boolean64 = logLevel62.log();
        restAdapter40.setLogLevel(logLevel62);
        builder35.logLevel = logLevel62;
        retrofit.RestAdapter.Log log67 = builder35.log;
        retrofit.RestAdapter.Builder builder68 = builder24.setLog(log67);
        java.util.concurrent.Executor executor69 = builder24.httpExecutor;
        restAdapter0.httpExecutor = executor69;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(errorHandler8);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(errorHandler43);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNull(log48);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(executor69);
    }

    @Test
    public void test06640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06640");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        retrofit.RestAdapter.Builder builder13 = builder8.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider14 = null;
        builder8.clientProvider = provider14;
        retrofit.RestAdapter.Builder builder17 = builder8.setServer("Retrofit-");
        retrofit.client.Client client18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder19 = builder17.setClient(client18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test06641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06641");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        retrofit.converter.Converter converter8 = null;
        builder6.converter = converter8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = builder10.logLevel;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("Retrofit-Idle");
        retrofit.Server server21 = builder20.server;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.client.Client.Provider provider37 = builder30.clientProvider;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        builder30.log = log38;
        retrofit.RestAdapter.Builder builder40 = builder29.setLog(log38);
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log38, logLevel41);
        retrofit.RestAdapter.Builder builder43 = builder10.setServer(server21);
        builder6.server = server21;
        retrofit.client.Client.Provider provider45 = builder6.clientProvider;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel55);
        retrofit.client.Client.Provider provider57 = builder50.clientProvider;
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        builder50.log = log58;
        retrofit.RestAdapter.Builder builder60 = builder46.setLog(log58);
        retrofit.Server server61 = builder46.server;
        java.util.concurrent.Executor executor62 = null;
        builder46.callbackExecutor = executor62;
        retrofit.converter.Converter converter64 = builder46.converter;
        retrofit.ErrorHandler errorHandler65 = builder46.errorHandler;
        retrofit.ErrorHandler errorHandler66 = null;
        builder46.errorHandler = errorHandler66;
        retrofit.RestAdapter.Builder builder69 = builder46.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor71 = builder70.callbackExecutor;
        retrofit.Profiler profiler72 = builder70.profiler;
        retrofit.RestAdapter.Builder builder74 = builder70.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter75 = builder74.converter;
        retrofit.RestAdapter.Builder builder77 = builder74.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.Server server79 = builder78.server;
        retrofit.RestAdapter.Log log80 = null;
        builder78.log = log80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = builder82.logLevel;
        retrofit.RestAdapter.Builder builder84 = builder78.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel87 = builder86.logLevel;
        builder85.logLevel = logLevel87;
        boolean boolean89 = logLevel87.log();
        builder78.logLevel = logLevel87;
        boolean boolean91 = logLevel87.log();
        retrofit.RestAdapter.Builder builder92 = builder77.setLogLevel(logLevel87);
        boolean boolean93 = logLevel87.log();
        retrofit.RestAdapter.Builder builder94 = builder69.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder95 = builder6.setLogLevel(logLevel87);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertNull(errorHandler65);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(executor71);
        org.junit.Assert.assertNull(profiler72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(converter75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test06642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06642");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.Profiler profiler10 = null;
        builder8.profiler = profiler10;
        retrofit.Profiler profiler12 = null;
        builder8.profiler = profiler12;
        retrofit.RestAdapter.LogLevel logLevel14 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("Retrofit-Idle");
        retrofit.Server server24 = builder23.server;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        builder33.logLevel = logLevel35;
        boolean boolean37 = logLevel35.log();
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel35);
        retrofit.Profiler profiler39 = null;
        restAdapter38.profiler = profiler39;
        retrofit.converter.Converter converter41 = null;
        restAdapter38.converter = converter41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.Server server44 = builder43.server;
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel48 = builder47.logLevel;
        retrofit.RestAdapter.Builder builder49 = builder43.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("Retrofit-Idle");
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Builder builder54 = builder51.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter55.new RestHandler();
        java.util.concurrent.Executor executor57 = restAdapter55.httpExecutor;
        java.util.concurrent.Executor executor58 = null;
        restAdapter55.callbackExecutor = executor58;
        retrofit.client.Client.Provider provider60 = null;
        restAdapter55.clientProvider = provider60;
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter55.logLevel;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        builder63.logLevel = logLevel65;
        java.util.concurrent.Executor executor67 = null;
        builder63.callbackExecutor = executor67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor70 = null;
        restAdapter69.callbackExecutor = executor70;
        retrofit.converter.Converter converter72 = restAdapter69.converter;
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        restAdapter69.log = log73;
        builder63.log = log73;
        restAdapter55.log = log73;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.Server server78 = builder77.server;
        retrofit.RestAdapter.Log log79 = null;
        builder77.log = log79;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        retrofit.RestAdapter.Builder builder83 = builder77.setLogLevel(logLevel82);
        retrofit.RestAdapter.Builder builder85 = builder83.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter86 = builder85.build();
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter86.logLevel;
        retrofit.RequestInterceptor requestInterceptor88 = restAdapter86.requestInterceptor;
        restAdapter55.requestInterceptor = requestInterceptor88;
        builder51.requestInterceptor = requestInterceptor88;
        restAdapter38.requestInterceptor = requestInterceptor88;
        retrofit.RestAdapter.RestHandler restHandler92 = restAdapter38.new RestHandler();
        retrofit.Server server93 = restAdapter38.server;
        retrofit.RequestInterceptor requestInterceptor94 = restAdapter38.requestInterceptor;
        retrofit.RestAdapter.Builder builder95 = builder8.setRequestInterceptor(requestInterceptor94);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(server52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNull(server78);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(restAdapter86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor88);
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertNotNull(requestInterceptor94);
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test06643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06643");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel23);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        java.util.concurrent.Executor executor28 = null;
        builder26.httpExecutor = executor28;
        retrofit.Server server30 = builder26.server;
        retrofit.RestAdapter.LogLevel logLevel31 = builder26.logLevel;
        restAdapter25.logLevel = logLevel31;
        retrofit.Profiler profiler33 = restAdapter25.profiler;
        java.util.concurrent.Executor executor34 = restAdapter25.httpExecutor;
        retrofit.Profiler profiler35 = null;
        restAdapter25.profiler = profiler35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter38 = null;
        builder37.converter = converter38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder50 = builder48.setLog(log49);
        retrofit.Profiler profiler51 = builder50.profiler;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("Retrofit-Idle");
        retrofit.Server server61 = builder60.server;
        retrofit.client.Client.Provider provider62 = null;
        java.util.concurrent.Executor executor63 = null;
        java.util.concurrent.Executor executor64 = null;
        retrofit.RequestInterceptor requestInterceptor65 = null;
        retrofit.converter.Converter converter66 = null;
        retrofit.Profiler profiler67 = null;
        retrofit.ErrorHandler errorHandler68 = null;
        retrofit.RestAdapter.Log log69 = null;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.Server server71 = builder70.server;
        retrofit.RestAdapter.Log log72 = null;
        builder70.log = log72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = builder74.logLevel;
        retrofit.RestAdapter.Builder builder76 = builder70.setLogLevel(logLevel75);
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server61, provider62, executor63, executor64, requestInterceptor65, converter66, profiler67, errorHandler68, log69, logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder50.setServer(server61);
        retrofit.RestAdapter.Builder builder79 = builder37.setServer(server61);
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.Server server81 = builder80.server;
        retrofit.RestAdapter.Log log82 = null;
        builder80.log = log82;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel85 = builder84.logLevel;
        retrofit.RestAdapter.Builder builder86 = builder80.setLogLevel(logLevel85);
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel89 = builder88.logLevel;
        builder87.logLevel = logLevel89;
        boolean boolean91 = logLevel89.log();
        builder80.logLevel = logLevel89;
        builder79.logLevel = logLevel89;
        restAdapter25.setLogLevel(logLevel89);
        retrofit.RestAdapter.RestHandler restHandler95 = restAdapter25.new RestHandler();
        retrofit.ErrorHandler errorHandler96 = restAdapter25.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(server81);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(errorHandler96);
    }

    @Test
    public void test06644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06644");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.client.Client.Provider provider26 = builder19.clientProvider;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        builder19.log = log27;
        retrofit.RestAdapter.Builder builder29 = builder15.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = builder0.setLog(log27);
        retrofit.RequestInterceptor requestInterceptor31 = builder30.requestInterceptor;
        retrofit.Profiler profiler32 = null;
        builder30.profiler = profiler32;
        retrofit.converter.Converter converter34 = builder30.converter;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(requestInterceptor31);
        org.junit.Assert.assertNull(converter34);
    }

    @Test
    public void test06645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06645");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter.Log log16 = builder15.log;
        retrofit.RestAdapter.LogLevel logLevel17 = builder15.logLevel;
        java.util.concurrent.Executor executor18 = builder15.callbackExecutor;
        retrofit.RestAdapter.Builder builder20 = builder15.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder22 = builder15.setServer("hi!");
        retrofit.RestAdapter.LogLevel logLevel23 = builder15.logLevel;
        boolean boolean24 = logLevel23.log();
        boolean boolean25 = logLevel23.log();
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test06646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06646");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        java.util.concurrent.Executor executor8 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        java.util.concurrent.Executor executor20 = builder17.httpExecutor;
        retrofit.RestAdapter restAdapter21 = builder17.build();
        java.util.concurrent.Executor executor22 = restAdapter21.httpExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        java.util.concurrent.Executor executor34 = builder31.httpExecutor;
        retrofit.RestAdapter restAdapter35 = builder31.build();
        java.util.concurrent.Executor executor36 = restAdapter35.httpExecutor;
        retrofit.RestAdapter.Builder builder37 = builder6.setExecutors(executor22, executor36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Builder builder49 = builder46.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter50.new RestHandler();
        java.util.concurrent.Executor executor52 = restAdapter50.httpExecutor;
        java.util.concurrent.Executor executor53 = null;
        restAdapter50.callbackExecutor = executor53;
        retrofit.client.Client.Provider provider55 = null;
        restAdapter50.clientProvider = provider55;
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter50.logLevel;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        builder58.logLevel = logLevel60;
        java.util.concurrent.Executor executor62 = null;
        builder58.callbackExecutor = executor62;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor65 = null;
        restAdapter64.callbackExecutor = executor65;
        retrofit.converter.Converter converter67 = restAdapter64.converter;
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        restAdapter64.log = log68;
        builder58.log = log68;
        restAdapter50.log = log68;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.Server server73 = builder72.server;
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel77 = builder76.logLevel;
        retrofit.RestAdapter.Builder builder78 = builder72.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder80 = builder78.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter81 = builder80.build();
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter81.logLevel;
        retrofit.RequestInterceptor requestInterceptor83 = restAdapter81.requestInterceptor;
        restAdapter50.requestInterceptor = requestInterceptor83;
        builder46.requestInterceptor = requestInterceptor83;
        retrofit.RestAdapter.Builder builder86 = builder6.setRequestInterceptor(requestInterceptor83);
        retrofit.RestAdapter.Builder builder88 = builder86.setServer("hi!");
        retrofit.client.Client.Provider provider89 = builder88.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNotNull(restAdapter35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(restAdapter81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor83);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(provider89);
    }

    @Test
    public void test06647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06647");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        java.util.concurrent.Executor executor8 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        java.util.concurrent.Executor executor20 = builder17.httpExecutor;
        retrofit.RestAdapter restAdapter21 = builder17.build();
        java.util.concurrent.Executor executor22 = restAdapter21.httpExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        java.util.concurrent.Executor executor34 = builder31.httpExecutor;
        retrofit.RestAdapter restAdapter35 = builder31.build();
        java.util.concurrent.Executor executor36 = restAdapter35.httpExecutor;
        retrofit.RestAdapter.Builder builder37 = builder6.setExecutors(executor22, executor36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Builder builder49 = builder46.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter50.new RestHandler();
        java.util.concurrent.Executor executor52 = restAdapter50.httpExecutor;
        java.util.concurrent.Executor executor53 = null;
        restAdapter50.callbackExecutor = executor53;
        retrofit.client.Client.Provider provider55 = null;
        restAdapter50.clientProvider = provider55;
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter50.logLevel;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        builder58.logLevel = logLevel60;
        java.util.concurrent.Executor executor62 = null;
        builder58.callbackExecutor = executor62;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor65 = null;
        restAdapter64.callbackExecutor = executor65;
        retrofit.converter.Converter converter67 = restAdapter64.converter;
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        restAdapter64.log = log68;
        builder58.log = log68;
        restAdapter50.log = log68;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.Server server73 = builder72.server;
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel77 = builder76.logLevel;
        retrofit.RestAdapter.Builder builder78 = builder72.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder80 = builder78.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter81 = builder80.build();
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter81.logLevel;
        retrofit.RequestInterceptor requestInterceptor83 = restAdapter81.requestInterceptor;
        restAdapter50.requestInterceptor = requestInterceptor83;
        builder46.requestInterceptor = requestInterceptor83;
        retrofit.RestAdapter.Builder builder86 = builder6.setRequestInterceptor(requestInterceptor83);
        retrofit.converter.Converter converter87 = builder86.converter;
        java.util.concurrent.Executor executor88 = builder86.httpExecutor;
        retrofit.Profiler profiler89 = null;
        builder86.profiler = profiler89;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNotNull(restAdapter35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(restAdapter81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor83);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(converter87);
        org.junit.Assert.assertNotNull(executor88);
    }

    @Test
    public void test06648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06648");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler13 = builder12.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = builder14.callbackExecutor;
        retrofit.Profiler profiler16 = builder14.profiler;
        retrofit.RestAdapter.Builder builder18 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("Retrofit-Idle");
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Builder builder29 = builder18.setServer(server28);
        retrofit.RestAdapter restAdapter30 = builder29.build();
        java.util.concurrent.Executor executor31 = restAdapter30.callbackExecutor;
        builder12.callbackExecutor = executor31;
        restAdapter0.callbackExecutor = executor31;
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter0.logLevel;
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter38 = restAdapter0.converter;
        retrofit.ErrorHandler errorHandler39 = restAdapter0.errorHandler;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(requestInterceptor35);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(errorHandler39);
    }

    @Test
    public void test06649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06649");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider29 = builder22.clientProvider;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log30;
        retrofit.RestAdapter.Builder builder32 = builder21.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log30, logLevel33);
        builder0.logLevel = logLevel33;
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        retrofit.Profiler profiler37 = builder0.profiler;
        retrofit.RestAdapter.Builder builder39 = builder0.setServer("Retrofit-");
        retrofit.ErrorHandler errorHandler40 = builder39.errorHandler;
        retrofit.converter.Converter converter41 = null;
        builder39.converter = converter41;
        retrofit.Server server43 = builder39.server;
        retrofit.RestAdapter.Log log44 = builder39.log;
        retrofit.Profiler profiler45 = builder39.profiler;
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(errorHandler40);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNull(log44);
        org.junit.Assert.assertNull(profiler45);
    }

    @Test
    public void test06650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06650");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        retrofit.Profiler profiler8 = builder6.profiler;
        retrofit.RestAdapter.Builder builder10 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder17 = builder11.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder19 = builder17.setServer("Retrofit-Idle");
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Builder builder21 = builder10.setServer(server20);
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.Profiler profiler23 = builder21.profiler;
        retrofit.RestAdapter.LogLevel logLevel24 = builder21.logLevel;
        java.util.concurrent.Executor executor25 = builder21.callbackExecutor;
        java.util.concurrent.Executor executor26 = builder21.httpExecutor;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor28 = builder27.callbackExecutor;
        retrofit.Profiler profiler29 = builder27.profiler;
        retrofit.RestAdapter.Builder builder31 = builder27.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel32 = builder27.logLevel;
        java.util.concurrent.Executor executor33 = null;
        builder27.httpExecutor = executor33;
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter45 = builder44.build();
        retrofit.Profiler profiler46 = null;
        builder44.profiler = profiler46;
        retrofit.RestAdapter restAdapter48 = builder44.build();
        retrofit.client.Client.Provider provider49 = builder44.clientProvider;
        retrofit.RestAdapter.Builder builder50 = builder27.setClient(provider49);
        retrofit.RestAdapter.Builder builder51 = builder21.setClient(provider49);
        restAdapter0.clientProvider = provider49;
        retrofit.Server server53 = restAdapter0.server;
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor55 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(profiler8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(restAdapter48);
        org.junit.Assert.assertNotNull(provider49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(executor55);
    }

    @Test
    public void test06651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06651");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider9 = null;
        builder6.clientProvider = provider9;
        retrofit.Server server11 = builder6.server;
        retrofit.client.Client.Provider provider12 = builder6.clientProvider;
        java.util.concurrent.Executor executor13 = builder6.callbackExecutor;
        retrofit.RestAdapter.Log log14 = builder6.log;
        java.util.concurrent.Executor executor15 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RequestInterceptor requestInterceptor23 = null;
        builder16.requestInterceptor = requestInterceptor23;
        retrofit.RestAdapter.Log log25 = builder16.log;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        builder33.logLevel = logLevel35;
        boolean boolean37 = logLevel35.log();
        builder26.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder39 = builder16.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor40 = builder39.callbackExecutor;
        builder39.ensureSaneDefaults();
        java.util.concurrent.Executor executor42 = builder39.httpExecutor;
        builder6.callbackExecutor = executor42;
        java.util.concurrent.Executor executor44 = builder6.httpExecutor;
        retrofit.RestAdapter restAdapter45 = builder6.build();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(log25);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNotNull(restAdapter45);
    }

    @Test
    public void test06652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06652");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel23);
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter25.getLogLevel();
        java.util.concurrent.Executor executor27 = restAdapter25.httpExecutor;
        retrofit.Profiler profiler28 = restAdapter25.profiler;
        retrofit.RequestInterceptor requestInterceptor29 = restAdapter25.requestInterceptor;
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor31 = null;
        restAdapter30.callbackExecutor = executor31;
        retrofit.converter.Converter converter33 = restAdapter30.converter;
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter30.new RestHandler();
        retrofit.RestAdapter.Log log35 = restAdapter30.log;
        retrofit.client.Client.Provider provider36 = restAdapter30.clientProvider;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.client.Client.Provider provider45 = builder38.clientProvider;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        builder38.log = log46;
        retrofit.RestAdapter.Builder builder48 = builder37.setLog(log46);
        retrofit.RestAdapter.Log log49 = builder48.log;
        log49.log("");
        restAdapter30.log = log49;
        restAdapter25.log = log49;
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter25.new RestHandler();
        retrofit.ErrorHandler errorHandler55 = restAdapter25.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNull(requestInterceptor29);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNull(errorHandler55);
    }

    @Test
    public void test06653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06653");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        java.util.concurrent.Executor executor9 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Log log10 = restAdapter0.log;
        retrofit.RestAdapter.Log log11 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler12 = restAdapter0.errorHandler;
        retrofit.client.Client.Provider provider13 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler23 = builder22.errorHandler;
        retrofit.RestAdapter restAdapter24 = builder22.build();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.client.Client.Provider provider36 = builder29.clientProvider;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        builder29.log = log37;
        retrofit.RestAdapter.Builder builder39 = builder25.setLog(log37);
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter40.new RestHandler();
        java.util.concurrent.Executor executor42 = restAdapter40.httpExecutor;
        java.util.concurrent.Executor executor43 = null;
        restAdapter40.callbackExecutor = executor43;
        retrofit.ErrorHandler errorHandler45 = null;
        restAdapter40.errorHandler = errorHandler45;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter40.logLevel = logLevel47;
        builder25.logLevel = logLevel47;
        builder22.logLevel = logLevel47;
        restAdapter0.logLevel = logLevel47;
        java.util.concurrent.Executor executor52 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter0.new RestHandler();
        retrofit.Server server54 = restAdapter0.server;
        retrofit.Server server55 = restAdapter0.server;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(errorHandler23);
        org.junit.Assert.assertNotNull(restAdapter24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertNull(server55);
    }

    @Test
    public void test06654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06654");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel23);
        retrofit.RequestInterceptor requestInterceptor26 = null;
        restAdapter25.requestInterceptor = requestInterceptor26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        builder32.logLevel = logLevel34;
        java.util.concurrent.Executor executor36 = null;
        builder32.callbackExecutor = executor36;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor39 = null;
        restAdapter38.callbackExecutor = executor39;
        retrofit.converter.Converter converter41 = restAdapter38.converter;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        restAdapter38.log = log42;
        builder32.log = log42;
        builder28.log = log42;
        log42.log("Retrofit-Idle");
        restAdapter25.log = log42;
        retrofit.ErrorHandler errorHandler49 = restAdapter25.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.Log log52 = restAdapter25.log;
        retrofit.ErrorHandler errorHandler53 = restAdapter25.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(errorHandler49);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(errorHandler53);
    }

    @Test
    public void test06655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06655");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        retrofit.ErrorHandler errorHandler8 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(errorHandler8);
    }

    @Test
    public void test06656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06656");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler7 = restAdapter0.profiler;
        retrofit.Profiler profiler8 = null;
        restAdapter0.profiler = profiler8;
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor11 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test06657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06657");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        retrofit.Profiler profiler14 = builder0.profiler;
        java.util.concurrent.Executor executor15 = null;
        builder0.httpExecutor = executor15;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter17.new RestHandler();
        java.util.concurrent.Executor executor19 = restAdapter17.httpExecutor;
        java.util.concurrent.Executor executor20 = null;
        restAdapter17.callbackExecutor = executor20;
        retrofit.client.Client.Provider provider22 = null;
        restAdapter17.clientProvider = provider22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("Retrofit-Idle");
        retrofit.Server server33 = builder32.server;
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("Retrofit-Idle");
        retrofit.Server server51 = builder50.server;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = null;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel65);
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel65);
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server33, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log41, logLevel65);
        restAdapter17.log = log41;
        log41.log("Retrofit-Idle");
        builder0.log = log41;
        java.util.concurrent.Executor executor73 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(executor73);
    }

    @Test
    public void test06658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06658");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = builder8.build();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.logLevel;
        retrofit.ErrorHandler errorHandler11 = null;
        restAdapter9.errorHandler = errorHandler11;
        retrofit.client.Request request13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request14 = restAdapter9.logAndReplaceRequest(request13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06659");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = null;
        builder0.converter = converter1;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.Server server4 = builder3.server;
        retrofit.RestAdapter.Log log5 = null;
        builder3.log = log5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel8 = builder7.logLevel;
        retrofit.RestAdapter.Builder builder9 = builder3.setLogLevel(logLevel8);
        retrofit.RestAdapter.Builder builder11 = builder9.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder13 = builder11.setLog(log12);
        retrofit.Profiler profiler14 = builder13.profiler;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("Retrofit-Idle");
        retrofit.Server server24 = builder23.server;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = builder37.logLevel;
        retrofit.RestAdapter.Builder builder39 = builder33.setLogLevel(logLevel38);
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder13.setServer(server24);
        retrofit.RestAdapter.Builder builder42 = builder0.setServer(server24);
        retrofit.client.Client.Provider provider43 = null;
        java.util.concurrent.Executor executor44 = null;
        java.util.concurrent.Executor executor45 = null;
        retrofit.RequestInterceptor requestInterceptor46 = null;
        retrofit.converter.Converter converter47 = null;
        retrofit.Profiler profiler48 = null;
        retrofit.ErrorHandler errorHandler49 = null;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor51 = null;
        restAdapter50.callbackExecutor = executor51;
        retrofit.converter.Converter converter53 = restAdapter50.converter;
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        restAdapter50.log = log54;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server24, provider43, executor44, executor45, requestInterceptor46, converter47, profiler48, errorHandler49, log54, logLevel56);
        retrofit.Profiler profiler58 = restAdapter57.profiler;
        retrofit.Server server59 = restAdapter57.server;
        retrofit.client.Client.Provider provider60 = restAdapter57.clientProvider;
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler58);
        org.junit.Assert.assertNotNull(server59);
        org.junit.Assert.assertNull(provider60);
    }

    @Test
    public void test06660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06660");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = null;
        restAdapter0.errorHandler = errorHandler3;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor6 = null;
        restAdapter0.httpExecutor = executor6;
        retrofit.ErrorHandler errorHandler8 = restAdapter0.errorHandler;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor10 = null;
        restAdapter9.requestInterceptor = requestInterceptor10;
        retrofit.Profiler profiler12 = null;
        restAdapter9.profiler = profiler12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = builder14.callbackExecutor;
        retrofit.Profiler profiler16 = builder14.profiler;
        retrofit.RestAdapter.Builder builder18 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("Retrofit-Idle");
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Builder builder29 = builder18.setServer(server28);
        retrofit.RestAdapter restAdapter30 = builder29.build();
        java.util.concurrent.Executor executor31 = restAdapter30.callbackExecutor;
        restAdapter9.callbackExecutor = executor31;
        restAdapter0.httpExecutor = executor31;
        retrofit.Profiler profiler34 = null;
        restAdapter0.profiler = profiler34;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor37 = null;
        restAdapter0.httpExecutor = executor37;
        retrofit.Profiler profiler39 = restAdapter0.profiler;
        retrofit.client.Client.Provider provider40 = restAdapter0.clientProvider;
        java.util.concurrent.Executor executor41 = restAdapter0.callbackExecutor;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(errorHandler8);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(profiler39);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNull(executor41);
    }

    @Test
    public void test06661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06661");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        builder4.logLevel = logLevel6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.Server server9 = builder8.server;
        retrofit.RestAdapter.Log log10 = null;
        builder8.log = log10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.RestAdapter.Builder builder14 = builder8.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("Retrofit-Idle");
        retrofit.Server server17 = builder16.server;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel31);
        retrofit.client.Client.Provider provider33 = builder26.clientProvider;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log34;
        retrofit.RestAdapter.Builder builder36 = builder25.setLog(log34);
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log34, logLevel37);
        builder4.logLevel = logLevel37;
        retrofit.RestAdapter.LogLevel logLevel40 = builder4.logLevel;
        retrofit.Profiler profiler41 = builder4.profiler;
        retrofit.RestAdapter.Builder builder43 = builder4.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter53 = builder52.build();
        retrofit.Profiler profiler54 = null;
        builder52.profiler = profiler54;
        retrofit.Profiler profiler56 = null;
        builder52.profiler = profiler56;
        retrofit.converter.Converter converter58 = builder52.converter;
        builder43.converter = converter58;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor61 = null;
        restAdapter60.callbackExecutor = executor61;
        retrofit.RestAdapter.Log log63 = restAdapter60.log;
        retrofit.converter.Converter converter64 = restAdapter60.converter;
        java.util.concurrent.Executor executor65 = null;
        restAdapter60.callbackExecutor = executor65;
        java.util.concurrent.Executor executor67 = null;
        restAdapter60.httpExecutor = executor67;
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter60.new RestHandler();
        retrofit.converter.Converter converter70 = restAdapter60.converter;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("Retrofit-Idle");
        retrofit.Server server80 = builder79.server;
        retrofit.Profiler profiler81 = null;
        builder79.profiler = profiler81;
        retrofit.Profiler profiler83 = null;
        builder79.profiler = profiler83;
        retrofit.RestAdapter restAdapter85 = builder79.build();
        retrofit.ErrorHandler errorHandler86 = builder79.errorHandler;
        restAdapter60.errorHandler = errorHandler86;
        retrofit.RestAdapter.Builder builder88 = builder43.setErrorHandler(errorHandler86);
        restAdapter0.errorHandler = errorHandler86;
        java.util.concurrent.Executor executor90 = restAdapter0.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(restAdapter53);
        org.junit.Assert.assertNotNull(converter58);
        org.junit.Assert.assertNull(log63);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertNull(converter70);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNotNull(restAdapter85);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(executor90);
    }

    @Test
    public void test06662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06662");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.Server server32 = builder31.server;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel46);
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel46);
        restAdapter0.logLevel = logLevel46;
        retrofit.converter.Converter converter51 = null;
        restAdapter0.converter = converter51;
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor55 = restAdapter0.httpExecutor;
        retrofit.client.Response response57 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response59 = restAdapter0.logAndReplaceResponse("hi!", response57, (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(executor55);
    }

    @Test
    public void test06663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06663");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RequestInterceptor requestInterceptor16 = builder15.requestInterceptor;
        retrofit.converter.Converter converter17 = null;
        builder15.converter = converter17;
        java.util.concurrent.Executor executor19 = builder15.callbackExecutor;
        retrofit.Profiler profiler20 = builder15.profiler;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNull(profiler20);
    }

    @Test
    public void test06664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06664");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider10 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor12 = restAdapter0.httpExecutor;
        retrofit.Server server13 = restAdapter0.server;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(server13);
    }

    @Test
    public void test06665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06665");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler9 = builder8.errorHandler;
        retrofit.RestAdapter restAdapter10 = builder8.build();
        java.util.concurrent.Executor executor11 = null;
        restAdapter10.httpExecutor = executor11;
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter10.new RestHandler();
        retrofit.client.Client.Provider provider14 = null;
        restAdapter10.clientProvider = provider14;
        retrofit.Profiler profiler16 = null;
        restAdapter10.profiler = profiler16;
        retrofit.ErrorHandler errorHandler18 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor20 = builder19.callbackExecutor;
        retrofit.Profiler profiler21 = builder19.profiler;
        retrofit.RestAdapter.Builder builder23 = builder19.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("Retrofit-Idle");
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Builder builder34 = builder23.setServer(server33);
        retrofit.RestAdapter restAdapter35 = builder34.build();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        builder43.logLevel = logLevel45;
        boolean boolean47 = logLevel45.log();
        builder36.logLevel = logLevel45;
        retrofit.RestAdapter.LogLevel logLevel49 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder34.setLogLevel(logLevel49);
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor52 = null;
        restAdapter51.callbackExecutor = executor52;
        retrofit.converter.Converter converter54 = restAdapter51.converter;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        restAdapter51.log = log55;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter51.logLevel = logLevel57;
        builder50.logLevel = logLevel57;
        retrofit.RestAdapter.LogLevel logLevel60 = builder50.logLevel;
        restAdapter10.logLevel = logLevel60;
        java.lang.Throwable throwable62 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable62, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNotNull(restAdapter10);
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(restAdapter35);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test06666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06666");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        java.util.concurrent.Executor executor4 = restAdapter0.httpExecutor;
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log9 = restAdapter0.log;
        retrofit.Profiler profiler10 = null;
        restAdapter0.profiler = profiler10;
        retrofit.RestAdapter.Log log12 = restAdapter0.log;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(log12);
    }

    @Test
    public void test06667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06667");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel6 = null;
        restAdapter0.logLevel = logLevel6;
        java.util.concurrent.Executor executor8 = restAdapter0.callbackExecutor;
        retrofit.Server server9 = restAdapter0.server;
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertNull(logLevel11);
    }

    @Test
    public void test06668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06668");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = null;
        restAdapter0.converter = converter3;
        java.util.concurrent.Executor executor5 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.RequestInterceptor requestInterceptor9 = restAdapter0.requestInterceptor;
        retrofit.Profiler profiler10 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        retrofit.Server server12 = restAdapter0.server;
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler15 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertNull(logLevel16);
    }

    @Test
    public void test06669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06669");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        java.util.concurrent.Executor executor12 = null;
        builder8.httpExecutor = executor12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.logLevel;
        builder8.logLevel = logLevel24;
        retrofit.RestAdapter.LogLevel logLevel26 = builder8.logLevel;
        java.util.concurrent.Executor executor27 = builder8.httpExecutor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor27);
    }

    @Test
    public void test06670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06670");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.Server server32 = builder31.server;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel46);
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel46);
        restAdapter0.server = server14;
        retrofit.Profiler profiler51 = restAdapter0.profiler;
        retrofit.RestAdapter.Log log52 = restAdapter0.log;
        retrofit.RestAdapter.Log log53 = restAdapter0.log;
        java.lang.Throwable throwable54 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable54, "Retrofit-Idle");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertNull(log52);
        org.junit.Assert.assertNull(log53);
    }

    @Test
    public void test06671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06671");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        java.util.concurrent.Executor executor8 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        builder16.logLevel = logLevel18;
        boolean boolean20 = logLevel18.log();
        builder9.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel22 = builder9.logLevel;
        retrofit.Profiler profiler23 = builder9.profiler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = builder24.callbackExecutor;
        retrofit.Profiler profiler26 = builder24.profiler;
        retrofit.RestAdapter.Builder builder28 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Builder builder39 = builder28.setServer(server38);
        retrofit.RestAdapter.Builder builder40 = builder9.setServer(server38);
        retrofit.RestAdapter.Builder builder41 = builder6.setServer(server38);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        java.util.concurrent.Executor executor49 = builder48.callbackExecutor;
        java.util.concurrent.Executor executor50 = builder48.callbackExecutor;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        retrofit.RestAdapter.Builder builder57 = builder51.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder59 = builder57.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder61 = builder59.setLog(log60);
        java.util.concurrent.Executor executor62 = builder59.httpExecutor;
        retrofit.RestAdapter restAdapter63 = builder59.build();
        java.util.concurrent.Executor executor64 = restAdapter63.httpExecutor;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.Server server66 = builder65.server;
        retrofit.RestAdapter.Log log67 = null;
        builder65.log = log67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = builder69.logLevel;
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder73 = builder71.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder75 = builder73.setLog(log74);
        java.util.concurrent.Executor executor76 = builder73.httpExecutor;
        retrofit.RestAdapter restAdapter77 = builder73.build();
        java.util.concurrent.Executor executor78 = restAdapter77.httpExecutor;
        retrofit.RestAdapter.Builder builder79 = builder48.setExecutors(executor64, executor78);
        builder41.httpExecutor = executor78;
        retrofit.RestAdapter restAdapter81 = builder41.build();
        retrofit.RestAdapter.RestHandler restHandler82 = restAdapter81.new RestHandler();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(executor49);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(executor62);
        org.junit.Assert.assertNotNull(restAdapter63);
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(executor76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(restAdapter81);
    }

    @Test
    public void test06672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06672");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder0.requestInterceptor = requestInterceptor13;
        java.util.concurrent.Executor executor15 = null;
        builder0.httpExecutor = executor15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.client.Client.Provider provider25 = builder18.clientProvider;
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        builder18.log = log26;
        retrofit.RestAdapter.Builder builder28 = builder17.setLog(log26);
        retrofit.converter.Converter converter29 = null;
        builder17.converter = converter29;
        retrofit.RestAdapter.Log log31 = builder17.log;
        retrofit.RestAdapter.Builder builder32 = builder0.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.ErrorHandler errorHandler34 = builder32.errorHandler;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler44 = builder43.errorHandler;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = builder45.callbackExecutor;
        retrofit.Profiler profiler47 = builder45.profiler;
        retrofit.RestAdapter.Builder builder49 = builder45.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("Retrofit-Idle");
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Builder builder60 = builder49.setServer(server59);
        retrofit.RestAdapter restAdapter61 = builder60.build();
        java.util.concurrent.Executor executor62 = restAdapter61.callbackExecutor;
        builder43.callbackExecutor = executor62;
        builder32.httpExecutor = executor62;
        retrofit.client.Client.Provider provider65 = builder32.clientProvider;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.Server server67 = builder66.server;
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = builder70.logLevel;
        retrofit.RestAdapter.Builder builder72 = builder66.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder74 = builder72.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder76 = builder74.setLog(log75);
        java.util.concurrent.Executor executor77 = builder74.httpExecutor;
        retrofit.RestAdapter.Builder builder79 = builder74.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel80 = builder74.logLevel;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        builder74.logLevel = logLevel81;
        retrofit.Profiler profiler83 = null;
        builder74.profiler = profiler83;
        retrofit.RestAdapter.LogLevel logLevel85 = builder74.logLevel;
        retrofit.RestAdapter.Builder builder86 = builder32.setLogLevel(logLevel85);
        retrofit.Profiler profiler87 = null;
        builder86.profiler = profiler87;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler34);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(errorHandler44);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNull(profiler47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(server59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(executor77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test06673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06673");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter5 = builder4.converter;
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("Retrofit-Idle");
        retrofit.Server server8 = builder4.server;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        builder17.logLevel = logLevel19;
        boolean boolean21 = logLevel19.log();
        builder10.logLevel = logLevel19;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        builder10.requestInterceptor = requestInterceptor23;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter25.new RestHandler();
        retrofit.ErrorHandler errorHandler27 = null;
        restAdapter25.errorHandler = errorHandler27;
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter25.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor31 = restAdapter25.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter25.logLevel;
        retrofit.Profiler profiler33 = restAdapter25.profiler;
        retrofit.Server server34 = restAdapter25.server;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder39.setLogLevel(logLevel44);
        retrofit.client.Client.Provider provider46 = builder39.clientProvider;
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        builder39.log = log47;
        retrofit.RestAdapter.Builder builder49 = builder35.setLog(log47);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.Server server55 = builder54.server;
        retrofit.RestAdapter.Log log56 = null;
        builder54.log = log56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = builder58.logLevel;
        retrofit.RestAdapter.Builder builder60 = builder54.setLogLevel(logLevel59);
        retrofit.client.Client.Provider provider61 = builder54.clientProvider;
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        builder54.log = log62;
        retrofit.RestAdapter.Builder builder64 = builder50.setLog(log62);
        retrofit.RestAdapter.Builder builder65 = builder35.setLog(log62);
        builder65.ensureSaneDefaults();
        java.util.concurrent.Executor executor67 = builder65.callbackExecutor;
        restAdapter25.httpExecutor = executor67;
        builder10.callbackExecutor = executor67;
        builder4.callbackExecutor = executor67;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(requestInterceptor31);
        org.junit.Assert.assertNull(logLevel32);
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(executor67);
    }

    @Test
    public void test06674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06674");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.Profiler profiler11 = builder10.profiler;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("Retrofit-Idle");
        retrofit.Server server21 = builder20.server;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder10.setServer(server21);
        retrofit.converter.Converter converter39 = null;
        builder10.converter = converter39;
        retrofit.converter.Converter converter41 = null;
        builder10.converter = converter41;
        retrofit.RestAdapter.Log log43 = builder10.log;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("Retrofit-Idle");
        retrofit.Server server55 = builder54.server;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider71 = builder64.clientProvider;
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log72;
        retrofit.RestAdapter.Builder builder74 = builder63.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log72, logLevel75);
        retrofit.RestAdapter.Builder builder77 = builder44.setServer(server55);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.Server server79 = builder78.server;
        retrofit.RestAdapter.Log log80 = null;
        builder78.log = log80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = builder82.logLevel;
        retrofit.RestAdapter.Builder builder84 = builder78.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder86 = builder84.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter87 = builder86.build();
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter87.logLevel;
        retrofit.RequestInterceptor requestInterceptor89 = restAdapter87.requestInterceptor;
        retrofit.RestAdapter.Builder builder90 = builder77.setRequestInterceptor(requestInterceptor89);
        retrofit.RestAdapter.Builder builder91 = builder10.setRequestInterceptor(requestInterceptor89);
        retrofit.RestAdapter.Log log92 = builder10.log;
        retrofit.RestAdapter restAdapter93 = builder10.build();
        retrofit.client.Client.Provider provider94 = builder10.clientProvider;
        retrofit.Profiler profiler95 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder96 = builder10.setProfiler(profiler95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(restAdapter87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(log92);
        org.junit.Assert.assertNotNull(restAdapter93);
        org.junit.Assert.assertNotNull(provider94);
    }

    @Test
    public void test06675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06675");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = builder6.build();
        retrofit.Profiler profiler10 = builder6.profiler;
        retrofit.RestAdapter.Log log11 = builder6.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertNotNull(log11);
    }

    @Test
    public void test06676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06676");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        java.util.concurrent.Executor executor6 = builder0.httpExecutor;
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor8 = null;
        restAdapter7.httpExecutor = executor8;
        java.util.concurrent.Executor executor10 = null;
        restAdapter7.httpExecutor = executor10;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter7.new RestHandler();
        retrofit.converter.Converter converter13 = restAdapter7.converter;
        retrofit.client.Client.Provider provider14 = null;
        restAdapter7.clientProvider = provider14;
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter7.new RestHandler();
        retrofit.Server server18 = restAdapter7.server;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor20 = null;
        restAdapter19.callbackExecutor = executor20;
        retrofit.RestAdapter.Log log22 = restAdapter19.log;
        retrofit.converter.Converter converter23 = restAdapter19.converter;
        java.util.concurrent.Executor executor24 = null;
        restAdapter19.callbackExecutor = executor24;
        java.util.concurrent.Executor executor26 = null;
        restAdapter19.httpExecutor = executor26;
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter19.new RestHandler();
        retrofit.converter.Converter converter29 = restAdapter19.converter;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder36.setServer("Retrofit-Idle");
        retrofit.Server server39 = builder38.server;
        retrofit.Profiler profiler40 = null;
        builder38.profiler = profiler40;
        retrofit.Profiler profiler42 = null;
        builder38.profiler = profiler42;
        retrofit.RestAdapter restAdapter44 = builder38.build();
        retrofit.ErrorHandler errorHandler45 = builder38.errorHandler;
        restAdapter19.errorHandler = errorHandler45;
        restAdapter7.errorHandler = errorHandler45;
        retrofit.RestAdapter.Builder builder48 = builder0.setErrorHandler(errorHandler45);
        retrofit.ErrorHandler errorHandler49 = builder0.errorHandler;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(errorHandler45);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(errorHandler49);
    }

    @Test
    public void test06677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06677");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor5 = restAdapter0.callbackExecutor;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(executor6);
    }

    @Test
    public void test06678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06678");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RequestInterceptor requestInterceptor16 = builder15.requestInterceptor;
        retrofit.converter.Converter converter17 = null;
        builder15.converter = converter17;
        retrofit.converter.Converter converter19 = builder15.converter;
        retrofit.ErrorHandler errorHandler20 = null;
        builder15.errorHandler = errorHandler20;
        builder15.ensureSaneDefaults();
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNull(converter19);
    }

    @Test
    public void test06679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06679");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.Profiler profiler17 = builder15.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder15.setServer("Retrofit-Idle");
        java.util.concurrent.Executor executor21 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.client.Client.Provider provider30 = builder23.clientProvider;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        builder23.log = log31;
        retrofit.RestAdapter.Builder builder33 = builder22.setLog(log31);
        retrofit.Profiler profiler34 = builder33.profiler;
        retrofit.converter.Converter converter35 = null;
        builder33.converter = converter35;
        retrofit.ErrorHandler errorHandler37 = builder33.errorHandler;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = builder33.setLogLevel(logLevel43);
        builder20.logLevel = logLevel43;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        java.util.concurrent.Executor executor54 = builder53.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor55 = builder53.requestInterceptor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter65 = builder64.build();
        retrofit.Profiler profiler66 = null;
        builder64.profiler = profiler66;
        retrofit.Profiler profiler68 = null;
        builder64.profiler = profiler68;
        retrofit.converter.Converter converter70 = builder64.converter;
        retrofit.RestAdapter.Builder builder71 = builder53.setConverter(converter70);
        retrofit.RestAdapter.Builder builder72 = builder20.setConverter(converter70);
        retrofit.client.Client.Provider provider73 = null;
        builder72.clientProvider = provider73;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(profiler34);
        org.junit.Assert.assertNull(errorHandler37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNull(requestInterceptor55);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(converter70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test06680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06680");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = builder4.callbackExecutor;
        retrofit.Profiler profiler6 = builder4.profiler;
        retrofit.RestAdapter.Builder builder8 = builder4.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("Retrofit-Idle");
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Builder builder19 = builder8.setServer(server18);
        retrofit.RestAdapter restAdapter20 = builder19.build();
        java.util.concurrent.Executor executor21 = restAdapter20.callbackExecutor;
        builder0.httpExecutor = executor21;
        retrofit.converter.Converter converter23 = builder0.converter;
        retrofit.Server server24 = builder0.server;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.Profiler profiler35 = null;
        builder33.profiler = profiler35;
        java.util.concurrent.Executor executor37 = builder33.httpExecutor;
        retrofit.Server server38 = builder33.server;
        java.util.concurrent.Executor executor39 = builder33.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor40 = builder33.requestInterceptor;
        builder0.requestInterceptor = requestInterceptor40;
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(restAdapter20);
        org.junit.Assert.assertNotNull(executor21);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNotNull(requestInterceptor40);
    }

    @Test
    public void test06681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06681");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.ErrorHandler errorHandler7 = null;
        restAdapter0.errorHandler = errorHandler7;
        retrofit.client.Client.Provider provider9 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler19 = builder18.errorHandler;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor21 = builder20.callbackExecutor;
        retrofit.Profiler profiler22 = builder20.profiler;
        retrofit.RestAdapter.Builder builder24 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("Retrofit-Idle");
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Builder builder35 = builder24.setServer(server34);
        retrofit.RestAdapter restAdapter36 = builder35.build();
        java.util.concurrent.Executor executor37 = restAdapter36.callbackExecutor;
        builder18.callbackExecutor = executor37;
        restAdapter0.callbackExecutor = executor37;
        retrofit.Server server40 = restAdapter0.server;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor42 = null;
        restAdapter41.httpExecutor = executor42;
        java.util.concurrent.Executor executor44 = null;
        restAdapter41.httpExecutor = executor44;
        retrofit.client.Client.Provider provider46 = null;
        restAdapter41.clientProvider = provider46;
        retrofit.ErrorHandler errorHandler48 = restAdapter41.errorHandler;
        retrofit.converter.Converter converter49 = null;
        restAdapter41.converter = converter49;
        retrofit.RequestInterceptor requestInterceptor51 = restAdapter41.requestInterceptor;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = builder52.callbackExecutor;
        retrofit.Profiler profiler54 = builder52.profiler;
        builder52.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter65 = builder64.build();
        retrofit.converter.Converter converter66 = restAdapter65.converter;
        builder52.converter = converter66;
        restAdapter41.converter = converter66;
        restAdapter0.converter = converter66;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.Server server71 = builder70.server;
        retrofit.RestAdapter.Log log72 = null;
        builder70.log = log72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = builder74.logLevel;
        retrofit.RestAdapter.Builder builder76 = builder70.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder80 = builder78.setLog(log79);
        java.util.concurrent.Executor executor81 = builder78.httpExecutor;
        java.util.concurrent.Executor executor82 = null;
        builder78.httpExecutor = executor82;
        retrofit.RestAdapter.LogLevel logLevel84 = builder78.logLevel;
        builder78.ensureSaneDefaults();
        retrofit.Server server86 = builder78.server;
        restAdapter0.server = server86;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(executor37);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertNull(errorHandler48);
        org.junit.Assert.assertNull(requestInterceptor51);
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertNull(profiler54);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(converter66);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNull(executor81);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server86);
    }

    @Test
    public void test06682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06682");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler6 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log33;
        retrofit.RestAdapter.Builder builder35 = builder24.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log33, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder0.setLog(log33);
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler49 = builder48.errorHandler;
        retrofit.RestAdapter restAdapter50 = builder48.build();
        java.util.concurrent.Executor executor51 = null;
        restAdapter50.httpExecutor = executor51;
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter50.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter50.new RestHandler();
        retrofit.ErrorHandler errorHandler55 = restAdapter50.errorHandler;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor57 = null;
        restAdapter56.callbackExecutor = executor57;
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.converter.Converter converter60 = restAdapter56.converter;
        retrofit.RestAdapter.RestHandler restHandler61 = restAdapter56.new RestHandler();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = builder62.logLevel;
        restAdapter56.logLevel = logLevel63;
        restAdapter50.setLogLevel(logLevel63);
        retrofit.Profiler profiler66 = null;
        restAdapter50.profiler = profiler66;
        retrofit.client.Client.Provider provider68 = restAdapter50.clientProvider;
        builder38.clientProvider = provider68;
        retrofit.Server server70 = builder38.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(errorHandler49);
        org.junit.Assert.assertNotNull(restAdapter50);
        org.junit.Assert.assertNotNull(errorHandler55);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNull(server70);
    }

    @Test
    public void test06683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06683");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.Server server32 = builder31.server;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel46);
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel46);
        restAdapter0.logLevel = logLevel46;
        retrofit.converter.Converter converter51 = null;
        restAdapter0.converter = converter51;
        retrofit.Profiler profiler53 = restAdapter0.profiler;
        retrofit.Profiler profiler54 = null;
        restAdapter0.profiler = profiler54;
        retrofit.Profiler profiler56 = null;
        restAdapter0.profiler = profiler56;
        retrofit.client.Request request58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request59 = restAdapter0.logAndReplaceRequest(request58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(profiler53);
    }

    @Test
    public void test06684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06684");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        java.util.concurrent.Executor executor12 = null;
        builder8.httpExecutor = executor12;
        retrofit.RestAdapter.LogLevel logLevel14 = builder8.logLevel;
        retrofit.Profiler profiler15 = builder8.profiler;
        retrofit.client.Client.Provider provider16 = builder8.clientProvider;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        builder24.logLevel = logLevel26;
        boolean boolean28 = logLevel26.log();
        builder17.logLevel = logLevel26;
        retrofit.RestAdapter.LogLevel logLevel30 = builder17.logLevel;
        retrofit.Profiler profiler31 = builder17.profiler;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor33 = null;
        restAdapter32.callbackExecutor = executor33;
        retrofit.RestAdapter.Log log35 = restAdapter32.log;
        retrofit.converter.Converter converter36 = restAdapter32.converter;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor38 = builder37.callbackExecutor;
        retrofit.Profiler profiler39 = builder37.profiler;
        retrofit.RestAdapter.Builder builder41 = builder37.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("Retrofit-Idle");
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Builder builder52 = builder41.setServer(server51);
        restAdapter32.server = server51;
        retrofit.RestAdapter.Builder builder54 = builder17.setServer(server51);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("Retrofit-Idle");
        retrofit.Server server64 = builder63.server;
        retrofit.Profiler profiler65 = null;
        builder63.profiler = profiler65;
        retrofit.Profiler profiler67 = null;
        builder63.profiler = profiler67;
        retrofit.RestAdapter restAdapter69 = builder63.build();
        retrofit.ErrorHandler errorHandler70 = builder63.errorHandler;
        retrofit.RestAdapter.Builder builder71 = builder54.setErrorHandler(errorHandler70);
        retrofit.RestAdapter restAdapter72 = builder71.build();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter72.getLogLevel();
        boolean boolean74 = logLevel73.log();
        retrofit.RestAdapter.Builder builder75 = builder8.setLogLevel(logLevel73);
        retrofit.RestAdapter.Log log76 = builder75.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertNull(log35);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNull(profiler39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(restAdapter69);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log76);
    }

    @Test
    public void test06685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06685");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter4 = null;
        restAdapter0.converter = converter4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor7 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Log log8 = restAdapter0.log;
        retrofit.Profiler profiler9 = null;
        restAdapter0.profiler = profiler9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        builder11.logLevel = logLevel13;
        boolean boolean15 = logLevel13.log();
        restAdapter0.logLevel = logLevel13;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = builder21.server;
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        retrofit.RestAdapter.Builder builder27 = builder21.setLogLevel(logLevel26);
        retrofit.client.Client.Provider provider28 = builder21.clientProvider;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log29;
        retrofit.RestAdapter.Builder builder31 = builder17.setLog(log29);
        retrofit.Server server32 = builder17.server;
        java.util.concurrent.Executor executor33 = null;
        builder17.callbackExecutor = executor33;
        retrofit.converter.Converter converter35 = builder17.converter;
        retrofit.ErrorHandler errorHandler36 = builder17.errorHandler;
        retrofit.ErrorHandler errorHandler37 = null;
        builder17.errorHandler = errorHandler37;
        builder17.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter40.logLevel;
        retrofit.ErrorHandler errorHandler43 = null;
        restAdapter40.errorHandler = errorHandler43;
        java.util.concurrent.Executor executor45 = restAdapter40.httpExecutor;
        java.util.concurrent.Executor executor46 = null;
        restAdapter40.httpExecutor = executor46;
        retrofit.ErrorHandler errorHandler48 = restAdapter40.errorHandler;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor50 = null;
        restAdapter49.requestInterceptor = requestInterceptor50;
        retrofit.Profiler profiler52 = null;
        restAdapter49.profiler = profiler52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor55 = builder54.callbackExecutor;
        retrofit.Profiler profiler56 = builder54.profiler;
        retrofit.RestAdapter.Builder builder58 = builder54.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = builder63.logLevel;
        retrofit.RestAdapter.Builder builder65 = builder59.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder67 = builder65.setServer("Retrofit-Idle");
        retrofit.Server server68 = builder67.server;
        retrofit.RestAdapter.Builder builder69 = builder58.setServer(server68);
        retrofit.RestAdapter restAdapter70 = builder69.build();
        java.util.concurrent.Executor executor71 = restAdapter70.callbackExecutor;
        restAdapter49.callbackExecutor = executor71;
        restAdapter40.httpExecutor = executor71;
        builder17.callbackExecutor = executor71;
        retrofit.RestAdapter.Log log75 = builder17.log;
        restAdapter0.log = log75;
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler79 = restAdapter0.errorHandler;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(errorHandler36);
        org.junit.Assert.assertNull(logLevel42);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNull(errorHandler48);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNull(profiler56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(server68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNotNull(executor71);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler79);
    }

    @Test
    public void test06686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06686");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = null;
        restAdapter0.converter = converter3;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.logLevel;
        retrofit.RestAdapter.Log log8 = restAdapter0.log;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.client.Client.Provider provider17 = builder10.clientProvider;
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        builder10.log = log18;
        retrofit.RestAdapter.Builder builder20 = builder9.setLog(log18);
        retrofit.RestAdapter.Log log21 = builder20.log;
        log21.log("");
        restAdapter0.log = log21;
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter0.logLevel;
        retrofit.Server server26 = restAdapter0.server;
        retrofit.Profiler profiler27 = restAdapter0.profiler;
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertNull(profiler27);
    }

    @Test
    public void test06687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06687");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = builder0.errorHandler;
        retrofit.converter.Converter converter2 = builder0.converter;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-");
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.Server server7 = builder6.server;
        retrofit.RestAdapter.Log log8 = null;
        builder6.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = builder10.logLevel;
        retrofit.RestAdapter.Builder builder12 = builder6.setLogLevel(logLevel11);
        retrofit.client.Client.Provider provider13 = builder6.clientProvider;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        builder6.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.Server server25 = builder24.server;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.Server server43 = builder42.server;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel57);
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel57);
        builder6.log = log33;
        retrofit.RestAdapter.LogLevel logLevel62 = builder6.logLevel;
        builder0.logLevel = logLevel62;
        retrofit.client.Client client64 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder65 = builder0.setClient(client64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06688");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.Profiler profiler17 = builder15.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = builder15.logLevel;
        java.util.concurrent.Executor executor19 = builder15.callbackExecutor;
        retrofit.RestAdapter.Log log20 = builder15.log;
        retrofit.Server server21 = builder15.server;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(server21);
    }

    @Test
    public void test06689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06689");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.Server server2 = builder1.server;
        retrofit.RestAdapter.Log log3 = null;
        builder1.log = log3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder7 = builder1.setLogLevel(logLevel6);
        retrofit.client.Client.Provider provider8 = builder1.clientProvider;
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        builder1.log = log9;
        retrofit.RestAdapter.Builder builder11 = builder0.setLog(log9);
        retrofit.Profiler profiler12 = builder0.profiler;
        retrofit.RequestInterceptor requestInterceptor13 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        java.util.concurrent.Executor executor21 = builder20.callbackExecutor;
        java.util.concurrent.Executor executor22 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        builder30.logLevel = logLevel32;
        boolean boolean34 = logLevel32.log();
        builder23.logLevel = logLevel32;
        retrofit.RestAdapter.LogLevel logLevel36 = builder23.logLevel;
        retrofit.Profiler profiler37 = builder23.profiler;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = builder38.callbackExecutor;
        retrofit.Profiler profiler40 = builder38.profiler;
        retrofit.RestAdapter.Builder builder42 = builder38.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.Server server44 = builder43.server;
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel48 = builder47.logLevel;
        retrofit.RestAdapter.Builder builder49 = builder43.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("Retrofit-Idle");
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Builder builder53 = builder42.setServer(server52);
        retrofit.RestAdapter.Builder builder54 = builder23.setServer(server52);
        retrofit.RestAdapter.Builder builder55 = builder20.setServer(server52);
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.Server server68 = builder67.server;
        retrofit.RestAdapter.Log log69 = null;
        builder67.log = log69;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel72 = builder71.logLevel;
        retrofit.RestAdapter.Builder builder73 = builder67.setLogLevel(logLevel72);
        retrofit.client.Client.Provider provider74 = builder67.clientProvider;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        builder67.log = log75;
        retrofit.RestAdapter.Builder builder77 = builder63.setLog(log75);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.Server server79 = builder78.server;
        retrofit.RestAdapter.Log log80 = null;
        builder78.log = log80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = builder82.logLevel;
        retrofit.RestAdapter.Builder builder84 = builder78.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder86 = builder84.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter87 = builder86.build();
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter87.logLevel;
        retrofit.RestAdapter restAdapter89 = new retrofit.RestAdapter(server52, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log75, logLevel88);
        retrofit.RestAdapter.Log log90 = restAdapter89.log;
        builder0.log = log90;
        log90.log("Retrofit-");
        org.junit.Assert.assertNull(server2);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(server52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(provider74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(restAdapter87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log90);
    }

    @Test
    public void test06690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06690");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.Server server2 = builder1.server;
        retrofit.RestAdapter.Log log3 = null;
        builder1.log = log3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder7 = builder1.setLogLevel(logLevel6);
        retrofit.client.Client.Provider provider8 = builder1.clientProvider;
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        builder1.log = log9;
        retrofit.RestAdapter.Builder builder11 = builder0.setLog(log9);
        retrofit.Profiler profiler12 = builder0.profiler;
        retrofit.RequestInterceptor requestInterceptor13 = builder0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel14 = builder0.logLevel;
        retrofit.client.Client.Provider provider15 = builder0.clientProvider;
        retrofit.Server server16 = builder0.server;
        org.junit.Assert.assertNull(server2);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(server16);
    }

    @Test
    public void test06691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06691");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.client.Client.Provider provider4 = null;
        builder0.clientProvider = provider4;
        retrofit.Server server6 = builder0.server;
        retrofit.RestAdapter.Log log7 = builder0.log;
        retrofit.Profiler profiler8 = null;
        builder0.profiler = profiler8;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor12 = restAdapter10.httpExecutor;
        java.util.concurrent.Executor executor13 = null;
        restAdapter10.callbackExecutor = executor13;
        retrofit.client.Client.Provider provider15 = null;
        restAdapter10.clientProvider = provider15;
        java.util.concurrent.Executor executor17 = null;
        restAdapter10.callbackExecutor = executor17;
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter10.logLevel;
        retrofit.Server server20 = null;
        restAdapter10.server = server20;
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter10.new RestHandler();
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter24.new RestHandler();
        retrofit.ErrorHandler errorHandler26 = null;
        restAdapter24.errorHandler = errorHandler26;
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor31 = builder30.callbackExecutor;
        retrofit.Profiler profiler32 = builder30.profiler;
        retrofit.RestAdapter.Builder builder34 = builder30.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("Retrofit-Idle");
        retrofit.Server server44 = builder43.server;
        retrofit.RestAdapter.Builder builder45 = builder34.setServer(server44);
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.Profiler profiler47 = builder45.profiler;
        retrofit.RestAdapter.LogLevel logLevel48 = builder45.logLevel;
        java.util.concurrent.Executor executor49 = builder45.callbackExecutor;
        java.util.concurrent.Executor executor50 = builder45.httpExecutor;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor52 = builder51.callbackExecutor;
        retrofit.Profiler profiler53 = builder51.profiler;
        retrofit.RestAdapter.Builder builder55 = builder51.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel56 = builder51.logLevel;
        java.util.concurrent.Executor executor57 = null;
        builder51.httpExecutor = executor57;
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder68 = builder66.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter69 = builder68.build();
        retrofit.Profiler profiler70 = null;
        builder68.profiler = profiler70;
        retrofit.RestAdapter restAdapter72 = builder68.build();
        retrofit.client.Client.Provider provider73 = builder68.clientProvider;
        retrofit.RestAdapter.Builder builder74 = builder51.setClient(provider73);
        retrofit.RestAdapter.Builder builder75 = builder45.setClient(provider73);
        restAdapter24.clientProvider = provider73;
        restAdapter10.clientProvider = provider73;
        retrofit.RestAdapter.Builder builder78 = builder0.setClient(provider73);
        retrofit.converter.Converter converter79 = builder0.converter;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertNull(profiler47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor49);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(restAdapter69);
        org.junit.Assert.assertNotNull(restAdapter72);
        org.junit.Assert.assertNotNull(provider73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(converter79);
    }

    @Test
    public void test06692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06692");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        retrofit.RestAdapter restAdapter12 = builder8.build();
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter13.logLevel;
        retrofit.ErrorHandler errorHandler16 = null;
        restAdapter13.errorHandler = errorHandler16;
        java.util.concurrent.Executor executor18 = restAdapter13.httpExecutor;
        java.util.concurrent.Executor executor19 = null;
        restAdapter13.httpExecutor = executor19;
        retrofit.ErrorHandler errorHandler21 = restAdapter13.errorHandler;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor23 = null;
        restAdapter22.requestInterceptor = requestInterceptor23;
        retrofit.Profiler profiler25 = null;
        restAdapter22.profiler = profiler25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor28 = builder27.callbackExecutor;
        retrofit.Profiler profiler29 = builder27.profiler;
        retrofit.RestAdapter.Builder builder31 = builder27.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("Retrofit-Idle");
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Builder builder42 = builder31.setServer(server41);
        retrofit.RestAdapter restAdapter43 = builder42.build();
        java.util.concurrent.Executor executor44 = restAdapter43.callbackExecutor;
        restAdapter22.callbackExecutor = executor44;
        restAdapter13.httpExecutor = executor44;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder57 = builder55.setLog(log56);
        java.util.concurrent.Executor executor58 = builder55.httpExecutor;
        retrofit.RestAdapter restAdapter59 = builder55.build();
        java.util.concurrent.Executor executor60 = restAdapter59.httpExecutor;
        restAdapter13.callbackExecutor = executor60;
        restAdapter12.httpExecutor = executor60;
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter12.new RestHandler();
        retrofit.converter.Converter converter64 = restAdapter12.converter;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(restAdapter12);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(errorHandler21);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(executor58);
        org.junit.Assert.assertNotNull(restAdapter59);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(converter64);
    }

    @Test
    public void test06693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06693");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        builder18.logLevel = logLevel20;
        boolean boolean22 = logLevel20.log();
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel20);
        retrofit.Profiler profiler24 = null;
        restAdapter23.profiler = profiler24;
        retrofit.converter.Converter converter26 = null;
        restAdapter23.converter = converter26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter37 = builder36.build();
        retrofit.Profiler profiler38 = null;
        builder36.profiler = profiler38;
        retrofit.Profiler profiler40 = null;
        builder36.profiler = profiler40;
        retrofit.converter.Converter converter42 = builder36.converter;
        restAdapter23.converter = converter42;
        retrofit.Profiler profiler44 = null;
        restAdapter23.profiler = profiler44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        java.util.concurrent.Executor executor57 = builder54.httpExecutor;
        java.util.concurrent.Executor executor58 = null;
        builder54.httpExecutor = executor58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder68 = builder66.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter69 = builder68.build();
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter69.logLevel;
        builder54.logLevel = logLevel70;
        restAdapter23.setLogLevel(logLevel70);
        retrofit.RestAdapter.Log log73 = restAdapter23.log;
        retrofit.converter.Converter converter74 = restAdapter23.converter;
        retrofit.client.Response response76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response78 = restAdapter23.logAndReplaceResponse("Retrofit-", response76, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(restAdapter69);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertNotNull(converter74);
    }

    @Test
    public void test06694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06694");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler7 = restAdapter0.profiler;
        java.util.concurrent.Executor executor8 = null;
        restAdapter0.callbackExecutor = executor8;
        java.util.concurrent.Executor executor10 = null;
        restAdapter0.callbackExecutor = executor10;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter12.logLevel;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor18 = builder17.callbackExecutor;
        retrofit.Profiler profiler19 = builder17.profiler;
        retrofit.RestAdapter.Builder builder21 = builder17.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("Retrofit-Idle");
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Builder builder32 = builder21.setServer(server31);
        retrofit.RestAdapter restAdapter33 = builder32.build();
        retrofit.client.Client.Provider provider34 = null;
        restAdapter33.clientProvider = provider34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor37 = builder36.callbackExecutor;
        retrofit.Profiler profiler38 = builder36.profiler;
        retrofit.RestAdapter.Builder builder40 = builder36.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        builder45.logLevel = logLevel47;
        java.util.concurrent.Executor executor49 = null;
        builder45.callbackExecutor = executor49;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor52 = null;
        restAdapter51.callbackExecutor = executor52;
        retrofit.converter.Converter converter54 = restAdapter51.converter;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        restAdapter51.log = log55;
        builder45.log = log55;
        builder41.log = log55;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter59.new RestHandler();
        java.util.concurrent.Executor executor61 = restAdapter59.httpExecutor;
        java.util.concurrent.Executor executor62 = null;
        restAdapter59.callbackExecutor = executor62;
        retrofit.client.Client.Provider provider64 = null;
        restAdapter59.clientProvider = provider64;
        java.util.concurrent.Executor executor66 = null;
        restAdapter59.callbackExecutor = executor66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.Server server69 = builder68.server;
        retrofit.RestAdapter.Log log70 = null;
        builder68.log = log70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = builder72.logLevel;
        retrofit.RestAdapter.Builder builder74 = builder68.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter77 = builder76.build();
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter77.logLevel;
        retrofit.RequestInterceptor requestInterceptor79 = restAdapter77.requestInterceptor;
        restAdapter59.requestInterceptor = requestInterceptor79;
        builder41.requestInterceptor = requestInterceptor79;
        builder40.requestInterceptor = requestInterceptor79;
        restAdapter33.requestInterceptor = requestInterceptor79;
        restAdapter12.requestInterceptor = requestInterceptor79;
        restAdapter0.requestInterceptor = requestInterceptor79;
        retrofit.Profiler profiler86 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler87 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler88 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler89 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(profiler19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(restAdapter33);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNull(profiler86);
        org.junit.Assert.assertNull(profiler88);
    }

    @Test
    public void test06695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06695");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log7 = restAdapter0.log;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log9 = restAdapter0.log;
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.ErrorHandler errorHandler13 = null;
        builder11.errorHandler = errorHandler13;
        retrofit.converter.Converter converter15 = builder11.converter;
        retrofit.converter.Converter converter16 = builder11.converter;
        retrofit.Server server17 = builder11.server;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        java.util.concurrent.Executor executor25 = builder24.callbackExecutor;
        retrofit.converter.Converter converter26 = null;
        builder24.converter = converter26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder36.setServer("Retrofit-Idle");
        retrofit.Server server39 = builder38.server;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder48.setLogLevel(logLevel53);
        retrofit.client.Client.Provider provider55 = builder48.clientProvider;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        builder48.log = log56;
        retrofit.RestAdapter.Builder builder58 = builder47.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log56, logLevel59);
        retrofit.RestAdapter.Builder builder61 = builder28.setServer(server39);
        builder24.server = server39;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter63.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter63.logLevel;
        retrofit.ErrorHandler errorHandler66 = restAdapter63.errorHandler;
        retrofit.converter.Converter converter67 = null;
        restAdapter63.converter = converter67;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler70 = restAdapter69.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter69.logLevel;
        retrofit.ErrorHandler errorHandler72 = restAdapter69.errorHandler;
        retrofit.converter.Converter converter73 = null;
        restAdapter69.converter = converter73;
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter69.logLevel;
        java.util.concurrent.Executor executor76 = restAdapter69.httpExecutor;
        retrofit.RestAdapter.Log log77 = restAdapter69.log;
        retrofit.Profiler profiler78 = null;
        restAdapter69.profiler = profiler78;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        builder80.logLevel = logLevel82;
        boolean boolean84 = logLevel82.log();
        restAdapter69.logLevel = logLevel82;
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter69.logLevel;
        retrofit.ErrorHandler errorHandler87 = null;
        restAdapter69.errorHandler = errorHandler87;
        retrofit.RestAdapter.Builder builder89 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder90 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel91 = builder90.logLevel;
        builder89.logLevel = logLevel91;
        boolean boolean93 = logLevel91.log();
        restAdapter69.setLogLevel(logLevel91);
        boolean boolean95 = logLevel91.log();
        restAdapter63.logLevel = logLevel91;
        retrofit.RestAdapter.Builder builder97 = builder24.setLogLevel(logLevel91);
        builder11.logLevel = logLevel91;
        restAdapter0.logLevel = logLevel91;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(logLevel65);
        org.junit.Assert.assertNull(errorHandler66);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(errorHandler72);
        org.junit.Assert.assertNull(logLevel75);
        org.junit.Assert.assertNull(executor76);
        org.junit.Assert.assertNull(log77);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(builder97);
    }

    @Test
    public void test06696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06696");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.Log log4 = restAdapter0.log;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter6 = null;
        restAdapter0.converter = converter6;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor9 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Log log10 = restAdapter0.log;
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(log10);
    }

    @Test
    public void test06697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06697");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider10 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor12 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter14 = null;
        builder13.converter = converter14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.Profiler profiler27 = builder26.profiler;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder36.server;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder26.setServer(server37);
        retrofit.RestAdapter.Builder builder55 = builder13.setServer(server37);
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter57 = builder13.build();
        java.util.concurrent.Executor executor58 = builder13.httpExecutor;
        restAdapter0.callbackExecutor = executor58;
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter61 = restAdapter0.converter;
        retrofit.RequestInterceptor requestInterceptor62 = restAdapter0.requestInterceptor;
        retrofit.converter.Converter converter63 = restAdapter0.converter;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(restAdapter57);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(requestInterceptor62);
        org.junit.Assert.assertNull(converter63);
    }

    @Test
    public void test06698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06698");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        java.util.concurrent.Executor executor4 = null;
        builder0.callbackExecutor = executor4;
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor7 = null;
        builder0.httpExecutor = executor7;
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor6);
    }

    @Test
    public void test06699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06699");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.Server server3 = builder2.server;
        retrofit.RestAdapter.Log log4 = null;
        builder2.log = log4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = builder6.logLevel;
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel7);
        retrofit.RestAdapter.Builder builder10 = builder8.setServer("Retrofit-Idle");
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        builder19.logLevel = logLevel21;
        boolean boolean23 = logLevel21.log();
        builder12.logLevel = logLevel21;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        builder12.requestInterceptor = requestInterceptor25;
        retrofit.converter.Converter converter27 = null;
        builder12.converter = converter27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = builder29.callbackExecutor;
        retrofit.Profiler profiler31 = builder29.profiler;
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Builder builder44 = builder33.setServer(server43);
        retrofit.RestAdapter restAdapter45 = builder44.build();
        java.util.concurrent.Executor executor46 = restAdapter45.callbackExecutor;
        builder12.httpExecutor = executor46;
        builder10.callbackExecutor = executor46;
        builder0.callbackExecutor = executor46;
        retrofit.Server server50 = builder0.server;
        retrofit.client.Client.Provider provider51 = builder0.clientProvider;
        retrofit.RequestInterceptor requestInterceptor52 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNull(requestInterceptor52);
    }

    @Test
    public void test06700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06700");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        restAdapter0.log = log4;
        java.util.concurrent.Executor executor6 = null;
        restAdapter0.httpExecutor = executor6;
        java.util.concurrent.Executor executor8 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter9.new RestHandler();
        java.util.concurrent.Executor executor11 = restAdapter9.httpExecutor;
        retrofit.Profiler profiler12 = restAdapter9.profiler;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter9.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = builder23.setLog(log24);
        java.util.concurrent.Executor executor26 = builder23.httpExecutor;
        retrofit.RestAdapter.Builder builder28 = builder23.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler29 = builder23.errorHandler;
        retrofit.RestAdapter restAdapter30 = builder23.build();
        retrofit.RequestInterceptor requestInterceptor31 = restAdapter30.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter30.new RestHandler();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor34 = builder33.callbackExecutor;
        retrofit.Profiler profiler35 = builder33.profiler;
        retrofit.RestAdapter.Builder builder37 = builder33.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Builder builder48 = builder37.setServer(server47);
        retrofit.RestAdapter restAdapter49 = builder48.build();
        retrofit.Profiler profiler50 = builder48.profiler;
        retrofit.RestAdapter.LogLevel logLevel51 = builder48.logLevel;
        java.util.concurrent.Executor executor52 = builder48.callbackExecutor;
        java.util.concurrent.Executor executor53 = builder48.httpExecutor;
        restAdapter30.callbackExecutor = executor53;
        restAdapter9.httpExecutor = executor53;
        restAdapter0.httpExecutor = executor53;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor58 = builder57.callbackExecutor;
        retrofit.Profiler profiler59 = builder57.profiler;
        retrofit.RestAdapter.Builder builder61 = builder57.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = builder68.setServer("Retrofit-Idle");
        retrofit.Server server71 = builder70.server;
        retrofit.RestAdapter.Builder builder72 = builder61.setServer(server71);
        retrofit.RestAdapter restAdapter73 = builder72.build();
        retrofit.client.Client.Provider provider74 = null;
        restAdapter73.clientProvider = provider74;
        retrofit.RestAdapter.Log log76 = restAdapter73.log;
        retrofit.RestAdapter.LogLevel logLevel77 = restAdapter73.getLogLevel();
        retrofit.ErrorHandler errorHandler78 = null;
        restAdapter73.errorHandler = errorHandler78;
        retrofit.Server server80 = restAdapter73.server;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor82 = builder81.callbackExecutor;
        retrofit.Profiler profiler83 = builder81.profiler;
        builder81.ensureSaneDefaults();
        java.util.concurrent.Executor executor85 = builder81.httpExecutor;
        restAdapter73.httpExecutor = executor85;
        restAdapter0.callbackExecutor = executor85;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(requestInterceptor31);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(restAdapter49);
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNull(executor58);
        org.junit.Assert.assertNull(profiler59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(server71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(restAdapter73);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNull(executor82);
        org.junit.Assert.assertNull(profiler83);
        org.junit.Assert.assertNotNull(executor85);
    }

    @Test
    public void test06701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06701");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.Server server6 = restAdapter0.server;
        retrofit.Profiler profiler7 = null;
        restAdapter0.profiler = profiler7;
        retrofit.Profiler profiler9 = null;
        restAdapter0.profiler = profiler9;
        retrofit.Profiler profiler11 = null;
        restAdapter0.profiler = profiler11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = builder13.callbackExecutor;
        retrofit.Profiler profiler15 = builder13.profiler;
        retrofit.RestAdapter.Builder builder17 = builder13.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Builder builder28 = builder17.setServer(server27);
        retrofit.RestAdapter restAdapter29 = builder28.build();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        builder37.logLevel = logLevel39;
        boolean boolean41 = logLevel39.log();
        builder30.logLevel = logLevel39;
        retrofit.RestAdapter.LogLevel logLevel43 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder28.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder55 = builder53.setLog(log54);
        java.util.concurrent.Executor executor56 = builder53.httpExecutor;
        retrofit.RestAdapter restAdapter57 = builder53.build();
        java.util.concurrent.Executor executor58 = restAdapter57.httpExecutor;
        retrofit.converter.Converter converter59 = restAdapter57.converter;
        retrofit.RestAdapter.Builder builder60 = builder44.setConverter(converter59);
        java.util.concurrent.Executor executor61 = builder44.httpExecutor;
        restAdapter0.callbackExecutor = executor61;
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter0.getLogLevel();
        java.util.concurrent.Executor executor64 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNotNull(restAdapter57);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNotNull(converter59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertNull(executor64);
    }

    @Test
    public void test06702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06702");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = builder8.build();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.logLevel;
        retrofit.RestAdapter.Log log11 = restAdapter9.log;
        retrofit.Profiler profiler12 = null;
        restAdapter9.profiler = profiler12;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter9.logLevel;
        retrofit.ErrorHandler errorHandler15 = restAdapter9.errorHandler;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider27 = builder20.clientProvider;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log28;
        retrofit.RestAdapter.Builder builder30 = builder16.setLog(log28);
        retrofit.Server server31 = builder16.server;
        java.util.concurrent.Executor executor32 = builder16.callbackExecutor;
        java.util.concurrent.Executor executor33 = null;
        builder16.callbackExecutor = executor33;
        java.util.concurrent.Executor executor35 = builder16.httpExecutor;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.client.Client.Provider provider43 = builder36.clientProvider;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        builder36.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("Retrofit-Idle");
        retrofit.Server server55 = builder54.server;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("Retrofit-Idle");
        retrofit.Server server73 = builder72.server;
        retrofit.client.Client.Provider provider74 = null;
        java.util.concurrent.Executor executor75 = null;
        java.util.concurrent.Executor executor76 = null;
        retrofit.RequestInterceptor requestInterceptor77 = null;
        retrofit.converter.Converter converter78 = null;
        retrofit.Profiler profiler79 = null;
        retrofit.ErrorHandler errorHandler80 = null;
        retrofit.RestAdapter.Log log81 = null;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.Server server83 = builder82.server;
        retrofit.RestAdapter.Log log84 = null;
        builder82.log = log84;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel87 = builder86.logLevel;
        retrofit.RestAdapter.Builder builder88 = builder82.setLogLevel(logLevel87);
        retrofit.RestAdapter restAdapter89 = new retrofit.RestAdapter(server73, provider74, executor75, executor76, requestInterceptor77, converter78, profiler79, errorHandler80, log81, logLevel87);
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log63, logLevel87);
        builder36.log = log63;
        builder36.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder94 = builder36.setServer("Retrofit-Idle");
        builder94.ensureSaneDefaults();
        retrofit.client.Client.Provider provider96 = builder94.clientProvider;
        builder16.clientProvider = provider96;
        restAdapter9.clientProvider = provider96;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(server73);
        org.junit.Assert.assertNull(server83);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(provider96);
    }

    @Test
    public void test06703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06703");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        retrofit.Profiler profiler14 = builder0.profiler;
        retrofit.converter.Converter converter15 = builder0.converter;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.Server server25 = builder24.server;
        java.util.concurrent.Executor executor26 = builder24.httpExecutor;
        java.util.concurrent.Executor executor27 = builder24.callbackExecutor;
        retrofit.ErrorHandler errorHandler28 = null;
        builder24.errorHandler = errorHandler28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor37 = builder36.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor38 = builder36.requestInterceptor;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder39.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter48 = builder47.build();
        retrofit.Profiler profiler49 = null;
        builder47.profiler = profiler49;
        retrofit.Profiler profiler51 = null;
        builder47.profiler = profiler51;
        retrofit.converter.Converter converter53 = builder47.converter;
        retrofit.RestAdapter.Builder builder54 = builder36.setConverter(converter53);
        retrofit.RestAdapter.Builder builder55 = builder24.setConverter(converter53);
        retrofit.ErrorHandler errorHandler56 = builder24.errorHandler;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter57.logLevel;
        retrofit.ErrorHandler errorHandler60 = restAdapter57.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler61 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter57.getLogLevel();
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor64 = builder63.callbackExecutor;
        retrofit.Profiler profiler65 = builder63.profiler;
        retrofit.RestAdapter.Builder builder67 = builder63.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.Server server69 = builder68.server;
        retrofit.RestAdapter.Log log70 = null;
        builder68.log = log70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = builder72.logLevel;
        retrofit.RestAdapter.Builder builder74 = builder68.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("Retrofit-Idle");
        retrofit.Server server77 = builder76.server;
        retrofit.RestAdapter.Builder builder78 = builder67.setServer(server77);
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.RestAdapter.Log log80 = builder78.log;
        retrofit.Profiler profiler81 = builder78.profiler;
        retrofit.Server server82 = builder78.server;
        retrofit.client.Client.Provider provider83 = builder78.clientProvider;
        restAdapter57.clientProvider = provider83;
        retrofit.RestAdapter.Builder builder85 = builder24.setClient(provider83);
        retrofit.RestAdapter.Builder builder86 = builder0.setClient(provider83);
        retrofit.converter.Converter converter87 = builder0.converter;
        retrofit.converter.Converter converter88 = builder0.converter;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(restAdapter48);
        org.junit.Assert.assertNotNull(converter53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(errorHandler56);
        org.junit.Assert.assertNull(logLevel59);
        org.junit.Assert.assertNull(errorHandler60);
        org.junit.Assert.assertNull(logLevel62);
        org.junit.Assert.assertNull(executor64);
        org.junit.Assert.assertNull(profiler65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(server77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNull(profiler81);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNotNull(provider83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(converter87);
        org.junit.Assert.assertNull(converter88);
    }

    @Test
    public void test06704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06704");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = null;
        restAdapter0.converter = converter3;
        java.util.concurrent.Executor executor5 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.RequestInterceptor requestInterceptor9 = restAdapter0.requestInterceptor;
        retrofit.Profiler profiler10 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        retrofit.Server server12 = restAdapter0.server;
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor14 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler15 = restAdapter0.profiler;
        java.util.concurrent.Executor executor16 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(executor16);
    }

    @Test
    public void test06705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06705");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.RestAdapter.Log log11 = builder8.log;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor14 = null;
        restAdapter13.callbackExecutor = executor14;
        retrofit.converter.Converter converter16 = null;
        restAdapter13.converter = converter16;
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter13.new RestHandler();
        java.util.concurrent.Executor executor19 = restAdapter13.callbackExecutor;
        retrofit.Profiler profiler20 = restAdapter13.profiler;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor22 = builder21.callbackExecutor;
        retrofit.Profiler profiler23 = builder21.profiler;
        retrofit.RestAdapter.Builder builder25 = builder21.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder34 = builder32.setServer("Retrofit-Idle");
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Builder builder36 = builder25.setServer(server35);
        retrofit.RestAdapter restAdapter37 = builder36.build();
        retrofit.Profiler profiler38 = builder36.profiler;
        retrofit.RestAdapter.LogLevel logLevel39 = builder36.logLevel;
        java.util.concurrent.Executor executor40 = builder36.callbackExecutor;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        java.util.concurrent.Executor executor43 = null;
        builder41.httpExecutor = executor43;
        retrofit.Server server45 = builder41.server;
        retrofit.RestAdapter.LogLevel logLevel46 = builder41.logLevel;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        java.util.concurrent.Executor executor54 = builder53.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor55 = builder53.requestInterceptor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter65 = builder64.build();
        retrofit.Profiler profiler66 = null;
        builder64.profiler = profiler66;
        retrofit.Profiler profiler68 = null;
        builder64.profiler = profiler68;
        retrofit.converter.Converter converter70 = builder64.converter;
        retrofit.RestAdapter.Builder builder71 = builder53.setConverter(converter70);
        builder41.converter = converter70;
        retrofit.RestAdapter.Builder builder73 = builder36.setConverter(converter70);
        restAdapter13.converter = converter70;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.Server server76 = builder75.server;
        retrofit.RestAdapter.Log log77 = null;
        builder75.log = log77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel80 = builder79.logLevel;
        retrofit.RestAdapter.Builder builder81 = builder75.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder83 = builder81.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log84 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder85 = builder83.setLog(log84);
        java.util.concurrent.Executor executor86 = builder83.httpExecutor;
        retrofit.RestAdapter.Builder builder88 = builder83.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler89 = builder83.errorHandler;
        retrofit.RestAdapter restAdapter90 = builder83.build();
        retrofit.RequestInterceptor requestInterceptor91 = restAdapter90.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler92 = restAdapter90.new RestHandler();
        java.util.concurrent.Executor executor93 = restAdapter90.callbackExecutor;
        restAdapter13.callbackExecutor = executor93;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder95 = builder8.setExecutors(executor12, executor93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: HTTP executor may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNull(requestInterceptor55);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(restAdapter65);
        org.junit.Assert.assertNotNull(converter70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(server76);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNull(executor86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(errorHandler89);
        org.junit.Assert.assertNotNull(restAdapter90);
        org.junit.Assert.assertNotNull(requestInterceptor91);
        org.junit.Assert.assertNotNull(executor93);
    }

    @Test
    public void test06706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06706");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter.Log log16 = builder15.log;
        retrofit.ErrorHandler errorHandler17 = builder15.errorHandler;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.client.Client.Provider provider26 = builder19.clientProvider;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        builder19.log = log27;
        retrofit.RestAdapter.Builder builder29 = builder18.setLog(log27);
        retrofit.Profiler profiler30 = builder18.profiler;
        java.util.concurrent.Executor executor31 = null;
        builder18.callbackExecutor = executor31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = builder37.logLevel;
        retrofit.RestAdapter.Builder builder39 = builder33.setLogLevel(logLevel38);
        retrofit.client.Client.Provider provider40 = builder33.clientProvider;
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        builder33.log = log41;
        builder18.log = log41;
        retrofit.Profiler profiler44 = builder18.profiler;
        retrofit.Server server45 = builder18.server;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor47 = builder46.callbackExecutor;
        retrofit.Profiler profiler48 = builder46.profiler;
        retrofit.RestAdapter.Builder builder50 = builder46.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        retrofit.RestAdapter.Builder builder57 = builder51.setLogLevel(logLevel56);
        retrofit.RestAdapter.Builder builder59 = builder57.setServer("Retrofit-Idle");
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Builder builder61 = builder50.setServer(server60);
        retrofit.RestAdapter restAdapter62 = builder61.build();
        java.util.concurrent.Executor executor63 = restAdapter62.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter62.new RestHandler();
        retrofit.ErrorHandler errorHandler65 = restAdapter62.errorHandler;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor67 = builder66.callbackExecutor;
        retrofit.Profiler profiler68 = builder66.profiler;
        retrofit.RestAdapter.Builder builder70 = builder66.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("Retrofit-Idle");
        retrofit.Server server80 = builder79.server;
        retrofit.RestAdapter.Builder builder81 = builder70.setServer(server80);
        retrofit.RestAdapter restAdapter82 = builder81.build();
        retrofit.client.Client.Provider provider83 = null;
        restAdapter82.clientProvider = provider83;
        retrofit.RestAdapter.Log log85 = restAdapter82.log;
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter82.getLogLevel();
        restAdapter62.logLevel = logLevel86;
        boolean boolean88 = logLevel86.log();
        builder18.logLevel = logLevel86;
        retrofit.RestAdapter.Builder builder90 = builder15.setLogLevel(logLevel86);
        java.util.concurrent.Executor executor91 = builder90.callbackExecutor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNull(profiler44);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertNull(executor47);
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(restAdapter62);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNull(executor67);
        org.junit.Assert.assertNull(profiler68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNull(executor91);
    }

    @Test
    public void test06707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06707");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter4 = null;
        restAdapter0.converter = converter4;
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider8 = restAdapter0.clientProvider;
        java.util.concurrent.Executor executor9 = null;
        restAdapter0.httpExecutor = executor9;
        retrofit.converter.Converter converter11 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter0.new RestHandler();
        retrofit.client.Response response14 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response16 = restAdapter0.logAndReplaceResponse("hi!", response14, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(converter11);
    }

    @Test
    public void test06708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06708");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter0.logLevel;
        retrofit.converter.Converter converter6 = null;
        restAdapter0.converter = converter6;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(logLevel5);
    }

    @Test
    public void test06709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06709");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        java.util.concurrent.Executor executor17 = restAdapter16.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.ErrorHandler errorHandler19 = restAdapter16.errorHandler;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor21 = builder20.callbackExecutor;
        retrofit.Profiler profiler22 = builder20.profiler;
        retrofit.RestAdapter.Builder builder24 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("Retrofit-Idle");
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Builder builder35 = builder24.setServer(server34);
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.client.Client.Provider provider37 = null;
        restAdapter36.clientProvider = provider37;
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter36.getLogLevel();
        restAdapter16.logLevel = logLevel40;
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter16.new RestHandler();
        retrofit.client.Client.Provider provider43 = restAdapter16.clientProvider;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(errorHandler19);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider43);
    }

    @Test
    public void test06710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06710");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("Retrofit-Idle");
        retrofit.RequestInterceptor requestInterceptor12 = null;
        builder8.requestInterceptor = requestInterceptor12;
        retrofit.RestAdapter.Log log14 = builder8.log;
        retrofit.RestAdapter.Log log15 = builder8.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertNull(log15);
    }

    @Test
    public void test06711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06711");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler9 = builder8.errorHandler;
        retrofit.RestAdapter restAdapter10 = builder8.build();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter13.new RestHandler();
        java.util.concurrent.Executor executor15 = restAdapter13.httpExecutor;
        java.util.concurrent.Executor executor16 = null;
        restAdapter13.callbackExecutor = executor16;
        retrofit.client.Client.Provider provider18 = null;
        restAdapter13.clientProvider = provider18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("Retrofit-Idle");
        retrofit.Server server29 = builder28.server;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel61);
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel61);
        restAdapter13.log = log37;
        log37.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder68 = builder11.setLog(log37);
        builder8.log = log37;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.Server server71 = builder70.server;
        retrofit.RestAdapter.Log log72 = null;
        builder70.log = log72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = builder74.logLevel;
        retrofit.RestAdapter.Builder builder76 = builder70.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.Profiler profiler80 = null;
        builder78.profiler = profiler80;
        retrofit.RestAdapter restAdapter82 = builder78.build();
        retrofit.client.Client.Provider provider83 = builder78.clientProvider;
        retrofit.RestAdapter.Builder builder84 = builder8.setClient(provider83);
        retrofit.ErrorHandler errorHandler85 = builder8.errorHandler;
        retrofit.client.Client.Provider provider86 = builder8.clientProvider;
        retrofit.RestAdapter.Log log87 = null;
        builder8.log = log87;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNotNull(restAdapter10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertNotNull(provider83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(errorHandler85);
        org.junit.Assert.assertNotNull(provider86);
    }

    @Test
    public void test06712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06712");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        java.util.concurrent.Executor executor8 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        builder16.logLevel = logLevel18;
        boolean boolean20 = logLevel18.log();
        builder9.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel22 = builder9.logLevel;
        retrofit.Profiler profiler23 = builder9.profiler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = builder24.callbackExecutor;
        retrofit.Profiler profiler26 = builder24.profiler;
        retrofit.RestAdapter.Builder builder28 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Builder builder39 = builder28.setServer(server38);
        retrofit.RestAdapter.Builder builder40 = builder9.setServer(server38);
        retrofit.RestAdapter.Builder builder41 = builder6.setServer(server38);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.ErrorHandler errorHandler44 = null;
        builder42.errorHandler = errorHandler44;
        retrofit.converter.Converter converter46 = builder42.converter;
        retrofit.RestAdapter.LogLevel logLevel47 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder41.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = builder50.callbackExecutor;
        retrofit.Profiler profiler52 = builder50.profiler;
        retrofit.RestAdapter.Builder builder54 = builder50.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("Retrofit-Idle");
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Builder builder65 = builder54.setServer(server64);
        retrofit.RestAdapter restAdapter66 = builder65.build();
        retrofit.RestAdapter.Log log67 = builder65.log;
        retrofit.Profiler profiler68 = builder65.profiler;
        retrofit.RequestInterceptor requestInterceptor69 = builder65.requestInterceptor;
        retrofit.RestAdapter.Builder builder70 = builder48.setRequestInterceptor(requestInterceptor69);
        retrofit.RestAdapter.Log log71 = builder48.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(restAdapter66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNull(profiler68);
        org.junit.Assert.assertNotNull(requestInterceptor69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(log71);
    }

    @Test
    public void test06713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06713");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        java.util.concurrent.Executor executor17 = restAdapter16.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter16.new RestHandler();
        retrofit.ErrorHandler errorHandler19 = restAdapter16.errorHandler;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor21 = builder20.callbackExecutor;
        retrofit.Profiler profiler22 = builder20.profiler;
        retrofit.RestAdapter.Builder builder24 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("Retrofit-Idle");
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Builder builder35 = builder24.setServer(server34);
        retrofit.RestAdapter restAdapter36 = builder35.build();
        retrofit.client.Client.Provider provider37 = null;
        restAdapter36.clientProvider = provider37;
        retrofit.RestAdapter.Log log39 = restAdapter36.log;
        retrofit.RestAdapter.LogLevel logLevel40 = restAdapter36.getLogLevel();
        restAdapter16.logLevel = logLevel40;
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter16.new RestHandler();
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor44 = null;
        restAdapter43.callbackExecutor = executor44;
        retrofit.converter.Converter converter46 = null;
        restAdapter43.converter = converter46;
        java.util.concurrent.Executor executor48 = restAdapter43.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter43.logLevel;
        retrofit.Profiler profiler50 = restAdapter43.profiler;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        retrofit.RestAdapter.Builder builder57 = builder51.setLogLevel(logLevel56);
        retrofit.RequestInterceptor requestInterceptor58 = null;
        builder51.requestInterceptor = requestInterceptor58;
        retrofit.RestAdapter.Log log60 = builder51.log;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.Server server62 = builder61.server;
        retrofit.RestAdapter.Log log63 = null;
        builder61.log = log63;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel66 = builder65.logLevel;
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = builder69.logLevel;
        builder68.logLevel = logLevel70;
        boolean boolean72 = logLevel70.log();
        builder61.logLevel = logLevel70;
        retrofit.RestAdapter.Builder builder74 = builder51.setLogLevel(logLevel70);
        java.util.concurrent.Executor executor75 = builder74.callbackExecutor;
        builder74.ensureSaneDefaults();
        java.util.concurrent.Executor executor77 = builder74.httpExecutor;
        restAdapter43.callbackExecutor = executor77;
        restAdapter16.callbackExecutor = executor77;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(errorHandler19);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(restAdapter36);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(log60);
        org.junit.Assert.assertNull(server62);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(executor75);
        org.junit.Assert.assertNotNull(executor77);
    }

    @Test
    public void test06714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06714");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel23);
        retrofit.RequestInterceptor requestInterceptor26 = null;
        restAdapter25.requestInterceptor = requestInterceptor26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        builder32.logLevel = logLevel34;
        java.util.concurrent.Executor executor36 = null;
        builder32.callbackExecutor = executor36;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor39 = null;
        restAdapter38.callbackExecutor = executor39;
        retrofit.converter.Converter converter41 = restAdapter38.converter;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        restAdapter38.log = log42;
        builder32.log = log42;
        builder28.log = log42;
        log42.log("Retrofit-Idle");
        restAdapter25.log = log42;
        retrofit.ErrorHandler errorHandler49 = restAdapter25.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter25.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter25.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor52 = restAdapter25.requestInterceptor;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.ErrorHandler errorHandler55 = builder53.errorHandler;
        retrofit.Server server56 = builder53.server;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter57.new RestHandler();
        retrofit.ErrorHandler errorHandler59 = null;
        restAdapter57.errorHandler = errorHandler59;
        retrofit.RestAdapter.Log log61 = restAdapter57.log;
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        java.util.concurrent.Executor executor71 = builder70.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor72 = builder70.requestInterceptor;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Log log75 = null;
        builder73.log = log75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter82 = builder81.build();
        retrofit.Profiler profiler83 = null;
        builder81.profiler = profiler83;
        retrofit.Profiler profiler85 = null;
        builder81.profiler = profiler85;
        retrofit.converter.Converter converter87 = builder81.converter;
        retrofit.RestAdapter.Builder builder88 = builder70.setConverter(converter87);
        restAdapter57.converter = converter87;
        retrofit.RestAdapter.Builder builder90 = builder53.setConverter(converter87);
        restAdapter25.converter = converter87;
        retrofit.RestAdapter.RestHandler restHandler92 = restAdapter25.new RestHandler();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNull(errorHandler49);
        org.junit.Assert.assertNull(requestInterceptor52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertNull(errorHandler55);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(executor71);
        org.junit.Assert.assertNull(requestInterceptor72);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertNotNull(converter87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
    }

    @Test
    public void test06715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06715");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter4 = null;
        restAdapter0.converter = converter4;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        java.lang.Throwable throwable7 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable7, "Retrofit-Idle");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
    }

    @Test
    public void test06716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06716");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel23);
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider44 = builder37.clientProvider;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log45;
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server9, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log45, logLevel48);
        retrofit.converter.Converter converter50 = null;
        restAdapter49.converter = converter50;
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter49.new RestHandler();
        retrofit.Server server53 = restAdapter49.server;
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter49.new RestHandler();
        retrofit.client.Request request56 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request57 = restAdapter49.logAndReplaceRequest(request56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06717");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.client.Client.Provider provider17 = null;
        restAdapter16.clientProvider = provider17;
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor21 = null;
        restAdapter20.httpExecutor = executor21;
        java.util.concurrent.Executor executor23 = null;
        restAdapter20.httpExecutor = executor23;
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder34 = builder32.setServer("Retrofit-Idle");
        retrofit.Server server35 = builder34.server;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = null;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel49);
        boolean boolean52 = logLevel49.log();
        restAdapter20.logLevel = logLevel49;
        restAdapter16.logLevel = logLevel49;
        retrofit.Profiler profiler55 = null;
        restAdapter16.profiler = profiler55;
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter16.getLogLevel();
        java.util.concurrent.Executor executor58 = restAdapter16.httpExecutor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor58);
    }

    @Test
    public void test06718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06718");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        builder4.ensureSaneDefaults();
        java.util.concurrent.Executor executor17 = builder4.httpExecutor;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.Server server27 = builder26.server;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel41);
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider62 = builder55.clientProvider;
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        builder55.log = log63;
        retrofit.RestAdapter.Builder builder65 = builder51.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server27, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log63, logLevel66);
        log63.log("Retrofit-");
        retrofit.RestAdapter.Builder builder70 = builder4.setLog(log63);
        log63.log("Retrofit-");
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
    }

    @Test
    public void test06719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06719");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder0.requestInterceptor = requestInterceptor13;
        java.util.concurrent.Executor executor15 = null;
        builder0.httpExecutor = executor15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider24 = builder17.clientProvider;
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log25;
        builder0.log = log25;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        builder35.logLevel = logLevel37;
        boolean boolean39 = logLevel37.log();
        builder28.logLevel = logLevel37;
        retrofit.RestAdapter.LogLevel logLevel41 = builder28.logLevel;
        retrofit.Profiler profiler42 = builder28.profiler;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor44 = builder43.callbackExecutor;
        retrofit.Profiler profiler45 = builder43.profiler;
        retrofit.RestAdapter.Builder builder47 = builder43.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder48.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("Retrofit-Idle");
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Builder builder58 = builder47.setServer(server57);
        retrofit.RestAdapter.Builder builder59 = builder28.setServer(server57);
        retrofit.RestAdapter.Builder builder60 = builder0.setServer(server57);
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter61.new RestHandler();
        retrofit.ErrorHandler errorHandler63 = null;
        restAdapter61.errorHandler = errorHandler63;
        retrofit.RestAdapter.Log log65 = restAdapter61.log;
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.Server server69 = builder68.server;
        retrofit.RestAdapter.Log log70 = null;
        builder68.log = log70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = builder72.logLevel;
        retrofit.RestAdapter.Builder builder74 = builder68.setLogLevel(logLevel73);
        java.util.concurrent.Executor executor75 = builder74.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor76 = builder74.requestInterceptor;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.Server server78 = builder77.server;
        retrofit.RestAdapter.Log log79 = null;
        builder77.log = log79;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        retrofit.RestAdapter.Builder builder83 = builder77.setLogLevel(logLevel82);
        retrofit.RestAdapter.Builder builder85 = builder83.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter86 = builder85.build();
        retrofit.Profiler profiler87 = null;
        builder85.profiler = profiler87;
        retrofit.Profiler profiler89 = null;
        builder85.profiler = profiler89;
        retrofit.converter.Converter converter91 = builder85.converter;
        retrofit.RestAdapter.Builder builder92 = builder74.setConverter(converter91);
        restAdapter61.converter = converter91;
        retrofit.converter.Converter converter94 = restAdapter61.converter;
        retrofit.RestAdapter.Builder builder95 = builder60.setConverter(converter94);
        retrofit.Server server96 = builder60.server;
        retrofit.client.Client.Provider provider97 = builder60.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(log65);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(executor75);
        org.junit.Assert.assertNull(requestInterceptor76);
        org.junit.Assert.assertNull(server78);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(restAdapter86);
        org.junit.Assert.assertNotNull(converter91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(converter94);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(server96);
        org.junit.Assert.assertNull(provider97);
    }

    @Test
    public void test06720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06720");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor4 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.ErrorHandler errorHandler7 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = builder8.callbackExecutor;
        retrofit.Profiler profiler10 = builder8.profiler;
        retrofit.RestAdapter.Builder builder12 = builder8.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("Retrofit-Idle");
        retrofit.Server server22 = builder21.server;
        retrofit.RestAdapter.Builder builder23 = builder12.setServer(server22);
        retrofit.RestAdapter restAdapter24 = builder23.build();
        retrofit.Profiler profiler25 = builder23.profiler;
        retrofit.RestAdapter.LogLevel logLevel26 = builder23.logLevel;
        java.util.concurrent.Executor executor27 = builder23.callbackExecutor;
        restAdapter0.callbackExecutor = executor27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler38 = builder37.errorHandler;
        retrofit.RestAdapter restAdapter39 = builder37.build();
        java.util.concurrent.Executor executor40 = null;
        restAdapter39.httpExecutor = executor40;
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter39.new RestHandler();
        retrofit.client.Client.Provider provider43 = null;
        restAdapter39.clientProvider = provider43;
        retrofit.Profiler profiler45 = null;
        restAdapter39.profiler = profiler45;
        retrofit.RestAdapter.LogLevel logLevel47 = restAdapter39.logLevel;
        retrofit.Profiler profiler48 = null;
        restAdapter39.profiler = profiler48;
        retrofit.ErrorHandler errorHandler50 = restAdapter39.errorHandler;
        restAdapter0.errorHandler = errorHandler50;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(restAdapter24);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(errorHandler38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler50);
    }

    @Test
    public void test06721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06721");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = builder8.build();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        builder8.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.ErrorHandler errorHandler14 = null;
        builder12.errorHandler = errorHandler14;
        retrofit.converter.Converter converter16 = builder12.converter;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor18 = null;
        restAdapter17.callbackExecutor = executor18;
        retrofit.converter.Converter converter20 = null;
        restAdapter17.converter = converter20;
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor24 = builder23.callbackExecutor;
        retrofit.Profiler profiler25 = builder23.profiler;
        retrofit.RestAdapter.Builder builder27 = builder23.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Builder builder38 = builder27.setServer(server37);
        retrofit.RestAdapter restAdapter39 = builder38.build();
        java.util.concurrent.Executor executor40 = restAdapter39.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.ErrorHandler errorHandler42 = restAdapter39.errorHandler;
        restAdapter17.errorHandler = errorHandler42;
        builder12.errorHandler = errorHandler42;
        builder8.errorHandler = errorHandler42;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = builder54.setLog(log55);
        retrofit.Profiler profiler57 = builder56.profiler;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = builder62.logLevel;
        retrofit.RestAdapter.Builder builder64 = builder58.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder64.setServer("Retrofit-Idle");
        retrofit.Server server67 = builder66.server;
        retrofit.client.Client.Provider provider68 = null;
        java.util.concurrent.Executor executor69 = null;
        java.util.concurrent.Executor executor70 = null;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        retrofit.converter.Converter converter72 = null;
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = null;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.Server server77 = builder76.server;
        retrofit.RestAdapter.Log log78 = null;
        builder76.log = log78;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel81 = builder80.logLevel;
        retrofit.RestAdapter.Builder builder82 = builder76.setLogLevel(logLevel81);
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter(server67, provider68, executor69, executor70, requestInterceptor71, converter72, profiler73, errorHandler74, log75, logLevel81);
        retrofit.RestAdapter.Builder builder84 = builder56.setServer(server67);
        retrofit.RestAdapter.LogLevel logLevel85 = builder84.logLevel;
        builder8.logLevel = logLevel85;
        retrofit.RestAdapter.Log log87 = builder8.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(server67);
        org.junit.Assert.assertNull(server77);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log87);
    }

    @Test
    public void test06722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06722");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = null;
        restAdapter0.converter = converter3;
        java.util.concurrent.Executor executor5 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Log log9 = restAdapter0.log;
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor11 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test06723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06723");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.Server server15 = builder0.server;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.Server server25 = builder24.server;
        java.util.concurrent.Executor executor26 = builder24.httpExecutor;
        java.util.concurrent.Executor executor27 = builder24.callbackExecutor;
        retrofit.ErrorHandler errorHandler28 = null;
        builder24.errorHandler = errorHandler28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        java.util.concurrent.Executor executor37 = builder36.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor38 = builder36.requestInterceptor;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder39.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter48 = builder47.build();
        retrofit.Profiler profiler49 = null;
        builder47.profiler = profiler49;
        retrofit.Profiler profiler51 = null;
        builder47.profiler = profiler51;
        retrofit.converter.Converter converter53 = builder47.converter;
        retrofit.RestAdapter.Builder builder54 = builder36.setConverter(converter53);
        retrofit.RestAdapter.Builder builder55 = builder24.setConverter(converter53);
        retrofit.RestAdapter.Builder builder56 = builder0.setConverter(converter53);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("hi!");
        retrofit.Profiler profiler59 = null;
        builder56.profiler = profiler59;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(requestInterceptor38);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(restAdapter48);
        org.junit.Assert.assertNotNull(converter53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test06724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06724");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler14 = builder13.errorHandler;
        retrofit.RestAdapter restAdapter15 = builder13.build();
        java.util.concurrent.Executor executor16 = null;
        restAdapter15.httpExecutor = executor16;
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter15.new RestHandler();
        retrofit.client.Client.Provider provider19 = null;
        restAdapter15.clientProvider = provider19;
        retrofit.Profiler profiler21 = null;
        restAdapter15.profiler = profiler21;
        java.util.concurrent.Executor executor23 = restAdapter15.httpExecutor;
        java.util.concurrent.Executor executor24 = restAdapter15.callbackExecutor;
        restAdapter0.httpExecutor = executor24;
        retrofit.Profiler profiler26 = null;
        restAdapter0.profiler = profiler26;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(errorHandler14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNotNull(executor24);
    }

    @Test
    public void test06725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06725");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        java.util.concurrent.Executor executor4 = null;
        restAdapter0.callbackExecutor = executor4;
        retrofit.Profiler profiler6 = null;
        restAdapter0.profiler = profiler6;
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor10 = null;
        restAdapter9.callbackExecutor = executor10;
        retrofit.RestAdapter.Log log12 = restAdapter9.log;
        retrofit.converter.Converter converter13 = restAdapter9.converter;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        restAdapter9.logLevel = logLevel16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        builder25.logLevel = logLevel27;
        boolean boolean29 = logLevel27.log();
        builder18.logLevel = logLevel27;
        restAdapter9.setLogLevel(logLevel27);
        retrofit.RestAdapter.LogLevel logLevel32 = restAdapter9.logLevel;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.setLogLevel(logLevel32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06726");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        restAdapter0.clientProvider = provider5;
        java.util.concurrent.Executor executor7 = null;
        restAdapter0.callbackExecutor = executor7;
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter0.logLevel;
        retrofit.Server server10 = null;
        restAdapter0.server = server10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler21 = builder20.errorHandler;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor23 = builder22.callbackExecutor;
        retrofit.Profiler profiler24 = builder22.profiler;
        retrofit.RestAdapter.Builder builder26 = builder22.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("Retrofit-Idle");
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Builder builder37 = builder26.setServer(server36);
        retrofit.RestAdapter restAdapter38 = builder37.build();
        java.util.concurrent.Executor executor39 = restAdapter38.callbackExecutor;
        builder20.callbackExecutor = executor39;
        restAdapter0.callbackExecutor = executor39;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        builder49.logLevel = logLevel51;
        boolean boolean53 = logLevel51.log();
        builder42.logLevel = logLevel51;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        builder42.requestInterceptor = requestInterceptor55;
        retrofit.converter.Converter converter57 = null;
        builder42.converter = converter57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor60 = builder59.callbackExecutor;
        retrofit.Profiler profiler61 = builder59.profiler;
        retrofit.RestAdapter.Builder builder63 = builder59.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("Retrofit-Idle");
        retrofit.Server server73 = builder72.server;
        retrofit.RestAdapter.Builder builder74 = builder63.setServer(server73);
        retrofit.RestAdapter restAdapter75 = builder74.build();
        java.util.concurrent.Executor executor76 = restAdapter75.callbackExecutor;
        builder42.httpExecutor = executor76;
        restAdapter0.callbackExecutor = executor76;
        retrofit.RestAdapter.Log log79 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler80 = restAdapter0.errorHandler;
        java.util.concurrent.Executor executor81 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(errorHandler21);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(server73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNull(log79);
        org.junit.Assert.assertNull(errorHandler80);
        org.junit.Assert.assertNull(executor81);
    }

    @Test
    public void test06727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06727");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        retrofit.RestAdapter restAdapter12 = builder8.build();
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor14 = null;
        restAdapter13.callbackExecutor = executor14;
        retrofit.converter.Converter converter16 = restAdapter13.converter;
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter13.new RestHandler();
        java.util.concurrent.Executor executor18 = restAdapter13.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel19 = null;
        restAdapter13.logLevel = logLevel19;
        java.util.concurrent.Executor executor21 = null;
        restAdapter13.httpExecutor = executor21;
        java.util.concurrent.Executor executor23 = null;
        restAdapter13.callbackExecutor = executor23;
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter13.new RestHandler();
        retrofit.client.Client.Provider provider26 = restAdapter13.clientProvider;
        retrofit.Server server27 = restAdapter13.server;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor29 = null;
        restAdapter28.callbackExecutor = executor29;
        retrofit.converter.Converter converter31 = null;
        restAdapter28.converter = converter31;
        java.util.concurrent.Executor executor33 = restAdapter28.callbackExecutor;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        java.util.concurrent.Executor executor45 = builder42.httpExecutor;
        retrofit.RestAdapter.Builder builder47 = builder42.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel48 = builder42.logLevel;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        builder42.logLevel = logLevel49;
        restAdapter28.logLevel = logLevel49;
        restAdapter13.logLevel = logLevel49;
        java.util.concurrent.Executor executor53 = restAdapter13.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter13.getLogLevel();
        restAdapter12.logLevel = logLevel54;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(restAdapter12);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test06728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06728");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log6 = restAdapter0.log;
        retrofit.RequestInterceptor requestInterceptor7 = restAdapter0.requestInterceptor;
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(log6);
        org.junit.Assert.assertNull(requestInterceptor7);
    }

    @Test
    public void test06729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06729");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.client.Client.Provider provider26 = builder19.clientProvider;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        builder19.log = log27;
        retrofit.RestAdapter.Builder builder29 = builder15.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = builder0.setLog(log27);
        builder30.ensureSaneDefaults();
        retrofit.client.Client.Provider provider32 = null;
        builder30.clientProvider = provider32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.client.Client.Provider provider42 = builder35.clientProvider;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder35.log = log43;
        retrofit.RestAdapter.Builder builder45 = builder34.setLog(log43);
        retrofit.Profiler profiler46 = builder34.profiler;
        java.util.concurrent.Executor executor47 = null;
        builder34.callbackExecutor = executor47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = builder53.logLevel;
        retrofit.RestAdapter.Builder builder55 = builder49.setLogLevel(logLevel54);
        retrofit.client.Client.Provider provider56 = builder49.clientProvider;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        builder49.log = log57;
        builder34.log = log57;
        builder30.log = log57;
        retrofit.RestAdapter.Builder builder62 = builder30.setServer("Retrofit-Idle");
        retrofit.Profiler profiler63 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder64 = builder62.setProfiler(profiler63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(profiler46);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test06730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06730");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        retrofit.RestAdapter.Builder builder13 = builder8.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler14 = builder8.errorHandler;
        retrofit.RestAdapter restAdapter15 = builder8.build();
        java.util.concurrent.Executor executor16 = restAdapter15.httpExecutor;
        retrofit.RestAdapter.Log log17 = restAdapter15.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(errorHandler14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(log17);
    }

    @Test
    public void test06731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06731");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel23);
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider44 = builder37.clientProvider;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log45;
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server9, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log45, logLevel48);
        retrofit.converter.Converter converter50 = null;
        restAdapter49.converter = converter50;
        retrofit.RestAdapter.LogLevel logLevel52 = restAdapter49.getLogLevel();
        retrofit.Profiler profiler53 = null;
        restAdapter49.profiler = profiler53;
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter49.getLogLevel();
        retrofit.ErrorHandler errorHandler56 = restAdapter49.errorHandler;
        retrofit.Profiler profiler57 = restAdapter49.profiler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler56);
        org.junit.Assert.assertNull(profiler57);
    }

    @Test
    public void test06732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06732");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        retrofit.Profiler profiler14 = builder0.profiler;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor16 = null;
        restAdapter15.callbackExecutor = executor16;
        retrofit.RestAdapter.Log log18 = restAdapter15.log;
        retrofit.converter.Converter converter19 = restAdapter15.converter;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor21 = builder20.callbackExecutor;
        retrofit.Profiler profiler22 = builder20.profiler;
        retrofit.RestAdapter.Builder builder24 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("Retrofit-Idle");
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Builder builder35 = builder24.setServer(server34);
        restAdapter15.server = server34;
        retrofit.RestAdapter.Builder builder37 = builder0.setServer(server34);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.Profiler profiler48 = null;
        builder46.profiler = profiler48;
        retrofit.Profiler profiler50 = null;
        builder46.profiler = profiler50;
        retrofit.RestAdapter restAdapter52 = builder46.build();
        retrofit.ErrorHandler errorHandler53 = builder46.errorHandler;
        retrofit.RestAdapter.Builder builder54 = builder37.setErrorHandler(errorHandler53);
        retrofit.Profiler profiler55 = null;
        builder54.profiler = profiler55;
        retrofit.RestAdapter.LogLevel logLevel57 = builder54.logLevel;
        boolean boolean58 = logLevel57.log();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(restAdapter52);
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test06733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06733");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = null;
        restAdapter0.errorHandler = errorHandler3;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel8 = null;
        restAdapter0.logLevel = logLevel8;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor11 = null;
        restAdapter10.callbackExecutor = executor11;
        retrofit.converter.Converter converter13 = restAdapter10.converter;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        restAdapter10.log = log14;
        java.util.concurrent.Executor executor16 = null;
        restAdapter10.httpExecutor = executor16;
        retrofit.RequestInterceptor requestInterceptor18 = restAdapter10.requestInterceptor;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler28 = builder27.errorHandler;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = builder29.callbackExecutor;
        retrofit.Profiler profiler31 = builder29.profiler;
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Builder builder44 = builder33.setServer(server43);
        retrofit.RestAdapter restAdapter45 = builder44.build();
        java.util.concurrent.Executor executor46 = restAdapter45.callbackExecutor;
        builder27.callbackExecutor = executor46;
        restAdapter10.httpExecutor = executor46;
        restAdapter0.httpExecutor = executor46;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNull(requestInterceptor18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(errorHandler28);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(executor46);
    }

    @Test
    public void test06734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06734");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        java.util.concurrent.Executor executor5 = null;
        builder0.callbackExecutor = executor5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RequestInterceptor requestInterceptor14 = null;
        builder7.requestInterceptor = requestInterceptor14;
        retrofit.RestAdapter.Log log16 = builder7.log;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        builder24.logLevel = logLevel26;
        boolean boolean28 = logLevel26.log();
        builder17.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder30 = builder7.setLogLevel(logLevel26);
        java.util.concurrent.Executor executor31 = builder30.callbackExecutor;
        builder30.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = builder30.httpExecutor;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.Server server43 = builder42.server;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel57);
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.Server server68 = builder67.server;
        retrofit.RestAdapter.Log log69 = null;
        builder67.log = log69;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.client.Client.Provider provider78 = builder71.clientProvider;
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        builder71.log = log79;
        retrofit.RestAdapter.Builder builder81 = builder67.setLog(log79);
        retrofit.RestAdapter.LogLevel logLevel82 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter(server43, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log79, logLevel82);
        retrofit.RestAdapter.RestHandler restHandler84 = restAdapter83.new RestHandler();
        retrofit.Server server85 = restAdapter83.server;
        retrofit.RestAdapter.Builder builder86 = builder30.setServer(server85);
        builder0.server = server85;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server85);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test06735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06735");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor8 = builder6.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter18 = builder17.build();
        retrofit.Profiler profiler19 = null;
        builder17.profiler = profiler19;
        retrofit.Profiler profiler21 = null;
        builder17.profiler = profiler21;
        retrofit.converter.Converter converter23 = builder17.converter;
        retrofit.RestAdapter.Builder builder24 = builder6.setConverter(converter23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-");
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(restAdapter18);
        org.junit.Assert.assertNotNull(converter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test06736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06736");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        restAdapter0.clientProvider = provider5;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.client.Response response10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response12 = restAdapter0.logAndReplaceResponse("Retrofit-Idle", response10, (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor2);
    }

    @Test
    public void test06737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06737");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider29 = builder22.clientProvider;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log30;
        retrofit.RestAdapter.Builder builder32 = builder21.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log30, logLevel33);
        boolean boolean35 = logLevel33.log();
        retrofit.RestAdapter.Builder builder36 = builder0.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor38 = builder37.callbackExecutor;
        retrofit.Profiler profiler39 = builder37.profiler;
        java.util.concurrent.Executor executor40 = builder37.callbackExecutor;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.Profiler profiler52 = builder51.profiler;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.Server server62 = builder61.server;
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.converter.Converter converter67 = null;
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = null;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor66, converter67, profiler68, errorHandler69, log70, logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder51.setServer(server62);
        retrofit.RestAdapter.LogLevel logLevel80 = builder79.logLevel;
        retrofit.Server server81 = builder79.server;
        builder79.ensureSaneDefaults();
        retrofit.converter.Converter converter83 = builder79.converter;
        builder37.converter = converter83;
        retrofit.RestAdapter.Builder builder85 = builder36.setConverter(converter83);
        retrofit.RestAdapter.Builder builder87 = builder36.setServer("Retrofit-");
        retrofit.RestAdapter.LogLevel logLevel88 = builder87.logLevel;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNull(profiler39);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(converter83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test06738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06738");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler1 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.Server server3 = builder2.server;
        retrofit.RestAdapter.Log log4 = null;
        builder2.log = log4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = builder6.logLevel;
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel7);
        retrofit.RestAdapter.Builder builder10 = builder8.setServer("Retrofit-Idle");
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        builder19.logLevel = logLevel21;
        boolean boolean23 = logLevel21.log();
        builder12.logLevel = logLevel21;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        builder12.requestInterceptor = requestInterceptor25;
        retrofit.converter.Converter converter27 = null;
        builder12.converter = converter27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = builder29.callbackExecutor;
        retrofit.Profiler profiler31 = builder29.profiler;
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Builder builder44 = builder33.setServer(server43);
        retrofit.RestAdapter restAdapter45 = builder44.build();
        java.util.concurrent.Executor executor46 = restAdapter45.callbackExecutor;
        builder12.httpExecutor = executor46;
        builder10.callbackExecutor = executor46;
        builder0.callbackExecutor = executor46;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = builder50.callbackExecutor;
        retrofit.Profiler profiler52 = builder50.profiler;
        retrofit.RestAdapter.Builder builder54 = builder50.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("Retrofit-Idle");
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Builder builder65 = builder54.setServer(server64);
        java.util.concurrent.Executor executor66 = builder65.callbackExecutor;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor68 = null;
        restAdapter67.callbackExecutor = executor68;
        retrofit.converter.Converter converter70 = restAdapter67.converter;
        retrofit.RestAdapter.RestHandler restHandler71 = restAdapter67.new RestHandler();
        retrofit.converter.Converter converter72 = restAdapter67.converter;
        java.util.concurrent.Executor executor73 = restAdapter67.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter67.logLevel = logLevel74;
        retrofit.RestAdapter.Builder builder76 = builder65.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder77 = builder0.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.Server server79 = builder78.server;
        retrofit.RestAdapter.Log log80 = null;
        builder78.log = log80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = builder82.logLevel;
        retrofit.RestAdapter.Builder builder84 = builder78.setLogLevel(logLevel83);
        builder0.logLevel = logLevel83;
        retrofit.ErrorHandler errorHandler86 = builder0.errorHandler;
        org.junit.Assert.assertNull(errorHandler1);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNull(converter70);
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertNull(executor73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNull(errorHandler86);
    }

    @Test
    public void test06739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06739");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.Profiler profiler5 = restAdapter0.profiler;
        retrofit.ErrorHandler errorHandler6 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(errorHandler6);
    }

    @Test
    public void test06740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06740");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RequestInterceptor requestInterceptor7 = null;
        builder0.requestInterceptor = requestInterceptor7;
        retrofit.RestAdapter.Log log9 = builder0.log;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        builder17.logLevel = logLevel19;
        boolean boolean21 = logLevel19.log();
        builder10.logLevel = logLevel19;
        retrofit.RestAdapter.Builder builder23 = builder0.setLogLevel(logLevel19);
        retrofit.Profiler profiler24 = builder23.profiler;
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder34 = builder32.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder36 = builder34.setLog(log35);
        java.util.concurrent.Executor executor37 = builder34.httpExecutor;
        retrofit.RestAdapter.Builder builder39 = builder34.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.client.Client.Provider provider48 = builder41.clientProvider;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log49;
        retrofit.RestAdapter.Builder builder51 = builder40.setLog(log49);
        retrofit.Profiler profiler52 = builder40.profiler;
        java.util.concurrent.Executor executor53 = null;
        builder40.callbackExecutor = executor53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider62 = builder55.clientProvider;
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        builder55.log = log63;
        builder40.log = log63;
        retrofit.RestAdapter.Builder builder66 = builder39.setLog(log63);
        retrofit.RestAdapter.Builder builder67 = builder23.setLog(log63);
        retrofit.RestAdapter.LogLevel logLevel68 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.Server server70 = builder69.server;
        retrofit.RestAdapter.Log log71 = null;
        builder69.log = log71;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel74 = builder73.logLevel;
        retrofit.RestAdapter.Builder builder75 = builder69.setLogLevel(logLevel74);
        retrofit.RestAdapter.Builder builder77 = builder75.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter78 = builder77.build();
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.NONE;
        builder77.logLevel = logLevel79;
        retrofit.converter.Converter converter81 = builder77.converter;
        retrofit.RestAdapter.Builder builder82 = builder23.setConverter(converter81);
        retrofit.ErrorHandler errorHandler83 = builder23.errorHandler;
        retrofit.client.Client.Provider provider84 = builder23.clientProvider;
        java.util.concurrent.Executor executor85 = builder23.callbackExecutor;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter86 = builder23.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server70);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(restAdapter78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(converter81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(errorHandler83);
        org.junit.Assert.assertNotNull(provider84);
        org.junit.Assert.assertNotNull(executor85);
    }

    @Test
    public void test06741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06741");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel6 = null;
        restAdapter0.logLevel = logLevel6;
        java.util.concurrent.Executor executor8 = null;
        restAdapter0.httpExecutor = executor8;
        java.util.concurrent.Executor executor10 = null;
        restAdapter0.callbackExecutor = executor10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor13 = builder12.callbackExecutor;
        retrofit.Profiler profiler14 = builder12.profiler;
        retrofit.RestAdapter.Builder builder16 = builder12.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("Retrofit-Idle");
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Builder builder27 = builder16.setServer(server26);
        retrofit.RestAdapter restAdapter28 = builder27.build();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = builder37.logLevel;
        builder36.logLevel = logLevel38;
        boolean boolean40 = logLevel38.log();
        builder29.logLevel = logLevel38;
        retrofit.RestAdapter.LogLevel logLevel42 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder27.setLogLevel(logLevel42);
        retrofit.RestAdapter restAdapter44 = builder43.build();
        java.util.concurrent.Executor executor45 = builder43.callbackExecutor;
        restAdapter0.callbackExecutor = executor45;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(restAdapter28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(executor45);
    }

    @Test
    public void test06742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06742");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.client.Client.Provider provider26 = builder19.clientProvider;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        builder19.log = log27;
        retrofit.RestAdapter.Builder builder29 = builder15.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = builder0.setLog(log27);
        retrofit.RequestInterceptor requestInterceptor31 = null;
        builder0.requestInterceptor = requestInterceptor31;
        java.util.concurrent.Executor executor33 = builder0.httpExecutor;
        java.util.concurrent.Executor executor34 = builder0.httpExecutor;
        java.util.concurrent.Executor executor35 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter44.new RestHandler();
        java.util.concurrent.Executor executor46 = restAdapter44.httpExecutor;
        java.util.concurrent.Executor executor47 = null;
        restAdapter44.callbackExecutor = executor47;
        retrofit.client.Client.Provider provider49 = null;
        restAdapter44.clientProvider = provider49;
        java.util.concurrent.Executor executor51 = null;
        restAdapter44.callbackExecutor = executor51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter62 = builder61.build();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter62.logLevel;
        retrofit.RequestInterceptor requestInterceptor64 = restAdapter62.requestInterceptor;
        restAdapter44.requestInterceptor = requestInterceptor64;
        retrofit.RestAdapter.Builder builder66 = builder42.setRequestInterceptor(requestInterceptor64);
        retrofit.RestAdapter.Builder builder67 = builder0.setRequestInterceptor(requestInterceptor64);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter68 = builder67.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(restAdapter62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
    }

    @Test
    public void test06743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06743");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.Server server27 = builder26.server;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel41);
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel41);
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter44.new RestHandler();
        retrofit.client.Client.Provider provider46 = restAdapter44.clientProvider;
        retrofit.RequestInterceptor requestInterceptor47 = restAdapter44.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor48 = restAdapter44.requestInterceptor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNull(requestInterceptor47);
        org.junit.Assert.assertNull(requestInterceptor48);
    }

    @Test
    public void test06744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06744");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = null;
        restAdapter0.converter = converter3;
        java.util.concurrent.Executor executor5 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler16 = builder15.errorHandler;
        retrofit.RestAdapter restAdapter17 = builder15.build();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter20.new RestHandler();
        java.util.concurrent.Executor executor22 = restAdapter20.httpExecutor;
        java.util.concurrent.Executor executor23 = null;
        restAdapter20.callbackExecutor = executor23;
        retrofit.client.Client.Provider provider25 = null;
        restAdapter20.clientProvider = provider25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("Retrofit-Idle");
        retrofit.Server server36 = builder35.server;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("Retrofit-Idle");
        retrofit.Server server54 = builder53.server;
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = null;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log62, logLevel68);
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel68);
        restAdapter20.log = log44;
        log44.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder75 = builder18.setLog(log44);
        builder15.log = log44;
        retrofit.ErrorHandler errorHandler77 = builder15.errorHandler;
        restAdapter0.errorHandler = errorHandler77;
        retrofit.RestAdapter.RestHandler restHandler79 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler80 = null;
        restAdapter0.profiler = profiler80;
        retrofit.Server server82 = restAdapter0.server;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(errorHandler16);
        org.junit.Assert.assertNotNull(restAdapter17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(errorHandler77);
        org.junit.Assert.assertNull(server82);
    }

    @Test
    public void test06745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06745");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.client.Client.Provider provider6 = null;
        builder0.clientProvider = provider6;
        retrofit.Server server8 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor9 = builder0.requestInterceptor;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.ErrorHandler errorHandler12 = null;
        restAdapter10.errorHandler = errorHandler12;
        retrofit.RestAdapter.Log log14 = restAdapter10.log;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter10.new RestHandler();
        retrofit.Profiler profiler18 = null;
        restAdapter10.profiler = profiler18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler29 = builder28.errorHandler;
        retrofit.RestAdapter restAdapter30 = builder28.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter33.new RestHandler();
        java.util.concurrent.Executor executor35 = restAdapter33.httpExecutor;
        java.util.concurrent.Executor executor36 = null;
        restAdapter33.callbackExecutor = executor36;
        retrofit.client.Client.Provider provider38 = null;
        restAdapter33.clientProvider = provider38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("Retrofit-Idle");
        retrofit.Server server49 = builder48.server;
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = builder62.logLevel;
        retrofit.RestAdapter.Builder builder64 = builder58.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder64.setServer("Retrofit-Idle");
        retrofit.Server server67 = builder66.server;
        retrofit.client.Client.Provider provider68 = null;
        java.util.concurrent.Executor executor69 = null;
        java.util.concurrent.Executor executor70 = null;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        retrofit.converter.Converter converter72 = null;
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = null;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.Server server77 = builder76.server;
        retrofit.RestAdapter.Log log78 = null;
        builder76.log = log78;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel81 = builder80.logLevel;
        retrofit.RestAdapter.Builder builder82 = builder76.setLogLevel(logLevel81);
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter(server67, provider68, executor69, executor70, requestInterceptor71, converter72, profiler73, errorHandler74, log75, logLevel81);
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log57, logLevel81);
        restAdapter33.log = log57;
        log57.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder88 = builder31.setLog(log57);
        builder28.log = log57;
        retrofit.ErrorHandler errorHandler90 = builder28.errorHandler;
        restAdapter10.errorHandler = errorHandler90;
        builder0.errorHandler = errorHandler90;
        retrofit.Server server93 = builder0.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(requestInterceptor9);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(server67);
        org.junit.Assert.assertNull(server77);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(errorHandler90);
        org.junit.Assert.assertNull(server93);
    }

    @Test
    public void test06746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06746");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter4 = null;
        restAdapter0.converter = converter4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor7 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Log log8 = restAdapter0.log;
        retrofit.Profiler profiler9 = null;
        restAdapter0.profiler = profiler9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        builder11.logLevel = logLevel13;
        boolean boolean15 = logLevel13.log();
        restAdapter0.logLevel = logLevel13;
        retrofit.Profiler profiler17 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler27 = builder26.errorHandler;
        retrofit.RestAdapter restAdapter28 = builder26.build();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter31.new RestHandler();
        java.util.concurrent.Executor executor33 = restAdapter31.httpExecutor;
        java.util.concurrent.Executor executor34 = null;
        restAdapter31.callbackExecutor = executor34;
        retrofit.client.Client.Provider provider36 = null;
        restAdapter31.clientProvider = provider36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("Retrofit-Idle");
        retrofit.Server server65 = builder64.server;
        retrofit.client.Client.Provider provider66 = null;
        java.util.concurrent.Executor executor67 = null;
        java.util.concurrent.Executor executor68 = null;
        retrofit.RequestInterceptor requestInterceptor69 = null;
        retrofit.converter.Converter converter70 = null;
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Log log73 = null;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.Server server75 = builder74.server;
        retrofit.RestAdapter.Log log76 = null;
        builder74.log = log76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel79 = builder78.logLevel;
        retrofit.RestAdapter.Builder builder80 = builder74.setLogLevel(logLevel79);
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server65, provider66, executor67, executor68, requestInterceptor69, converter70, profiler71, errorHandler72, log73, logLevel79);
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel79);
        restAdapter31.log = log55;
        log55.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder86 = builder29.setLog(log55);
        builder26.log = log55;
        retrofit.RequestInterceptor requestInterceptor88 = builder26.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor88;
        retrofit.RestAdapter.RestHandler restHandler90 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor91 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter0.logLevel;
        retrofit.RestAdapter.LogLevel logLevel93 = restAdapter0.logLevel;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertNotNull(restAdapter28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(server65);
        org.junit.Assert.assertNull(server75);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(requestInterceptor88);
        org.junit.Assert.assertNotNull(requestInterceptor91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06747");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        retrofit.RestAdapter.Builder builder13 = builder8.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log23;
        retrofit.RestAdapter.Builder builder25 = builder14.setLog(log23);
        retrofit.Profiler profiler26 = builder14.profiler;
        java.util.concurrent.Executor executor27 = null;
        builder14.callbackExecutor = executor27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.client.Client.Provider provider36 = builder29.clientProvider;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        builder29.log = log37;
        builder14.log = log37;
        retrofit.RestAdapter.Builder builder40 = builder13.setLog(log37);
        retrofit.Profiler profiler41 = builder40.profiler;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        builder42.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("Retrofit-Idle");
        retrofit.Server server55 = builder54.server;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider71 = builder64.clientProvider;
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log72;
        retrofit.RestAdapter.Builder builder74 = builder63.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log72, logLevel75);
        builder42.logLevel = logLevel75;
        retrofit.RestAdapter.LogLevel logLevel78 = builder42.logLevel;
        retrofit.Profiler profiler79 = builder42.profiler;
        retrofit.RestAdapter.Builder builder81 = builder42.setServer("Retrofit-");
        retrofit.ErrorHandler errorHandler82 = builder81.errorHandler;
        retrofit.converter.Converter converter83 = builder81.converter;
        retrofit.Server server84 = builder81.server;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.Server server86 = builder85.server;
        retrofit.RestAdapter.Log log87 = null;
        builder85.log = log87;
        retrofit.RestAdapter.Builder builder89 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel90 = builder89.logLevel;
        retrofit.RestAdapter.Builder builder91 = builder85.setLogLevel(logLevel90);
        retrofit.RestAdapter.Builder builder93 = builder91.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter94 = builder93.build();
        retrofit.RestAdapter.LogLevel logLevel95 = retrofit.RestAdapter.LogLevel.NONE;
        builder93.logLevel = logLevel95;
        retrofit.RestAdapter.Log log97 = builder93.log;
        retrofit.RestAdapter.Builder builder98 = builder81.setLog(log97);
        builder40.log = log97;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(errorHandler82);
        org.junit.Assert.assertNull(converter83);
        org.junit.Assert.assertNotNull(server84);
        org.junit.Assert.assertNull(server86);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(restAdapter94);
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log97);
        org.junit.Assert.assertNotNull(builder98);
    }

    @Test
    public void test06748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06748");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.httpExecutor = executor1;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.httpExecutor = executor3;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor6 = null;
        restAdapter0.requestInterceptor = requestInterceptor6;
        java.util.concurrent.Executor executor8 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler9 = restAdapter0.profiler;
        java.util.concurrent.Executor executor10 = restAdapter0.callbackExecutor;
        retrofit.Profiler profiler11 = null;
        restAdapter0.profiler = profiler11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter22 = builder21.build();
        java.util.concurrent.Executor executor23 = builder21.httpExecutor;
        restAdapter0.httpExecutor = executor23;
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(executor23);
    }

    @Test
    public void test06749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06749");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder3.setLog(log12);
        java.util.concurrent.Executor executor15 = builder14.callbackExecutor;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler25 = builder24.errorHandler;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor27 = builder26.callbackExecutor;
        retrofit.Profiler profiler28 = builder26.profiler;
        retrofit.RestAdapter.Builder builder30 = builder26.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        retrofit.RestAdapter.Builder builder37 = builder31.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = builder37.setServer("Retrofit-Idle");
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Builder builder41 = builder30.setServer(server40);
        retrofit.RestAdapter restAdapter42 = builder41.build();
        java.util.concurrent.Executor executor43 = restAdapter42.callbackExecutor;
        builder24.callbackExecutor = executor43;
        builder14.callbackExecutor = executor43;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter55 = builder54.build();
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        builder54.logLevel = logLevel56;
        retrofit.converter.Converter converter58 = builder54.converter;
        retrofit.RestAdapter.Builder builder59 = builder14.setConverter(converter58);
        builder0.converter = converter58;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(profiler28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(converter58);
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test06750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06750");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter9.logLevel;
        retrofit.ErrorHandler errorHandler12 = restAdapter9.errorHandler;
        retrofit.converter.Converter converter13 = null;
        restAdapter9.converter = converter13;
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter9.logLevel;
        java.util.concurrent.Executor executor16 = restAdapter9.httpExecutor;
        retrofit.RestAdapter.Log log17 = restAdapter9.log;
        retrofit.Profiler profiler18 = null;
        restAdapter9.profiler = profiler18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        builder20.logLevel = logLevel22;
        boolean boolean24 = logLevel22.log();
        restAdapter9.logLevel = logLevel22;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter9.logLevel;
        retrofit.ErrorHandler errorHandler27 = null;
        restAdapter9.errorHandler = errorHandler27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        builder29.logLevel = logLevel31;
        boolean boolean33 = logLevel31.log();
        restAdapter9.setLogLevel(logLevel31);
        boolean boolean35 = logLevel31.log();
        retrofit.RestAdapter.Builder builder36 = builder6.setLogLevel(logLevel31);
        retrofit.converter.Converter converter37 = builder6.converter;
        retrofit.RestAdapter.Builder builder39 = builder6.setServer("Retrofit-");
        java.lang.Class<?> wildcardClass40 = builder39.getClass();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test06751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06751");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder0.requestInterceptor = requestInterceptor13;
        java.util.concurrent.Executor executor15 = null;
        builder0.httpExecutor = executor15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.client.Client.Provider provider25 = builder18.clientProvider;
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        builder18.log = log26;
        retrofit.RestAdapter.Builder builder28 = builder17.setLog(log26);
        retrofit.converter.Converter converter29 = null;
        builder17.converter = converter29;
        retrofit.RestAdapter.Log log31 = builder17.log;
        retrofit.RestAdapter.Builder builder32 = builder0.setLog(log31);
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.ErrorHandler errorHandler34 = builder32.errorHandler;
        builder32.ensureSaneDefaults();
        retrofit.client.Client.Provider provider36 = builder32.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler34);
        org.junit.Assert.assertNotNull(provider36);
    }

    @Test
    public void test06752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06752");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler9 = builder8.errorHandler;
        retrofit.RestAdapter restAdapter10 = builder8.build();
        java.util.concurrent.Executor executor11 = null;
        restAdapter10.httpExecutor = executor11;
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        retrofit.RestAdapter restAdapter14 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter14.new RestHandler();
        retrofit.ErrorHandler errorHandler16 = null;
        restAdapter14.errorHandler = errorHandler16;
        retrofit.ErrorHandler errorHandler18 = restAdapter14.errorHandler;
        retrofit.converter.Converter converter19 = restAdapter14.converter;
        retrofit.RestAdapter.Log log20 = restAdapter14.log;
        java.util.concurrent.Executor executor21 = restAdapter14.callbackExecutor;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter22.logLevel;
        retrofit.ErrorHandler errorHandler25 = restAdapter22.errorHandler;
        retrofit.converter.Converter converter26 = null;
        restAdapter22.converter = converter26;
        retrofit.converter.Converter converter28 = restAdapter22.converter;
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter22.new RestHandler();
        retrofit.converter.Converter converter30 = null;
        restAdapter22.converter = converter30;
        retrofit.client.Client.Provider provider32 = restAdapter22.clientProvider;
        retrofit.Server server33 = restAdapter22.server;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor36 = restAdapter34.httpExecutor;
        java.util.concurrent.Executor executor37 = null;
        restAdapter34.callbackExecutor = executor37;
        retrofit.client.Client.Provider provider39 = null;
        restAdapter34.clientProvider = provider39;
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter34.new RestHandler();
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter42.new RestHandler();
        java.util.concurrent.Executor executor44 = restAdapter42.httpExecutor;
        retrofit.Profiler profiler45 = restAdapter42.profiler;
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter42.new RestHandler();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        java.util.concurrent.Executor executor51 = null;
        builder49.httpExecutor = executor51;
        retrofit.Server server53 = builder49.server;
        retrofit.converter.Converter converter54 = null;
        builder49.converter = converter54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        java.util.concurrent.Executor executor67 = builder64.httpExecutor;
        java.util.concurrent.Executor executor68 = null;
        builder64.httpExecutor = executor68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.Server server71 = builder70.server;
        retrofit.RestAdapter.Log log72 = null;
        builder70.log = log72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = builder74.logLevel;
        retrofit.RestAdapter.Builder builder76 = builder70.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.logLevel;
        builder64.logLevel = logLevel80;
        builder64.ensureSaneDefaults();
        retrofit.client.Client.Provider provider83 = builder64.clientProvider;
        builder49.clientProvider = provider83;
        restAdapter42.clientProvider = provider83;
        restAdapter34.clientProvider = provider83;
        restAdapter22.clientProvider = provider83;
        restAdapter14.clientProvider = provider83;
        restAdapter10.clientProvider = provider83;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNotNull(restAdapter10);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(errorHandler18);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNull(converter28);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(executor67);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider83);
    }

    @Test
    public void test06753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06753");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.Profiler profiler17 = builder15.profiler;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter27 = builder26.build();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.NONE;
        builder26.logLevel = logLevel28;
        retrofit.RestAdapter.Log log30 = builder26.log;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel33 = restAdapter31.logLevel;
        retrofit.ErrorHandler errorHandler34 = restAdapter31.errorHandler;
        retrofit.converter.Converter converter35 = null;
        restAdapter31.converter = converter35;
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter31.logLevel;
        java.util.concurrent.Executor executor38 = restAdapter31.httpExecutor;
        retrofit.RestAdapter.Log log39 = restAdapter31.log;
        retrofit.Profiler profiler40 = null;
        restAdapter31.profiler = profiler40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        builder42.logLevel = logLevel44;
        boolean boolean46 = logLevel44.log();
        restAdapter31.logLevel = logLevel44;
        retrofit.RestAdapter.LogLevel logLevel48 = restAdapter31.logLevel;
        retrofit.ErrorHandler errorHandler49 = null;
        restAdapter31.errorHandler = errorHandler49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        builder51.logLevel = logLevel53;
        boolean boolean55 = logLevel53.log();
        restAdapter31.setLogLevel(logLevel53);
        builder26.logLevel = logLevel53;
        retrofit.RestAdapter.Log log58 = builder26.log;
        retrofit.RestAdapter.Builder builder59 = builder15.setLog(log58);
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder68 = builder66.setServer("Retrofit-Idle");
        retrofit.Server server69 = builder68.server;
        retrofit.client.Client.Provider provider70 = null;
        java.util.concurrent.Executor executor71 = null;
        java.util.concurrent.Executor executor72 = null;
        retrofit.RequestInterceptor requestInterceptor73 = null;
        retrofit.converter.Converter converter74 = null;
        retrofit.Profiler profiler75 = null;
        retrofit.ErrorHandler errorHandler76 = null;
        retrofit.RestAdapter.Log log77 = null;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.Server server79 = builder78.server;
        retrofit.RestAdapter.Log log80 = null;
        builder78.log = log80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = builder82.logLevel;
        retrofit.RestAdapter.Builder builder84 = builder78.setLogLevel(logLevel83);
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server69, provider70, executor71, executor72, requestInterceptor73, converter74, profiler75, errorHandler76, log77, logLevel83);
        retrofit.RestAdapter.Builder builder86 = builder59.setLogLevel(logLevel83);
        retrofit.Profiler profiler87 = null;
        builder86.profiler = profiler87;
        retrofit.converter.Converter converter89 = builder86.converter;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(restAdapter27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNull(logLevel33);
        org.junit.Assert.assertNull(errorHandler34);
        org.junit.Assert.assertNull(logLevel37);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(server69);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(converter89);
    }

    @Test
    public void test06754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06754");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel1 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler2 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler4 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        restAdapter0.server = server14;
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler17 = null;
        restAdapter0.profiler = profiler17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler28 = builder27.errorHandler;
        retrofit.RestAdapter restAdapter29 = builder27.build();
        java.util.concurrent.Executor executor30 = null;
        restAdapter29.httpExecutor = executor30;
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter29.new RestHandler();
        retrofit.client.Client.Provider provider33 = null;
        restAdapter29.clientProvider = provider33;
        retrofit.Profiler profiler35 = null;
        restAdapter29.profiler = profiler35;
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter29.logLevel;
        retrofit.Profiler profiler38 = null;
        restAdapter29.profiler = profiler38;
        retrofit.ErrorHandler errorHandler40 = restAdapter29.errorHandler;
        restAdapter0.errorHandler = errorHandler40;
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler43 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor45 = builder44.callbackExecutor;
        retrofit.client.Client.Provider provider46 = null;
        builder44.clientProvider = provider46;
        retrofit.RestAdapter.Builder builder49 = builder44.setServer("hi!");
        builder49.ensureSaneDefaults();
        java.util.concurrent.Executor executor51 = builder49.httpExecutor;
        retrofit.RequestInterceptor requestInterceptor52 = builder49.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor52;
        org.junit.Assert.assertNull(logLevel1);
        org.junit.Assert.assertNull(errorHandler4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(errorHandler28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNotNull(requestInterceptor52);
    }

    @Test
    public void test06755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06755");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        builder25.logLevel = logLevel27;
        boolean boolean29 = logLevel27.log();
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel27);
        retrofit.Profiler profiler31 = null;
        restAdapter30.profiler = profiler31;
        retrofit.converter.Converter converter33 = null;
        restAdapter30.converter = converter33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Profiler profiler47 = null;
        builder43.profiler = profiler47;
        retrofit.converter.Converter converter49 = builder43.converter;
        restAdapter30.converter = converter49;
        restAdapter0.converter = converter49;
        retrofit.RestAdapter.Log log52 = null;
        restAdapter0.log = log52;
        retrofit.ErrorHandler errorHandler54 = restAdapter0.errorHandler;
        java.util.concurrent.Executor executor55 = restAdapter0.callbackExecutor;
        java.util.concurrent.Executor executor56 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(converter49);
        org.junit.Assert.assertNull(errorHandler54);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNull(executor56);
    }

    @Test
    public void test06756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06756");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = null;
        restAdapter0.errorHandler = errorHandler3;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.ErrorHandler errorHandler6 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel30);
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.client.Client.Provider provider51 = builder44.clientProvider;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        builder44.log = log52;
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server16, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log52, logLevel55);
        restAdapter0.server = server16;
        retrofit.Profiler profiler58 = restAdapter0.profiler;
        retrofit.converter.Converter converter59 = restAdapter0.converter;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler58);
        org.junit.Assert.assertNull(converter59);
    }

    @Test
    public void test06757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06757");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider10 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter12 = restAdapter0.converter;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider24 = builder17.clientProvider;
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log25;
        retrofit.RestAdapter.Builder builder27 = builder13.setLog(log25);
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter28.new RestHandler();
        java.util.concurrent.Executor executor30 = restAdapter28.httpExecutor;
        java.util.concurrent.Executor executor31 = null;
        restAdapter28.callbackExecutor = executor31;
        retrofit.ErrorHandler errorHandler33 = null;
        restAdapter28.errorHandler = errorHandler33;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter28.logLevel = logLevel35;
        builder13.logLevel = logLevel35;
        builder13.ensureSaneDefaults();
        java.util.concurrent.Executor executor39 = builder13.callbackExecutor;
        restAdapter0.httpExecutor = executor39;
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler42 = restAdapter0.profiler;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor39);
        org.junit.Assert.assertNull(profiler42);
    }

    @Test
    public void test06758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06758");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.httpExecutor = executor1;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.httpExecutor = executor3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLog(log14);
        java.util.concurrent.Executor executor16 = builder13.httpExecutor;
        java.util.concurrent.Executor executor17 = null;
        builder13.httpExecutor = executor17;
        retrofit.RestAdapter restAdapter19 = builder13.build();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("Retrofit-Idle");
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        builder37.logLevel = logLevel39;
        boolean boolean41 = logLevel39.log();
        builder30.logLevel = logLevel39;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        builder30.requestInterceptor = requestInterceptor43;
        retrofit.converter.Converter converter45 = null;
        builder30.converter = converter45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor48 = builder47.callbackExecutor;
        retrofit.Profiler profiler49 = builder47.profiler;
        retrofit.RestAdapter.Builder builder51 = builder47.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("Retrofit-Idle");
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Builder builder62 = builder51.setServer(server61);
        retrofit.RestAdapter restAdapter63 = builder62.build();
        java.util.concurrent.Executor executor64 = restAdapter63.callbackExecutor;
        builder30.httpExecutor = executor64;
        builder28.callbackExecutor = executor64;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor68 = builder67.callbackExecutor;
        retrofit.Profiler profiler69 = builder67.profiler;
        retrofit.RestAdapter.Builder builder71 = builder67.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.Server server73 = builder72.server;
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel77 = builder76.logLevel;
        retrofit.RestAdapter.Builder builder78 = builder72.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder80 = builder78.setServer("Retrofit-Idle");
        retrofit.Server server81 = builder80.server;
        retrofit.RestAdapter.Builder builder82 = builder71.setServer(server81);
        retrofit.RestAdapter restAdapter83 = builder82.build();
        java.util.concurrent.Executor executor84 = restAdapter83.callbackExecutor;
        retrofit.RestAdapter.Builder builder85 = builder13.setExecutors(executor64, executor84);
        restAdapter0.callbackExecutor = executor84;
        java.util.concurrent.Executor executor87 = restAdapter0.callbackExecutor;
        retrofit.converter.Converter converter88 = restAdapter0.converter;
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNotNull(restAdapter19);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(restAdapter63);
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(restAdapter83);
        org.junit.Assert.assertNotNull(executor84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(executor87);
        org.junit.Assert.assertNull(converter88);
    }

    @Test
    public void test06759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06759");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = null;
        restAdapter0.converter = converter3;
        java.util.concurrent.Executor executor5 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.Server server7 = restAdapter0.server;
        retrofit.RequestInterceptor requestInterceptor8 = null;
        restAdapter0.requestInterceptor = requestInterceptor8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = builder10.callbackExecutor;
        retrofit.Profiler profiler12 = builder10.profiler;
        retrofit.RestAdapter.Builder builder14 = builder10.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("Retrofit-Idle");
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Builder builder25 = builder14.setServer(server24);
        retrofit.RestAdapter restAdapter26 = builder25.build();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        builder34.logLevel = logLevel36;
        boolean boolean38 = logLevel36.log();
        builder27.logLevel = logLevel36;
        retrofit.RestAdapter.LogLevel logLevel40 = builder27.logLevel;
        retrofit.Profiler profiler41 = builder27.profiler;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor43 = builder42.callbackExecutor;
        retrofit.Profiler profiler44 = builder42.profiler;
        retrofit.RestAdapter.Builder builder46 = builder42.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder55 = builder53.setServer("Retrofit-Idle");
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Builder builder57 = builder46.setServer(server56);
        retrofit.RestAdapter.Builder builder58 = builder27.setServer(server56);
        retrofit.RestAdapter.Builder builder59 = builder25.setServer(server56);
        retrofit.ErrorHandler errorHandler60 = builder59.errorHandler;
        restAdapter0.errorHandler = errorHandler60;
        java.util.concurrent.Executor executor62 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler63 = null;
        restAdapter0.profiler = profiler63;
        retrofit.Server server65 = restAdapter0.server;
        retrofit.client.Client.Provider provider66 = restAdapter0.clientProvider;
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(profiler44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertNull(executor62);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertNull(provider66);
    }

    @Test
    public void test06760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06760");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log8;
        java.util.concurrent.Executor executor10 = null;
        builder0.callbackExecutor = executor10;
        retrofit.RestAdapter.Log log12 = builder0.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(log12);
    }

    @Test
    public void test06761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06761");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler9 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = builder10.callbackExecutor;
        retrofit.Profiler profiler12 = builder10.profiler;
        retrofit.RestAdapter.Builder builder14 = builder10.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("Retrofit-Idle");
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Builder builder25 = builder14.setServer(server24);
        retrofit.RestAdapter restAdapter26 = builder25.build();
        java.util.concurrent.Executor executor27 = restAdapter26.callbackExecutor;
        builder8.callbackExecutor = executor27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor30 = builder29.callbackExecutor;
        retrofit.Profiler profiler31 = builder29.profiler;
        retrofit.RestAdapter.Builder builder33 = builder29.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Builder builder44 = builder33.setServer(server43);
        retrofit.RestAdapter restAdapter45 = builder44.build();
        retrofit.client.Client.Provider provider46 = null;
        restAdapter45.clientProvider = provider46;
        retrofit.RestAdapter.Log log48 = restAdapter45.log;
        retrofit.client.Client.Provider provider49 = null;
        restAdapter45.clientProvider = provider49;
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter45.new RestHandler();
        retrofit.Server server53 = restAdapter45.server;
        retrofit.RestAdapter.Builder builder54 = builder8.setServer(server53);
        retrofit.Server server55 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder56 = builder54.setServer(server55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(restAdapter45);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(builder54);
    }

    @Test
    public void test06762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06762");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.client.Client.Provider provider4 = null;
        builder0.clientProvider = provider4;
        java.util.concurrent.Executor executor6 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder17 = builder11.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder11.log = log19;
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel31);
        retrofit.client.Client.Provider provider33 = builder26.clientProvider;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log34;
        retrofit.RestAdapter.Builder builder36 = builder22.setLog(log34);
        retrofit.RestAdapter.Builder builder37 = builder7.setLog(log34);
        retrofit.RequestInterceptor requestInterceptor38 = null;
        builder7.requestInterceptor = requestInterceptor38;
        java.util.concurrent.Executor executor40 = builder7.httpExecutor;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        builder45.logLevel = logLevel47;
        java.util.concurrent.Executor executor49 = null;
        builder45.callbackExecutor = executor49;
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor52 = null;
        restAdapter51.callbackExecutor = executor52;
        retrofit.converter.Converter converter54 = restAdapter51.converter;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        restAdapter51.log = log55;
        builder45.log = log55;
        builder41.log = log55;
        log55.log("Retrofit-Idle");
        log55.log("");
        builder7.log = log55;
        log55.log("Retrofit-Idle");
        builder0.log = log55;
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor68 = builder0.httpExecutor;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter69 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(executor68);
    }

    @Test
    public void test06763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06763");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.getLogLevel();
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(converter7);
    }

    @Test
    public void test06764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06764");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.client.Client.Provider provider17 = null;
        restAdapter16.clientProvider = provider17;
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.client.Client.Provider provider20 = null;
        restAdapter16.clientProvider = provider20;
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter16.new RestHandler();
        retrofit.Profiler profiler24 = null;
        restAdapter16.profiler = profiler24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        builder26.logLevel = logLevel28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder36.setServer("Retrofit-Idle");
        retrofit.Server server39 = builder38.server;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder48.setLogLevel(logLevel53);
        retrofit.client.Client.Provider provider55 = builder48.clientProvider;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        builder48.log = log56;
        retrofit.RestAdapter.Builder builder58 = builder47.setLog(log56);
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log56, logLevel59);
        builder26.logLevel = logLevel59;
        boolean boolean62 = logLevel59.log();
        restAdapter16.setLogLevel(logLevel59);
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test06765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06765");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        java.util.concurrent.Executor executor8 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        builder16.logLevel = logLevel18;
        boolean boolean20 = logLevel18.log();
        builder9.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel22 = builder9.logLevel;
        retrofit.Profiler profiler23 = builder9.profiler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = builder24.callbackExecutor;
        retrofit.Profiler profiler26 = builder24.profiler;
        retrofit.RestAdapter.Builder builder28 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Builder builder39 = builder28.setServer(server38);
        retrofit.RestAdapter.Builder builder40 = builder9.setServer(server38);
        retrofit.RestAdapter.Builder builder41 = builder6.setServer(server38);
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider60 = builder53.clientProvider;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log61;
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter73 = builder72.build();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter73.logLevel;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server38, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log61, logLevel74);
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.Profiler profiler77 = restAdapter75.profiler;
        java.util.concurrent.Executor executor78 = restAdapter75.callbackExecutor;
        java.lang.Throwable throwable79 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter75.logException(throwable79, "Retrofit-Idle");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(restAdapter73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler77);
        org.junit.Assert.assertNull(executor78);
    }

    @Test
    public void test06766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06766");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor1 = null;
        restAdapter0.requestInterceptor = requestInterceptor1;
        retrofit.Profiler profiler3 = null;
        restAdapter0.profiler = profiler3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor6 = builder5.callbackExecutor;
        retrofit.Profiler profiler7 = builder5.profiler;
        retrofit.RestAdapter.Builder builder9 = builder5.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Builder builder20 = builder9.setServer(server19);
        retrofit.RestAdapter restAdapter21 = builder20.build();
        java.util.concurrent.Executor executor22 = restAdapter21.callbackExecutor;
        restAdapter0.callbackExecutor = executor22;
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter26 = null;
        builder25.converter = converter26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        retrofit.Profiler profiler39 = builder38.profiler;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("Retrofit-Idle");
        retrofit.Server server49 = builder48.server;
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = null;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = builder62.logLevel;
        retrofit.RestAdapter.Builder builder64 = builder58.setLogLevel(logLevel63);
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log57, logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder38.setServer(server49);
        retrofit.RestAdapter.Builder builder67 = builder25.setServer(server49);
        retrofit.converter.Converter converter68 = null;
        builder67.converter = converter68;
        retrofit.Profiler profiler70 = builder67.profiler;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel72 = builder71.logLevel;
        boolean boolean73 = logLevel72.log();
        retrofit.RestAdapter.Builder builder74 = builder67.setLogLevel(logLevel72);
        restAdapter0.logLevel = logLevel72;
        boolean boolean76 = logLevel72.log();
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(profiler39);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test06767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06767");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        builder18.logLevel = logLevel20;
        boolean boolean22 = logLevel20.log();
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel20);
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.client.Client.Provider provider42 = builder35.clientProvider;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder35.log = log43;
        retrofit.RestAdapter.Builder builder45 = builder31.setLog(log43);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel55);
        retrofit.client.Client.Provider provider57 = builder50.clientProvider;
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        builder50.log = log58;
        retrofit.RestAdapter.Builder builder60 = builder46.setLog(log58);
        retrofit.RestAdapter.Builder builder61 = builder31.setLog(log58);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        java.util.concurrent.Executor executor64 = null;
        builder62.httpExecutor = executor64;
        retrofit.Server server66 = builder62.server;
        retrofit.RestAdapter.LogLevel logLevel67 = builder62.logLevel;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server9, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log58, logLevel67);
        retrofit.client.Client.Provider provider69 = restAdapter68.clientProvider;
        retrofit.RestAdapter.Log log70 = restAdapter68.log;
        retrofit.RequestInterceptor requestInterceptor71 = restAdapter68.requestInterceptor;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter72.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter72.logLevel;
        retrofit.ErrorHandler errorHandler75 = null;
        restAdapter72.errorHandler = errorHandler75;
        java.util.concurrent.Executor executor77 = null;
        restAdapter72.callbackExecutor = executor77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor80 = builder79.callbackExecutor;
        retrofit.Profiler profiler81 = builder79.profiler;
        retrofit.RestAdapter.Builder builder83 = builder79.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.Server server85 = builder84.server;
        retrofit.RestAdapter.Log log86 = null;
        builder84.log = log86;
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel89 = builder88.logLevel;
        retrofit.RestAdapter.Builder builder90 = builder84.setLogLevel(logLevel89);
        retrofit.RestAdapter.Builder builder92 = builder90.setServer("Retrofit-Idle");
        retrofit.Server server93 = builder92.server;
        retrofit.RestAdapter.Builder builder94 = builder83.setServer(server93);
        retrofit.RestAdapter restAdapter95 = builder94.build();
        java.util.concurrent.Executor executor96 = restAdapter95.callbackExecutor;
        retrofit.client.Client.Provider provider97 = restAdapter95.clientProvider;
        restAdapter72.clientProvider = provider97;
        restAdapter68.clientProvider = provider97;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNull(requestInterceptor71);
        org.junit.Assert.assertNull(logLevel74);
        org.junit.Assert.assertNull(executor80);
        org.junit.Assert.assertNull(profiler81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNull(server85);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNotNull(restAdapter95);
        org.junit.Assert.assertNotNull(executor96);
        org.junit.Assert.assertNotNull(provider97);
    }

    @Test
    public void test06768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06768");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler6 = builder0.errorHandler;
        retrofit.ErrorHandler errorHandler7 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = builder8.callbackExecutor;
        retrofit.Profiler profiler10 = builder8.profiler;
        retrofit.RestAdapter.Builder builder12 = builder8.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("Retrofit-Idle");
        retrofit.Server server22 = builder21.server;
        retrofit.RestAdapter.Builder builder23 = builder12.setServer(server22);
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor32 = null;
        restAdapter31.callbackExecutor = executor32;
        retrofit.converter.Converter converter34 = restAdapter31.converter;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        restAdapter31.log = log35;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor38 = null;
        restAdapter37.httpExecutor = executor38;
        java.util.concurrent.Executor executor40 = null;
        restAdapter37.httpExecutor = executor40;
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.Server server44 = builder43.server;
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel48 = builder47.logLevel;
        retrofit.RestAdapter.Builder builder49 = builder43.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder51 = builder49.setServer("Retrofit-Idle");
        retrofit.Server server52 = builder51.server;
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Log log60 = null;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.Server server62 = builder61.server;
        retrofit.RestAdapter.Log log63 = null;
        builder61.log = log63;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel66 = builder65.logLevel;
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel66);
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server52, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log60, logLevel66);
        boolean boolean69 = logLevel66.log();
        restAdapter37.logLevel = logLevel66;
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server22, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log35, logLevel66);
        retrofit.RestAdapter.Builder builder72 = builder0.setServer(server22);
        retrofit.RestAdapter restAdapter73 = builder0.build();
        retrofit.RestAdapter.RestHandler restHandler74 = restAdapter73.new RestHandler();
        java.util.concurrent.Executor executor75 = restAdapter73.callbackExecutor;
        retrofit.converter.Converter converter76 = restAdapter73.converter;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(server52);
        org.junit.Assert.assertNull(server62);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(restAdapter73);
        org.junit.Assert.assertNotNull(executor75);
        org.junit.Assert.assertNotNull(converter76);
    }

    @Test
    public void test06769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06769");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider2 = null;
        builder0.clientProvider = provider2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor5 = builder4.callbackExecutor;
        retrofit.Profiler profiler6 = builder4.profiler;
        retrofit.RestAdapter.Builder builder8 = builder4.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("Retrofit-Idle");
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Builder builder19 = builder8.setServer(server18);
        retrofit.RestAdapter.Log log20 = builder19.log;
        retrofit.RestAdapter.LogLevel logLevel21 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        builder29.logLevel = logLevel31;
        boolean boolean33 = logLevel31.log();
        builder22.logLevel = logLevel31;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        builder22.requestInterceptor = requestInterceptor35;
        retrofit.converter.Converter converter37 = null;
        builder22.converter = converter37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = builder39.callbackExecutor;
        retrofit.Profiler profiler41 = builder39.profiler;
        retrofit.RestAdapter.Builder builder43 = builder39.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("Retrofit-Idle");
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Builder builder54 = builder43.setServer(server53);
        retrofit.RestAdapter restAdapter55 = builder54.build();
        java.util.concurrent.Executor executor56 = restAdapter55.callbackExecutor;
        builder22.httpExecutor = executor56;
        builder19.httpExecutor = executor56;
        builder0.httpExecutor = executor56;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter60.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter60.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter60.new RestHandler();
        retrofit.ErrorHandler errorHandler64 = restAdapter60.errorHandler;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.Server server66 = builder65.server;
        retrofit.RestAdapter.Log log67 = null;
        builder65.log = log67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = builder69.logLevel;
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder73 = builder71.setServer("Retrofit-Idle");
        retrofit.Server server74 = builder73.server;
        restAdapter60.server = server74;
        retrofit.RestAdapter.Builder builder76 = builder0.setServer(server74);
        retrofit.RequestInterceptor requestInterceptor77 = builder0.requestInterceptor;
        retrofit.ErrorHandler errorHandler78 = builder0.errorHandler;
        retrofit.converter.Converter converter79 = builder0.converter;
        retrofit.RequestInterceptor requestInterceptor80 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(log20);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNull(errorHandler64);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(server74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(requestInterceptor77);
        org.junit.Assert.assertNull(errorHandler78);
        org.junit.Assert.assertNull(converter79);
        org.junit.Assert.assertNull(requestInterceptor80);
    }

    @Test
    public void test06770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06770");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        java.util.concurrent.Executor executor8 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        builder16.logLevel = logLevel18;
        boolean boolean20 = logLevel18.log();
        builder9.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel22 = builder9.logLevel;
        retrofit.Profiler profiler23 = builder9.profiler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = builder24.callbackExecutor;
        retrofit.Profiler profiler26 = builder24.profiler;
        retrofit.RestAdapter.Builder builder28 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Builder builder39 = builder28.setServer(server38);
        retrofit.RestAdapter.Builder builder40 = builder9.setServer(server38);
        retrofit.RestAdapter.Builder builder41 = builder6.setServer(server38);
        retrofit.converter.Converter converter42 = builder6.converter;
        retrofit.client.Client.Provider provider43 = builder6.clientProvider;
        retrofit.RestAdapter restAdapter44 = builder6.build();
        retrofit.Server server45 = builder6.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(server45);
    }

    @Test
    public void test06771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06771");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.Server server9 = builder8.server;
        retrofit.RestAdapter.Log log10 = null;
        builder8.log = log10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.RestAdapter.Builder builder14 = builder8.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("Retrofit-Idle");
        retrofit.Server server17 = builder16.server;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder34 = builder32.setServer("Retrofit-Idle");
        retrofit.Server server35 = builder34.server;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Log log43 = null;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log43, logLevel49);
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log25, logLevel49);
        retrofit.client.Client.Provider provider53 = null;
        java.util.concurrent.Executor executor54 = null;
        java.util.concurrent.Executor executor55 = null;
        retrofit.RequestInterceptor requestInterceptor56 = null;
        retrofit.converter.Converter converter57 = null;
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider71 = builder64.clientProvider;
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log72;
        retrofit.RestAdapter.Builder builder74 = builder60.setLog(log72);
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.Server server76 = builder75.server;
        retrofit.RestAdapter.Log log77 = null;
        builder75.log = log77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel80 = builder79.logLevel;
        retrofit.RestAdapter.Builder builder81 = builder75.setLogLevel(logLevel80);
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter(server17, provider53, executor54, executor55, requestInterceptor56, converter57, profiler58, errorHandler59, log72, logLevel80);
        retrofit.RestAdapter.Builder builder83 = builder0.setLog(log72);
        log72.log("hi!");
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(server76);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test06772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06772");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        java.util.concurrent.Executor executor15 = builder14.httpExecutor;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor17 = null;
        restAdapter16.callbackExecutor = executor17;
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.converter.Converter converter20 = restAdapter16.converter;
        java.util.concurrent.Executor executor21 = null;
        restAdapter16.callbackExecutor = executor21;
        java.util.concurrent.Executor executor23 = null;
        restAdapter16.httpExecutor = executor23;
        java.util.concurrent.Executor executor25 = restAdapter16.httpExecutor;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        builder26.logLevel = logLevel28;
        java.util.concurrent.Executor executor30 = null;
        builder26.callbackExecutor = executor30;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor33 = null;
        restAdapter32.callbackExecutor = executor33;
        retrofit.converter.Converter converter35 = restAdapter32.converter;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter32.log = log36;
        builder26.log = log36;
        restAdapter16.log = log36;
        retrofit.Profiler profiler40 = restAdapter16.profiler;
        retrofit.Server server41 = restAdapter16.server;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor43 = builder42.callbackExecutor;
        java.util.concurrent.Executor executor44 = null;
        builder42.httpExecutor = executor44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("Retrofit-Idle");
        retrofit.Server server55 = builder54.server;
        java.util.concurrent.Executor executor56 = builder54.httpExecutor;
        java.util.concurrent.Executor executor57 = builder54.httpExecutor;
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder60 = builder54.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter61 = builder54.converter;
        builder42.converter = converter61;
        restAdapter16.converter = converter61;
        retrofit.RestAdapter.Builder builder64 = builder14.setConverter(converter61);
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(converter61);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06773");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        builder24.logLevel = logLevel26;
        boolean boolean28 = logLevel26.log();
        builder17.logLevel = logLevel26;
        retrofit.RestAdapter.LogLevel logLevel30 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder15.setLogLevel(logLevel30);
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor33 = null;
        restAdapter32.callbackExecutor = executor33;
        retrofit.converter.Converter converter35 = restAdapter32.converter;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter32.log = log36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel38;
        builder31.logLevel = logLevel38;
        retrofit.RestAdapter.LogLevel logLevel41 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("Retrofit-Idle");
        retrofit.Server server51 = builder50.server;
        retrofit.Profiler profiler52 = null;
        builder50.profiler = profiler52;
        java.util.concurrent.Executor executor54 = builder50.callbackExecutor;
        builder50.ensureSaneDefaults();
        retrofit.client.Client.Provider provider56 = builder50.clientProvider;
        retrofit.RestAdapter.Builder builder57 = builder31.setClient(provider56);
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        retrofit.client.Client.Provider provider70 = builder63.clientProvider;
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        builder63.log = log71;
        retrofit.RestAdapter.Builder builder73 = builder59.setLog(log71);
        retrofit.Server server74 = builder59.server;
        java.util.concurrent.Executor executor75 = null;
        builder59.callbackExecutor = executor75;
        retrofit.converter.Converter converter77 = builder59.converter;
        retrofit.ErrorHandler errorHandler78 = builder59.errorHandler;
        java.util.concurrent.Executor executor79 = null;
        builder59.callbackExecutor = executor79;
        retrofit.RestAdapter.LogLevel logLevel81 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder82 = builder57.setLogLevel(logLevel81);
        retrofit.Profiler profiler83 = builder82.profiler;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNotNull(provider56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertNull(converter77);
        org.junit.Assert.assertNull(errorHandler78);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(profiler83);
    }

    @Test
    public void test06774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06774");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        java.util.concurrent.Executor executor13 = null;
        builder0.httpExecutor = executor13;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor16 = null;
        restAdapter15.callbackExecutor = executor16;
        retrofit.RestAdapter.Log log18 = restAdapter15.log;
        retrofit.converter.Converter converter19 = restAdapter15.converter;
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter15.new RestHandler();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        restAdapter15.logLevel = logLevel22;
        builder0.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.RequestInterceptor requestInterceptor32 = null;
        builder25.requestInterceptor = requestInterceptor32;
        retrofit.RestAdapter.Log log34 = builder25.log;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        builder42.logLevel = logLevel44;
        boolean boolean46 = logLevel44.log();
        builder35.logLevel = logLevel44;
        retrofit.RestAdapter.Builder builder48 = builder25.setLogLevel(logLevel44);
        java.util.concurrent.Executor executor49 = builder48.callbackExecutor;
        builder48.ensureSaneDefaults();
        java.util.concurrent.Executor executor51 = builder48.httpExecutor;
        builder0.callbackExecutor = executor51;
        retrofit.Server server53 = builder0.server;
        retrofit.Server server54 = builder0.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(log18);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(log34);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(executor49);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertNull(server54);
    }

    @Test
    public void test06775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06775");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        restAdapter0.clientProvider = provider9;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor12 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("Retrofit-Idle");
        retrofit.Server server22 = builder21.server;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        retrofit.RestAdapter.Builder builder37 = builder31.setLogLevel(logLevel36);
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel36);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        java.util.concurrent.Executor executor41 = null;
        builder39.httpExecutor = executor41;
        retrofit.Server server43 = builder39.server;
        retrofit.RestAdapter.LogLevel logLevel44 = builder39.logLevel;
        restAdapter38.logLevel = logLevel44;
        retrofit.Profiler profiler46 = null;
        restAdapter38.profiler = profiler46;
        retrofit.Server server48 = restAdapter38.server;
        restAdapter0.server = server48;
        retrofit.RestAdapter.Log log50 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel51 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler52 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNull(log50);
        org.junit.Assert.assertNull(logLevel51);
        org.junit.Assert.assertNull(logLevel53);
    }

    @Test
    public void test06776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06776");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.Server server2 = builder1.server;
        retrofit.RestAdapter.Log log3 = null;
        builder1.log = log3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder7 = builder1.setLogLevel(logLevel6);
        retrofit.client.Client.Provider provider8 = builder1.clientProvider;
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        builder1.log = log9;
        retrofit.RestAdapter.Builder builder11 = builder0.setLog(log9);
        retrofit.Profiler profiler12 = builder11.profiler;
        retrofit.converter.Converter converter13 = null;
        builder11.converter = converter13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = builder15.callbackExecutor;
        retrofit.client.Client.Provider provider17 = null;
        builder15.clientProvider = provider17;
        java.util.concurrent.Executor executor19 = builder15.callbackExecutor;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        builder20.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel29);
        retrofit.client.Client.Provider provider31 = builder24.clientProvider;
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        builder24.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.Server server43 = builder42.server;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("Retrofit-Idle");
        retrofit.Server server61 = builder60.server;
        retrofit.client.Client.Provider provider62 = null;
        java.util.concurrent.Executor executor63 = null;
        java.util.concurrent.Executor executor64 = null;
        retrofit.RequestInterceptor requestInterceptor65 = null;
        retrofit.converter.Converter converter66 = null;
        retrofit.Profiler profiler67 = null;
        retrofit.ErrorHandler errorHandler68 = null;
        retrofit.RestAdapter.Log log69 = null;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.Server server71 = builder70.server;
        retrofit.RestAdapter.Log log72 = null;
        builder70.log = log72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = builder74.logLevel;
        retrofit.RestAdapter.Builder builder76 = builder70.setLogLevel(logLevel75);
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server61, provider62, executor63, executor64, requestInterceptor65, converter66, profiler67, errorHandler68, log69, logLevel75);
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel75);
        builder24.log = log51;
        retrofit.RestAdapter.Log log80 = builder24.log;
        builder20.log = log80;
        log80.log("Retrofit-Idle");
        builder15.log = log80;
        builder11.log = log80;
        log80.log("");
        org.junit.Assert.assertNull(server2);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log80);
    }

    @Test
    public void test06777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06777");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = null;
        restAdapter0.converter = converter3;
        java.util.concurrent.Executor executor5 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.Server server7 = restAdapter0.server;
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter0.requestInterceptor;
        retrofit.client.Client.Provider provider9 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test06778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06778");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        restAdapter0.log = log4;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Log log8 = restAdapter0.log;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider19 = null;
        builder16.clientProvider = provider19;
        retrofit.Server server21 = builder16.server;
        retrofit.RestAdapter restAdapter22 = builder16.build();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        builder30.logLevel = logLevel32;
        boolean boolean34 = logLevel32.log();
        builder23.logLevel = logLevel32;
        retrofit.RestAdapter.LogLevel logLevel36 = builder23.logLevel;
        retrofit.Profiler profiler37 = builder23.profiler;
        java.util.concurrent.Executor executor38 = null;
        builder23.httpExecutor = executor38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter40.new RestHandler();
        java.util.concurrent.Executor executor42 = restAdapter40.httpExecutor;
        java.util.concurrent.Executor executor43 = null;
        restAdapter40.callbackExecutor = executor43;
        retrofit.ErrorHandler errorHandler45 = null;
        restAdapter40.errorHandler = errorHandler45;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter40.logLevel = logLevel47;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter40.logLevel = logLevel49;
        boolean boolean51 = logLevel49.log();
        retrofit.RestAdapter.Builder builder52 = builder23.setLogLevel(logLevel49);
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        boolean boolean54 = logLevel53.log();
        retrofit.RestAdapter.Builder builder55 = builder16.setLogLevel(logLevel53);
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor57 = null;
        restAdapter56.requestInterceptor = requestInterceptor57;
        retrofit.Profiler profiler59 = null;
        restAdapter56.profiler = profiler59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor62 = builder61.callbackExecutor;
        retrofit.Profiler profiler63 = builder61.profiler;
        retrofit.RestAdapter.Builder builder65 = builder61.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.Server server67 = builder66.server;
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = builder70.logLevel;
        retrofit.RestAdapter.Builder builder72 = builder66.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder74 = builder72.setServer("Retrofit-Idle");
        retrofit.Server server75 = builder74.server;
        retrofit.RestAdapter.Builder builder76 = builder65.setServer(server75);
        retrofit.RestAdapter restAdapter77 = builder76.build();
        java.util.concurrent.Executor executor78 = restAdapter77.callbackExecutor;
        restAdapter56.callbackExecutor = executor78;
        retrofit.RestAdapter.RestHandler restHandler80 = restAdapter56.new RestHandler();
        java.util.concurrent.Executor executor81 = restAdapter56.callbackExecutor;
        builder16.httpExecutor = executor81;
        restAdapter0.callbackExecutor = executor81;
        retrofit.ErrorHandler errorHandler84 = restAdapter0.errorHandler;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(executor62);
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(server75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(executor78);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNull(errorHandler84);
    }

    @Test
    public void test06779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06779");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.RestAdapter.Log log17 = builder15.log;
        retrofit.RestAdapter.LogLevel logLevel18 = builder15.logLevel;
        retrofit.RestAdapter restAdapter19 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel21 = restAdapter19.logLevel;
        retrofit.ErrorHandler errorHandler22 = null;
        restAdapter19.errorHandler = errorHandler22;
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter19.new RestHandler();
        retrofit.Profiler profiler25 = restAdapter19.profiler;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        builder30.logLevel = logLevel32;
        java.util.concurrent.Executor executor34 = null;
        builder30.callbackExecutor = executor34;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor37 = null;
        restAdapter36.callbackExecutor = executor37;
        retrofit.converter.Converter converter39 = restAdapter36.converter;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        restAdapter36.log = log40;
        builder30.log = log40;
        builder26.log = log40;
        log40.log("Retrofit-Idle");
        log40.log("");
        restAdapter19.log = log40;
        builder15.log = log40;
        java.util.concurrent.Executor executor50 = builder15.callbackExecutor;
        retrofit.RestAdapter.Log log51 = builder15.log;
        retrofit.ErrorHandler errorHandler52 = builder15.errorHandler;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor54 = builder53.callbackExecutor;
        retrofit.Profiler profiler55 = builder53.profiler;
        retrofit.RestAdapter.Builder builder57 = builder53.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = builder62.logLevel;
        retrofit.RestAdapter.Builder builder64 = builder58.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder64.setServer("Retrofit-Idle");
        retrofit.Server server67 = builder66.server;
        retrofit.RestAdapter.Builder builder68 = builder57.setServer(server67);
        retrofit.RestAdapter restAdapter69 = builder68.build();
        retrofit.client.Client.Provider provider70 = null;
        restAdapter69.clientProvider = provider70;
        retrofit.RestAdapter.Log log72 = restAdapter69.log;
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter69.getLogLevel();
        retrofit.ErrorHandler errorHandler74 = null;
        restAdapter69.errorHandler = errorHandler74;
        retrofit.Server server76 = restAdapter69.server;
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter69.new RestHandler();
        retrofit.converter.Converter converter78 = restAdapter69.converter;
        builder15.converter = converter78;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel21);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNull(profiler55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(server67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(restAdapter69);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server76);
        org.junit.Assert.assertNotNull(converter78);
    }

    @Test
    public void test06780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06780");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler9 = builder8.errorHandler;
        retrofit.RestAdapter restAdapter10 = builder8.build();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter13.new RestHandler();
        java.util.concurrent.Executor executor15 = restAdapter13.httpExecutor;
        java.util.concurrent.Executor executor16 = null;
        restAdapter13.callbackExecutor = executor16;
        retrofit.client.Client.Provider provider18 = null;
        restAdapter13.clientProvider = provider18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("Retrofit-Idle");
        retrofit.Server server29 = builder28.server;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel61);
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel61);
        restAdapter13.log = log37;
        log37.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder68 = builder11.setLog(log37);
        builder8.log = log37;
        retrofit.RestAdapter.Log log70 = builder8.log;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        builder8.requestInterceptor = requestInterceptor71;
        java.util.concurrent.Executor executor73 = builder8.callbackExecutor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNotNull(restAdapter10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(executor73);
    }

    @Test
    public void test06781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06781");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider2 = null;
        builder0.clientProvider = provider2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.ErrorHandler errorHandler6 = builder5.errorHandler;
        retrofit.client.Client.Provider provider7 = builder5.clientProvider;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(provider7);
    }

    @Test
    public void test06782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06782");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider2 = null;
        builder0.clientProvider = provider2;
        retrofit.Profiler profiler4 = builder0.profiler;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel28);
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.converter.Converter converter35 = null;
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        retrofit.client.Client.Provider provider49 = builder42.clientProvider;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log50;
        retrofit.RestAdapter.Builder builder52 = builder38.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server14, provider31, executor32, executor33, requestInterceptor34, converter35, profiler36, errorHandler37, log50, logLevel53);
        retrofit.converter.Converter converter55 = null;
        restAdapter54.converter = converter55;
        retrofit.Profiler profiler57 = null;
        restAdapter54.profiler = profiler57;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter59.new RestHandler();
        retrofit.ErrorHandler errorHandler61 = null;
        restAdapter59.errorHandler = errorHandler61;
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter59.logLevel;
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter59.logLevel;
        retrofit.converter.Converter converter65 = null;
        restAdapter59.converter = converter65;
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter59.getLogLevel();
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.Server server69 = builder68.server;
        retrofit.RestAdapter.Log log70 = null;
        builder68.log = log70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = builder72.logLevel;
        retrofit.RestAdapter.Builder builder74 = builder68.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("Retrofit-Idle");
        retrofit.Server server77 = builder76.server;
        retrofit.RestAdapter.Builder builder79 = builder76.setServer("Retrofit-Idle");
        builder76.ensureSaneDefaults();
        java.util.concurrent.Executor executor81 = builder76.callbackExecutor;
        retrofit.ErrorHandler errorHandler82 = builder76.errorHandler;
        restAdapter59.errorHandler = errorHandler82;
        restAdapter54.errorHandler = errorHandler82;
        retrofit.RestAdapter.Builder builder85 = builder0.setErrorHandler(errorHandler82);
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertNull(logLevel64);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(server77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNotNull(errorHandler82);
        org.junit.Assert.assertNotNull(builder85);
    }

    @Test
    public void test06783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06783");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = builder10.callbackExecutor;
        retrofit.Profiler profiler12 = builder10.profiler;
        retrofit.RestAdapter.Builder builder14 = builder10.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter15 = builder14.converter;
        retrofit.RestAdapter.Builder builder17 = builder14.setServer("Retrofit-Idle");
        retrofit.Server server18 = builder14.server;
        builder0.server = server18;
        retrofit.RestAdapter restAdapter20 = builder0.build();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = builder21.server;
        java.util.concurrent.Executor executor23 = null;
        builder21.httpExecutor = executor23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("Retrofit-Idle");
        retrofit.Server server36 = builder35.server;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.client.Client.Provider provider52 = builder45.clientProvider;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log53;
        retrofit.RestAdapter.Builder builder55 = builder44.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log53, logLevel56);
        retrofit.RestAdapter.Builder builder58 = builder25.setServer(server36);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = builder63.logLevel;
        retrofit.RestAdapter.Builder builder65 = builder59.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder67 = builder65.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter68 = builder67.build();
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.logLevel;
        retrofit.RequestInterceptor requestInterceptor70 = restAdapter68.requestInterceptor;
        retrofit.RestAdapter.Builder builder71 = builder58.setRequestInterceptor(requestInterceptor70);
        retrofit.RestAdapter.Builder builder72 = builder21.setRequestInterceptor(requestInterceptor70);
        retrofit.RestAdapter.Builder builder73 = builder0.setRequestInterceptor(requestInterceptor70);
        retrofit.RestAdapter restAdapter74 = builder73.build();
        retrofit.client.Client client75 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder76 = builder73.setClient(client75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(restAdapter20);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(restAdapter68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
    }

    @Test
    public void test06784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06784");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter15.new RestHandler();
        java.util.concurrent.Executor executor17 = restAdapter15.httpExecutor;
        java.util.concurrent.Executor executor18 = null;
        restAdapter15.callbackExecutor = executor18;
        retrofit.ErrorHandler errorHandler20 = null;
        restAdapter15.errorHandler = errorHandler20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter15.logLevel = logLevel22;
        builder0.logLevel = logLevel22;
        retrofit.RestAdapter.Builder builder26 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log27 = builder26.log;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RequestInterceptor requestInterceptor30 = builder28.requestInterceptor;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor32 = builder31.callbackExecutor;
        retrofit.Profiler profiler33 = builder31.profiler;
        retrofit.RestAdapter.Builder builder35 = builder31.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("Retrofit-Idle");
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Builder builder46 = builder35.setServer(server45);
        retrofit.RestAdapter restAdapter47 = builder46.build();
        java.util.concurrent.Executor executor48 = restAdapter47.callbackExecutor;
        builder28.httpExecutor = executor48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        java.util.concurrent.Executor executor52 = null;
        builder50.httpExecutor = executor52;
        retrofit.Server server54 = builder50.server;
        retrofit.RestAdapter.LogLevel logLevel55 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        java.util.concurrent.Executor executor63 = builder62.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor64 = builder62.requestInterceptor;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.Server server66 = builder65.server;
        retrofit.RestAdapter.Log log67 = null;
        builder65.log = log67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = builder69.logLevel;
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder73 = builder71.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter74 = builder73.build();
        retrofit.Profiler profiler75 = null;
        builder73.profiler = profiler75;
        retrofit.Profiler profiler77 = null;
        builder73.profiler = profiler77;
        retrofit.converter.Converter converter79 = builder73.converter;
        retrofit.RestAdapter.Builder builder80 = builder62.setConverter(converter79);
        builder50.converter = converter79;
        retrofit.RestAdapter.Builder builder82 = builder28.setConverter(converter79);
        retrofit.RestAdapter.Builder builder83 = builder26.setConverter(converter79);
        retrofit.RestAdapter restAdapter84 = builder83.build();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertNull(requestInterceptor30);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(restAdapter47);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNull(requestInterceptor64);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(converter79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(restAdapter84);
    }

    @Test
    public void test06785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06785");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log8;
        java.util.concurrent.Executor executor10 = null;
        builder0.callbackExecutor = executor10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider23 = builder16.clientProvider;
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder16.log = log24;
        retrofit.RestAdapter.Builder builder26 = builder12.setLog(log24);
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter27.new RestHandler();
        java.util.concurrent.Executor executor29 = restAdapter27.httpExecutor;
        java.util.concurrent.Executor executor30 = null;
        restAdapter27.callbackExecutor = executor30;
        retrofit.ErrorHandler errorHandler32 = null;
        restAdapter27.errorHandler = errorHandler32;
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter27.logLevel = logLevel34;
        builder12.logLevel = logLevel34;
        builder12.ensureSaneDefaults();
        java.util.concurrent.Executor executor38 = builder12.callbackExecutor;
        builder0.httpExecutor = executor38;
        retrofit.converter.Converter converter40 = builder0.converter;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler42 = restAdapter41.new RestHandler();
        retrofit.ErrorHandler errorHandler43 = null;
        restAdapter41.errorHandler = errorHandler43;
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter41.new RestHandler();
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter46.new RestHandler();
        java.util.concurrent.Executor executor48 = restAdapter46.httpExecutor;
        java.util.concurrent.Executor executor49 = null;
        restAdapter46.callbackExecutor = executor49;
        retrofit.client.Client.Provider provider51 = null;
        restAdapter46.clientProvider = provider51;
        java.util.concurrent.Executor executor53 = null;
        restAdapter46.callbackExecutor = executor53;
        retrofit.RestAdapter.LogLevel logLevel55 = restAdapter46.logLevel;
        retrofit.Server server56 = null;
        restAdapter46.server = server56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = builder62.logLevel;
        retrofit.RestAdapter.Builder builder64 = builder58.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder64.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler67 = builder66.errorHandler;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor69 = builder68.callbackExecutor;
        retrofit.Profiler profiler70 = builder68.profiler;
        retrofit.RestAdapter.Builder builder72 = builder68.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Log log75 = null;
        builder73.log = log75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("Retrofit-Idle");
        retrofit.Server server82 = builder81.server;
        retrofit.RestAdapter.Builder builder83 = builder72.setServer(server82);
        retrofit.RestAdapter restAdapter84 = builder83.build();
        java.util.concurrent.Executor executor85 = restAdapter84.callbackExecutor;
        builder66.callbackExecutor = executor85;
        restAdapter46.callbackExecutor = executor85;
        restAdapter41.callbackExecutor = executor85;
        builder0.callbackExecutor = executor85;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNull(logLevel55);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(errorHandler67);
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(restAdapter84);
        org.junit.Assert.assertNotNull(executor85);
    }

    @Test
    public void test06786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06786");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        java.util.concurrent.Executor executor4 = restAdapter0.httpExecutor;
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.converter.Converter converter7 = restAdapter0.converter;
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(logLevel8);
    }

    @Test
    public void test06787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06787");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider2 = null;
        builder0.clientProvider = provider2;
        java.util.concurrent.Executor executor4 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel28);
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.converter.Converter converter35 = null;
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        retrofit.client.Client.Provider provider49 = builder42.clientProvider;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log50;
        retrofit.RestAdapter.Builder builder52 = builder38.setLog(log50);
        retrofit.RestAdapter.LogLevel logLevel53 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server14, provider31, executor32, executor33, requestInterceptor34, converter35, profiler36, errorHandler37, log50, logLevel53);
        retrofit.converter.Converter converter55 = null;
        restAdapter54.converter = converter55;
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter54.new RestHandler();
        retrofit.Profiler profiler58 = restAdapter54.profiler;
        retrofit.RestAdapter.Log log59 = restAdapter54.log;
        retrofit.RestAdapter.Builder builder60 = builder0.setLog(log59);
        log59.log("");
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test06788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06788");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.httpExecutor = executor1;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.httpExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        restAdapter0.clientProvider = provider5;
        retrofit.RestAdapter.Log log7 = restAdapter0.log;
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.Log log11 = restAdapter8.log;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor13 = null;
        restAdapter12.callbackExecutor = executor13;
        retrofit.converter.Converter converter15 = restAdapter12.converter;
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter12.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor17 = null;
        restAdapter12.requestInterceptor = requestInterceptor17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder29 = builder27.setLog(log28);
        java.util.concurrent.Executor executor30 = builder27.httpExecutor;
        retrofit.RestAdapter restAdapter31 = builder27.build();
        java.util.concurrent.Executor executor32 = restAdapter31.httpExecutor;
        retrofit.converter.Converter converter33 = restAdapter31.converter;
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter31.new RestHandler();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        builder42.logLevel = logLevel44;
        boolean boolean46 = logLevel44.log();
        builder35.logLevel = logLevel44;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        builder35.requestInterceptor = requestInterceptor48;
        java.util.concurrent.Executor executor50 = null;
        builder35.httpExecutor = executor50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider60 = builder53.clientProvider;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log61;
        retrofit.RestAdapter.Builder builder63 = builder52.setLog(log61);
        retrofit.converter.Converter converter64 = null;
        builder52.converter = converter64;
        retrofit.RestAdapter.Log log66 = builder52.log;
        retrofit.RestAdapter.Builder builder67 = builder35.setLog(log66);
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.ErrorHandler errorHandler69 = builder67.errorHandler;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor71 = builder70.callbackExecutor;
        retrofit.Profiler profiler72 = builder70.profiler;
        retrofit.RestAdapter.Builder builder74 = builder70.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.Server server76 = builder75.server;
        retrofit.RestAdapter.Log log77 = null;
        builder75.log = log77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel80 = builder79.logLevel;
        retrofit.RestAdapter.Builder builder81 = builder75.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder83 = builder81.setServer("Retrofit-Idle");
        retrofit.Server server84 = builder83.server;
        retrofit.RestAdapter.Builder builder85 = builder74.setServer(server84);
        retrofit.RestAdapter restAdapter86 = builder85.build();
        java.util.concurrent.Executor executor87 = restAdapter86.callbackExecutor;
        builder67.callbackExecutor = executor87;
        restAdapter31.httpExecutor = executor87;
        restAdapter12.callbackExecutor = executor87;
        restAdapter8.callbackExecutor = executor87;
        restAdapter0.httpExecutor = executor87;
        retrofit.ErrorHandler errorHandler93 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler94 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler95 = null;
        restAdapter0.profiler = profiler95;
        java.util.concurrent.Executor executor97 = restAdapter0.callbackExecutor;
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(log11);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNotNull(executor32);
        org.junit.Assert.assertNotNull(converter33);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler69);
        org.junit.Assert.assertNull(executor71);
        org.junit.Assert.assertNull(profiler72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(server76);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(server84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(restAdapter86);
        org.junit.Assert.assertNotNull(executor87);
        org.junit.Assert.assertNull(errorHandler93);
        org.junit.Assert.assertNull(executor97);
    }

    @Test
    public void test06789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06789");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        java.util.concurrent.Executor executor5 = null;
        restAdapter0.callbackExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        restAdapter0.httpExecutor = executor7;
        java.util.concurrent.Executor executor9 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        builder10.logLevel = logLevel12;
        java.util.concurrent.Executor executor14 = null;
        builder10.callbackExecutor = executor14;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor17 = null;
        restAdapter16.callbackExecutor = executor17;
        retrofit.converter.Converter converter19 = restAdapter16.converter;
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        restAdapter16.log = log20;
        builder10.log = log20;
        restAdapter0.log = log20;
        retrofit.Profiler profiler24 = restAdapter0.profiler;
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter0.getLogLevel();
        retrofit.Server server26 = restAdapter0.server;
        java.util.concurrent.Executor executor27 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertNull(executor27);
    }

    @Test
    public void test06790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06790");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter4 = null;
        restAdapter0.converter = converter4;
        retrofit.RestAdapter.Log log6 = restAdapter0.log;
        retrofit.RequestInterceptor requestInterceptor7 = restAdapter0.requestInterceptor;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(log6);
        org.junit.Assert.assertNull(requestInterceptor7);
    }

    @Test
    public void test06791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06791");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel23);
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider44 = builder37.clientProvider;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log45;
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server9, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log45, logLevel48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("Retrofit-Idle");
        retrofit.Server server59 = builder58.server;
        retrofit.client.Client.Provider provider60 = null;
        java.util.concurrent.Executor executor61 = null;
        java.util.concurrent.Executor executor62 = null;
        retrofit.RequestInterceptor requestInterceptor63 = null;
        retrofit.converter.Converter converter64 = null;
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.Server server69 = builder68.server;
        retrofit.RestAdapter.Log log70 = null;
        builder68.log = log70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = builder72.logLevel;
        retrofit.RestAdapter.Builder builder74 = builder68.setLogLevel(logLevel73);
        retrofit.client.Client.Provider provider75 = builder68.clientProvider;
        retrofit.RestAdapter.Log log76 = retrofit.RestAdapter.Log.NONE;
        builder68.log = log76;
        retrofit.RestAdapter.Builder builder78 = builder67.setLog(log76);
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server59, provider60, executor61, executor62, requestInterceptor63, converter64, profiler65, errorHandler66, log76, logLevel79);
        restAdapter49.server = server59;
        retrofit.Profiler profiler82 = null;
        restAdapter49.profiler = profiler82;
        retrofit.Server server84 = restAdapter49.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(server59);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server84);
    }

    @Test
    public void test06792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06792");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        java.util.concurrent.Executor executor12 = builder11.callbackExecutor;
        java.util.concurrent.Executor executor13 = builder11.callbackExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        java.util.concurrent.Executor executor25 = builder22.httpExecutor;
        retrofit.RestAdapter restAdapter26 = builder22.build();
        java.util.concurrent.Executor executor27 = restAdapter26.httpExecutor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        java.util.concurrent.Executor executor39 = builder36.httpExecutor;
        retrofit.RestAdapter restAdapter40 = builder36.build();
        java.util.concurrent.Executor executor41 = restAdapter40.httpExecutor;
        retrofit.RestAdapter.Builder builder42 = builder11.setExecutors(executor27, executor41);
        restAdapter0.callbackExecutor = executor41;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = builder45.callbackExecutor;
        retrofit.Profiler profiler47 = builder45.profiler;
        retrofit.RestAdapter.Builder builder49 = builder45.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("Retrofit-Idle");
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Builder builder60 = builder49.setServer(server59);
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.client.Client.Provider provider62 = null;
        restAdapter61.clientProvider = provider62;
        retrofit.RestAdapter.Log log64 = restAdapter61.log;
        retrofit.client.Client.Provider provider65 = null;
        restAdapter61.clientProvider = provider65;
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter61.new RestHandler();
        retrofit.Server server69 = restAdapter61.server;
        restAdapter0.server = server69;
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNotNull(restAdapter40);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNull(profiler47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(server59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(server69);
    }

    @Test
    public void test06793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06793");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = null;
        builder0.converter = converter1;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.Server server4 = builder3.server;
        java.util.concurrent.Executor executor5 = null;
        builder3.httpExecutor = executor5;
        retrofit.Server server7 = builder3.server;
        retrofit.RestAdapter.LogLevel logLevel8 = builder3.logLevel;
        retrofit.client.Client.Provider provider9 = null;
        builder3.clientProvider = provider9;
        retrofit.Server server11 = builder3.server;
        retrofit.converter.Converter converter12 = builder3.converter;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = builder21.setLog(log22);
        java.util.concurrent.Executor executor24 = builder21.httpExecutor;
        java.util.concurrent.Executor executor25 = null;
        builder21.httpExecutor = executor25;
        java.util.concurrent.Executor executor27 = builder21.callbackExecutor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log37 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder38 = builder36.setLog(log37);
        java.util.concurrent.Executor executor39 = builder36.httpExecutor;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.client.Client.Provider provider51 = builder44.clientProvider;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        builder44.log = log52;
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = builder63.logLevel;
        retrofit.RestAdapter.Builder builder65 = builder59.setLogLevel(logLevel64);
        retrofit.client.Client.Provider provider66 = builder59.clientProvider;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        builder59.log = log67;
        retrofit.RestAdapter.Builder builder69 = builder55.setLog(log67);
        retrofit.RestAdapter.Builder builder70 = builder40.setLog(log67);
        log67.log("");
        log67.log("Retrofit-");
        retrofit.RestAdapter.Builder builder75 = builder36.setLog(log67);
        builder21.log = log67;
        builder3.log = log67;
        log67.log("Retrofit-");
        builder0.log = log67;
        log67.log("hi!");
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder75);
    }

    @Test
    public void test06794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06794");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        builder24.logLevel = logLevel26;
        boolean boolean28 = logLevel26.log();
        builder17.logLevel = logLevel26;
        retrofit.RestAdapter.LogLevel logLevel30 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder15.setLogLevel(logLevel30);
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor33 = null;
        restAdapter32.callbackExecutor = executor33;
        retrofit.converter.Converter converter35 = restAdapter32.converter;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        restAdapter32.log = log36;
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter32.logLevel = logLevel38;
        builder31.logLevel = logLevel38;
        retrofit.RestAdapter.LogLevel logLevel41 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("Retrofit-Idle");
        retrofit.Server server51 = builder50.server;
        retrofit.Profiler profiler52 = null;
        builder50.profiler = profiler52;
        java.util.concurrent.Executor executor54 = builder50.callbackExecutor;
        builder50.ensureSaneDefaults();
        retrofit.client.Client.Provider provider56 = builder50.clientProvider;
        retrofit.RestAdapter.Builder builder57 = builder31.setClient(provider56);
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        retrofit.client.Client.Provider provider70 = builder63.clientProvider;
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        builder63.log = log71;
        retrofit.RestAdapter.Builder builder73 = builder59.setLog(log71);
        retrofit.Server server74 = builder59.server;
        java.util.concurrent.Executor executor75 = null;
        builder59.callbackExecutor = executor75;
        retrofit.converter.Converter converter77 = builder59.converter;
        retrofit.ErrorHandler errorHandler78 = builder59.errorHandler;
        java.util.concurrent.Executor executor79 = null;
        builder59.callbackExecutor = executor79;
        retrofit.RestAdapter.LogLevel logLevel81 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder82 = builder57.setLogLevel(logLevel81);
        retrofit.client.Client client83 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder84 = builder57.setClient(client83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNull(executor54);
        org.junit.Assert.assertNotNull(provider56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertNull(converter77);
        org.junit.Assert.assertNull(errorHandler78);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder82);
    }

    @Test
    public void test06795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06795");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter0.logLevel = logLevel7;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter0.logLevel = logLevel9;
        retrofit.RequestInterceptor requestInterceptor11 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter0.getLogLevel();
        retrofit.ErrorHandler errorHandler13 = restAdapter0.errorHandler;
        java.util.concurrent.Executor executor14 = restAdapter0.httpExecutor;
        retrofit.converter.Converter converter15 = null;
        restAdapter0.converter = converter15;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor11);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertNull(executor14);
    }

    @Test
    public void test06796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06796");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider2 = null;
        builder0.clientProvider = provider2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.ErrorHandler errorHandler6 = builder5.errorHandler;
        retrofit.ErrorHandler errorHandler7 = builder5.errorHandler;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.Server server9 = builder8.server;
        retrofit.RestAdapter.Log log10 = null;
        builder8.log = log10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.RestAdapter.Builder builder14 = builder8.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("Retrofit-Idle");
        retrofit.Server server17 = builder16.server;
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Log log25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel31);
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server17, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log25, logLevel31);
        retrofit.client.Client.Provider provider34 = null;
        java.util.concurrent.Executor executor35 = null;
        java.util.concurrent.Executor executor36 = null;
        retrofit.RequestInterceptor requestInterceptor37 = null;
        retrofit.converter.Converter converter38 = null;
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.client.Client.Provider provider52 = builder45.clientProvider;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log53;
        retrofit.RestAdapter.Builder builder55 = builder41.setLog(log53);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server17, provider34, executor35, executor36, requestInterceptor37, converter38, profiler39, errorHandler40, log53, logLevel56);
        retrofit.converter.Converter converter58 = null;
        restAdapter57.converter = converter58;
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter57.new RestHandler();
        retrofit.Profiler profiler61 = null;
        restAdapter57.profiler = profiler61;
        retrofit.Profiler profiler63 = null;
        restAdapter57.profiler = profiler63;
        retrofit.client.Client.Provider provider65 = restAdapter57.clientProvider;
        java.util.concurrent.Executor executor66 = restAdapter57.httpExecutor;
        retrofit.Server server67 = restAdapter57.server;
        retrofit.RestAdapter.Builder builder68 = builder5.setServer(server67);
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNotNull(server67);
        org.junit.Assert.assertNotNull(builder68);
    }

    @Test
    public void test06797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06797");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor5 = null;
        restAdapter0.requestInterceptor = requestInterceptor5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        java.util.concurrent.Executor executor18 = builder15.httpExecutor;
        retrofit.RestAdapter restAdapter19 = builder15.build();
        java.util.concurrent.Executor executor20 = restAdapter19.httpExecutor;
        retrofit.converter.Converter converter21 = restAdapter19.converter;
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter19.new RestHandler();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        builder30.logLevel = logLevel32;
        boolean boolean34 = logLevel32.log();
        builder23.logLevel = logLevel32;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        builder23.requestInterceptor = requestInterceptor36;
        java.util.concurrent.Executor executor38 = null;
        builder23.httpExecutor = executor38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.client.Client.Provider provider48 = builder41.clientProvider;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log49;
        retrofit.RestAdapter.Builder builder51 = builder40.setLog(log49);
        retrofit.converter.Converter converter52 = null;
        builder40.converter = converter52;
        retrofit.RestAdapter.Log log54 = builder40.log;
        retrofit.RestAdapter.Builder builder55 = builder23.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        retrofit.ErrorHandler errorHandler57 = builder55.errorHandler;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = builder58.callbackExecutor;
        retrofit.Profiler profiler60 = builder58.profiler;
        retrofit.RestAdapter.Builder builder62 = builder58.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("Retrofit-Idle");
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Builder builder73 = builder62.setServer(server72);
        retrofit.RestAdapter restAdapter74 = builder73.build();
        java.util.concurrent.Executor executor75 = restAdapter74.callbackExecutor;
        builder55.callbackExecutor = executor75;
        restAdapter19.httpExecutor = executor75;
        restAdapter0.callbackExecutor = executor75;
        retrofit.RequestInterceptor requestInterceptor79 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNotNull(restAdapter19);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(converter21);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler57);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNull(profiler60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(executor75);
        org.junit.Assert.assertNull(requestInterceptor79);
        org.junit.Assert.assertNull(logLevel80);
    }

    @Test
    public void test06798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06798");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.Profiler profiler11 = builder10.profiler;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("Retrofit-Idle");
        retrofit.Server server21 = builder20.server;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder10.setServer(server21);
        retrofit.converter.Converter converter39 = null;
        builder10.converter = converter39;
        retrofit.converter.Converter converter41 = null;
        builder10.converter = converter41;
        retrofit.RestAdapter.Log log43 = builder10.log;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("Retrofit-Idle");
        retrofit.Server server55 = builder54.server;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.client.Client.Provider provider71 = builder64.clientProvider;
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log72;
        retrofit.RestAdapter.Builder builder74 = builder63.setLog(log72);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter76 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log72, logLevel75);
        retrofit.RestAdapter.Builder builder77 = builder44.setServer(server55);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.Server server79 = builder78.server;
        retrofit.RestAdapter.Log log80 = null;
        builder78.log = log80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = builder82.logLevel;
        retrofit.RestAdapter.Builder builder84 = builder78.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder86 = builder84.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter87 = builder86.build();
        retrofit.RestAdapter.LogLevel logLevel88 = restAdapter87.logLevel;
        retrofit.RequestInterceptor requestInterceptor89 = restAdapter87.requestInterceptor;
        retrofit.RestAdapter.Builder builder90 = builder77.setRequestInterceptor(requestInterceptor89);
        retrofit.RestAdapter.Builder builder91 = builder10.setRequestInterceptor(requestInterceptor89);
        retrofit.RestAdapter.Log log92 = builder10.log;
        retrofit.RestAdapter.Builder builder94 = builder10.setServer("hi!");
        retrofit.client.Client.Provider provider95 = builder94.clientProvider;
        retrofit.Server server96 = builder94.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(restAdapter87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(log92);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNull(provider95);
        org.junit.Assert.assertNotNull(server96);
    }

    @Test
    public void test06799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06799");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.getLogLevel();
        java.lang.Throwable throwable7 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable7, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(logLevel6);
    }

    @Test
    public void test06800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06800");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider29 = builder22.clientProvider;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log30;
        retrofit.RestAdapter.Builder builder32 = builder21.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log30, logLevel33);
        builder0.logLevel = logLevel33;
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        retrofit.Profiler profiler37 = builder0.profiler;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter39 = null;
        builder38.converter = converter39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder51 = builder49.setLog(log50);
        retrofit.Profiler profiler52 = builder51.profiler;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.Server server62 = builder61.server;
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.converter.Converter converter67 = null;
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = null;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor66, converter67, profiler68, errorHandler69, log70, logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder51.setServer(server62);
        retrofit.RestAdapter.Builder builder80 = builder38.setServer(server62);
        retrofit.client.Client.Provider provider81 = null;
        java.util.concurrent.Executor executor82 = null;
        java.util.concurrent.Executor executor83 = null;
        retrofit.RequestInterceptor requestInterceptor84 = null;
        retrofit.converter.Converter converter85 = null;
        retrofit.Profiler profiler86 = null;
        retrofit.ErrorHandler errorHandler87 = null;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor89 = null;
        restAdapter88.callbackExecutor = executor89;
        retrofit.converter.Converter converter91 = restAdapter88.converter;
        retrofit.RestAdapter.Log log92 = retrofit.RestAdapter.Log.NONE;
        restAdapter88.log = log92;
        retrofit.RestAdapter.LogLevel logLevel94 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter95 = new retrofit.RestAdapter(server62, provider81, executor82, executor83, requestInterceptor84, converter85, profiler86, errorHandler87, log92, logLevel94);
        retrofit.RestAdapter.Builder builder96 = builder0.setServer(server62);
        retrofit.converter.Converter converter97 = builder0.converter;
        retrofit.converter.Converter converter98 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder99 = builder0.setConverter(converter98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Converter may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNull(converter91);
        org.junit.Assert.assertNotNull(log92);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNull(converter97);
    }

    @Test
    public void test06801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06801");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter15.new RestHandler();
        java.util.concurrent.Executor executor17 = restAdapter15.httpExecutor;
        java.util.concurrent.Executor executor18 = null;
        restAdapter15.callbackExecutor = executor18;
        retrofit.ErrorHandler errorHandler20 = null;
        restAdapter15.errorHandler = errorHandler20;
        retrofit.RestAdapter.LogLevel logLevel22 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter15.logLevel = logLevel22;
        builder0.logLevel = logLevel22;
        retrofit.ErrorHandler errorHandler25 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder34 = builder32.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter35 = builder34.build();
        retrofit.Profiler profiler36 = null;
        builder34.profiler = profiler36;
        java.util.concurrent.Executor executor38 = builder34.httpExecutor;
        retrofit.Server server39 = builder34.server;
        retrofit.RestAdapter.Builder builder40 = builder0.setServer(server39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor42 = builder41.callbackExecutor;
        retrofit.Profiler profiler43 = builder41.profiler;
        retrofit.RestAdapter.Builder builder45 = builder41.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("Retrofit-Idle");
        retrofit.Server server55 = builder54.server;
        retrofit.RestAdapter.Builder builder56 = builder45.setServer(server55);
        retrofit.RestAdapter restAdapter57 = builder56.build();
        retrofit.client.Client.Provider provider58 = null;
        restAdapter57.clientProvider = provider58;
        retrofit.RestAdapter.Log log60 = restAdapter57.log;
        retrofit.RestAdapter.Builder builder61 = builder40.setLog(log60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor63 = builder62.callbackExecutor;
        retrofit.Profiler profiler64 = builder62.profiler;
        retrofit.RestAdapter.Builder builder66 = builder62.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor68 = builder67.callbackExecutor;
        retrofit.Profiler profiler69 = builder67.profiler;
        retrofit.RestAdapter.Builder builder71 = builder67.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter72 = builder71.converter;
        retrofit.RestAdapter.LogLevel logLevel73 = builder71.logLevel;
        retrofit.RestAdapter.Builder builder74 = builder66.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder40.setLogLevel(logLevel73);
        retrofit.ErrorHandler errorHandler76 = builder40.errorHandler;
        retrofit.client.Client.Provider provider77 = builder40.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(restAdapter35);
        org.junit.Assert.assertNotNull(executor38);
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(executor42);
        org.junit.Assert.assertNull(profiler43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(restAdapter57);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNull(profiler64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(errorHandler76);
        org.junit.Assert.assertNull(provider77);
    }

    @Test
    public void test06802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06802");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.Server server3 = builder2.server;
        retrofit.RestAdapter.Log log4 = null;
        builder2.log = log4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = builder6.logLevel;
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel7);
        retrofit.RestAdapter.Builder builder10 = builder8.setServer("Retrofit-Idle");
        retrofit.Server server11 = builder10.server;
        java.util.concurrent.Executor executor12 = builder10.httpExecutor;
        java.util.concurrent.Executor executor13 = builder10.httpExecutor;
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.converter.Converter converter16 = null;
        restAdapter15.converter = converter16;
        java.util.concurrent.Executor executor18 = restAdapter15.callbackExecutor;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor20 = builder19.callbackExecutor;
        retrofit.Profiler profiler21 = builder19.profiler;
        retrofit.RestAdapter.Builder builder23 = builder19.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("Retrofit-Idle");
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Builder builder34 = builder23.setServer(server33);
        retrofit.RestAdapter restAdapter35 = builder34.build();
        java.util.concurrent.Executor executor36 = restAdapter35.callbackExecutor;
        retrofit.client.Client.Provider provider37 = restAdapter35.clientProvider;
        restAdapter15.clientProvider = provider37;
        retrofit.RestAdapter.Builder builder39 = builder10.setClient(provider37);
        builder0.clientProvider = provider37;
        retrofit.Server server41 = builder0.server;
        java.util.concurrent.Executor executor42 = builder0.httpExecutor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(restAdapter35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertNull(executor42);
    }

    @Test
    public void test06803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06803");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        retrofit.Profiler profiler14 = builder0.profiler;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = builder15.callbackExecutor;
        retrofit.Profiler profiler17 = builder15.profiler;
        retrofit.RestAdapter.Builder builder19 = builder15.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("Retrofit-Idle");
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Builder builder30 = builder19.setServer(server29);
        retrofit.RestAdapter.Builder builder31 = builder0.setServer(server29);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        java.util.concurrent.Executor executor34 = null;
        builder32.httpExecutor = executor34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.client.Client.Provider provider63 = builder56.clientProvider;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        builder56.log = log64;
        retrofit.RestAdapter.Builder builder66 = builder55.setLog(log64);
        retrofit.RestAdapter.LogLevel logLevel67 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log64, logLevel67);
        retrofit.RestAdapter.Builder builder69 = builder36.setServer(server47);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.Server server71 = builder70.server;
        retrofit.RestAdapter.Log log72 = null;
        builder70.log = log72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = builder74.logLevel;
        retrofit.RestAdapter.Builder builder76 = builder70.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter79.logLevel;
        retrofit.RequestInterceptor requestInterceptor81 = restAdapter79.requestInterceptor;
        retrofit.RestAdapter.Builder builder82 = builder69.setRequestInterceptor(requestInterceptor81);
        retrofit.RestAdapter.Builder builder83 = builder32.setRequestInterceptor(requestInterceptor81);
        retrofit.RestAdapter.Builder builder84 = builder31.setRequestInterceptor(requestInterceptor81);
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.Server server86 = builder85.server;
        retrofit.RestAdapter.Log log87 = null;
        builder85.log = log87;
        retrofit.RestAdapter.Builder builder89 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel90 = builder89.logLevel;
        retrofit.RestAdapter.Builder builder91 = builder85.setLogLevel(logLevel90);
        retrofit.RestAdapter.Builder builder93 = builder91.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler94 = builder93.errorHandler;
        retrofit.RestAdapter restAdapter95 = builder93.build();
        retrofit.converter.Converter converter96 = restAdapter95.converter;
        retrofit.RestAdapter.Builder builder97 = builder84.setConverter(converter96);
        retrofit.RestAdapter restAdapter98 = builder97.build();
        retrofit.RequestInterceptor requestInterceptor99 = restAdapter98.requestInterceptor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNull(server86);
        org.junit.Assert.assertTrue("'" + logLevel90 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel90.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNull(errorHandler94);
        org.junit.Assert.assertNotNull(restAdapter95);
        org.junit.Assert.assertNotNull(converter96);
        org.junit.Assert.assertNotNull(builder97);
        org.junit.Assert.assertNotNull(restAdapter98);
        org.junit.Assert.assertNotNull(requestInterceptor99);
    }

    @Test
    public void test06804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06804");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        java.util.concurrent.Executor executor9 = null;
        builder7.httpExecutor = executor9;
        retrofit.Server server11 = builder7.server;
        retrofit.converter.Converter converter12 = null;
        builder7.converter = converter12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        java.util.concurrent.Executor executor25 = builder22.httpExecutor;
        java.util.concurrent.Executor executor26 = null;
        builder22.httpExecutor = executor26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter37 = builder36.build();
        retrofit.RestAdapter.LogLevel logLevel38 = restAdapter37.logLevel;
        builder22.logLevel = logLevel38;
        builder22.ensureSaneDefaults();
        retrofit.client.Client.Provider provider41 = builder22.clientProvider;
        builder7.clientProvider = provider41;
        restAdapter0.clientProvider = provider41;
        java.util.concurrent.Executor executor44 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter0.getLogLevel();
        retrofit.client.Response response47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response49 = restAdapter0.logAndReplaceResponse("hi!", response47, 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider41);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNull(logLevel45);
    }

    @Test
    public void test06805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06805");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        retrofit.Profiler profiler14 = builder0.profiler;
        java.util.concurrent.Executor executor15 = null;
        builder0.httpExecutor = executor15;
        retrofit.RestAdapter.LogLevel logLevel17 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        java.util.concurrent.Executor executor20 = null;
        builder18.httpExecutor = executor20;
        retrofit.Server server22 = builder18.server;
        retrofit.RestAdapter.LogLevel logLevel23 = builder18.logLevel;
        retrofit.ErrorHandler errorHandler24 = builder18.errorHandler;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        builder25.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        retrofit.client.Client.Provider provider54 = builder47.clientProvider;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        builder47.log = log55;
        retrofit.RestAdapter.Builder builder57 = builder46.setLog(log55);
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log55, logLevel58);
        builder25.logLevel = logLevel58;
        retrofit.RestAdapter.LogLevel logLevel61 = builder25.logLevel;
        retrofit.Profiler profiler62 = builder25.profiler;
        retrofit.RestAdapter.Builder builder64 = builder25.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.Server server66 = builder65.server;
        retrofit.RestAdapter.Log log67 = null;
        builder65.log = log67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = builder69.logLevel;
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder73 = builder71.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter74 = builder73.build();
        retrofit.Profiler profiler75 = null;
        builder73.profiler = profiler75;
        retrofit.Profiler profiler77 = null;
        builder73.profiler = profiler77;
        retrofit.converter.Converter converter79 = builder73.converter;
        builder64.converter = converter79;
        retrofit.RestAdapter.Builder builder81 = builder18.setConverter(converter79);
        retrofit.RestAdapter.Builder builder82 = builder0.setConverter(converter79);
        retrofit.RestAdapter.Builder builder84 = builder82.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider85 = builder84.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler24);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(converter79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNull(provider85);
    }

    @Test
    public void test06806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06806");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler9 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = builder10.callbackExecutor;
        retrofit.Profiler profiler12 = builder10.profiler;
        retrofit.RestAdapter.Builder builder14 = builder10.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("Retrofit-Idle");
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Builder builder25 = builder14.setServer(server24);
        retrofit.RestAdapter restAdapter26 = builder25.build();
        java.util.concurrent.Executor executor27 = restAdapter26.callbackExecutor;
        builder8.callbackExecutor = executor27;
        retrofit.Profiler profiler29 = builder8.profiler;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder36.setServer("Retrofit-Idle");
        retrofit.Server server39 = builder38.server;
        java.util.concurrent.Executor executor40 = builder38.httpExecutor;
        java.util.concurrent.Executor executor41 = builder38.httpExecutor;
        retrofit.RestAdapter restAdapter42 = builder38.build();
        retrofit.RequestInterceptor requestInterceptor43 = restAdapter42.requestInterceptor;
        builder8.requestInterceptor = requestInterceptor43;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNotNull(executor27);
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNotNull(restAdapter42);
        org.junit.Assert.assertNotNull(requestInterceptor43);
    }

    @Test
    public void test06807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06807");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.RestAdapter.Log log8 = builder0.log;
        java.util.concurrent.Executor executor9 = null;
        builder0.callbackExecutor = executor9;
        retrofit.RestAdapter.LogLevel logLevel11 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        builder12.logLevel = logLevel14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.Server server25 = builder24.server;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.client.Client.Provider provider41 = builder34.clientProvider;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder34.log = log42;
        retrofit.RestAdapter.Builder builder44 = builder33.setLog(log42);
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log42, logLevel45);
        builder12.logLevel = logLevel45;
        retrofit.RestAdapter.LogLevel logLevel48 = builder12.logLevel;
        retrofit.Profiler profiler49 = builder12.profiler;
        retrofit.RestAdapter.Builder builder51 = builder12.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.Profiler profiler62 = null;
        builder60.profiler = profiler62;
        retrofit.Profiler profiler64 = null;
        builder60.profiler = profiler64;
        retrofit.converter.Converter converter66 = builder60.converter;
        builder51.converter = converter66;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor69 = null;
        restAdapter68.callbackExecutor = executor69;
        retrofit.RestAdapter.Log log71 = restAdapter68.log;
        retrofit.converter.Converter converter72 = restAdapter68.converter;
        java.util.concurrent.Executor executor73 = null;
        restAdapter68.callbackExecutor = executor73;
        java.util.concurrent.Executor executor75 = null;
        restAdapter68.httpExecutor = executor75;
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter68.new RestHandler();
        retrofit.converter.Converter converter78 = restAdapter68.converter;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.Server server80 = builder79.server;
        retrofit.RestAdapter.Log log81 = null;
        builder79.log = log81;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel84 = builder83.logLevel;
        retrofit.RestAdapter.Builder builder85 = builder79.setLogLevel(logLevel84);
        retrofit.RestAdapter.Builder builder87 = builder85.setServer("Retrofit-Idle");
        retrofit.Server server88 = builder87.server;
        retrofit.Profiler profiler89 = null;
        builder87.profiler = profiler89;
        retrofit.Profiler profiler91 = null;
        builder87.profiler = profiler91;
        retrofit.RestAdapter restAdapter93 = builder87.build();
        retrofit.ErrorHandler errorHandler94 = builder87.errorHandler;
        restAdapter68.errorHandler = errorHandler94;
        retrofit.RestAdapter.Builder builder96 = builder51.setErrorHandler(errorHandler94);
        retrofit.RestAdapter.Builder builder97 = builder0.setErrorHandler(errorHandler94);
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNotNull(converter66);
        org.junit.Assert.assertNull(log71);
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertNull(converter78);
        org.junit.Assert.assertNull(server80);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(server88);
        org.junit.Assert.assertNotNull(restAdapter93);
        org.junit.Assert.assertNotNull(errorHandler94);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNotNull(builder97);
    }

    @Test
    public void test06808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06808");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.httpExecutor = executor1;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.httpExecutor = executor3;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor12 = restAdapter0.callbackExecutor;
        java.util.concurrent.Executor executor13 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        java.util.concurrent.Executor executor21 = builder20.callbackExecutor;
        retrofit.converter.Converter converter22 = null;
        builder20.converter = converter22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder34 = builder32.setServer("Retrofit-Idle");
        retrofit.Server server35 = builder34.server;
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.RequestInterceptor requestInterceptor39 = null;
        retrofit.converter.Converter converter40 = null;
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.client.Client.Provider provider51 = builder44.clientProvider;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        builder44.log = log52;
        retrofit.RestAdapter.Builder builder54 = builder43.setLog(log52);
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor39, converter40, profiler41, errorHandler42, log52, logLevel55);
        retrofit.RestAdapter.Builder builder57 = builder24.setServer(server35);
        builder20.server = server35;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter59.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter59.logLevel;
        retrofit.ErrorHandler errorHandler62 = restAdapter59.errorHandler;
        retrofit.converter.Converter converter63 = null;
        restAdapter59.converter = converter63;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter65.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel67 = restAdapter65.logLevel;
        retrofit.ErrorHandler errorHandler68 = restAdapter65.errorHandler;
        retrofit.converter.Converter converter69 = null;
        restAdapter65.converter = converter69;
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter65.logLevel;
        java.util.concurrent.Executor executor72 = restAdapter65.httpExecutor;
        retrofit.RestAdapter.Log log73 = restAdapter65.log;
        retrofit.Profiler profiler74 = null;
        restAdapter65.profiler = profiler74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        builder76.logLevel = logLevel78;
        boolean boolean80 = logLevel78.log();
        restAdapter65.logLevel = logLevel78;
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter65.logLevel;
        retrofit.ErrorHandler errorHandler83 = null;
        restAdapter65.errorHandler = errorHandler83;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel87 = builder86.logLevel;
        builder85.logLevel = logLevel87;
        boolean boolean89 = logLevel87.log();
        restAdapter65.setLogLevel(logLevel87);
        boolean boolean91 = logLevel87.log();
        restAdapter59.logLevel = logLevel87;
        retrofit.RestAdapter.Builder builder93 = builder20.setLogLevel(logLevel87);
        restAdapter0.logLevel = logLevel87;
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNull(errorHandler62);
        org.junit.Assert.assertNull(logLevel67);
        org.junit.Assert.assertNull(errorHandler68);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(executor72);
        org.junit.Assert.assertNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test06809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06809");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.Server server32 = builder31.server;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel46);
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel46);
        restAdapter0.server = server14;
        retrofit.Profiler profiler51 = null;
        restAdapter0.profiler = profiler51;
        java.util.concurrent.Executor executor53 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        builder54.logLevel = logLevel56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = builder62.logLevel;
        retrofit.RestAdapter.Builder builder64 = builder58.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder64.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler67 = builder66.errorHandler;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor69 = builder68.callbackExecutor;
        retrofit.Profiler profiler70 = builder68.profiler;
        retrofit.RestAdapter.Builder builder72 = builder68.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Log log75 = null;
        builder73.log = log75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("Retrofit-Idle");
        retrofit.Server server82 = builder81.server;
        retrofit.RestAdapter.Builder builder83 = builder72.setServer(server82);
        retrofit.RestAdapter restAdapter84 = builder83.build();
        java.util.concurrent.Executor executor85 = restAdapter84.callbackExecutor;
        builder66.callbackExecutor = executor85;
        builder54.callbackExecutor = executor85;
        restAdapter0.callbackExecutor = executor85;
        retrofit.RestAdapter.LogLevel logLevel89 = restAdapter0.logLevel;
        retrofit.RestAdapter.LogLevel logLevel90 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler91 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor92 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler93 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(errorHandler67);
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(restAdapter84);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNull(logLevel89);
        org.junit.Assert.assertNull(logLevel90);
        org.junit.Assert.assertNull(requestInterceptor92);
    }

    @Test
    public void test06810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06810");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        retrofit.converter.Converter converter8 = null;
        builder6.converter = converter8;
        retrofit.client.Client.Provider provider10 = builder6.clientProvider;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder17 = builder11.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder19 = builder17.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter20 = builder19.build();
        retrofit.converter.Converter converter21 = restAdapter20.converter;
        retrofit.RestAdapter.Builder builder22 = builder6.setConverter(converter21);
        retrofit.ErrorHandler errorHandler23 = builder6.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(restAdapter20);
        org.junit.Assert.assertNotNull(converter21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(errorHandler23);
    }

    @Test
    public void test06811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06811");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.client.Client.Provider provider6 = null;
        builder0.clientProvider = provider6;
        retrofit.ErrorHandler errorHandler8 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        java.util.concurrent.Executor executor20 = builder17.httpExecutor;
        retrofit.RestAdapter restAdapter21 = builder17.build();
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter22.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter22.logLevel;
        retrofit.ErrorHandler errorHandler25 = null;
        restAdapter22.errorHandler = errorHandler25;
        java.util.concurrent.Executor executor27 = restAdapter22.httpExecutor;
        java.util.concurrent.Executor executor28 = null;
        restAdapter22.httpExecutor = executor28;
        retrofit.ErrorHandler errorHandler30 = restAdapter22.errorHandler;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor32 = null;
        restAdapter31.requestInterceptor = requestInterceptor32;
        retrofit.Profiler profiler34 = null;
        restAdapter31.profiler = profiler34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor37 = builder36.callbackExecutor;
        retrofit.Profiler profiler38 = builder36.profiler;
        retrofit.RestAdapter.Builder builder40 = builder36.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("Retrofit-Idle");
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Builder builder51 = builder40.setServer(server50);
        retrofit.RestAdapter restAdapter52 = builder51.build();
        java.util.concurrent.Executor executor53 = restAdapter52.callbackExecutor;
        restAdapter31.callbackExecutor = executor53;
        restAdapter22.httpExecutor = executor53;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder66 = builder64.setLog(log65);
        java.util.concurrent.Executor executor67 = builder64.httpExecutor;
        retrofit.RestAdapter restAdapter68 = builder64.build();
        java.util.concurrent.Executor executor69 = restAdapter68.httpExecutor;
        restAdapter22.callbackExecutor = executor69;
        restAdapter21.httpExecutor = executor69;
        retrofit.converter.Converter converter72 = restAdapter21.converter;
        builder0.converter = converter72;
        retrofit.Server server74 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder75 = builder0.setServer(server74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNull(logLevel24);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(errorHandler30);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(restAdapter52);
        org.junit.Assert.assertNotNull(executor53);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(executor67);
        org.junit.Assert.assertNotNull(restAdapter68);
        org.junit.Assert.assertNotNull(executor69);
        org.junit.Assert.assertNotNull(converter72);
    }

    @Test
    public void test06812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06812");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        builder24.logLevel = logLevel26;
        boolean boolean28 = logLevel26.log();
        builder17.logLevel = logLevel26;
        retrofit.RestAdapter.LogLevel logLevel30 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder15.setLogLevel(logLevel30);
        retrofit.RestAdapter.Log log32 = builder15.log;
        retrofit.RestAdapter restAdapter33 = builder15.build();
        builder15.ensureSaneDefaults();
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(restAdapter33);
    }

    @Test
    public void test06813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06813");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        builder25.logLevel = logLevel27;
        boolean boolean29 = logLevel27.log();
        retrofit.RestAdapter restAdapter30 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel27);
        retrofit.Profiler profiler31 = null;
        restAdapter30.profiler = profiler31;
        retrofit.converter.Converter converter33 = null;
        restAdapter30.converter = converter33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Profiler profiler47 = null;
        builder43.profiler = profiler47;
        retrofit.converter.Converter converter49 = builder43.converter;
        restAdapter30.converter = converter49;
        restAdapter0.converter = converter49;
        retrofit.client.Client.Provider provider52 = restAdapter0.clientProvider;
        retrofit.converter.Converter converter53 = restAdapter0.converter;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor55 = null;
        restAdapter54.callbackExecutor = executor55;
        retrofit.converter.Converter converter57 = restAdapter54.converter;
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter54.new RestHandler();
        retrofit.converter.Converter converter59 = restAdapter54.converter;
        java.util.concurrent.Executor executor60 = restAdapter54.httpExecutor;
        retrofit.client.Client.Provider provider61 = restAdapter54.clientProvider;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        java.util.concurrent.Executor executor64 = null;
        builder62.httpExecutor = executor64;
        retrofit.Server server66 = builder62.server;
        retrofit.RestAdapter.LogLevel logLevel67 = builder62.logLevel;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.Server server69 = builder68.server;
        retrofit.RestAdapter.Log log70 = null;
        builder68.log = log70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = builder72.logLevel;
        retrofit.RestAdapter.Builder builder74 = builder68.setLogLevel(logLevel73);
        java.util.concurrent.Executor executor75 = builder74.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor76 = builder74.requestInterceptor;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.Server server78 = builder77.server;
        retrofit.RestAdapter.Log log79 = null;
        builder77.log = log79;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        retrofit.RestAdapter.Builder builder83 = builder77.setLogLevel(logLevel82);
        retrofit.RestAdapter.Builder builder85 = builder83.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter86 = builder85.build();
        retrofit.Profiler profiler87 = null;
        builder85.profiler = profiler87;
        retrofit.Profiler profiler89 = null;
        builder85.profiler = profiler89;
        retrofit.converter.Converter converter91 = builder85.converter;
        retrofit.RestAdapter.Builder builder92 = builder74.setConverter(converter91);
        builder62.converter = converter91;
        restAdapter54.converter = converter91;
        restAdapter0.converter = converter91;
        retrofit.Server server96 = restAdapter0.server;
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(converter49);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(converter53);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(executor75);
        org.junit.Assert.assertNull(requestInterceptor76);
        org.junit.Assert.assertNull(server78);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(restAdapter86);
        org.junit.Assert.assertNotNull(converter91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNull(server96);
    }

    @Test
    public void test06814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06814");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        java.util.concurrent.Executor executor4 = null;
        restAdapter0.callbackExecutor = executor4;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider8 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(provider8);
    }

    @Test
    public void test06815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06815");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.client.Client.Provider provider17 = null;
        restAdapter16.clientProvider = provider17;
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.client.Client.Provider provider20 = null;
        restAdapter16.clientProvider = provider20;
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter16.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter16.new RestHandler();
        java.util.concurrent.Executor executor24 = restAdapter16.callbackExecutor;
        java.util.concurrent.Executor executor25 = restAdapter16.callbackExecutor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(executor25);
    }

    @Test
    public void test06816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06816");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        java.util.concurrent.Executor executor12 = null;
        builder8.httpExecutor = executor12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.logLevel;
        builder8.logLevel = logLevel24;
        builder8.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder8.clientProvider;
        retrofit.RestAdapter restAdapter28 = builder8.build();
        retrofit.ErrorHandler errorHandler29 = builder8.errorHandler;
        retrofit.Profiler profiler30 = null;
        builder8.profiler = profiler30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter41 = builder40.build();
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter41.logLevel;
        retrofit.RestAdapter.Log log43 = restAdapter41.log;
        retrofit.converter.Converter converter44 = restAdapter41.converter;
        retrofit.RestAdapter.Builder builder45 = builder8.setConverter(converter44);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        retrofit.client.Client.Provider provider54 = builder47.clientProvider;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        builder47.log = log55;
        retrofit.RestAdapter.Builder builder57 = builder46.setLog(log55);
        retrofit.converter.Converter converter58 = null;
        builder46.converter = converter58;
        retrofit.RestAdapter.Log log60 = builder46.log;
        retrofit.ErrorHandler errorHandler61 = builder46.errorHandler;
        retrofit.Profiler profiler62 = null;
        builder46.profiler = profiler62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler73 = builder72.errorHandler;
        retrofit.RestAdapter restAdapter74 = builder72.build();
        java.util.concurrent.Executor executor75 = null;
        restAdapter74.httpExecutor = executor75;
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter74.new RestHandler();
        retrofit.client.Client.Provider provider78 = null;
        restAdapter74.clientProvider = provider78;
        retrofit.Profiler profiler80 = null;
        restAdapter74.profiler = profiler80;
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter74.logLevel;
        retrofit.Profiler profiler83 = null;
        restAdapter74.profiler = profiler83;
        retrofit.ErrorHandler errorHandler85 = restAdapter74.errorHandler;
        retrofit.RestAdapter.Builder builder86 = builder46.setErrorHandler(errorHandler85);
        builder8.errorHandler = errorHandler85;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNotNull(restAdapter28);
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(restAdapter41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(converter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNull(errorHandler61);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(errorHandler73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler85);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test06817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06817");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.RestAdapter.Builder builder11 = builder8.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor13 = builder12.callbackExecutor;
        retrofit.Profiler profiler14 = builder12.profiler;
        retrofit.RestAdapter.Builder builder16 = builder12.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        builder21.logLevel = logLevel23;
        java.util.concurrent.Executor executor25 = null;
        builder21.callbackExecutor = executor25;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor28 = null;
        restAdapter27.callbackExecutor = executor28;
        retrofit.converter.Converter converter30 = restAdapter27.converter;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        restAdapter27.log = log31;
        builder21.log = log31;
        builder17.log = log31;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter35.new RestHandler();
        java.util.concurrent.Executor executor37 = restAdapter35.httpExecutor;
        java.util.concurrent.Executor executor38 = null;
        restAdapter35.callbackExecutor = executor38;
        retrofit.client.Client.Provider provider40 = null;
        restAdapter35.clientProvider = provider40;
        java.util.concurrent.Executor executor42 = null;
        restAdapter35.callbackExecutor = executor42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter53 = builder52.build();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter53.logLevel;
        retrofit.RequestInterceptor requestInterceptor55 = restAdapter53.requestInterceptor;
        restAdapter35.requestInterceptor = requestInterceptor55;
        builder17.requestInterceptor = requestInterceptor55;
        builder16.requestInterceptor = requestInterceptor55;
        retrofit.RestAdapter.Builder builder59 = builder11.setRequestInterceptor(requestInterceptor55);
        retrofit.converter.Converter converter60 = builder11.converter;
        retrofit.ErrorHandler errorHandler61 = builder11.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(restAdapter53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(errorHandler61);
    }

    @Test
    public void test06818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06818");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder0.requestInterceptor = requestInterceptor13;
        java.util.concurrent.Executor executor15 = null;
        builder0.httpExecutor = executor15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider24 = builder17.clientProvider;
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log25;
        builder0.log = log25;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        builder35.logLevel = logLevel37;
        boolean boolean39 = logLevel37.log();
        builder28.logLevel = logLevel37;
        retrofit.RestAdapter.LogLevel logLevel41 = builder28.logLevel;
        retrofit.Profiler profiler42 = builder28.profiler;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor44 = builder43.callbackExecutor;
        retrofit.Profiler profiler45 = builder43.profiler;
        retrofit.RestAdapter.Builder builder47 = builder43.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder48.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("Retrofit-Idle");
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Builder builder58 = builder47.setServer(server57);
        retrofit.RestAdapter.Builder builder59 = builder28.setServer(server57);
        retrofit.RestAdapter.Builder builder60 = builder0.setServer(server57);
        retrofit.ErrorHandler errorHandler61 = builder60.errorHandler;
        retrofit.RequestInterceptor requestInterceptor62 = builder60.requestInterceptor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(errorHandler61);
        org.junit.Assert.assertNull(requestInterceptor62);
    }

    @Test
    public void test06819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06819");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.Server server27 = builder26.server;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel41);
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel41);
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.Server server62 = builder61.server;
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.converter.Converter converter67 = null;
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = null;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor66, converter67, profiler68, errorHandler69, log70, logLevel76);
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.Server server80 = builder79.server;
        java.util.concurrent.Executor executor81 = null;
        builder79.httpExecutor = executor81;
        retrofit.Server server83 = builder79.server;
        retrofit.RestAdapter.LogLevel logLevel84 = builder79.logLevel;
        restAdapter78.logLevel = logLevel84;
        retrofit.RestAdapter restAdapter86 = new retrofit.RestAdapter(server9, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel84);
        java.util.concurrent.Executor executor87 = restAdapter86.callbackExecutor;
        retrofit.RestAdapter.Log log88 = restAdapter86.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(server80);
        org.junit.Assert.assertNull(server83);
        org.junit.Assert.assertTrue("'" + logLevel84 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel84.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor87);
        org.junit.Assert.assertNotNull(log88);
    }

    @Test
    public void test06820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06820");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        java.util.concurrent.Executor executor12 = null;
        builder8.httpExecutor = executor12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.logLevel;
        builder8.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder27 = builder8.setServer("hi!");
        retrofit.RestAdapter.Log log28 = null;
        builder27.log = log28;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test06821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06821");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.Profiler profiler10 = null;
        builder8.profiler = profiler10;
        retrofit.client.Client.Provider provider12 = null;
        builder8.clientProvider = provider12;
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.LogLevel logLevel15 = builder8.logLevel;
        retrofit.RestAdapter.Log log16 = builder8.log;
        retrofit.Profiler profiler17 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder18 = builder8.setProfiler(profiler17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log16);
    }

    @Test
    public void test06822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06822");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        java.util.concurrent.Executor executor5 = null;
        restAdapter0.callbackExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        restAdapter0.httpExecutor = executor7;
        java.util.concurrent.Executor executor9 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        builder10.logLevel = logLevel12;
        java.util.concurrent.Executor executor14 = null;
        builder10.callbackExecutor = executor14;
        retrofit.RestAdapter restAdapter16 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor17 = null;
        restAdapter16.callbackExecutor = executor17;
        retrofit.converter.Converter converter19 = restAdapter16.converter;
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        restAdapter16.log = log20;
        builder10.log = log20;
        restAdapter0.log = log20;
        retrofit.client.Client.Provider provider24 = restAdapter0.clientProvider;
        retrofit.RequestInterceptor requestInterceptor25 = restAdapter0.requestInterceptor;
        retrofit.client.Client.Provider provider26 = restAdapter0.clientProvider;
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(requestInterceptor25);
        org.junit.Assert.assertNull(provider26);
    }

    @Test
    public void test06823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06823");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.Server server27 = builder26.server;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel41);
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel41);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("Retrofit-Idle");
        retrofit.Server server54 = builder53.server;
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("Retrofit-Idle");
        retrofit.Server server72 = builder71.server;
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.RequestInterceptor requestInterceptor76 = null;
        retrofit.converter.Converter converter77 = null;
        retrofit.Profiler profiler78 = null;
        retrofit.ErrorHandler errorHandler79 = null;
        retrofit.RestAdapter.Log log80 = null;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.Server server82 = builder81.server;
        retrofit.RestAdapter.Log log83 = null;
        builder81.log = log83;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel86 = builder85.logLevel;
        retrofit.RestAdapter.Builder builder87 = builder81.setLogLevel(logLevel86);
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor76, converter77, profiler78, errorHandler79, log80, logLevel86);
        retrofit.RestAdapter restAdapter89 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log62, logLevel86);
        restAdapter44.logLevel = logLevel86;
        retrofit.converter.Converter converter91 = restAdapter44.converter;
        retrofit.ErrorHandler errorHandler92 = restAdapter44.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNull(server82);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNull(converter91);
        org.junit.Assert.assertNull(errorHandler92);
    }

    @Test
    public void test06824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06824");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        java.util.concurrent.Executor executor12 = null;
        builder8.httpExecutor = executor12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.logLevel;
        builder8.logLevel = logLevel24;
        builder8.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder8.clientProvider;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider39 = builder32.clientProvider;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log40;
        retrofit.RestAdapter.Builder builder42 = builder28.setLog(log40);
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter43.new RestHandler();
        java.util.concurrent.Executor executor45 = restAdapter43.httpExecutor;
        java.util.concurrent.Executor executor46 = null;
        restAdapter43.callbackExecutor = executor46;
        retrofit.ErrorHandler errorHandler48 = null;
        restAdapter43.errorHandler = errorHandler48;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter43.logLevel = logLevel50;
        builder28.logLevel = logLevel50;
        builder28.ensureSaneDefaults();
        java.util.concurrent.Executor executor54 = builder28.callbackExecutor;
        builder8.callbackExecutor = executor54;
        retrofit.RestAdapter.LogLevel logLevel56 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor58 = builder57.callbackExecutor;
        retrofit.Profiler profiler59 = builder57.profiler;
        retrofit.RestAdapter.Builder builder61 = builder57.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor63 = builder62.callbackExecutor;
        retrofit.Profiler profiler64 = builder62.profiler;
        retrofit.RestAdapter.Builder builder66 = builder62.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter67 = builder66.converter;
        retrofit.RestAdapter.LogLevel logLevel68 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder61.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder70 = builder8.setLogLevel(logLevel68);
        retrofit.converter.Converter converter71 = builder70.converter;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.Server server73 = builder72.server;
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel77 = builder76.logLevel;
        retrofit.RestAdapter.Builder builder78 = builder72.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder80 = builder78.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log81 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder82 = builder80.setLog(log81);
        java.util.concurrent.Executor executor83 = builder80.httpExecutor;
        retrofit.RestAdapter restAdapter84 = builder80.build();
        retrofit.converter.Converter converter85 = null;
        restAdapter84.converter = converter85;
        retrofit.client.Client.Provider provider87 = restAdapter84.clientProvider;
        retrofit.RestAdapter.Builder builder88 = builder70.setClient(provider87);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor58);
        org.junit.Assert.assertNull(profiler59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNull(profiler64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(converter67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(converter71);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(log81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(executor83);
        org.junit.Assert.assertNotNull(restAdapter84);
        org.junit.Assert.assertNotNull(provider87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test06825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06825");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel23);
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider44 = builder37.clientProvider;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log45;
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server9, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log45, logLevel48);
        retrofit.RestAdapter.LogLevel logLevel50 = restAdapter49.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        retrofit.converter.Converter converter52 = restAdapter49.converter;
        retrofit.ErrorHandler errorHandler53 = restAdapter49.errorHandler;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler55 = restAdapter54.new RestHandler();
        java.util.concurrent.Executor executor56 = restAdapter54.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter54.new RestHandler();
        java.util.concurrent.Executor executor58 = restAdapter54.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter54.new RestHandler();
        retrofit.converter.Converter converter60 = restAdapter54.converter;
        retrofit.ErrorHandler errorHandler61 = restAdapter54.errorHandler;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor63 = builder62.callbackExecutor;
        retrofit.Profiler profiler64 = builder62.profiler;
        retrofit.RestAdapter.Builder builder66 = builder62.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.Server server68 = builder67.server;
        retrofit.RestAdapter.Log log69 = null;
        builder67.log = log69;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel72 = builder71.logLevel;
        retrofit.RestAdapter.Builder builder73 = builder67.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("Retrofit-Idle");
        retrofit.Server server76 = builder75.server;
        retrofit.RestAdapter.Builder builder77 = builder66.setServer(server76);
        retrofit.RestAdapter restAdapter78 = builder77.build();
        retrofit.Profiler profiler79 = builder77.profiler;
        retrofit.RestAdapter.LogLevel logLevel80 = builder77.logLevel;
        java.util.concurrent.Executor executor81 = builder77.callbackExecutor;
        restAdapter54.callbackExecutor = executor81;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.Server server84 = builder83.server;
        retrofit.RestAdapter.Log log85 = null;
        builder83.log = log85;
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel88 = builder87.logLevel;
        retrofit.RestAdapter.Builder builder89 = builder83.setLogLevel(logLevel88);
        retrofit.RestAdapter.Builder builder91 = builder89.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter92 = builder91.build();
        retrofit.RestAdapter.LogLevel logLevel93 = restAdapter92.logLevel;
        retrofit.ErrorHandler errorHandler94 = null;
        restAdapter92.errorHandler = errorHandler94;
        retrofit.RestAdapter.RestHandler restHandler96 = restAdapter92.new RestHandler();
        java.util.concurrent.Executor executor97 = restAdapter92.callbackExecutor;
        restAdapter54.httpExecutor = executor97;
        restAdapter49.callbackExecutor = executor97;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNull(errorHandler53);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNull(executor58);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(errorHandler61);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNull(profiler64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(server76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(restAdapter78);
        org.junit.Assert.assertNull(profiler79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNull(server84);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(restAdapter92);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor97);
    }

    @Test
    public void test06826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06826");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter4 = null;
        restAdapter0.converter = converter4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor7 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Log log8 = restAdapter0.log;
        retrofit.Profiler profiler9 = null;
        restAdapter0.profiler = profiler9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        builder11.logLevel = logLevel13;
        boolean boolean15 = logLevel13.log();
        restAdapter0.logLevel = logLevel13;
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler18 = null;
        restAdapter0.errorHandler = errorHandler18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("Retrofit-Idle");
        retrofit.Server server29 = builder28.server;
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.RequestInterceptor requestInterceptor33 = null;
        retrofit.converter.Converter converter34 = null;
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Log log37 = null;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor33, converter34, profiler35, errorHandler36, log37, logLevel43);
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = builder57.server;
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = builder61.logLevel;
        retrofit.RestAdapter.Builder builder63 = builder57.setLogLevel(logLevel62);
        retrofit.client.Client.Provider provider64 = builder57.clientProvider;
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        builder57.log = log65;
        retrofit.RestAdapter.Builder builder67 = builder53.setLog(log65);
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server29, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log65, logLevel68);
        retrofit.converter.Converter converter70 = null;
        restAdapter69.converter = converter70;
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter69.new RestHandler();
        retrofit.Server server73 = restAdapter69.server;
        restAdapter0.server = server73;
        java.util.concurrent.Executor executor75 = restAdapter0.httpExecutor;
        retrofit.Server server76 = restAdapter0.server;
        java.lang.Class<?> wildcardClass77 = restAdapter0.getClass();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server73);
        org.junit.Assert.assertNull(executor75);
        org.junit.Assert.assertNotNull(server76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test06827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06827");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        restAdapter0.clientProvider = provider5;
        java.util.concurrent.Executor executor7 = null;
        restAdapter0.callbackExecutor = executor7;
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter0.logLevel;
        retrofit.Server server10 = null;
        restAdapter0.server = server10;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter0.logLevel;
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter0.new RestHandler();
        retrofit.client.Response response15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response17 = restAdapter0.logAndReplaceResponse("Retrofit-Idle", response15, (long) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(logLevel12);
    }

    @Test
    public void test06828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06828");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.Server server32 = builder31.server;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel46);
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel46);
        restAdapter0.logLevel = logLevel46;
        retrofit.converter.Converter converter51 = null;
        restAdapter0.converter = converter51;
        retrofit.Profiler profiler53 = restAdapter0.profiler;
        retrofit.Profiler profiler54 = restAdapter0.profiler;
        java.util.concurrent.Executor executor55 = restAdapter0.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor56 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNull(profiler54);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNull(requestInterceptor56);
    }

    @Test
    public void test06829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06829");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.Log log4 = restAdapter0.log;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler8 = null;
        restAdapter0.profiler = profiler8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        java.util.concurrent.Executor executor12 = null;
        builder10.httpExecutor = executor12;
        retrofit.Server server14 = builder10.server;
        retrofit.RestAdapter.LogLevel logLevel15 = builder10.logLevel;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        java.util.concurrent.Executor executor23 = builder22.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor24 = builder22.requestInterceptor;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.Profiler profiler35 = null;
        builder33.profiler = profiler35;
        retrofit.Profiler profiler37 = null;
        builder33.profiler = profiler37;
        retrofit.converter.Converter converter39 = builder33.converter;
        retrofit.RestAdapter.Builder builder40 = builder22.setConverter(converter39);
        builder10.converter = converter39;
        restAdapter0.converter = converter39;
        retrofit.RestAdapter.RestHandler restHandler43 = restAdapter0.new RestHandler();
        java.lang.Throwable throwable44 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable44, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(requestInterceptor24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(converter39);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test06830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06830");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.client.Client.Provider provider17 = null;
        restAdapter16.clientProvider = provider17;
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter16.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter16.new RestHandler();
        retrofit.client.Client.Provider provider22 = restAdapter16.clientProvider;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter23.logLevel;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter23.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler37 = builder36.errorHandler;
        retrofit.RestAdapter restAdapter38 = builder36.build();
        java.util.concurrent.Executor executor39 = null;
        restAdapter38.httpExecutor = executor39;
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter38.new RestHandler();
        retrofit.client.Client.Provider provider42 = null;
        restAdapter38.clientProvider = provider42;
        retrofit.Profiler profiler44 = null;
        restAdapter38.profiler = profiler44;
        java.util.concurrent.Executor executor46 = restAdapter38.httpExecutor;
        java.util.concurrent.Executor executor47 = restAdapter38.callbackExecutor;
        restAdapter23.httpExecutor = executor47;
        restAdapter16.httpExecutor = executor47;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor51 = builder50.callbackExecutor;
        retrofit.Profiler profiler52 = builder50.profiler;
        retrofit.RestAdapter.Builder builder54 = builder50.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        builder59.logLevel = logLevel61;
        java.util.concurrent.Executor executor63 = null;
        builder59.callbackExecutor = executor63;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor66 = null;
        restAdapter65.callbackExecutor = executor66;
        retrofit.converter.Converter converter68 = restAdapter65.converter;
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        restAdapter65.log = log69;
        builder59.log = log69;
        builder55.log = log69;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler74 = restAdapter73.new RestHandler();
        java.util.concurrent.Executor executor75 = restAdapter73.httpExecutor;
        java.util.concurrent.Executor executor76 = null;
        restAdapter73.callbackExecutor = executor76;
        retrofit.client.Client.Provider provider78 = null;
        restAdapter73.clientProvider = provider78;
        java.util.concurrent.Executor executor80 = null;
        restAdapter73.callbackExecutor = executor80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.Server server83 = builder82.server;
        retrofit.RestAdapter.Log log84 = null;
        builder82.log = log84;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel87 = builder86.logLevel;
        retrofit.RestAdapter.Builder builder88 = builder82.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder90 = builder88.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter91 = builder90.build();
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.logLevel;
        retrofit.RequestInterceptor requestInterceptor93 = restAdapter91.requestInterceptor;
        restAdapter73.requestInterceptor = requestInterceptor93;
        builder55.requestInterceptor = requestInterceptor93;
        builder54.requestInterceptor = requestInterceptor93;
        restAdapter16.requestInterceptor = requestInterceptor93;
        retrofit.RestAdapter.LogLevel logLevel98 = restAdapter16.getLogLevel();
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNull(logLevel25);
        org.junit.Assert.assertNull(logLevel26);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(errorHandler37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNotNull(executor47);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNull(profiler52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNull(executor75);
        org.junit.Assert.assertNull(server83);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(restAdapter91);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor93);
        org.junit.Assert.assertTrue("'" + logLevel98 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel98.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06831");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.Server server15 = builder0.server;
        java.util.concurrent.Executor executor16 = null;
        builder0.callbackExecutor = executor16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        builder25.logLevel = logLevel27;
        boolean boolean29 = logLevel27.log();
        builder18.logLevel = logLevel27;
        retrofit.RestAdapter.LogLevel logLevel31 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder0.setLogLevel(logLevel31);
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = builder37.logLevel;
        retrofit.RestAdapter.Builder builder39 = builder33.setLogLevel(logLevel38);
        retrofit.RequestInterceptor requestInterceptor40 = null;
        builder33.requestInterceptor = requestInterceptor40;
        retrofit.RestAdapter.Log log42 = builder33.log;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.Server server44 = builder43.server;
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel48 = builder47.logLevel;
        retrofit.RestAdapter.Builder builder49 = builder43.setLogLevel(logLevel48);
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        builder50.logLevel = logLevel52;
        boolean boolean54 = logLevel52.log();
        builder43.logLevel = logLevel52;
        retrofit.RestAdapter.Builder builder56 = builder33.setLogLevel(logLevel52);
        retrofit.ErrorHandler errorHandler57 = builder33.errorHandler;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = builder58.callbackExecutor;
        retrofit.Profiler profiler60 = builder58.profiler;
        retrofit.RestAdapter.Builder builder62 = builder58.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("Retrofit-Idle");
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Builder builder73 = builder62.setServer(server72);
        retrofit.RestAdapter restAdapter74 = builder73.build();
        java.util.concurrent.Executor executor75 = restAdapter74.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler76 = restAdapter74.new RestHandler();
        retrofit.ErrorHandler errorHandler77 = restAdapter74.errorHandler;
        retrofit.RestAdapter.Builder builder78 = builder33.setErrorHandler(errorHandler77);
        retrofit.RestAdapter.Builder builder79 = builder32.setErrorHandler(errorHandler77);
        retrofit.client.Client.Provider provider80 = builder32.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(log42);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(errorHandler57);
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNull(profiler60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(executor75);
        org.junit.Assert.assertNotNull(errorHandler77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNull(provider80);
    }

    @Test
    public void test06832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06832");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder3.setLog(log12);
        retrofit.converter.Converter converter15 = null;
        builder3.converter = converter15;
        retrofit.RestAdapter.Log log17 = builder3.log;
        restAdapter0.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        builder26.logLevel = logLevel28;
        boolean boolean30 = logLevel28.log();
        builder19.logLevel = logLevel28;
        retrofit.RestAdapter.LogLevel logLevel32 = builder19.logLevel;
        retrofit.Profiler profiler33 = builder19.profiler;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.Server server43 = builder42.server;
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.RequestInterceptor requestInterceptor47 = null;
        retrofit.converter.Converter converter48 = null;
        retrofit.Profiler profiler49 = null;
        retrofit.ErrorHandler errorHandler50 = null;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("Retrofit-Idle");
        retrofit.Server server61 = builder60.server;
        retrofit.client.Client.Provider provider62 = null;
        java.util.concurrent.Executor executor63 = null;
        java.util.concurrent.Executor executor64 = null;
        retrofit.RequestInterceptor requestInterceptor65 = null;
        retrofit.converter.Converter converter66 = null;
        retrofit.Profiler profiler67 = null;
        retrofit.ErrorHandler errorHandler68 = null;
        retrofit.RestAdapter.Log log69 = null;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.Server server71 = builder70.server;
        retrofit.RestAdapter.Log log72 = null;
        builder70.log = log72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = builder74.logLevel;
        retrofit.RestAdapter.Builder builder76 = builder70.setLogLevel(logLevel75);
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server61, provider62, executor63, executor64, requestInterceptor65, converter66, profiler67, errorHandler68, log69, logLevel75);
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor47, converter48, profiler49, errorHandler50, log51, logLevel75);
        builder19.logLevel = logLevel75;
        restAdapter0.logLevel = logLevel75;
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor82 = restAdapter0.requestInterceptor;
        retrofit.Profiler profiler83 = restAdapter0.profiler;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(requestInterceptor82);
        org.junit.Assert.assertNull(profiler83);
    }

    @Test
    public void test06833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06833");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.Log log4 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor6 = restAdapter0.callbackExecutor;
        retrofit.Profiler profiler7 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter9 = restAdapter0.converter;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.Server server19 = builder18.server;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        builder28.logLevel = logLevel30;
        boolean boolean32 = logLevel30.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel30);
        retrofit.Profiler profiler34 = null;
        restAdapter33.profiler = profiler34;
        retrofit.converter.Converter converter36 = null;
        restAdapter33.converter = converter36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter47 = builder46.build();
        retrofit.Profiler profiler48 = null;
        builder46.profiler = profiler48;
        retrofit.Profiler profiler50 = null;
        builder46.profiler = profiler50;
        retrofit.converter.Converter converter52 = builder46.converter;
        restAdapter33.converter = converter52;
        retrofit.Profiler profiler54 = null;
        restAdapter33.profiler = profiler54;
        retrofit.Profiler profiler56 = restAdapter33.profiler;
        retrofit.converter.Converter converter57 = restAdapter33.converter;
        restAdapter0.converter = converter57;
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(restAdapter47);
        org.junit.Assert.assertNotNull(converter52);
        org.junit.Assert.assertNull(profiler56);
        org.junit.Assert.assertNotNull(converter57);
    }

    @Test
    public void test06834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06834");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        java.util.concurrent.Executor executor12 = null;
        builder8.httpExecutor = executor12;
        retrofit.RestAdapter restAdapter14 = builder8.build();
        retrofit.RestAdapter.Log log15 = builder8.log;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler25 = builder24.errorHandler;
        retrofit.RestAdapter restAdapter26 = builder24.build();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter29.new RestHandler();
        java.util.concurrent.Executor executor31 = restAdapter29.httpExecutor;
        java.util.concurrent.Executor executor32 = null;
        restAdapter29.callbackExecutor = executor32;
        retrofit.client.Client.Provider provider34 = null;
        restAdapter29.clientProvider = provider34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("Retrofit-Idle");
        retrofit.Server server45 = builder44.server;
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.Server server55 = builder54.server;
        retrofit.RestAdapter.Log log56 = null;
        builder54.log = log56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = builder58.logLevel;
        retrofit.RestAdapter.Builder builder60 = builder54.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder62 = builder60.setServer("Retrofit-Idle");
        retrofit.Server server63 = builder62.server;
        retrofit.client.Client.Provider provider64 = null;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.converter.Converter converter68 = null;
        retrofit.Profiler profiler69 = null;
        retrofit.ErrorHandler errorHandler70 = null;
        retrofit.RestAdapter.Log log71 = null;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.Server server73 = builder72.server;
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel77 = builder76.logLevel;
        retrofit.RestAdapter.Builder builder78 = builder72.setLogLevel(logLevel77);
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server63, provider64, executor65, executor66, requestInterceptor67, converter68, profiler69, errorHandler70, log71, logLevel77);
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel77);
        restAdapter29.log = log53;
        log53.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder84 = builder27.setLog(log53);
        builder24.log = log53;
        retrofit.ErrorHandler errorHandler86 = builder24.errorHandler;
        retrofit.RestAdapter.Builder builder87 = builder8.setErrorHandler(errorHandler86);
        retrofit.RestAdapter.LogLevel logLevel88 = builder8.logLevel;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(server63);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(errorHandler86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertTrue("'" + logLevel88 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel88.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06835");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.Server server32 = builder31.server;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel46);
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel46);
        restAdapter0.server = server14;
        retrofit.client.Client.Provider provider51 = null;
        restAdapter0.clientProvider = provider51;
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter0.logLevel;
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder63 = builder61.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder65 = builder63.setLog(log64);
        java.util.concurrent.Executor executor66 = builder63.httpExecutor;
        retrofit.RestAdapter.Builder builder68 = builder63.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter69 = null;
        builder68.converter = converter69;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLog(log80);
        java.util.concurrent.Executor executor82 = builder79.httpExecutor;
        retrofit.RestAdapter restAdapter83 = builder79.build();
        java.util.concurrent.Executor executor84 = restAdapter83.httpExecutor;
        builder68.callbackExecutor = executor84;
        java.util.concurrent.Executor executor86 = builder68.callbackExecutor;
        restAdapter0.httpExecutor = executor86;
        retrofit.RestAdapter.Log log88 = restAdapter0.log;
        java.util.concurrent.Executor executor89 = restAdapter0.httpExecutor;
        java.lang.Class<?> wildcardClass90 = restAdapter0.getClass();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(logLevel53);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(executor66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(executor82);
        org.junit.Assert.assertNotNull(restAdapter83);
        org.junit.Assert.assertNotNull(executor84);
        org.junit.Assert.assertNotNull(executor86);
        org.junit.Assert.assertNull(log88);
        org.junit.Assert.assertNotNull(executor89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test06836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06836");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter6.logLevel;
        retrofit.ErrorHandler errorHandler9 = restAdapter6.errorHandler;
        retrofit.converter.Converter converter10 = null;
        restAdapter6.converter = converter10;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter6.logLevel;
        java.util.concurrent.Executor executor13 = restAdapter6.httpExecutor;
        retrofit.RestAdapter.Log log14 = restAdapter6.log;
        retrofit.Profiler profiler15 = null;
        restAdapter6.profiler = profiler15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        builder17.logLevel = logLevel19;
        boolean boolean21 = logLevel19.log();
        restAdapter6.logLevel = logLevel19;
        retrofit.Profiler profiler23 = restAdapter6.profiler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler33 = builder32.errorHandler;
        retrofit.RestAdapter restAdapter34 = builder32.build();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter37.new RestHandler();
        java.util.concurrent.Executor executor39 = restAdapter37.httpExecutor;
        java.util.concurrent.Executor executor40 = null;
        restAdapter37.callbackExecutor = executor40;
        retrofit.client.Client.Provider provider42 = null;
        restAdapter37.clientProvider = provider42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("Retrofit-Idle");
        retrofit.Server server53 = builder52.server;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = builder68.setServer("Retrofit-Idle");
        retrofit.Server server71 = builder70.server;
        retrofit.client.Client.Provider provider72 = null;
        java.util.concurrent.Executor executor73 = null;
        java.util.concurrent.Executor executor74 = null;
        retrofit.RequestInterceptor requestInterceptor75 = null;
        retrofit.converter.Converter converter76 = null;
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = null;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.Server server81 = builder80.server;
        retrofit.RestAdapter.Log log82 = null;
        builder80.log = log82;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel85 = builder84.logLevel;
        retrofit.RestAdapter.Builder builder86 = builder80.setLogLevel(logLevel85);
        retrofit.RestAdapter restAdapter87 = new retrofit.RestAdapter(server71, provider72, executor73, executor74, requestInterceptor75, converter76, profiler77, errorHandler78, log79, logLevel85);
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel85);
        restAdapter37.log = log61;
        log61.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder92 = builder35.setLog(log61);
        builder32.log = log61;
        retrofit.RequestInterceptor requestInterceptor94 = builder32.requestInterceptor;
        restAdapter6.requestInterceptor = requestInterceptor94;
        builder0.requestInterceptor = requestInterceptor94;
        java.util.concurrent.Executor executor97 = builder0.callbackExecutor;
        builder0.ensureSaneDefaults();
        retrofit.Server server99 = builder0.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(errorHandler33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(server71);
        org.junit.Assert.assertNull(server81);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(requestInterceptor94);
        org.junit.Assert.assertNull(executor97);
        org.junit.Assert.assertNull(server99);
    }

    @Test
    public void test06837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06837");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        retrofit.RestAdapter.Builder builder13 = builder8.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler14 = builder8.errorHandler;
        retrofit.RestAdapter restAdapter15 = builder8.build();
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter15.requestInterceptor;
        retrofit.client.Client.Provider provider17 = restAdapter15.clientProvider;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor19 = builder18.callbackExecutor;
        retrofit.Profiler profiler20 = builder18.profiler;
        retrofit.RestAdapter.Builder builder22 = builder18.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Builder builder33 = builder22.setServer(server32);
        retrofit.RestAdapter restAdapter34 = builder33.build();
        retrofit.converter.Converter converter35 = restAdapter34.converter;
        restAdapter15.converter = converter35;
        retrofit.ErrorHandler errorHandler37 = restAdapter15.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(errorHandler14);
        org.junit.Assert.assertNotNull(restAdapter15);
        org.junit.Assert.assertNotNull(requestInterceptor16);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(converter35);
        org.junit.Assert.assertNotNull(errorHandler37);
    }

    @Test
    public void test06838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06838");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        java.util.concurrent.Executor executor8 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        builder16.logLevel = logLevel18;
        boolean boolean20 = logLevel18.log();
        builder9.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel22 = builder9.logLevel;
        retrofit.Profiler profiler23 = builder9.profiler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = builder24.callbackExecutor;
        retrofit.Profiler profiler26 = builder24.profiler;
        retrofit.RestAdapter.Builder builder28 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Builder builder39 = builder28.setServer(server38);
        retrofit.RestAdapter.Builder builder40 = builder9.setServer(server38);
        retrofit.RestAdapter.Builder builder41 = builder6.setServer(server38);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.ErrorHandler errorHandler44 = null;
        builder42.errorHandler = errorHandler44;
        retrofit.converter.Converter converter46 = builder42.converter;
        retrofit.RestAdapter.LogLevel logLevel47 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder41.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = builder53.logLevel;
        retrofit.RestAdapter.Builder builder55 = builder49.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        builder56.logLevel = logLevel58;
        boolean boolean60 = logLevel58.log();
        builder49.logLevel = logLevel58;
        retrofit.RestAdapter.LogLevel logLevel62 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder63 = builder41.setLogLevel(logLevel62);
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.Profiler profiler65 = null;
        builder63.profiler = profiler65;
        java.util.concurrent.Executor executor67 = builder63.callbackExecutor;
        java.lang.Class<?> wildcardClass68 = builder63.getClass();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(executor67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test06839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06839");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = null;
        restAdapter0.httpExecutor = executor2;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.client.Client.Provider provider12 = builder5.clientProvider;
        retrofit.RestAdapter.Log log13 = retrofit.RestAdapter.Log.NONE;
        builder5.log = log13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor16 = builder15.callbackExecutor;
        retrofit.Profiler profiler17 = builder15.profiler;
        retrofit.RestAdapter.Builder builder19 = builder15.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter20 = builder19.converter;
        retrofit.RestAdapter.Builder builder22 = builder19.setServer("Retrofit-Idle");
        retrofit.Server server23 = builder19.server;
        builder5.server = server23;
        retrofit.RestAdapter restAdapter25 = builder5.build();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        java.util.concurrent.Executor executor28 = null;
        builder26.httpExecutor = executor28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("Retrofit-Idle");
        retrofit.Server server41 = builder40.server;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel55);
        retrofit.client.Client.Provider provider57 = builder50.clientProvider;
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        builder50.log = log58;
        retrofit.RestAdapter.Builder builder60 = builder49.setLog(log58);
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log58, logLevel61);
        retrofit.RestAdapter.Builder builder63 = builder30.setServer(server41);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter73 = builder72.build();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter73.logLevel;
        retrofit.RequestInterceptor requestInterceptor75 = restAdapter73.requestInterceptor;
        retrofit.RestAdapter.Builder builder76 = builder63.setRequestInterceptor(requestInterceptor75);
        retrofit.RestAdapter.Builder builder77 = builder26.setRequestInterceptor(requestInterceptor75);
        retrofit.RestAdapter.Builder builder78 = builder5.setRequestInterceptor(requestInterceptor75);
        retrofit.RestAdapter restAdapter79 = builder78.build();
        retrofit.Profiler profiler80 = null;
        builder78.profiler = profiler80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.Server server83 = builder82.server;
        retrofit.RestAdapter.Log log84 = null;
        builder82.log = log84;
        retrofit.RestAdapter.Builder builder86 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel87 = builder86.logLevel;
        retrofit.RestAdapter.Builder builder88 = builder82.setLogLevel(logLevel87);
        retrofit.RestAdapter.Builder builder90 = builder88.setServer("Retrofit-Idle");
        retrofit.Server server91 = builder90.server;
        retrofit.RestAdapter.Builder builder92 = builder78.setServer(server91);
        restAdapter0.server = server91;
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(restAdapter73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(restAdapter79);
        org.junit.Assert.assertNull(server83);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(server91);
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test06840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06840");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter4 = null;
        restAdapter0.converter = converter4;
        retrofit.converter.Converter converter6 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter8 = null;
        restAdapter0.converter = converter8;
        retrofit.client.Client.Provider provider10 = restAdapter0.clientProvider;
        retrofit.Server server11 = restAdapter0.server;
        java.util.concurrent.Executor executor12 = restAdapter0.callbackExecutor;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertNull(executor12);
    }

    @Test
    public void test06841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06841");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel23);
        retrofit.client.Client.Provider provider26 = restAdapter25.clientProvider;
        retrofit.Profiler profiler27 = null;
        restAdapter25.profiler = profiler27;
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter25.new RestHandler();
        java.util.concurrent.Executor executor30 = restAdapter25.httpExecutor;
        retrofit.Profiler profiler31 = restAdapter25.profiler;
        retrofit.client.Client.Provider provider32 = restAdapter25.clientProvider;
        java.lang.Throwable throwable33 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter25.logException(throwable33, "Retrofit-Idle");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNull(profiler31);
        org.junit.Assert.assertNull(provider32);
    }

    @Test
    public void test06842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06842");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = builder6.logLevel;
        builder5.logLevel = logLevel7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("Retrofit-Idle");
        retrofit.Server server18 = builder17.server;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel32);
        retrofit.client.Client.Provider provider34 = builder27.clientProvider;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        builder27.log = log35;
        retrofit.RestAdapter.Builder builder37 = builder26.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log35, logLevel38);
        builder5.logLevel = logLevel38;
        retrofit.RestAdapter.LogLevel logLevel41 = builder5.logLevel;
        retrofit.Profiler profiler42 = builder5.profiler;
        retrofit.RestAdapter.Builder builder44 = builder5.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter54 = builder53.build();
        retrofit.Profiler profiler55 = null;
        builder53.profiler = profiler55;
        retrofit.Profiler profiler57 = null;
        builder53.profiler = profiler57;
        retrofit.converter.Converter converter59 = builder53.converter;
        builder44.converter = converter59;
        retrofit.RestAdapter.Builder builder61 = builder0.setConverter(converter59);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = builder68.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter71 = builder70.build();
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.NONE;
        builder70.logLevel = logLevel72;
        retrofit.converter.Converter converter74 = builder70.converter;
        builder61.converter = converter74;
        builder61.ensureSaneDefaults();
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(restAdapter54);
        org.junit.Assert.assertNotNull(converter59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(restAdapter71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(converter74);
    }

    @Test
    public void test06843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06843");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler6 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log33;
        retrofit.RestAdapter.Builder builder35 = builder24.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log33, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder0.setLog(log33);
        retrofit.RequestInterceptor requestInterceptor39 = builder38.requestInterceptor;
        builder38.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder42 = builder38.setServer("hi!");
        retrofit.Profiler profiler43 = null;
        builder42.profiler = profiler43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.RequestInterceptor requestInterceptor52 = null;
        builder45.requestInterceptor = requestInterceptor52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.Server server55 = builder54.server;
        retrofit.RestAdapter.Log log56 = null;
        builder54.log = log56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = builder58.logLevel;
        retrofit.RestAdapter.Builder builder60 = builder54.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder62 = builder60.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter63 = builder62.build();
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.NONE;
        builder62.logLevel = logLevel64;
        retrofit.RestAdapter.Log log66 = builder62.log;
        log66.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder69 = builder45.setLog(log66);
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor71 = builder70.callbackExecutor;
        retrofit.Profiler profiler72 = builder70.profiler;
        retrofit.RestAdapter.Builder builder74 = builder70.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.Server server76 = builder75.server;
        retrofit.RestAdapter.Log log77 = null;
        builder75.log = log77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel80 = builder79.logLevel;
        retrofit.RestAdapter.Builder builder81 = builder75.setLogLevel(logLevel80);
        retrofit.RestAdapter.Builder builder83 = builder81.setServer("Retrofit-Idle");
        retrofit.Server server84 = builder83.server;
        retrofit.RestAdapter.Builder builder85 = builder74.setServer(server84);
        retrofit.RestAdapter restAdapter86 = builder85.build();
        retrofit.RequestInterceptor requestInterceptor87 = restAdapter86.requestInterceptor;
        builder69.requestInterceptor = requestInterceptor87;
        retrofit.RestAdapter.Builder builder89 = builder42.setRequestInterceptor(requestInterceptor87);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(requestInterceptor39);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(restAdapter63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(executor71);
        org.junit.Assert.assertNull(profiler72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNull(server76);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(server84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(restAdapter86);
        org.junit.Assert.assertNotNull(requestInterceptor87);
        org.junit.Assert.assertNotNull(builder89);
    }

    @Test
    public void test06844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06844");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        java.util.concurrent.Executor executor5 = null;
        restAdapter0.callbackExecutor = executor5;
        java.util.concurrent.Executor executor7 = null;
        restAdapter0.httpExecutor = executor7;
        java.util.concurrent.Executor executor9 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler10 = restAdapter0.profiler;
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter0.getLogLevel();
        retrofit.client.Client.Provider provider12 = restAdapter0.clientProvider;
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(provider12);
    }

    @Test
    public void test06845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06845");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.Server server3 = builder2.server;
        retrofit.RestAdapter.Log log4 = null;
        builder2.log = log4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = builder6.logLevel;
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel7);
        retrofit.RestAdapter.Builder builder10 = builder8.setServer("Retrofit-Idle");
        retrofit.Server server11 = builder10.server;
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.RequestInterceptor requestInterceptor15 = null;
        retrofit.converter.Converter converter16 = null;
        retrofit.Profiler profiler17 = null;
        retrofit.ErrorHandler errorHandler18 = null;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider27 = builder20.clientProvider;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log28;
        retrofit.RestAdapter.Builder builder30 = builder19.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor15, converter16, profiler17, errorHandler18, log28, logLevel31);
        retrofit.RestAdapter.Builder builder33 = builder0.setServer(server11);
        retrofit.client.Client.Provider provider34 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("Retrofit-Idle");
        retrofit.Server server44 = builder43.server;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = null;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        builder53.logLevel = logLevel55;
        boolean boolean57 = logLevel55.log();
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel55);
        boolean boolean59 = logLevel55.log();
        retrofit.RestAdapter.Builder builder60 = builder0.setLogLevel(logLevel55);
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test06846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06846");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.Server server3 = builder2.server;
        retrofit.RestAdapter.Log log4 = null;
        builder2.log = log4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = builder6.logLevel;
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel7);
        retrofit.RestAdapter.Builder builder10 = builder8.setServer("Retrofit-Idle");
        retrofit.Server server11 = builder10.server;
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.RequestInterceptor requestInterceptor15 = null;
        retrofit.converter.Converter converter16 = null;
        retrofit.Profiler profiler17 = null;
        retrofit.ErrorHandler errorHandler18 = null;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider27 = builder20.clientProvider;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log28;
        retrofit.RestAdapter.Builder builder30 = builder19.setLog(log28);
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor15, converter16, profiler17, errorHandler18, log28, logLevel31);
        retrofit.RestAdapter.Builder builder33 = builder0.setServer(server11);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter43 = builder42.build();
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter43.logLevel;
        retrofit.RequestInterceptor requestInterceptor45 = restAdapter43.requestInterceptor;
        retrofit.RestAdapter.Builder builder46 = builder33.setRequestInterceptor(requestInterceptor45);
        retrofit.ErrorHandler errorHandler47 = null;
        builder46.errorHandler = errorHandler47;
        retrofit.RestAdapter restAdapter49 = builder46.build();
        retrofit.converter.Converter converter50 = builder46.converter;
        retrofit.RestAdapter.Log log51 = builder46.log;
        retrofit.client.Client client52 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder53 = builder46.setClient(client52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(restAdapter49);
        org.junit.Assert.assertNotNull(converter50);
        org.junit.Assert.assertNotNull(log51);
    }

    @Test
    public void test06847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06847");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder7 = builder0.setServer("hi!");
        retrofit.client.Client.Provider provider8 = builder7.clientProvider;
        retrofit.converter.Converter converter9 = builder7.converter;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(converter9);
    }

    @Test
    public void test06848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06848");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler13 = builder12.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = builder14.callbackExecutor;
        retrofit.Profiler profiler16 = builder14.profiler;
        retrofit.RestAdapter.Builder builder18 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("Retrofit-Idle");
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Builder builder29 = builder18.setServer(server28);
        retrofit.RestAdapter restAdapter30 = builder29.build();
        java.util.concurrent.Executor executor31 = restAdapter30.callbackExecutor;
        builder12.callbackExecutor = executor31;
        restAdapter0.callbackExecutor = executor31;
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel35 = null;
        restAdapter0.logLevel = logLevel35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder37.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider46 = null;
        builder43.clientProvider = provider46;
        retrofit.Server server48 = builder43.server;
        retrofit.RestAdapter restAdapter49 = builder43.build();
        retrofit.RestAdapter.RestHandler restHandler50 = restAdapter49.new RestHandler();
        java.util.concurrent.Executor executor51 = restAdapter49.httpExecutor;
        retrofit.client.Client.Provider provider52 = restAdapter49.clientProvider;
        restAdapter0.clientProvider = provider52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.Server server55 = builder54.server;
        retrofit.RestAdapter.Log log56 = null;
        builder54.log = log56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = builder58.logLevel;
        retrofit.RestAdapter.Builder builder60 = builder54.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder62 = builder60.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder64 = builder62.setLog(log63);
        java.util.concurrent.Executor executor65 = builder62.httpExecutor;
        retrofit.RestAdapter.Builder builder67 = builder62.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler68 = builder62.errorHandler;
        retrofit.RestAdapter restAdapter69 = builder62.build();
        retrofit.RequestInterceptor requestInterceptor70 = restAdapter69.requestInterceptor;
        retrofit.converter.Converter converter71 = restAdapter69.converter;
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter69.new RestHandler();
        java.util.concurrent.Executor executor73 = restAdapter69.callbackExecutor;
        restAdapter0.httpExecutor = executor73;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNotNull(restAdapter49);
        org.junit.Assert.assertNotNull(executor51);
        org.junit.Assert.assertNotNull(provider52);
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(executor65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(errorHandler68);
        org.junit.Assert.assertNotNull(restAdapter69);
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertNotNull(converter71);
        org.junit.Assert.assertNotNull(executor73);
    }

    @Test
    public void test06849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06849");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.httpExecutor = executor1;
        java.util.concurrent.Executor executor3 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Log log4 = restAdapter0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLog(log14);
        java.util.concurrent.Executor executor16 = builder13.httpExecutor;
        java.util.concurrent.Executor executor17 = null;
        builder13.httpExecutor = executor17;
        retrofit.RestAdapter restAdapter19 = builder13.build();
        retrofit.RestAdapter.LogLevel logLevel20 = builder13.logLevel;
        retrofit.ErrorHandler errorHandler21 = builder13.errorHandler;
        restAdapter0.errorHandler = errorHandler21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        java.util.concurrent.Executor executor25 = null;
        builder23.httpExecutor = executor25;
        retrofit.Server server27 = builder23.server;
        retrofit.RestAdapter.LogLevel logLevel28 = builder23.logLevel;
        retrofit.client.Client.Provider provider29 = null;
        builder23.clientProvider = provider29;
        retrofit.Server server31 = builder23.server;
        retrofit.RequestInterceptor requestInterceptor32 = builder23.requestInterceptor;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor34 = builder33.callbackExecutor;
        retrofit.Profiler profiler35 = builder33.profiler;
        retrofit.RestAdapter.Builder builder37 = builder33.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Builder builder48 = builder37.setServer(server47);
        java.util.concurrent.Executor executor49 = builder48.callbackExecutor;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor51 = null;
        restAdapter50.callbackExecutor = executor51;
        retrofit.converter.Converter converter53 = restAdapter50.converter;
        retrofit.RestAdapter.RestHandler restHandler54 = restAdapter50.new RestHandler();
        retrofit.converter.Converter converter55 = restAdapter50.converter;
        java.util.concurrent.Executor executor56 = restAdapter50.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter50.logLevel = logLevel57;
        retrofit.RestAdapter.Builder builder59 = builder48.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder23.setLogLevel(logLevel57);
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor62 = null;
        restAdapter61.callbackExecutor = executor62;
        retrofit.converter.Converter converter64 = restAdapter61.converter;
        retrofit.RestAdapter.Log log65 = retrofit.RestAdapter.Log.NONE;
        restAdapter61.log = log65;
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.Log log69 = restAdapter61.log;
        builder23.log = log69;
        log69.log("Retrofit-Idle");
        restAdapter0.log = log69;
        retrofit.RestAdapter.RestHandler restHandler74 = restAdapter0.new RestHandler();
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor76 = null;
        restAdapter75.callbackExecutor = executor76;
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter75.new RestHandler();
        retrofit.ErrorHandler errorHandler79 = restAdapter75.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler80 = restAdapter75.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor81 = restAdapter75.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter75.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler83 = restAdapter75.new RestHandler();
        retrofit.converter.Converter converter84 = restAdapter75.converter;
        java.lang.reflect.Method method85 = null;
        java.lang.Object[] objArray86 = new java.lang.Object[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = restHandler74.invoke((java.lang.Object) converter84, method85, objArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNotNull(restAdapter19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertNull(requestInterceptor32);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(executor49);
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertNotNull(log65);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNull(errorHandler79);
        org.junit.Assert.assertNull(requestInterceptor81);
        org.junit.Assert.assertNull(logLevel82);
        org.junit.Assert.assertNull(converter84);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
    }

    @Test
    public void test06850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06850");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.httpExecutor = executor1;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.httpExecutor = executor3;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.Server server6 = restAdapter0.server;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder17 = builder11.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder11.log = log19;
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel31);
        retrofit.client.Client.Provider provider33 = builder26.clientProvider;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log34;
        retrofit.RestAdapter.Builder builder36 = builder22.setLog(log34);
        retrofit.RestAdapter.Builder builder37 = builder7.setLog(log34);
        builder37.ensureSaneDefaults();
        retrofit.client.Client.Provider provider39 = null;
        builder37.clientProvider = provider39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        retrofit.client.Client.Provider provider49 = builder42.clientProvider;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log50;
        retrofit.RestAdapter.Builder builder52 = builder41.setLog(log50);
        retrofit.Profiler profiler53 = builder41.profiler;
        java.util.concurrent.Executor executor54 = null;
        builder41.callbackExecutor = executor54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.client.Client.Provider provider63 = builder56.clientProvider;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        builder56.log = log64;
        builder41.log = log64;
        builder37.log = log64;
        java.util.concurrent.Executor executor68 = builder37.httpExecutor;
        restAdapter0.callbackExecutor = executor68;
        retrofit.Profiler profiler70 = null;
        restAdapter0.profiler = profiler70;
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Log log75 = null;
        builder73.log = log75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter82 = builder81.build();
        java.util.concurrent.Executor executor83 = builder81.callbackExecutor;
        restAdapter0.callbackExecutor = executor83;
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertNotNull(executor83);
    }

    @Test
    public void test06851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06851");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        retrofit.Profiler profiler14 = builder0.profiler;
        retrofit.client.Client.Provider provider15 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider27 = builder20.clientProvider;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log28;
        retrofit.RestAdapter.Builder builder30 = builder16.setLog(log28);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.client.Client.Provider provider42 = builder35.clientProvider;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder35.log = log43;
        retrofit.RestAdapter.Builder builder45 = builder31.setLog(log43);
        retrofit.RestAdapter.Builder builder46 = builder16.setLog(log43);
        builder46.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = null;
        builder46.clientProvider = provider48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        retrofit.RestAdapter.Builder builder57 = builder51.setLogLevel(logLevel56);
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        builder51.log = log59;
        retrofit.RestAdapter.Builder builder61 = builder50.setLog(log59);
        retrofit.Profiler profiler62 = builder50.profiler;
        java.util.concurrent.Executor executor63 = null;
        builder50.callbackExecutor = executor63;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.Server server66 = builder65.server;
        retrofit.RestAdapter.Log log67 = null;
        builder65.log = log67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = builder69.logLevel;
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel70);
        retrofit.client.Client.Provider provider72 = builder65.clientProvider;
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        builder65.log = log73;
        builder50.log = log73;
        builder46.log = log73;
        java.util.concurrent.Executor executor77 = builder46.httpExecutor;
        builder0.callbackExecutor = executor77;
        retrofit.Server server79 = builder0.server;
        retrofit.ErrorHandler errorHandler80 = builder0.errorHandler;
        retrofit.Profiler profiler81 = null;
        builder0.profiler = profiler81;
        retrofit.RestAdapter.LogLevel logLevel83 = builder0.logLevel;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(profiler62);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(executor77);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertNull(errorHandler80);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06852");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.Server server27 = builder26.server;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel41);
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel41);
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter45.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler47 = restAdapter45.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter45.new RestHandler();
        retrofit.ErrorHandler errorHandler49 = restAdapter45.errorHandler;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("Retrofit-Idle");
        retrofit.Server server59 = builder58.server;
        restAdapter45.server = server59;
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter45.logLevel;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = builder68.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter71 = builder70.build();
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter71.logLevel;
        retrofit.RestAdapter.Log log73 = restAdapter71.log;
        restAdapter45.log = log73;
        log73.log("Retrofit-");
        restAdapter44.log = log73;
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter44.getLogLevel();
        boolean boolean80 = logLevel79.log();
        boolean boolean81 = logLevel79.log();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(errorHandler49);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(server59);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(restAdapter71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test06853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06853");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        java.util.concurrent.Executor executor12 = null;
        builder8.httpExecutor = executor12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.logLevel;
        builder8.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder27 = builder8.setServer("hi!");
        retrofit.RestAdapter.Builder builder29 = builder8.setServer("Retrofit-Idle");
        java.util.concurrent.Executor executor30 = builder29.callbackExecutor;
        builder29.ensureSaneDefaults();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(executor30);
    }

    @Test
    public void test06854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06854");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder0.requestInterceptor = requestInterceptor13;
        java.util.concurrent.Executor executor15 = null;
        builder0.httpExecutor = executor15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.client.Client.Provider provider25 = builder18.clientProvider;
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        builder18.log = log26;
        retrofit.RestAdapter.Builder builder28 = builder17.setLog(log26);
        retrofit.converter.Converter converter29 = null;
        builder17.converter = converter29;
        retrofit.RestAdapter.Log log31 = builder17.log;
        retrofit.RestAdapter.Builder builder32 = builder0.setLog(log31);
        java.util.concurrent.Executor executor33 = builder32.callbackExecutor;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        java.util.concurrent.Executor executor45 = builder42.httpExecutor;
        retrofit.RestAdapter.Builder builder47 = builder42.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler48 = builder42.errorHandler;
        retrofit.RestAdapter restAdapter49 = builder42.build();
        retrofit.RequestInterceptor requestInterceptor50 = restAdapter49.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter49.new RestHandler();
        java.util.concurrent.Executor executor52 = restAdapter49.callbackExecutor;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor54 = null;
        restAdapter53.callbackExecutor = executor54;
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter53.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor57 = restAdapter53.requestInterceptor;
        retrofit.converter.Converter converter58 = null;
        restAdapter53.converter = converter58;
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter53.new RestHandler();
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor62 = builder61.callbackExecutor;
        retrofit.Profiler profiler63 = builder61.profiler;
        retrofit.RestAdapter.Builder builder65 = builder61.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.Server server67 = builder66.server;
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = builder70.logLevel;
        retrofit.RestAdapter.Builder builder72 = builder66.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder74 = builder72.setServer("Retrofit-Idle");
        retrofit.Server server75 = builder74.server;
        retrofit.RestAdapter.Builder builder76 = builder65.setServer(server75);
        retrofit.RestAdapter restAdapter77 = builder76.build();
        retrofit.client.Client.Provider provider78 = null;
        restAdapter77.clientProvider = provider78;
        retrofit.RestAdapter.Log log80 = restAdapter77.log;
        retrofit.RestAdapter.LogLevel logLevel81 = restAdapter77.getLogLevel();
        retrofit.ErrorHandler errorHandler82 = null;
        restAdapter77.errorHandler = errorHandler82;
        java.util.concurrent.Executor executor84 = restAdapter77.httpExecutor;
        restAdapter53.httpExecutor = executor84;
        retrofit.RestAdapter.Builder builder86 = builder32.setExecutors(executor52, executor84);
        java.lang.Class<?> wildcardClass87 = executor52.getClass();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(errorHandler48);
        org.junit.Assert.assertNotNull(restAdapter49);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNull(requestInterceptor57);
        org.junit.Assert.assertNull(executor62);
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(server75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test06855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06855");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel6 = null;
        restAdapter0.logLevel = logLevel6;
        java.util.concurrent.Executor executor8 = null;
        restAdapter0.httpExecutor = executor8;
        retrofit.converter.Converter converter10 = null;
        restAdapter0.converter = converter10;
        retrofit.Profiler profiler12 = null;
        restAdapter0.profiler = profiler12;
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(requestInterceptor14);
    }

    @Test
    public void test06856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06856");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RequestInterceptor requestInterceptor7 = null;
        builder0.requestInterceptor = requestInterceptor7;
        retrofit.RestAdapter.Log log9 = builder0.log;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        builder17.logLevel = logLevel19;
        boolean boolean21 = logLevel19.log();
        builder10.logLevel = logLevel19;
        retrofit.RestAdapter.Builder builder23 = builder0.setLogLevel(logLevel19);
        retrofit.Profiler profiler24 = builder23.profiler;
        retrofit.client.Client.Provider provider25 = builder23.clientProvider;
        java.util.concurrent.Executor executor26 = builder23.httpExecutor;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        builder34.logLevel = logLevel36;
        boolean boolean38 = logLevel36.log();
        builder27.logLevel = logLevel36;
        retrofit.RestAdapter.LogLevel logLevel40 = builder27.logLevel;
        retrofit.RestAdapter.LogLevel logLevel41 = null;
        builder27.logLevel = logLevel41;
        retrofit.RestAdapter.Builder builder44 = builder27.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor46 = builder45.callbackExecutor;
        retrofit.Profiler profiler47 = builder45.profiler;
        retrofit.RestAdapter.Builder builder49 = builder45.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("Retrofit-Idle");
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Builder builder60 = builder49.setServer(server59);
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.Profiler profiler62 = builder60.profiler;
        retrofit.RestAdapter.LogLevel logLevel63 = builder60.logLevel;
        java.util.concurrent.Executor executor64 = builder60.callbackExecutor;
        retrofit.converter.Converter converter65 = builder60.converter;
        builder27.converter = converter65;
        builder23.converter = converter65;
        builder23.ensureSaneDefaults();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNull(profiler47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(server59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertNull(profiler62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNotNull(converter65);
    }

    @Test
    public void test06857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06857");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter0.logLevel = logLevel7;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter0.logLevel = logLevel9;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("Retrofit-Idle");
        retrofit.Server server22 = builder21.server;
        retrofit.client.Client.Provider provider23 = null;
        java.util.concurrent.Executor executor24 = null;
        java.util.concurrent.Executor executor25 = null;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        retrofit.converter.Converter converter27 = null;
        retrofit.Profiler profiler28 = null;
        retrofit.ErrorHandler errorHandler29 = null;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        retrofit.RestAdapter.Builder builder37 = builder31.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder39 = builder37.setServer("Retrofit-Idle");
        retrofit.Server server40 = builder39.server;
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Log log48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = builder53.logLevel;
        retrofit.RestAdapter.Builder builder55 = builder49.setLogLevel(logLevel54);
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server40, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log48, logLevel54);
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server22, provider23, executor24, executor25, requestInterceptor26, converter27, profiler28, errorHandler29, log30, logLevel54);
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel59 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean60 = logLevel59.log();
        restAdapter57.logLevel = logLevel59;
        restAdapter0.setLogLevel(logLevel59);
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test06858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06858");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = builder8.build();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        builder8.logLevel = logLevel10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.ErrorHandler errorHandler14 = null;
        builder12.errorHandler = errorHandler14;
        retrofit.converter.Converter converter16 = builder12.converter;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor18 = null;
        restAdapter17.callbackExecutor = executor18;
        retrofit.converter.Converter converter20 = null;
        restAdapter17.converter = converter20;
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter17.new RestHandler();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor24 = builder23.callbackExecutor;
        retrofit.Profiler profiler25 = builder23.profiler;
        retrofit.RestAdapter.Builder builder27 = builder23.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Builder builder38 = builder27.setServer(server37);
        retrofit.RestAdapter restAdapter39 = builder38.build();
        java.util.concurrent.Executor executor40 = restAdapter39.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler41 = restAdapter39.new RestHandler();
        retrofit.ErrorHandler errorHandler42 = restAdapter39.errorHandler;
        restAdapter17.errorHandler = errorHandler42;
        builder12.errorHandler = errorHandler42;
        builder8.errorHandler = errorHandler42;
        retrofit.RestAdapter.LogLevel logLevel46 = null;
        builder8.logLevel = logLevel46;
        builder8.ensureSaneDefaults();
        retrofit.Profiler profiler49 = builder8.profiler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(restAdapter39);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNull(profiler49);
    }

    @Test
    public void test06859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06859");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor6 = builder5.callbackExecutor;
        retrofit.Profiler profiler7 = builder5.profiler;
        retrofit.RestAdapter.Builder builder9 = builder5.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Builder builder20 = builder9.setServer(server19);
        retrofit.RestAdapter restAdapter21 = builder20.build();
        retrofit.Profiler profiler22 = builder20.profiler;
        retrofit.RestAdapter.LogLevel logLevel23 = builder20.logLevel;
        java.util.concurrent.Executor executor24 = builder20.callbackExecutor;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        java.util.concurrent.Executor executor27 = null;
        builder25.httpExecutor = executor27;
        retrofit.Server server29 = builder25.server;
        retrofit.RestAdapter.LogLevel logLevel30 = builder25.logLevel;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        retrofit.RestAdapter.Builder builder37 = builder31.setLogLevel(logLevel36);
        java.util.concurrent.Executor executor38 = builder37.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor39 = builder37.requestInterceptor;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter49 = builder48.build();
        retrofit.Profiler profiler50 = null;
        builder48.profiler = profiler50;
        retrofit.Profiler profiler52 = null;
        builder48.profiler = profiler52;
        retrofit.converter.Converter converter54 = builder48.converter;
        retrofit.RestAdapter.Builder builder55 = builder37.setConverter(converter54);
        builder25.converter = converter54;
        retrofit.RestAdapter.Builder builder57 = builder20.setConverter(converter54);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = builder62.logLevel;
        retrofit.RestAdapter.Builder builder64 = builder58.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder64.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        java.util.concurrent.Executor executor69 = builder66.httpExecutor;
        retrofit.RestAdapter.Builder builder71 = builder66.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel72 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder73 = builder20.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.Server server76 = builder75.server;
        retrofit.RestAdapter.Log log77 = null;
        builder75.log = log77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel80 = builder79.logLevel;
        retrofit.RestAdapter.Builder builder81 = builder75.setLogLevel(logLevel80);
        retrofit.client.Client.Provider provider82 = builder75.clientProvider;
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        builder75.log = log83;
        retrofit.RestAdapter.Builder builder85 = builder74.setLog(log83);
        retrofit.RestAdapter.Log log86 = builder74.log;
        builder73.log = log86;
        retrofit.RestAdapter.Builder builder88 = builder0.setLog(log86);
        retrofit.converter.Converter converter89 = builder0.converter;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNull(requestInterceptor39);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(restAdapter49);
        org.junit.Assert.assertNotNull(converter54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(server76);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(provider82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(converter89);
    }

    @Test
    public void test06860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06860");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler7 = restAdapter0.profiler;
        retrofit.Profiler profiler8 = null;
        restAdapter0.profiler = profiler8;
        retrofit.RequestInterceptor requestInterceptor10 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel11 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean12 = logLevel11.log();
        restAdapter0.logLevel = logLevel11;
        retrofit.Profiler profiler14 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter0.new RestHandler();
        retrofit.Server server16 = restAdapter0.server;
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(profiler7);
        org.junit.Assert.assertNull(requestInterceptor10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(server16);
    }

    @Test
    public void test06861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06861");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter4 = null;
        restAdapter0.converter = converter4;
        retrofit.client.Client.Provider provider6 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter0.logLevel;
        retrofit.RequestInterceptor requestInterceptor9 = null;
        restAdapter0.requestInterceptor = requestInterceptor9;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler12 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel18);
        java.util.concurrent.Executor executor20 = builder19.callbackExecutor;
        retrofit.converter.Converter converter21 = null;
        builder19.converter = converter21;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter23.new RestHandler();
        java.util.concurrent.Executor executor25 = restAdapter23.httpExecutor;
        java.util.concurrent.Executor executor26 = null;
        restAdapter23.callbackExecutor = executor26;
        retrofit.ErrorHandler errorHandler28 = null;
        restAdapter23.errorHandler = errorHandler28;
        retrofit.RestAdapter.LogLevel logLevel30 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter23.logLevel = logLevel30;
        retrofit.RestAdapter.LogLevel logLevel32 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter23.logLevel = logLevel32;
        retrofit.RequestInterceptor requestInterceptor34 = restAdapter23.requestInterceptor;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("Retrofit-Idle");
        retrofit.Server server44 = builder43.server;
        retrofit.Profiler profiler45 = null;
        builder43.profiler = profiler45;
        retrofit.Profiler profiler47 = null;
        builder43.profiler = profiler47;
        retrofit.RestAdapter restAdapter49 = builder43.build();
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel55);
        retrofit.RestAdapter.Builder builder58 = builder56.setServer("Retrofit-Idle");
        retrofit.Server server59 = builder58.server;
        java.util.concurrent.Executor executor60 = builder58.httpExecutor;
        java.util.concurrent.Executor executor61 = builder58.callbackExecutor;
        retrofit.ErrorHandler errorHandler62 = null;
        builder58.errorHandler = errorHandler62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        java.util.concurrent.Executor executor71 = builder70.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor72 = builder70.requestInterceptor;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Log log75 = null;
        builder73.log = log75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter82 = builder81.build();
        retrofit.Profiler profiler83 = null;
        builder81.profiler = profiler83;
        retrofit.Profiler profiler85 = null;
        builder81.profiler = profiler85;
        retrofit.converter.Converter converter87 = builder81.converter;
        retrofit.RestAdapter.Builder builder88 = builder70.setConverter(converter87);
        retrofit.RestAdapter.Builder builder89 = builder58.setConverter(converter87);
        restAdapter49.converter = converter87;
        restAdapter23.converter = converter87;
        retrofit.RestAdapter.Builder builder92 = builder19.setConverter(converter87);
        retrofit.converter.Converter converter93 = builder19.converter;
        restAdapter0.converter = converter93;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor34);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(restAdapter49);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(server59);
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(executor71);
        org.junit.Assert.assertNull(requestInterceptor72);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertNotNull(converter87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(converter93);
    }

    @Test
    public void test06862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06862");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor4 = null;
        restAdapter0.httpExecutor = executor4;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = builder8.callbackExecutor;
        retrofit.Profiler profiler10 = builder8.profiler;
        retrofit.RestAdapter.Builder builder12 = builder8.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel13 = builder8.logLevel;
        java.util.concurrent.Executor executor14 = null;
        builder8.httpExecutor = executor14;
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter26 = builder25.build();
        retrofit.Profiler profiler27 = null;
        builder25.profiler = profiler27;
        retrofit.RestAdapter restAdapter29 = builder25.build();
        retrofit.client.Client.Provider provider30 = builder25.clientProvider;
        retrofit.RestAdapter.Builder builder31 = builder8.setClient(provider30);
        restAdapter0.clientProvider = provider30;
        retrofit.client.Client.Provider provider33 = restAdapter0.clientProvider;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(provider30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider33);
    }

    @Test
    public void test06863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06863");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.Server server3 = builder0.server;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler14 = builder13.errorHandler;
        retrofit.converter.Converter converter15 = null;
        builder13.converter = converter15;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        builder13.requestInterceptor = requestInterceptor17;
        retrofit.converter.Converter converter19 = builder13.converter;
        retrofit.converter.Converter converter20 = null;
        builder13.converter = converter20;
        retrofit.RestAdapter.Builder builder23 = builder13.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler33 = builder32.errorHandler;
        retrofit.RestAdapter restAdapter34 = builder32.build();
        retrofit.converter.Converter converter35 = restAdapter34.converter;
        retrofit.RestAdapter.Builder builder36 = builder13.setConverter(converter35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder37.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter46 = builder45.build();
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        builder45.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.ErrorHandler errorHandler51 = null;
        builder49.errorHandler = errorHandler51;
        retrofit.converter.Converter converter53 = builder49.converter;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor55 = null;
        restAdapter54.callbackExecutor = executor55;
        retrofit.converter.Converter converter57 = null;
        restAdapter54.converter = converter57;
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter54.new RestHandler();
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor61 = builder60.callbackExecutor;
        retrofit.Profiler profiler62 = builder60.profiler;
        retrofit.RestAdapter.Builder builder64 = builder60.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.Server server66 = builder65.server;
        retrofit.RestAdapter.Log log67 = null;
        builder65.log = log67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = builder69.logLevel;
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder73 = builder71.setServer("Retrofit-Idle");
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Builder builder75 = builder64.setServer(server74);
        retrofit.RestAdapter restAdapter76 = builder75.build();
        java.util.concurrent.Executor executor77 = restAdapter76.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler78 = restAdapter76.new RestHandler();
        retrofit.ErrorHandler errorHandler79 = restAdapter76.errorHandler;
        restAdapter54.errorHandler = errorHandler79;
        builder49.errorHandler = errorHandler79;
        builder45.errorHandler = errorHandler79;
        retrofit.RestAdapter.Builder builder84 = builder45.setServer("Retrofit-Idle");
        retrofit.RequestInterceptor requestInterceptor85 = builder84.requestInterceptor;
        builder36.requestInterceptor = requestInterceptor85;
        retrofit.RestAdapter.Builder builder87 = builder0.setRequestInterceptor(requestInterceptor85);
        retrofit.converter.Converter converter88 = null;
        builder87.converter = converter88;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(errorHandler14);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(errorHandler33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNotNull(converter35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(restAdapter46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter53);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNull(profiler62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(server74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(restAdapter76);
        org.junit.Assert.assertNotNull(executor77);
        org.junit.Assert.assertNotNull(errorHandler79);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(requestInterceptor85);
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test06864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06864");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log33;
        retrofit.RestAdapter.Builder builder35 = builder24.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log33, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder5.setServer(server16);
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder39.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter48 = builder47.build();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter48.logLevel;
        retrofit.RequestInterceptor requestInterceptor50 = restAdapter48.requestInterceptor;
        retrofit.RestAdapter.Builder builder51 = builder38.setRequestInterceptor(requestInterceptor50);
        retrofit.RestAdapter.Builder builder52 = builder0.setRequestInterceptor(requestInterceptor50);
        retrofit.client.Client.Provider provider53 = builder52.clientProvider;
        retrofit.RestAdapter.Log log54 = builder52.log;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor56 = null;
        restAdapter55.callbackExecutor = executor56;
        retrofit.RestAdapter.Log log58 = restAdapter55.log;
        retrofit.converter.Converter converter59 = restAdapter55.converter;
        java.util.concurrent.Executor executor60 = null;
        restAdapter55.callbackExecutor = executor60;
        java.util.concurrent.Executor executor62 = null;
        restAdapter55.httpExecutor = executor62;
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter55.new RestHandler();
        retrofit.converter.Converter converter65 = restAdapter55.converter;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.Server server67 = builder66.server;
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = builder70.logLevel;
        retrofit.RestAdapter.Builder builder72 = builder66.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder74 = builder72.setServer("Retrofit-Idle");
        retrofit.Server server75 = builder74.server;
        retrofit.Profiler profiler76 = null;
        builder74.profiler = profiler76;
        retrofit.Profiler profiler78 = null;
        builder74.profiler = profiler78;
        retrofit.RestAdapter restAdapter80 = builder74.build();
        retrofit.ErrorHandler errorHandler81 = builder74.errorHandler;
        restAdapter55.errorHandler = errorHandler81;
        builder52.errorHandler = errorHandler81;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(restAdapter48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertNull(log58);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertNull(converter65);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(server75);
        org.junit.Assert.assertNotNull(restAdapter80);
        org.junit.Assert.assertNotNull(errorHandler81);
    }

    @Test
    public void test06865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06865");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter5 = builder4.converter;
        retrofit.RestAdapter.LogLevel logLevel6 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("Retrofit-Idle");
        retrofit.Server server18 = builder17.server;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Log log26 = null;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        builder27.logLevel = logLevel29;
        boolean boolean31 = logLevel29.log();
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log26, logLevel29);
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.client.Client.Provider provider51 = builder44.clientProvider;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        builder44.log = log52;
        retrofit.RestAdapter.Builder builder54 = builder40.setLog(log52);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = builder63.logLevel;
        retrofit.RestAdapter.Builder builder65 = builder59.setLogLevel(logLevel64);
        retrofit.client.Client.Provider provider66 = builder59.clientProvider;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        builder59.log = log67;
        retrofit.RestAdapter.Builder builder69 = builder55.setLog(log67);
        retrofit.RestAdapter.Builder builder70 = builder40.setLog(log67);
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        java.util.concurrent.Executor executor73 = null;
        builder71.httpExecutor = executor73;
        retrofit.Server server75 = builder71.server;
        retrofit.RestAdapter.LogLevel logLevel76 = builder71.logLevel;
        retrofit.RestAdapter restAdapter77 = new retrofit.RestAdapter(server18, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log67, logLevel76);
        builder7.server = server18;
        retrofit.RestAdapter.Builder builder79 = builder4.setServer(server18);
        retrofit.RestAdapter restAdapter80 = builder79.build();
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.Server server82 = builder81.server;
        retrofit.RestAdapter.Log log83 = null;
        builder81.log = log83;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel86 = builder85.logLevel;
        retrofit.RestAdapter.Builder builder87 = builder81.setLogLevel(logLevel86);
        retrofit.RestAdapter.Builder builder89 = builder87.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log90 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder91 = builder89.setLog(log90);
        java.util.concurrent.Executor executor92 = builder89.httpExecutor;
        java.util.concurrent.Executor executor93 = null;
        builder89.httpExecutor = executor93;
        retrofit.RestAdapter restAdapter95 = builder89.build();
        retrofit.RestAdapter.LogLevel logLevel96 = builder89.logLevel;
        boolean boolean97 = logLevel96.log();
        restAdapter80.setLogLevel(logLevel96);
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertNull(server75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(restAdapter80);
        org.junit.Assert.assertNull(server82);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(log90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNull(executor92);
        org.junit.Assert.assertNotNull(restAdapter95);
        org.junit.Assert.assertTrue("'" + logLevel96 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel96.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test06866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06866");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.Server server3 = builder2.server;
        retrofit.RestAdapter.Log log4 = null;
        builder2.log = log4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = builder6.logLevel;
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel7);
        retrofit.RestAdapter.Builder builder10 = builder8.setServer("Retrofit-Idle");
        retrofit.Server server11 = builder10.server;
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.RequestInterceptor requestInterceptor15 = null;
        retrofit.converter.Converter converter16 = null;
        retrofit.Profiler profiler17 = null;
        retrofit.ErrorHandler errorHandler18 = null;
        retrofit.RestAdapter.Log log19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        builder20.logLevel = logLevel22;
        boolean boolean24 = logLevel22.log();
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor15, converter16, profiler17, errorHandler18, log19, logLevel22);
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider44 = builder37.clientProvider;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log45;
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.client.Client.Provider provider59 = builder52.clientProvider;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        builder52.log = log60;
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log60);
        retrofit.RestAdapter.Builder builder63 = builder33.setLog(log60);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        java.util.concurrent.Executor executor66 = null;
        builder64.httpExecutor = executor66;
        retrofit.Server server68 = builder64.server;
        retrofit.RestAdapter.LogLevel logLevel69 = builder64.logLevel;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server11, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log60, logLevel69);
        builder0.server = server11;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor73 = builder72.callbackExecutor;
        retrofit.Profiler profiler74 = builder72.profiler;
        retrofit.RestAdapter.Builder builder76 = builder72.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter77 = builder76.converter;
        retrofit.RestAdapter.Builder builder79 = builder76.setServer("Retrofit-Idle");
        retrofit.Server server80 = builder76.server;
        builder0.server = server80;
        retrofit.RestAdapter restAdapter82 = builder0.build();
        retrofit.client.Client client83 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder84 = builder0.setClient(client83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor73);
        org.junit.Assert.assertNull(profiler74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(converter77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNotNull(restAdapter82);
    }

    @Test
    public void test06867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06867");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter0.logLevel = logLevel7;
        retrofit.RestAdapter.Log log9 = restAdapter0.log;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor12 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter10.new RestHandler();
        retrofit.Server server14 = restAdapter10.server;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        java.util.concurrent.Executor executor27 = builder24.httpExecutor;
        retrofit.RestAdapter restAdapter28 = builder24.build();
        java.util.concurrent.Executor executor29 = restAdapter28.httpExecutor;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RequestInterceptor requestInterceptor37 = null;
        builder30.requestInterceptor = requestInterceptor37;
        retrofit.RestAdapter.Log log39 = builder30.log;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        builder47.logLevel = logLevel49;
        boolean boolean51 = logLevel49.log();
        builder40.logLevel = logLevel49;
        retrofit.RestAdapter.Builder builder53 = builder30.setLogLevel(logLevel49);
        retrofit.ErrorHandler errorHandler54 = builder30.errorHandler;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor56 = builder55.callbackExecutor;
        retrofit.Profiler profiler57 = builder55.profiler;
        retrofit.RestAdapter.Builder builder59 = builder55.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder68 = builder66.setServer("Retrofit-Idle");
        retrofit.Server server69 = builder68.server;
        retrofit.RestAdapter.Builder builder70 = builder59.setServer(server69);
        retrofit.RestAdapter restAdapter71 = builder70.build();
        java.util.concurrent.Executor executor72 = restAdapter71.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler73 = restAdapter71.new RestHandler();
        retrofit.ErrorHandler errorHandler74 = restAdapter71.errorHandler;
        retrofit.RestAdapter.Builder builder75 = builder30.setErrorHandler(errorHandler74);
        restAdapter28.errorHandler = errorHandler74;
        retrofit.RestAdapter.RestHandler restHandler77 = restAdapter28.new RestHandler();
        java.util.concurrent.Executor executor78 = restAdapter28.callbackExecutor;
        restAdapter10.callbackExecutor = executor78;
        restAdapter0.httpExecutor = executor78;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNotNull(restAdapter28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(log39);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(errorHandler54);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNull(profiler57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(server69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(restAdapter71);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertNotNull(errorHandler74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(executor78);
    }

    @Test
    public void test06868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06868");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log16 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder17 = builder15.setLog(log16);
        java.util.concurrent.Executor executor18 = builder15.httpExecutor;
        java.util.concurrent.Executor executor19 = null;
        builder15.httpExecutor = executor19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = builder21.server;
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        retrofit.RestAdapter.Builder builder27 = builder21.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter30 = builder29.build();
        retrofit.RestAdapter.LogLevel logLevel31 = restAdapter30.logLevel;
        builder15.logLevel = logLevel31;
        builder15.ensureSaneDefaults();
        retrofit.client.Client.Provider provider34 = builder15.clientProvider;
        restAdapter0.clientProvider = provider34;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter0.logLevel;
        retrofit.converter.Converter converter37 = restAdapter0.converter;
        retrofit.RequestInterceptor requestInterceptor38 = restAdapter0.requestInterceptor;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider34);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertNull(requestInterceptor38);
    }

    @Test
    public void test06869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06869");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor8 = null;
        restAdapter7.callbackExecutor = executor8;
        retrofit.RestAdapter.Log log10 = restAdapter7.log;
        retrofit.converter.Converter converter11 = restAdapter7.converter;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor13 = builder12.callbackExecutor;
        retrofit.Profiler profiler14 = builder12.profiler;
        retrofit.RestAdapter.Builder builder16 = builder12.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("Retrofit-Idle");
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Builder builder27 = builder16.setServer(server26);
        restAdapter7.server = server26;
        retrofit.RestAdapter.Log log29 = restAdapter7.log;
        retrofit.converter.Converter converter30 = null;
        restAdapter7.converter = converter30;
        retrofit.Profiler profiler32 = null;
        restAdapter7.profiler = profiler32;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter34.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter34.logLevel;
        retrofit.ErrorHandler errorHandler37 = null;
        restAdapter34.errorHandler = errorHandler37;
        java.util.concurrent.Executor executor39 = restAdapter34.httpExecutor;
        java.util.concurrent.Executor executor40 = null;
        restAdapter34.httpExecutor = executor40;
        retrofit.ErrorHandler errorHandler42 = restAdapter34.errorHandler;
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor44 = null;
        restAdapter43.requestInterceptor = requestInterceptor44;
        retrofit.Profiler profiler46 = null;
        restAdapter43.profiler = profiler46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor49 = builder48.callbackExecutor;
        retrofit.Profiler profiler50 = builder48.profiler;
        retrofit.RestAdapter.Builder builder52 = builder48.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.Server server62 = builder61.server;
        retrofit.RestAdapter.Builder builder63 = builder52.setServer(server62);
        retrofit.RestAdapter restAdapter64 = builder63.build();
        java.util.concurrent.Executor executor65 = restAdapter64.callbackExecutor;
        restAdapter43.callbackExecutor = executor65;
        restAdapter34.httpExecutor = executor65;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.Server server69 = builder68.server;
        retrofit.RestAdapter.Log log70 = null;
        builder68.log = log70;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel73 = builder72.logLevel;
        retrofit.RestAdapter.Builder builder74 = builder68.setLogLevel(logLevel73);
        retrofit.RestAdapter.Builder builder76 = builder74.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder78 = builder76.setLog(log77);
        java.util.concurrent.Executor executor79 = builder76.httpExecutor;
        retrofit.RestAdapter restAdapter80 = builder76.build();
        java.util.concurrent.Executor executor81 = restAdapter80.httpExecutor;
        restAdapter34.callbackExecutor = executor81;
        restAdapter7.httpExecutor = executor81;
        builder6.httpExecutor = executor81;
        java.util.concurrent.Executor executor85 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder87 = builder6.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler88 = builder87.errorHandler;
        retrofit.ErrorHandler errorHandler89 = builder87.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(log29);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNull(errorHandler42);
        org.junit.Assert.assertNull(executor49);
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(executor65);
        org.junit.Assert.assertNull(server69);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(executor79);
        org.junit.Assert.assertNotNull(restAdapter80);
        org.junit.Assert.assertNotNull(executor81);
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNull(errorHandler88);
        org.junit.Assert.assertNull(errorHandler89);
    }

    @Test
    public void test06870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06870");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.Log log4 = restAdapter0.log;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.Server server32 = builder31.server;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel46);
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel46);
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = builder57.server;
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.Server server62 = builder61.server;
        retrofit.RestAdapter.Log log63 = null;
        builder61.log = log63;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel66 = builder65.logLevel;
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel66);
        retrofit.client.Client.Provider provider68 = builder61.clientProvider;
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        builder61.log = log69;
        retrofit.RestAdapter.Builder builder71 = builder57.setLog(log69);
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.Server server73 = builder72.server;
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel77 = builder76.logLevel;
        retrofit.RestAdapter.Builder builder78 = builder72.setLogLevel(logLevel77);
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server14, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log69, logLevel77);
        restAdapter0.logLevel = logLevel77;
        java.util.concurrent.Executor executor81 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertNull(server62);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNull(provider68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(executor81);
    }

    @Test
    public void test06871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06871");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        java.util.concurrent.Executor executor8 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        builder16.logLevel = logLevel18;
        boolean boolean20 = logLevel18.log();
        builder9.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel22 = builder9.logLevel;
        retrofit.Profiler profiler23 = builder9.profiler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = builder24.callbackExecutor;
        retrofit.Profiler profiler26 = builder24.profiler;
        retrofit.RestAdapter.Builder builder28 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Builder builder39 = builder28.setServer(server38);
        retrofit.RestAdapter.Builder builder40 = builder9.setServer(server38);
        retrofit.RestAdapter.Builder builder41 = builder6.setServer(server38);
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider60 = builder53.clientProvider;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log61;
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter73 = builder72.build();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter73.logLevel;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server38, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log61, logLevel74);
        retrofit.RestAdapter.RestHandler restHandler76 = restAdapter75.new RestHandler();
        retrofit.ErrorHandler errorHandler77 = restAdapter75.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(restAdapter73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler77);
    }

    @Test
    public void test06872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06872");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel6 = null;
        restAdapter0.logLevel = logLevel6;
        java.util.concurrent.Executor executor8 = null;
        restAdapter0.httpExecutor = executor8;
        retrofit.converter.Converter converter10 = null;
        restAdapter0.converter = converter10;
        retrofit.Profiler profiler12 = null;
        restAdapter0.profiler = profiler12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        java.util.concurrent.Executor executor16 = null;
        builder14.httpExecutor = executor16;
        retrofit.Server server18 = builder14.server;
        retrofit.RestAdapter.LogLevel logLevel19 = builder14.logLevel;
        retrofit.client.Client.Provider provider20 = null;
        builder14.clientProvider = provider20;
        retrofit.Server server22 = builder14.server;
        retrofit.converter.Converter converter23 = builder14.converter;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder34 = builder32.setLog(log33);
        java.util.concurrent.Executor executor35 = builder32.httpExecutor;
        java.util.concurrent.Executor executor36 = null;
        builder32.httpExecutor = executor36;
        java.util.concurrent.Executor executor38 = builder32.callbackExecutor;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder39.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log48 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder49 = builder47.setLog(log48);
        java.util.concurrent.Executor executor50 = builder47.httpExecutor;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Log log57 = null;
        builder55.log = log57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        retrofit.RestAdapter.Builder builder61 = builder55.setLogLevel(logLevel60);
        retrofit.client.Client.Provider provider62 = builder55.clientProvider;
        retrofit.RestAdapter.Log log63 = retrofit.RestAdapter.Log.NONE;
        builder55.log = log63;
        retrofit.RestAdapter.Builder builder65 = builder51.setLog(log63);
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.Server server67 = builder66.server;
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.Server server71 = builder70.server;
        retrofit.RestAdapter.Log log72 = null;
        builder70.log = log72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = builder74.logLevel;
        retrofit.RestAdapter.Builder builder76 = builder70.setLogLevel(logLevel75);
        retrofit.client.Client.Provider provider77 = builder70.clientProvider;
        retrofit.RestAdapter.Log log78 = retrofit.RestAdapter.Log.NONE;
        builder70.log = log78;
        retrofit.RestAdapter.Builder builder80 = builder66.setLog(log78);
        retrofit.RestAdapter.Builder builder81 = builder51.setLog(log78);
        log78.log("");
        log78.log("Retrofit-");
        retrofit.RestAdapter.Builder builder86 = builder47.setLog(log78);
        builder32.log = log78;
        builder14.log = log78;
        restAdapter0.log = log78;
        retrofit.ErrorHandler errorHandler90 = null;
        restAdapter0.errorHandler = errorHandler90;
        retrofit.client.Response response93 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response95 = restAdapter0.logAndReplaceResponse("", response93, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertNull(server56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(log63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(provider77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test06873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06873");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        retrofit.Profiler profiler14 = builder0.profiler;
        java.util.concurrent.Executor executor15 = null;
        builder0.httpExecutor = executor15;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter17.new RestHandler();
        java.util.concurrent.Executor executor19 = restAdapter17.httpExecutor;
        java.util.concurrent.Executor executor20 = null;
        restAdapter17.callbackExecutor = executor20;
        retrofit.ErrorHandler errorHandler22 = null;
        restAdapter17.errorHandler = errorHandler22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter17.logLevel = logLevel24;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter17.logLevel = logLevel26;
        boolean boolean28 = logLevel26.log();
        retrofit.RestAdapter.Builder builder29 = builder0.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder36.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = builder38.setLog(log39);
        java.util.concurrent.Executor executor41 = builder38.httpExecutor;
        retrofit.RestAdapter.Builder builder43 = builder38.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.client.Client.Provider provider52 = builder45.clientProvider;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log53;
        retrofit.RestAdapter.Builder builder55 = builder44.setLog(log53);
        retrofit.Profiler profiler56 = builder44.profiler;
        java.util.concurrent.Executor executor57 = null;
        builder44.callbackExecutor = executor57;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = builder63.logLevel;
        retrofit.RestAdapter.Builder builder65 = builder59.setLogLevel(logLevel64);
        retrofit.client.Client.Provider provider66 = builder59.clientProvider;
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        builder59.log = log67;
        builder44.log = log67;
        retrofit.RestAdapter.Builder builder70 = builder43.setLog(log67);
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor72 = null;
        restAdapter71.callbackExecutor = executor72;
        retrofit.converter.Converter converter74 = null;
        restAdapter71.converter = converter74;
        java.util.concurrent.Executor executor76 = restAdapter71.callbackExecutor;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.Server server78 = builder77.server;
        retrofit.RestAdapter.Log log79 = null;
        builder77.log = log79;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        retrofit.RestAdapter.Builder builder83 = builder77.setLogLevel(logLevel82);
        retrofit.RestAdapter.Builder builder85 = builder83.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder87 = builder85.setLog(log86);
        java.util.concurrent.Executor executor88 = builder85.httpExecutor;
        retrofit.RestAdapter.Builder builder90 = builder85.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel91 = builder85.logLevel;
        retrofit.RestAdapter.LogLevel logLevel92 = retrofit.RestAdapter.LogLevel.BASIC;
        builder85.logLevel = logLevel92;
        restAdapter71.logLevel = logLevel92;
        builder70.logLevel = logLevel92;
        retrofit.Server server96 = builder70.server;
        retrofit.RestAdapter.LogLevel logLevel97 = builder70.logLevel;
        builder29.logLevel = logLevel97;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter99 = builder29.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(profiler56);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(executor76);
        org.junit.Assert.assertNull(server78);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNull(executor88);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server96);
        org.junit.Assert.assertTrue("'" + logLevel97 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel97.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test06874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06874");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        java.util.concurrent.Executor executor8 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        builder16.logLevel = logLevel18;
        boolean boolean20 = logLevel18.log();
        builder9.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel22 = builder9.logLevel;
        retrofit.Profiler profiler23 = builder9.profiler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = builder24.callbackExecutor;
        retrofit.Profiler profiler26 = builder24.profiler;
        retrofit.RestAdapter.Builder builder28 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Builder builder39 = builder28.setServer(server38);
        retrofit.RestAdapter.Builder builder40 = builder9.setServer(server38);
        retrofit.RestAdapter.Builder builder41 = builder6.setServer(server38);
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider60 = builder53.clientProvider;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log61;
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter73 = builder72.build();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter73.logLevel;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server38, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log61, logLevel74);
        retrofit.RestAdapter.Log log76 = restAdapter75.log;
        retrofit.converter.Converter converter77 = restAdapter75.converter;
        retrofit.RestAdapter.Log log78 = restAdapter75.log;
        retrofit.Profiler profiler79 = restAdapter75.profiler;
        retrofit.RestAdapter.RestHandler restHandler80 = restAdapter75.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler81 = restAdapter75.new RestHandler();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(restAdapter73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log76);
        org.junit.Assert.assertNull(converter77);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNull(profiler79);
    }

    @Test
    public void test06875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06875");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel8 = builder0.logLevel;
        retrofit.Server server9 = builder0.server;
        java.util.concurrent.Executor executor10 = builder0.httpExecutor;
        retrofit.RestAdapter.Log log11 = null;
        builder0.log = log11;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertNull(executor10);
    }

    @Test
    public void test06876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06876");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = null;
        restAdapter0.errorHandler = errorHandler3;
        retrofit.RequestInterceptor requestInterceptor5 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.getLogLevel();
        retrofit.Server server7 = restAdapter0.server;
        retrofit.Profiler profiler8 = null;
        restAdapter0.profiler = profiler8;
        retrofit.client.Request request10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request11 = restAdapter0.logAndReplaceRequest(request10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(requestInterceptor5);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(server7);
    }

    @Test
    public void test06877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06877");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        builder18.logLevel = logLevel20;
        boolean boolean22 = logLevel20.log();
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel20);
        retrofit.Profiler profiler24 = null;
        restAdapter23.profiler = profiler24;
        retrofit.converter.Converter converter26 = null;
        restAdapter23.converter = converter26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter37 = builder36.build();
        retrofit.Profiler profiler38 = null;
        builder36.profiler = profiler38;
        retrofit.Profiler profiler40 = null;
        builder36.profiler = profiler40;
        retrofit.converter.Converter converter42 = builder36.converter;
        restAdapter23.converter = converter42;
        retrofit.Profiler profiler44 = null;
        restAdapter23.profiler = profiler44;
        retrofit.Profiler profiler46 = restAdapter23.profiler;
        retrofit.converter.Converter converter47 = restAdapter23.converter;
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter23.new RestHandler();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(restAdapter37);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNull(profiler46);
        org.junit.Assert.assertNotNull(converter47);
    }

    @Test
    public void test06878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06878");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedInput typedInput3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response4 = new retrofit.client.Response((int) (short) 1, "", headerList2, typedInput3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid status code: 1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test06879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06879");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.Server server32 = builder31.server;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel46);
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel46);
        restAdapter0.server = server14;
        retrofit.client.Client.Provider provider51 = null;
        restAdapter0.clientProvider = provider51;
        retrofit.RestAdapter.Log log53 = restAdapter0.log;
        retrofit.client.Client.Provider provider54 = null;
        restAdapter0.clientProvider = provider54;
        retrofit.RestAdapter.RestHandler restHandler56 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(log53);
    }

    @Test
    public void test06880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06880");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.Server server19 = builder18.server;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder36.server;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel51);
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel51);
        builder0.log = log27;
        retrofit.client.Client.Provider provider56 = null;
        builder0.clientProvider = provider56;
        retrofit.Profiler profiler58 = null;
        builder0.profiler = profiler58;
        java.util.concurrent.Executor executor60 = builder0.httpExecutor;
        retrofit.Profiler profiler61 = builder0.profiler;
        retrofit.converter.Converter converter62 = builder0.converter;
        java.util.concurrent.Executor executor63 = builder0.httpExecutor;
        java.util.concurrent.Executor executor64 = builder0.httpExecutor;
        retrofit.Profiler profiler65 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder66 = builder0.setProfiler(profiler65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertNull(converter62);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNull(executor64);
    }

    @Test
    public void test06881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06881");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler13 = builder12.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = builder14.callbackExecutor;
        retrofit.Profiler profiler16 = builder14.profiler;
        retrofit.RestAdapter.Builder builder18 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("Retrofit-Idle");
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Builder builder29 = builder18.setServer(server28);
        retrofit.RestAdapter restAdapter30 = builder29.build();
        java.util.concurrent.Executor executor31 = restAdapter30.callbackExecutor;
        builder12.callbackExecutor = executor31;
        builder0.callbackExecutor = executor31;
        retrofit.RestAdapter.LogLevel logLevel34 = builder0.logLevel;
        java.util.concurrent.Executor executor35 = builder0.callbackExecutor;
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor35);
    }

    @Test
    public void test06882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06882");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        java.util.concurrent.Executor executor12 = null;
        builder8.httpExecutor = executor12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.logLevel;
        builder8.logLevel = logLevel24;
        builder8.ensureSaneDefaults();
        retrofit.client.Client.Provider provider27 = builder8.clientProvider;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.client.Client.Provider provider39 = builder32.clientProvider;
        retrofit.RestAdapter.Log log40 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log40;
        retrofit.RestAdapter.Builder builder42 = builder28.setLog(log40);
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter43.new RestHandler();
        java.util.concurrent.Executor executor45 = restAdapter43.httpExecutor;
        java.util.concurrent.Executor executor46 = null;
        restAdapter43.callbackExecutor = executor46;
        retrofit.ErrorHandler errorHandler48 = null;
        restAdapter43.errorHandler = errorHandler48;
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter43.logLevel = logLevel50;
        builder28.logLevel = logLevel50;
        builder28.ensureSaneDefaults();
        java.util.concurrent.Executor executor54 = builder28.callbackExecutor;
        builder8.callbackExecutor = executor54;
        java.lang.Class<?> wildcardClass56 = builder8.getClass();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(provider27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test06883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06883");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel6 = null;
        restAdapter0.logLevel = logLevel6;
        java.util.concurrent.Executor executor8 = null;
        restAdapter0.httpExecutor = executor8;
        java.util.concurrent.Executor executor10 = null;
        restAdapter0.callbackExecutor = executor10;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider13 = restAdapter0.clientProvider;
        retrofit.Server server14 = restAdapter0.server;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor16 = null;
        restAdapter15.callbackExecutor = executor16;
        retrofit.converter.Converter converter18 = null;
        restAdapter15.converter = converter18;
        java.util.concurrent.Executor executor20 = restAdapter15.callbackExecutor;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = builder21.server;
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        retrofit.RestAdapter.Builder builder27 = builder21.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder31 = builder29.setLog(log30);
        java.util.concurrent.Executor executor32 = builder29.httpExecutor;
        retrofit.RestAdapter.Builder builder34 = builder29.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel35 = builder29.logLevel;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        builder29.logLevel = logLevel36;
        restAdapter15.logLevel = logLevel36;
        restAdapter0.logLevel = logLevel36;
        java.util.concurrent.Executor executor40 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter0.getLogLevel();
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor43 = null;
        restAdapter42.callbackExecutor = executor43;
        retrofit.RestAdapter.Log log45 = restAdapter42.log;
        retrofit.converter.Converter converter46 = restAdapter42.converter;
        java.util.concurrent.Executor executor47 = null;
        restAdapter42.callbackExecutor = executor47;
        java.util.concurrent.Executor executor49 = null;
        restAdapter42.httpExecutor = executor49;
        retrofit.Profiler profiler51 = restAdapter42.profiler;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler53 = restAdapter52.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel54 = restAdapter52.logLevel;
        retrofit.ErrorHandler errorHandler55 = null;
        restAdapter52.errorHandler = errorHandler55;
        java.util.concurrent.Executor executor57 = restAdapter52.httpExecutor;
        java.util.concurrent.Executor executor58 = null;
        restAdapter52.httpExecutor = executor58;
        retrofit.ErrorHandler errorHandler60 = restAdapter52.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter52.getLogLevel();
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor63 = null;
        restAdapter62.callbackExecutor = executor63;
        retrofit.converter.Converter converter65 = null;
        restAdapter62.converter = converter65;
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter62.new RestHandler();
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor69 = builder68.callbackExecutor;
        retrofit.Profiler profiler70 = builder68.profiler;
        retrofit.RestAdapter.Builder builder72 = builder68.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Log log75 = null;
        builder73.log = log75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("Retrofit-Idle");
        retrofit.Server server82 = builder81.server;
        retrofit.RestAdapter.Builder builder83 = builder72.setServer(server82);
        retrofit.RestAdapter restAdapter84 = builder83.build();
        java.util.concurrent.Executor executor85 = restAdapter84.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler86 = restAdapter84.new RestHandler();
        retrofit.ErrorHandler errorHandler87 = restAdapter84.errorHandler;
        restAdapter62.errorHandler = errorHandler87;
        restAdapter52.errorHandler = errorHandler87;
        restAdapter42.errorHandler = errorHandler87;
        restAdapter0.errorHandler = errorHandler87;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(log45);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertNull(logLevel54);
        org.junit.Assert.assertNull(executor57);
        org.junit.Assert.assertNull(errorHandler60);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNull(profiler70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(restAdapter84);
        org.junit.Assert.assertNotNull(executor85);
        org.junit.Assert.assertNotNull(errorHandler87);
    }

    @Test
    public void test06884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06884");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        retrofit.Profiler profiler4 = restAdapter0.profiler;
        retrofit.RequestInterceptor requestInterceptor5 = restAdapter0.requestInterceptor;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.client.Response response8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response10 = restAdapter0.logAndReplaceResponse("", response8, (long) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNull(requestInterceptor5);
        org.junit.Assert.assertNull(executor6);
    }

    @Test
    public void test06885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06885");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler9 = builder8.errorHandler;
        retrofit.converter.Converter converter10 = null;
        builder8.converter = converter10;
        retrofit.RequestInterceptor requestInterceptor12 = null;
        builder8.requestInterceptor = requestInterceptor12;
        retrofit.converter.Converter converter14 = builder8.converter;
        retrofit.converter.Converter converter15 = null;
        builder8.converter = converter15;
        retrofit.RestAdapter.Builder builder18 = builder8.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler28 = builder27.errorHandler;
        retrofit.RestAdapter restAdapter29 = builder27.build();
        retrofit.converter.Converter converter30 = restAdapter29.converter;
        retrofit.RestAdapter.Builder builder31 = builder8.setConverter(converter30);
        retrofit.Profiler profiler32 = null;
        builder31.profiler = profiler32;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(errorHandler28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNotNull(converter30);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test06886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06886");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter6.logLevel;
        retrofit.ErrorHandler errorHandler9 = restAdapter6.errorHandler;
        retrofit.converter.Converter converter10 = null;
        restAdapter6.converter = converter10;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter6.logLevel;
        java.util.concurrent.Executor executor13 = restAdapter6.httpExecutor;
        retrofit.RestAdapter.Log log14 = restAdapter6.log;
        retrofit.Profiler profiler15 = null;
        restAdapter6.profiler = profiler15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        builder17.logLevel = logLevel19;
        boolean boolean21 = logLevel19.log();
        restAdapter6.logLevel = logLevel19;
        retrofit.Profiler profiler23 = restAdapter6.profiler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter.Builder builder32 = builder30.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler33 = builder32.errorHandler;
        retrofit.RestAdapter restAdapter34 = builder32.build();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter37.new RestHandler();
        java.util.concurrent.Executor executor39 = restAdapter37.httpExecutor;
        java.util.concurrent.Executor executor40 = null;
        restAdapter37.callbackExecutor = executor40;
        retrofit.client.Client.Provider provider42 = null;
        restAdapter37.clientProvider = provider42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("Retrofit-Idle");
        retrofit.Server server53 = builder52.server;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel67);
        retrofit.RestAdapter.Builder builder70 = builder68.setServer("Retrofit-Idle");
        retrofit.Server server71 = builder70.server;
        retrofit.client.Client.Provider provider72 = null;
        java.util.concurrent.Executor executor73 = null;
        java.util.concurrent.Executor executor74 = null;
        retrofit.RequestInterceptor requestInterceptor75 = null;
        retrofit.converter.Converter converter76 = null;
        retrofit.Profiler profiler77 = null;
        retrofit.ErrorHandler errorHandler78 = null;
        retrofit.RestAdapter.Log log79 = null;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.Server server81 = builder80.server;
        retrofit.RestAdapter.Log log82 = null;
        builder80.log = log82;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel85 = builder84.logLevel;
        retrofit.RestAdapter.Builder builder86 = builder80.setLogLevel(logLevel85);
        retrofit.RestAdapter restAdapter87 = new retrofit.RestAdapter(server71, provider72, executor73, executor74, requestInterceptor75, converter76, profiler77, errorHandler78, log79, logLevel85);
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log61, logLevel85);
        restAdapter37.log = log61;
        log61.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder92 = builder35.setLog(log61);
        builder32.log = log61;
        retrofit.RequestInterceptor requestInterceptor94 = builder32.requestInterceptor;
        restAdapter6.requestInterceptor = requestInterceptor94;
        builder0.requestInterceptor = requestInterceptor94;
        retrofit.RestAdapter.LogLevel logLevel97 = builder0.logLevel;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(log14);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(errorHandler33);
        org.junit.Assert.assertNotNull(restAdapter34);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(server71);
        org.junit.Assert.assertNull(server81);
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNotNull(requestInterceptor94);
        org.junit.Assert.assertTrue("'" + logLevel97 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel97.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06887");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        builder18.logLevel = logLevel20;
        boolean boolean22 = logLevel20.log();
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel20);
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.client.Client.Provider provider42 = builder35.clientProvider;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder35.log = log43;
        retrofit.RestAdapter.Builder builder45 = builder31.setLog(log43);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel55);
        retrofit.client.Client.Provider provider57 = builder50.clientProvider;
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        builder50.log = log58;
        retrofit.RestAdapter.Builder builder60 = builder46.setLog(log58);
        retrofit.RestAdapter.Builder builder61 = builder31.setLog(log58);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        java.util.concurrent.Executor executor64 = null;
        builder62.httpExecutor = executor64;
        retrofit.Server server66 = builder62.server;
        retrofit.RestAdapter.LogLevel logLevel67 = builder62.logLevel;
        retrofit.RestAdapter restAdapter68 = new retrofit.RestAdapter(server9, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log58, logLevel67);
        retrofit.RestAdapter.LogLevel logLevel69 = restAdapter68.getLogLevel();
        retrofit.Profiler profiler70 = null;
        restAdapter68.profiler = profiler70;
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel73 = null;
        restAdapter68.logLevel = logLevel73;
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter68.getLogLevel();
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter68.getLogLevel();
        retrofit.client.Request request77 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request78 = restAdapter68.logAndReplaceRequest(request77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel75);
        org.junit.Assert.assertNull(logLevel76);
    }

    @Test
    public void test06888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06888");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.Server server3 = builder2.server;
        retrofit.RestAdapter.Log log4 = null;
        builder2.log = log4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = builder6.logLevel;
        retrofit.RestAdapter.Builder builder8 = builder2.setLogLevel(logLevel7);
        retrofit.RestAdapter.Builder builder10 = builder8.setServer("Retrofit-Idle");
        retrofit.Server server11 = builder10.server;
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.RequestInterceptor requestInterceptor15 = null;
        retrofit.converter.Converter converter16 = null;
        retrofit.Profiler profiler17 = null;
        retrofit.ErrorHandler errorHandler18 = null;
        retrofit.RestAdapter.Log log19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        builder20.logLevel = logLevel22;
        boolean boolean24 = logLevel22.log();
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor15, converter16, profiler17, errorHandler18, log19, logLevel22);
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider44 = builder37.clientProvider;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log45;
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log45);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.client.Client.Provider provider59 = builder52.clientProvider;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        builder52.log = log60;
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log60);
        retrofit.RestAdapter.Builder builder63 = builder33.setLog(log60);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        java.util.concurrent.Executor executor66 = null;
        builder64.httpExecutor = executor66;
        retrofit.Server server68 = builder64.server;
        retrofit.RestAdapter.LogLevel logLevel69 = builder64.logLevel;
        retrofit.RestAdapter restAdapter70 = new retrofit.RestAdapter(server11, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log60, logLevel69);
        builder0.server = server11;
        java.util.concurrent.Executor executor72 = builder0.httpExecutor;
        retrofit.RestAdapter restAdapter73 = builder0.build();
        retrofit.RestAdapter.RestHandler restHandler74 = restAdapter73.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler75 = restAdapter73.new RestHandler();
        java.util.concurrent.Executor executor76 = restAdapter73.httpExecutor;
        retrofit.Server server77 = restAdapter73.server;
        retrofit.Profiler profiler78 = null;
        restAdapter73.profiler = profiler78;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor72);
        org.junit.Assert.assertNotNull(restAdapter73);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNotNull(server77);
    }

    @Test
    public void test06889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06889");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.Server server2 = builder1.server;
        retrofit.RestAdapter.Log log3 = null;
        builder1.log = log3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder7 = builder1.setLogLevel(logLevel6);
        retrofit.client.Client.Provider provider8 = builder1.clientProvider;
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        builder1.log = log9;
        retrofit.RestAdapter.Builder builder11 = builder0.setLog(log9);
        retrofit.Profiler profiler12 = builder11.profiler;
        retrofit.converter.Converter converter13 = null;
        builder11.converter = converter13;
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter25 = builder24.build();
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.NONE;
        builder24.logLevel = logLevel26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.ErrorHandler errorHandler30 = null;
        builder28.errorHandler = errorHandler30;
        retrofit.converter.Converter converter32 = builder28.converter;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor34 = null;
        restAdapter33.callbackExecutor = executor34;
        retrofit.converter.Converter converter36 = null;
        restAdapter33.converter = converter36;
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = builder39.callbackExecutor;
        retrofit.Profiler profiler41 = builder39.profiler;
        retrofit.RestAdapter.Builder builder43 = builder39.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("Retrofit-Idle");
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Builder builder54 = builder43.setServer(server53);
        retrofit.RestAdapter restAdapter55 = builder54.build();
        java.util.concurrent.Executor executor56 = restAdapter55.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.ErrorHandler errorHandler58 = restAdapter55.errorHandler;
        restAdapter33.errorHandler = errorHandler58;
        builder28.errorHandler = errorHandler58;
        builder24.errorHandler = errorHandler58;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor63 = builder62.callbackExecutor;
        retrofit.Profiler profiler64 = builder62.profiler;
        retrofit.RestAdapter.Builder builder66 = builder62.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.Server server68 = builder67.server;
        retrofit.RestAdapter.Log log69 = null;
        builder67.log = log69;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel72 = builder71.logLevel;
        retrofit.RestAdapter.Builder builder73 = builder67.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("Retrofit-Idle");
        retrofit.Server server76 = builder75.server;
        retrofit.RestAdapter.Builder builder77 = builder66.setServer(server76);
        retrofit.RestAdapter restAdapter78 = builder77.build();
        retrofit.client.Client.Provider provider79 = restAdapter78.clientProvider;
        builder24.clientProvider = provider79;
        retrofit.RestAdapter.Builder builder81 = builder11.setClient(provider79);
        org.junit.Assert.assertNull(server2);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertNull(profiler64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(server76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(restAdapter78);
        org.junit.Assert.assertNotNull(provider79);
        org.junit.Assert.assertNotNull(builder81);
    }

    @Test
    public void test06890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06890");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter0.logLevel = logLevel7;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter0.logLevel = logLevel9;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter0.getLogLevel();
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter13.new RestHandler();
        retrofit.ErrorHandler errorHandler15 = null;
        restAdapter13.errorHandler = errorHandler15;
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter13.new RestHandler();
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter18.new RestHandler();
        java.util.concurrent.Executor executor20 = restAdapter18.httpExecutor;
        java.util.concurrent.Executor executor21 = null;
        restAdapter18.callbackExecutor = executor21;
        retrofit.client.Client.Provider provider23 = null;
        restAdapter18.clientProvider = provider23;
        java.util.concurrent.Executor executor25 = null;
        restAdapter18.callbackExecutor = executor25;
        retrofit.RestAdapter.LogLevel logLevel27 = restAdapter18.logLevel;
        retrofit.Server server28 = null;
        restAdapter18.server = server28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder36.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler39 = builder38.errorHandler;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor41 = builder40.callbackExecutor;
        retrofit.Profiler profiler42 = builder40.profiler;
        retrofit.RestAdapter.Builder builder44 = builder40.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("Retrofit-Idle");
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Builder builder55 = builder44.setServer(server54);
        retrofit.RestAdapter restAdapter56 = builder55.build();
        java.util.concurrent.Executor executor57 = restAdapter56.callbackExecutor;
        builder38.callbackExecutor = executor57;
        restAdapter18.callbackExecutor = executor57;
        restAdapter13.callbackExecutor = executor57;
        restAdapter0.httpExecutor = executor57;
        retrofit.RestAdapter.LogLevel logLevel62 = restAdapter0.getLogLevel();
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(logLevel27);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(errorHandler39);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(restAdapter56);
        org.junit.Assert.assertNotNull(executor57);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06891");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.Profiler profiler13 = builder0.profiler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.ErrorHandler errorHandler16 = builder14.errorHandler;
        retrofit.converter.Converter converter17 = builder14.converter;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler27 = builder26.errorHandler;
        retrofit.RestAdapter restAdapter28 = builder26.build();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel52);
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.Server server67 = builder66.server;
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = builder70.logLevel;
        retrofit.RestAdapter.Builder builder72 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider73 = builder66.clientProvider;
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        builder66.log = log74;
        retrofit.RestAdapter.Builder builder76 = builder62.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server38, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log74, logLevel77);
        restAdapter28.server = server38;
        retrofit.RestAdapter.Builder builder80 = builder14.setServer(server38);
        retrofit.RestAdapter.Log log81 = builder14.log;
        retrofit.RestAdapter.LogLevel logLevel82 = builder14.logLevel;
        boolean boolean83 = logLevel82.log();
        retrofit.RestAdapter.Builder builder84 = builder0.setLogLevel(logLevel82);
        java.util.concurrent.Executor executor85 = builder0.httpExecutor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler16);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertNotNull(restAdapter28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNull(log81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNull(executor85);
    }

    @Test
    public void test06892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06892");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel4 = builder3.logLevel;
        builder2.logLevel = logLevel4;
        builder0.logLevel = logLevel4;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        builder14.logLevel = logLevel16;
        boolean boolean18 = logLevel16.log();
        builder7.logLevel = logLevel16;
        retrofit.RestAdapter.LogLevel logLevel20 = builder7.logLevel;
        retrofit.Profiler profiler21 = builder7.profiler;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("Retrofit-Idle");
        retrofit.Server server31 = builder30.server;
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("Retrofit-Idle");
        retrofit.Server server49 = builder48.server;
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = null;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = builder62.logLevel;
        retrofit.RestAdapter.Builder builder64 = builder58.setLogLevel(logLevel63);
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log57, logLevel63);
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log39, logLevel63);
        builder7.logLevel = logLevel63;
        retrofit.RestAdapter.Builder builder68 = builder0.setLogLevel(logLevel63);
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler70 = restAdapter69.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel71 = restAdapter69.logLevel;
        retrofit.ErrorHandler errorHandler72 = restAdapter69.errorHandler;
        retrofit.converter.Converter converter73 = null;
        restAdapter69.converter = converter73;
        retrofit.RestAdapter.LogLevel logLevel75 = restAdapter69.logLevel;
        java.util.concurrent.Executor executor76 = restAdapter69.httpExecutor;
        retrofit.RestAdapter.Log log77 = restAdapter69.log;
        retrofit.Profiler profiler78 = null;
        restAdapter69.profiler = profiler78;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        builder80.logLevel = logLevel82;
        boolean boolean84 = logLevel82.log();
        restAdapter69.logLevel = logLevel82;
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter69.logLevel;
        retrofit.ErrorHandler errorHandler87 = null;
        restAdapter69.errorHandler = errorHandler87;
        retrofit.RestAdapter.Builder builder89 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder90 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel91 = builder90.logLevel;
        builder89.logLevel = logLevel91;
        boolean boolean93 = logLevel91.log();
        restAdapter69.setLogLevel(logLevel91);
        boolean boolean95 = logLevel91.log();
        boolean boolean96 = logLevel91.log();
        retrofit.RestAdapter.Builder builder97 = builder0.setLogLevel(logLevel91);
        boolean boolean98 = logLevel91.log();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(logLevel71);
        org.junit.Assert.assertNull(errorHandler72);
        org.junit.Assert.assertNull(logLevel75);
        org.junit.Assert.assertNull(executor76);
        org.junit.Assert.assertNull(log77);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel91 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel91.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(builder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test06893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06893");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor7 = null;
        restAdapter6.callbackExecutor = executor7;
        retrofit.RestAdapter.Log log9 = restAdapter6.log;
        retrofit.converter.Converter converter10 = restAdapter6.converter;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        restAdapter6.logLevel = logLevel13;
        restAdapter0.logLevel = logLevel13;
        java.util.concurrent.Executor executor16 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor17 = restAdapter0.callbackExecutor;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(executor17);
    }

    @Test
    public void test06894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06894");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.Server server3 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel4 = builder0.logLevel;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNull(server3);
        org.junit.Assert.assertTrue("'" + logLevel4 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel4.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06895");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor4 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.Server server7 = builder6.server;
        retrofit.RestAdapter.Log log8 = null;
        builder6.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = builder10.logLevel;
        retrofit.RestAdapter.Builder builder12 = builder6.setLogLevel(logLevel11);
        retrofit.client.Client.Provider provider13 = builder6.clientProvider;
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        builder6.log = log14;
        retrofit.RestAdapter.Builder builder16 = builder5.setLog(log14);
        retrofit.Profiler profiler17 = builder16.profiler;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler27 = builder26.errorHandler;
        retrofit.RestAdapter restAdapter28 = builder26.build();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter31.new RestHandler();
        java.util.concurrent.Executor executor33 = restAdapter31.httpExecutor;
        java.util.concurrent.Executor executor34 = null;
        restAdapter31.callbackExecutor = executor34;
        retrofit.client.Client.Provider provider36 = null;
        restAdapter31.clientProvider = provider36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("Retrofit-Idle");
        retrofit.Server server65 = builder64.server;
        retrofit.client.Client.Provider provider66 = null;
        java.util.concurrent.Executor executor67 = null;
        java.util.concurrent.Executor executor68 = null;
        retrofit.RequestInterceptor requestInterceptor69 = null;
        retrofit.converter.Converter converter70 = null;
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Log log73 = null;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.Server server75 = builder74.server;
        retrofit.RestAdapter.Log log76 = null;
        builder74.log = log76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel79 = builder78.logLevel;
        retrofit.RestAdapter.Builder builder80 = builder74.setLogLevel(logLevel79);
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server65, provider66, executor67, executor68, requestInterceptor69, converter70, profiler71, errorHandler72, log73, logLevel79);
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel79);
        restAdapter31.log = log55;
        log55.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder86 = builder29.setLog(log55);
        builder26.log = log55;
        retrofit.ErrorHandler errorHandler88 = builder26.errorHandler;
        retrofit.RestAdapter.Builder builder89 = builder16.setErrorHandler(errorHandler88);
        restAdapter0.errorHandler = errorHandler88;
        retrofit.client.Client.Provider provider91 = restAdapter0.clientProvider;
        java.util.concurrent.Executor executor92 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Log log93 = restAdapter0.log;
        retrofit.ErrorHandler errorHandler94 = restAdapter0.errorHandler;
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertNotNull(restAdapter28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(server65);
        org.junit.Assert.assertNull(server75);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNull(provider91);
        org.junit.Assert.assertNull(executor92);
        org.junit.Assert.assertNull(log93);
        org.junit.Assert.assertNotNull(errorHandler94);
    }

    @Test
    public void test06896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06896");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        java.util.concurrent.Executor executor8 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        builder16.logLevel = logLevel18;
        boolean boolean20 = logLevel18.log();
        builder9.logLevel = logLevel18;
        retrofit.RestAdapter.LogLevel logLevel22 = builder9.logLevel;
        retrofit.Profiler profiler23 = builder9.profiler;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor25 = builder24.callbackExecutor;
        retrofit.Profiler profiler26 = builder24.profiler;
        retrofit.RestAdapter.Builder builder28 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Builder builder39 = builder28.setServer(server38);
        retrofit.RestAdapter.Builder builder40 = builder9.setServer(server38);
        retrofit.RestAdapter.Builder builder41 = builder6.setServer(server38);
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider60 = builder53.clientProvider;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log61;
        retrofit.RestAdapter.Builder builder63 = builder49.setLog(log61);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter73 = builder72.build();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter73.logLevel;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server38, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log61, logLevel74);
        retrofit.RestAdapter.LogLevel logLevel76 = restAdapter75.getLogLevel();
        retrofit.client.Client.Provider provider77 = null;
        restAdapter75.clientProvider = provider77;
        retrofit.RequestInterceptor requestInterceptor79 = restAdapter75.requestInterceptor;
        retrofit.RestAdapter.Log log80 = restAdapter75.log;
        retrofit.Server server81 = restAdapter75.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(restAdapter73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(server81);
    }

    @Test
    public void test06897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06897");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler9 = builder8.errorHandler;
        retrofit.RestAdapter restAdapter10 = builder8.build();
        java.util.concurrent.Executor executor11 = null;
        restAdapter10.httpExecutor = executor11;
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter10.new RestHandler();
        retrofit.client.Client.Provider provider14 = null;
        restAdapter10.clientProvider = provider14;
        retrofit.Profiler profiler16 = null;
        restAdapter10.profiler = profiler16;
        java.util.concurrent.Executor executor18 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter10.new RestHandler();
        retrofit.client.Client.Provider provider20 = restAdapter10.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNotNull(restAdapter10);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(provider20);
    }

    @Test
    public void test06898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06898");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.Server server32 = builder31.server;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel46);
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel46);
        restAdapter0.server = server14;
        retrofit.client.Client.Provider provider51 = null;
        restAdapter0.clientProvider = provider51;
        retrofit.converter.Converter converter53 = null;
        restAdapter0.converter = converter53;
        retrofit.ErrorHandler errorHandler55 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel65);
        retrofit.client.Client.Provider provider67 = builder60.clientProvider;
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        builder60.log = log68;
        retrofit.RestAdapter.Builder builder70 = builder56.setLog(log68);
        log68.log("Retrofit-");
        restAdapter0.log = log68;
        retrofit.RestAdapter.Log log74 = restAdapter0.log;
        retrofit.RestAdapter.RestHandler restHandler75 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(errorHandler55);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(log74);
    }

    @Test
    public void test06899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06899");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        retrofit.converter.Converter converter5 = null;
        restAdapter0.converter = converter5;
        retrofit.Profiler profiler7 = null;
        restAdapter0.profiler = profiler7;
        retrofit.client.Request request9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request10 = restAdapter0.logAndReplaceRequest(request9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(converter4);
    }

    @Test
    public void test06900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06900");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.Profiler profiler11 = builder10.profiler;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.client.Client.Provider provider25 = builder18.clientProvider;
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        builder18.log = log26;
        retrofit.RestAdapter.Builder builder28 = builder14.setLog(log26);
        retrofit.Server server29 = builder14.server;
        java.util.concurrent.Executor executor30 = null;
        builder14.callbackExecutor = executor30;
        retrofit.converter.Converter converter32 = builder14.converter;
        retrofit.Profiler profiler33 = builder14.profiler;
        retrofit.client.Client.Provider provider34 = builder14.clientProvider;
        retrofit.client.Client.Provider provider35 = builder14.clientProvider;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor37 = builder36.callbackExecutor;
        retrofit.client.Client.Provider provider38 = null;
        builder36.clientProvider = provider38;
        java.util.concurrent.Executor executor40 = builder36.callbackExecutor;
        retrofit.client.Client.Provider provider41 = builder36.clientProvider;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        java.util.concurrent.Executor executor44 = null;
        builder42.httpExecutor = executor44;
        retrofit.Server server46 = builder42.server;
        retrofit.RestAdapter.LogLevel logLevel47 = builder42.logLevel;
        retrofit.client.Client.Provider provider48 = null;
        builder42.clientProvider = provider48;
        retrofit.Server server50 = builder42.server;
        retrofit.RequestInterceptor requestInterceptor51 = builder42.requestInterceptor;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor53 = null;
        restAdapter52.callbackExecutor = executor53;
        retrofit.RestAdapter.Log log55 = restAdapter52.log;
        retrofit.converter.Converter converter56 = restAdapter52.converter;
        java.util.concurrent.Executor executor57 = null;
        restAdapter52.callbackExecutor = executor57;
        java.util.concurrent.Executor executor59 = null;
        restAdapter52.httpExecutor = executor59;
        retrofit.RestAdapter.RestHandler restHandler61 = restAdapter52.new RestHandler();
        retrofit.converter.Converter converter62 = restAdapter52.converter;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("Retrofit-Idle");
        retrofit.Server server72 = builder71.server;
        retrofit.Profiler profiler73 = null;
        builder71.profiler = profiler73;
        retrofit.Profiler profiler75 = null;
        builder71.profiler = profiler75;
        retrofit.RestAdapter restAdapter77 = builder71.build();
        retrofit.ErrorHandler errorHandler78 = builder71.errorHandler;
        restAdapter52.errorHandler = errorHandler78;
        builder42.errorHandler = errorHandler78;
        builder36.errorHandler = errorHandler78;
        retrofit.RestAdapter.Builder builder82 = builder14.setErrorHandler(errorHandler78);
        builder10.errorHandler = errorHandler78;
        retrofit.Server server84 = builder10.server;
        retrofit.client.Client client85 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder86 = builder10.setClient(client85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertNull(requestInterceptor51);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(converter62);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(errorHandler78);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(server84);
    }

    @Test
    public void test06901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06901");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.RestAdapter.LogLevel logLevel7 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter0.logLevel = logLevel7;
        retrofit.RestAdapter.LogLevel logLevel9 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter0.logLevel = logLevel9;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        java.util.concurrent.Executor executor14 = null;
        builder12.httpExecutor = executor14;
        retrofit.Server server16 = builder12.server;
        java.util.concurrent.Executor executor17 = null;
        builder12.callbackExecutor = executor17;
        retrofit.Server server19 = builder12.server;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.ErrorHandler errorHandler22 = builder20.errorHandler;
        retrofit.Server server23 = builder20.server;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter24.new RestHandler();
        retrofit.ErrorHandler errorHandler26 = null;
        restAdapter24.errorHandler = errorHandler26;
        retrofit.RestAdapter.Log log28 = restAdapter24.log;
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        retrofit.RestAdapter.Builder builder37 = builder31.setLogLevel(logLevel36);
        java.util.concurrent.Executor executor38 = builder37.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor39 = builder37.requestInterceptor;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter49 = builder48.build();
        retrofit.Profiler profiler50 = null;
        builder48.profiler = profiler50;
        retrofit.Profiler profiler52 = null;
        builder48.profiler = profiler52;
        retrofit.converter.Converter converter54 = builder48.converter;
        retrofit.RestAdapter.Builder builder55 = builder37.setConverter(converter54);
        restAdapter24.converter = converter54;
        retrofit.RestAdapter.Builder builder57 = builder20.setConverter(converter54);
        builder12.converter = converter54;
        restAdapter0.converter = converter54;
        retrofit.RestAdapter.LogLevel logLevel60 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler61 = restAdapter0.new RestHandler();
        java.lang.Throwable throwable62 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable62, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertNull(errorHandler22);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertNull(log28);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNull(requestInterceptor39);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(restAdapter49);
        org.junit.Assert.assertNotNull(converter54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06902");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter0.logLevel;
        retrofit.Server server6 = restAdapter0.server;
        retrofit.RequestInterceptor requestInterceptor7 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor9 = restAdapter0.callbackExecutor;
        java.lang.Throwable throwable10 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable10, "Retrofit-Idle");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(requestInterceptor7);
        org.junit.Assert.assertNull(executor9);
    }

    @Test
    public void test06903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06903");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter9.logLevel;
        retrofit.ErrorHandler errorHandler12 = restAdapter9.errorHandler;
        retrofit.converter.Converter converter13 = null;
        restAdapter9.converter = converter13;
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter9.logLevel;
        java.util.concurrent.Executor executor16 = restAdapter9.httpExecutor;
        retrofit.RestAdapter.Log log17 = restAdapter9.log;
        retrofit.Profiler profiler18 = null;
        restAdapter9.profiler = profiler18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        builder20.logLevel = logLevel22;
        boolean boolean24 = logLevel22.log();
        restAdapter9.logLevel = logLevel22;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter9.logLevel;
        retrofit.ErrorHandler errorHandler27 = null;
        restAdapter9.errorHandler = errorHandler27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        builder29.logLevel = logLevel31;
        boolean boolean33 = logLevel31.log();
        restAdapter9.setLogLevel(logLevel31);
        boolean boolean35 = logLevel31.log();
        retrofit.RestAdapter.Builder builder36 = builder6.setLogLevel(logLevel31);
        retrofit.converter.Converter converter37 = builder6.converter;
        retrofit.RestAdapter.Builder builder39 = builder6.setServer("Retrofit-");
        retrofit.ErrorHandler errorHandler40 = builder39.errorHandler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(errorHandler40);
    }

    @Test
    public void test06904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06904");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter8.logLevel;
        retrofit.ErrorHandler errorHandler11 = null;
        restAdapter8.errorHandler = errorHandler11;
        java.util.concurrent.Executor executor13 = restAdapter8.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter8.getLogLevel();
        java.util.concurrent.Executor executor15 = restAdapter8.httpExecutor;
        retrofit.RestAdapter.Log log16 = restAdapter8.log;
        retrofit.converter.Converter converter17 = restAdapter8.converter;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = builder26.setLog(log27);
        java.util.concurrent.Executor executor29 = builder26.httpExecutor;
        retrofit.RestAdapter.Builder builder31 = builder26.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel32 = builder26.logLevel;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor34 = null;
        restAdapter33.callbackExecutor = executor34;
        retrofit.converter.Converter converter36 = restAdapter33.converter;
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter33.new RestHandler();
        retrofit.RestAdapter.Log log38 = restAdapter33.log;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder39.setLogLevel(logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder45.setServer("Retrofit-Idle");
        retrofit.Server server48 = builder47.server;
        retrofit.client.Client.Provider provider49 = null;
        java.util.concurrent.Executor executor50 = null;
        java.util.concurrent.Executor executor51 = null;
        retrofit.RequestInterceptor requestInterceptor52 = null;
        retrofit.converter.Converter converter53 = null;
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Log log56 = null;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = builder57.server;
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = builder61.logLevel;
        retrofit.RestAdapter.Builder builder63 = builder57.setLogLevel(logLevel62);
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server48, provider49, executor50, executor51, requestInterceptor52, converter53, profiler54, errorHandler55, log56, logLevel62);
        retrofit.client.Client.Provider provider65 = null;
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        retrofit.RequestInterceptor requestInterceptor68 = null;
        retrofit.converter.Converter converter69 = null;
        retrofit.Profiler profiler70 = null;
        retrofit.ErrorHandler errorHandler71 = null;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.Server server73 = builder72.server;
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.Server server77 = builder76.server;
        retrofit.RestAdapter.Log log78 = null;
        builder76.log = log78;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel81 = builder80.logLevel;
        retrofit.RestAdapter.Builder builder82 = builder76.setLogLevel(logLevel81);
        retrofit.client.Client.Provider provider83 = builder76.clientProvider;
        retrofit.RestAdapter.Log log84 = retrofit.RestAdapter.Log.NONE;
        builder76.log = log84;
        retrofit.RestAdapter.Builder builder86 = builder72.setLog(log84);
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server48, provider65, executor66, executor67, requestInterceptor68, converter69, profiler70, errorHandler71, log84, logLevel87);
        restAdapter33.server = server48;
        retrofit.RestAdapter.Builder builder90 = builder26.setServer(server48);
        retrofit.RestAdapter.Log log91 = null;
        builder90.log = log91;
        retrofit.RestAdapter restAdapter93 = builder90.build();
        java.util.concurrent.Executor executor94 = builder90.callbackExecutor;
        restAdapter8.callbackExecutor = executor94;
        builder0.httpExecutor = executor94;
        java.util.concurrent.Executor executor97 = builder0.httpExecutor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(logLevel10);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertNull(server77);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(provider83);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(restAdapter93);
        org.junit.Assert.assertNotNull(executor94);
        org.junit.Assert.assertNotNull(executor97);
    }

    @Test
    public void test06905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06905");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        retrofit.Profiler profiler14 = builder0.profiler;
        retrofit.client.Client.Provider provider15 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider27 = builder20.clientProvider;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log28;
        retrofit.RestAdapter.Builder builder30 = builder16.setLog(log28);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.client.Client.Provider provider42 = builder35.clientProvider;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder35.log = log43;
        retrofit.RestAdapter.Builder builder45 = builder31.setLog(log43);
        retrofit.RestAdapter.Builder builder46 = builder16.setLog(log43);
        builder46.ensureSaneDefaults();
        retrofit.client.Client.Provider provider48 = null;
        builder46.clientProvider = provider48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        retrofit.RestAdapter.Builder builder57 = builder51.setLogLevel(logLevel56);
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        builder51.log = log59;
        retrofit.RestAdapter.Builder builder61 = builder50.setLog(log59);
        retrofit.Profiler profiler62 = builder50.profiler;
        java.util.concurrent.Executor executor63 = null;
        builder50.callbackExecutor = executor63;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.Server server66 = builder65.server;
        retrofit.RestAdapter.Log log67 = null;
        builder65.log = log67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = builder69.logLevel;
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel70);
        retrofit.client.Client.Provider provider72 = builder65.clientProvider;
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        builder65.log = log73;
        builder50.log = log73;
        builder46.log = log73;
        java.util.concurrent.Executor executor77 = builder46.httpExecutor;
        builder0.callbackExecutor = executor77;
        retrofit.client.Client.Provider provider79 = builder0.clientProvider;
        retrofit.converter.Converter converter80 = builder0.converter;
        retrofit.client.Client.Provider provider81 = null;
        builder0.clientProvider = provider81;
        retrofit.Profiler profiler83 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder84 = builder0.setProfiler(profiler83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(profiler62);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(executor77);
        org.junit.Assert.assertNull(provider79);
        org.junit.Assert.assertNull(converter80);
    }

    @Test
    public void test06906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06906");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.Server server27 = builder26.server;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel41);
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel41);
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.Server server46 = builder45.server;
        retrofit.RestAdapter.Log log47 = null;
        builder45.log = log47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel50 = builder49.logLevel;
        retrofit.RestAdapter.Builder builder51 = builder45.setLogLevel(logLevel50);
        retrofit.RestAdapter.Builder builder53 = builder51.setServer("Retrofit-Idle");
        retrofit.Server server54 = builder53.server;
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("Retrofit-Idle");
        retrofit.Server server72 = builder71.server;
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.RequestInterceptor requestInterceptor76 = null;
        retrofit.converter.Converter converter77 = null;
        retrofit.Profiler profiler78 = null;
        retrofit.ErrorHandler errorHandler79 = null;
        retrofit.RestAdapter.Log log80 = null;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.Server server82 = builder81.server;
        retrofit.RestAdapter.Log log83 = null;
        builder81.log = log83;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel86 = builder85.logLevel;
        retrofit.RestAdapter.Builder builder87 = builder81.setLogLevel(logLevel86);
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor76, converter77, profiler78, errorHandler79, log80, logLevel86);
        retrofit.RestAdapter restAdapter89 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log62, logLevel86);
        restAdapter44.logLevel = logLevel86;
        retrofit.RequestInterceptor requestInterceptor91 = restAdapter44.requestInterceptor;
        retrofit.Profiler profiler92 = null;
        restAdapter44.profiler = profiler92;
        retrofit.RestAdapter.LogLevel logLevel94 = restAdapter44.logLevel;
        boolean boolean95 = logLevel94.log();
        boolean boolean96 = logLevel94.log();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(server46);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNull(server82);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNull(requestInterceptor91);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test06907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06907");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter9.logLevel;
        retrofit.ErrorHandler errorHandler12 = restAdapter9.errorHandler;
        retrofit.converter.Converter converter13 = null;
        restAdapter9.converter = converter13;
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter9.logLevel;
        java.util.concurrent.Executor executor16 = restAdapter9.httpExecutor;
        retrofit.RestAdapter.Log log17 = restAdapter9.log;
        retrofit.Profiler profiler18 = null;
        restAdapter9.profiler = profiler18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        builder20.logLevel = logLevel22;
        boolean boolean24 = logLevel22.log();
        restAdapter9.logLevel = logLevel22;
        retrofit.RestAdapter.LogLevel logLevel26 = restAdapter9.logLevel;
        retrofit.ErrorHandler errorHandler27 = null;
        restAdapter9.errorHandler = errorHandler27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        builder29.logLevel = logLevel31;
        boolean boolean33 = logLevel31.log();
        restAdapter9.setLogLevel(logLevel31);
        boolean boolean35 = logLevel31.log();
        retrofit.RestAdapter.Builder builder36 = builder6.setLogLevel(logLevel31);
        java.util.concurrent.Executor executor37 = builder6.httpExecutor;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor39 = builder38.callbackExecutor;
        retrofit.Profiler profiler40 = builder38.profiler;
        retrofit.RestAdapter.Builder builder42 = builder38.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter43 = builder42.converter;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.ErrorHandler errorHandler46 = null;
        builder44.errorHandler = errorHandler46;
        retrofit.converter.Converter converter48 = builder44.converter;
        retrofit.RestAdapter.LogLevel logLevel49 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder42.setLogLevel(logLevel49);
        java.util.concurrent.Executor executor51 = builder42.httpExecutor;
        retrofit.Server server52 = builder42.server;
        builder6.server = server52;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(executor39);
        org.junit.Assert.assertNull(profiler40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNotNull(server52);
    }

    @Test
    public void test06908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06908");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.Profiler profiler10 = null;
        builder8.profiler = profiler10;
        retrofit.Profiler profiler12 = null;
        builder8.profiler = profiler12;
        retrofit.RestAdapter restAdapter14 = builder8.build();
        retrofit.RequestInterceptor requestInterceptor15 = restAdapter14.requestInterceptor;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.Server server25 = builder24.server;
        java.util.concurrent.Executor executor26 = builder24.httpExecutor;
        java.util.concurrent.Executor executor27 = builder24.httpExecutor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder36.server;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("Retrofit-Idle");
        retrofit.Server server55 = builder54.server;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Log log63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log63, logLevel69);
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel69);
        retrofit.RestAdapter.Builder builder73 = builder24.setServer(server37);
        restAdapter14.server = server37;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(restAdapter14);
        org.junit.Assert.assertNotNull(requestInterceptor15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder73);
    }

    @Test
    public void test06909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06909");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.Server server15 = builder0.server;
        java.util.concurrent.Executor executor16 = null;
        builder0.callbackExecutor = executor16;
        retrofit.converter.Converter converter18 = builder0.converter;
        retrofit.ErrorHandler errorHandler19 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel20 = builder0.logLevel;
        retrofit.Profiler profiler21 = null;
        builder0.profiler = profiler21;
        retrofit.client.Client.Provider provider23 = builder0.clientProvider;
        retrofit.converter.Converter converter24 = builder0.converter;
        retrofit.Profiler profiler25 = builder0.profiler;
        retrofit.RequestInterceptor requestInterceptor26 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(converter24);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertNull(requestInterceptor26);
    }

    @Test
    public void test06910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06910");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        restAdapter0.log = log4;
        java.util.concurrent.Executor executor6 = null;
        restAdapter0.httpExecutor = executor6;
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        java.util.concurrent.Executor executor16 = builder15.callbackExecutor;
        java.util.concurrent.Executor executor17 = builder15.callbackExecutor;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        builder25.logLevel = logLevel27;
        boolean boolean29 = logLevel27.log();
        builder18.logLevel = logLevel27;
        retrofit.RestAdapter.LogLevel logLevel31 = builder18.logLevel;
        retrofit.Profiler profiler32 = builder18.profiler;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor34 = builder33.callbackExecutor;
        retrofit.Profiler profiler35 = builder33.profiler;
        retrofit.RestAdapter.Builder builder37 = builder33.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Builder builder48 = builder37.setServer(server47);
        retrofit.RestAdapter.Builder builder49 = builder18.setServer(server47);
        retrofit.RestAdapter.Builder builder50 = builder15.setServer(server47);
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel67);
        retrofit.client.Client.Provider provider69 = builder62.clientProvider;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        builder62.log = log70;
        retrofit.RestAdapter.Builder builder72 = builder58.setLog(log70);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Log log75 = null;
        builder73.log = log75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter82 = builder81.build();
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter82.logLevel;
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server47, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log70, logLevel83);
        restAdapter0.server = server47;
        retrofit.converter.Converter converter86 = restAdapter0.converter;
        retrofit.Server server87 = restAdapter0.server;
        retrofit.converter.Converter converter88 = restAdapter0.converter;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter86);
        org.junit.Assert.assertNotNull(server87);
        org.junit.Assert.assertNull(converter88);
    }

    @Test
    public void test06911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06911");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = builder8.build();
        retrofit.Profiler profiler10 = null;
        builder8.profiler = profiler10;
        retrofit.RestAdapter restAdapter12 = builder8.build();
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.Server server23 = builder22.server;
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.RequestInterceptor requestInterceptor27 = null;
        retrofit.converter.Converter converter28 = null;
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("Retrofit-Idle");
        retrofit.Server server41 = builder40.server;
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.RequestInterceptor requestInterceptor45 = null;
        retrofit.converter.Converter converter46 = null;
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.RestAdapter.Log log49 = null;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Log log52 = null;
        builder50.log = log52;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel55 = builder54.logLevel;
        retrofit.RestAdapter.Builder builder56 = builder50.setLogLevel(logLevel55);
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor45, converter46, profiler47, errorHandler48, log49, logLevel55);
        retrofit.RestAdapter restAdapter58 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor27, converter28, profiler29, errorHandler30, log31, logLevel55);
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter58.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean61 = logLevel60.log();
        restAdapter58.logLevel = logLevel60;
        retrofit.RestAdapter.Builder builder63 = builder8.setLogLevel(logLevel60);
        retrofit.RestAdapter.Builder builder65 = builder63.setServer("Retrofit-");
        retrofit.client.Client.Provider provider66 = builder63.clientProvider;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertNotNull(restAdapter12);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(provider66);
    }

    @Test
    public void test06912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06912");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        retrofit.converter.Converter converter5 = null;
        restAdapter0.converter = converter5;
        retrofit.Profiler profiler7 = null;
        restAdapter0.profiler = profiler7;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor10 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder17 = builder11.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        builder18.logLevel = logLevel20;
        boolean boolean22 = logLevel20.log();
        builder11.logLevel = logLevel20;
        retrofit.RestAdapter.LogLevel logLevel24 = builder11.logLevel;
        java.util.concurrent.Executor executor25 = builder11.callbackExecutor;
        retrofit.Server server26 = builder11.server;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("Retrofit-Idle");
        retrofit.Server server36 = builder35.server;
        retrofit.client.Client.Provider provider37 = null;
        java.util.concurrent.Executor executor38 = null;
        java.util.concurrent.Executor executor39 = null;
        retrofit.RequestInterceptor requestInterceptor40 = null;
        retrofit.converter.Converter converter41 = null;
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Log log44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        builder45.logLevel = logLevel47;
        boolean boolean49 = logLevel47.log();
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server36, provider37, executor38, executor39, requestInterceptor40, converter41, profiler42, errorHandler43, log44, logLevel47);
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel67);
        retrofit.client.Client.Provider provider69 = builder62.clientProvider;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        builder62.log = log70;
        retrofit.RestAdapter.Builder builder72 = builder58.setLog(log70);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Log log75 = null;
        builder73.log = log75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.Server server78 = builder77.server;
        retrofit.RestAdapter.Log log79 = null;
        builder77.log = log79;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        retrofit.RestAdapter.Builder builder83 = builder77.setLogLevel(logLevel82);
        retrofit.client.Client.Provider provider84 = builder77.clientProvider;
        retrofit.RestAdapter.Log log85 = retrofit.RestAdapter.Log.NONE;
        builder77.log = log85;
        retrofit.RestAdapter.Builder builder87 = builder73.setLog(log85);
        retrofit.RestAdapter.Builder builder88 = builder58.setLog(log85);
        retrofit.RestAdapter.Builder builder89 = new retrofit.RestAdapter.Builder();
        retrofit.Server server90 = builder89.server;
        java.util.concurrent.Executor executor91 = null;
        builder89.httpExecutor = executor91;
        retrofit.Server server93 = builder89.server;
        retrofit.RestAdapter.LogLevel logLevel94 = builder89.logLevel;
        retrofit.RestAdapter restAdapter95 = new retrofit.RestAdapter(server36, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log85, logLevel94);
        retrofit.RestAdapter.Builder builder96 = builder11.setServer(server36);
        restAdapter0.server = server36;
        retrofit.client.Client.Provider provider98 = null;
        restAdapter0.clientProvider = provider98;
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(executor10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertNull(server78);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNull(provider84);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNull(server90);
        org.junit.Assert.assertNull(server93);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test06913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06913");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider10 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor12 = restAdapter0.callbackExecutor;
        retrofit.converter.Converter converter13 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider15 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor19 = builder18.callbackExecutor;
        retrofit.Profiler profiler20 = builder18.profiler;
        retrofit.RestAdapter.Builder builder22 = builder18.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter23 = builder22.converter;
        retrofit.RestAdapter.LogLevel logLevel24 = builder22.logLevel;
        retrofit.RestAdapter.LogLevel logLevel25 = builder22.logLevel;
        restAdapter0.logLevel = logLevel25;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06914");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.converter.Converter converter4 = builder0.converter;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel7 = builder6.logLevel;
        builder5.logLevel = logLevel7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("Retrofit-Idle");
        retrofit.Server server18 = builder17.server;
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.RequestInterceptor requestInterceptor22 = null;
        retrofit.converter.Converter converter23 = null;
        retrofit.Profiler profiler24 = null;
        retrofit.ErrorHandler errorHandler25 = null;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel32);
        retrofit.client.Client.Provider provider34 = builder27.clientProvider;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        builder27.log = log35;
        retrofit.RestAdapter.Builder builder37 = builder26.setLog(log35);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor22, converter23, profiler24, errorHandler25, log35, logLevel38);
        builder5.logLevel = logLevel38;
        retrofit.RestAdapter.LogLevel logLevel41 = builder5.logLevel;
        retrofit.Profiler profiler42 = builder5.profiler;
        retrofit.RestAdapter.LogLevel logLevel43 = builder5.logLevel;
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter44.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel46 = restAdapter44.logLevel;
        retrofit.ErrorHandler errorHandler47 = null;
        restAdapter44.errorHandler = errorHandler47;
        java.util.concurrent.Executor executor49 = null;
        restAdapter44.callbackExecutor = executor49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor52 = builder51.callbackExecutor;
        retrofit.Profiler profiler53 = builder51.profiler;
        retrofit.RestAdapter.Builder builder55 = builder51.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("Retrofit-Idle");
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Builder builder66 = builder55.setServer(server65);
        retrofit.RestAdapter restAdapter67 = builder66.build();
        java.util.concurrent.Executor executor68 = restAdapter67.callbackExecutor;
        retrofit.client.Client.Provider provider69 = restAdapter67.clientProvider;
        restAdapter44.clientProvider = provider69;
        builder5.clientProvider = provider69;
        retrofit.RestAdapter.Builder builder72 = builder0.setClient(provider69);
        retrofit.client.Client.Provider provider73 = builder0.clientProvider;
        retrofit.RestAdapter.Log log74 = builder0.log;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertTrue("'" + logLevel7 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel7.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(logLevel46);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNull(profiler53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(server65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(restAdapter67);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(provider69);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(provider73);
        org.junit.Assert.assertNull(log74);
    }

    @Test
    public void test06915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06915");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.logLevel;
        retrofit.Profiler profiler8 = restAdapter0.profiler;
        java.lang.Throwable throwable9 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable9, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(profiler8);
    }

    @Test
    public void test06916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06916");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = null;
        restAdapter0.errorHandler = errorHandler3;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.ErrorHandler errorHandler6 = restAdapter0.errorHandler;
        retrofit.RestAdapter.Log log7 = restAdapter0.log;
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter8.new RestHandler();
        retrofit.ErrorHandler errorHandler10 = null;
        restAdapter8.errorHandler = errorHandler10;
        retrofit.ErrorHandler errorHandler12 = restAdapter8.errorHandler;
        retrofit.converter.Converter converter13 = restAdapter8.converter;
        retrofit.Server server14 = restAdapter8.server;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter8.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter8.getLogLevel();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder27 = builder25.setLog(log26);
        java.util.concurrent.Executor executor28 = builder25.httpExecutor;
        java.util.concurrent.Executor executor29 = null;
        builder25.httpExecutor = executor29;
        retrofit.RestAdapter.Log log31 = builder25.log;
        log31.log("");
        restAdapter8.log = log31;
        restAdapter0.log = log31;
        java.util.concurrent.Executor executor36 = restAdapter0.callbackExecutor;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(log7);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(executor36);
    }

    @Test
    public void test06917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06917");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.Server server2 = builder1.server;
        retrofit.RestAdapter.Log log3 = null;
        builder1.log = log3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder7 = builder1.setLogLevel(logLevel6);
        retrofit.client.Client.Provider provider8 = builder1.clientProvider;
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        builder1.log = log9;
        retrofit.RestAdapter.Builder builder11 = builder0.setLog(log9);
        java.util.concurrent.Executor executor12 = builder11.callbackExecutor;
        java.util.concurrent.Executor executor13 = builder11.callbackExecutor;
        java.util.concurrent.Executor executor14 = builder11.callbackExecutor;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("Retrofit-Idle");
        retrofit.Server server24 = builder23.server;
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.RequestInterceptor requestInterceptor28 = null;
        retrofit.converter.Converter converter29 = null;
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Log log32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = builder37.logLevel;
        retrofit.RestAdapter.Builder builder39 = builder33.setLogLevel(logLevel38);
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor28, converter29, profiler30, errorHandler31, log32, logLevel38);
        retrofit.client.Client.Provider provider41 = null;
        java.util.concurrent.Executor executor42 = null;
        java.util.concurrent.Executor executor43 = null;
        retrofit.RequestInterceptor requestInterceptor44 = null;
        retrofit.converter.Converter converter45 = null;
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.client.Client.Provider provider59 = builder52.clientProvider;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        builder52.log = log60;
        retrofit.RestAdapter.Builder builder62 = builder48.setLog(log60);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server24, provider41, executor42, executor43, requestInterceptor44, converter45, profiler46, errorHandler47, log60, logLevel63);
        log60.log("Retrofit-");
        log60.log("");
        builder11.log = log60;
        retrofit.Profiler profiler70 = builder11.profiler;
        org.junit.Assert.assertNull(server2);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler70);
    }

    @Test
    public void test06918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06918");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.Server server27 = builder26.server;
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.RequestInterceptor requestInterceptor31 = null;
        retrofit.converter.Converter converter32 = null;
        retrofit.Profiler profiler33 = null;
        retrofit.ErrorHandler errorHandler34 = null;
        retrofit.RestAdapter.Log log35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter restAdapter43 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor31, converter32, profiler33, errorHandler34, log35, logLevel41);
        retrofit.RestAdapter restAdapter44 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel41);
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.client.Client.Provider provider60 = builder53.clientProvider;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log61;
        retrofit.RestAdapter.Builder builder63 = builder52.setLog(log61);
        retrofit.converter.Converter converter64 = null;
        builder52.converter = converter64;
        retrofit.RestAdapter.Log log66 = builder52.log;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor68 = builder67.callbackExecutor;
        retrofit.Profiler profiler69 = builder67.profiler;
        retrofit.RestAdapter.Builder builder71 = builder67.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel72 = builder67.logLevel;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server9, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log66, logLevel72);
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor75 = null;
        restAdapter74.callbackExecutor = executor75;
        retrofit.converter.Converter converter77 = restAdapter74.converter;
        java.util.concurrent.Executor executor78 = restAdapter74.httpExecutor;
        retrofit.converter.Converter converter79 = restAdapter74.converter;
        retrofit.RestAdapter.LogLevel logLevel80 = restAdapter74.logLevel;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.Server server82 = builder81.server;
        retrofit.RestAdapter.Log log83 = null;
        builder81.log = log83;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel86 = builder85.logLevel;
        retrofit.RestAdapter.Builder builder87 = builder81.setLogLevel(logLevel86);
        retrofit.RestAdapter.Builder builder89 = builder87.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider90 = null;
        builder87.clientProvider = provider90;
        retrofit.Server server92 = builder87.server;
        restAdapter74.server = server92;
        retrofit.Server server94 = restAdapter74.server;
        restAdapter73.server = server94;
        java.lang.Throwable throwable96 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter73.logException(throwable96, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertNull(profiler69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter77);
        org.junit.Assert.assertNull(executor78);
        org.junit.Assert.assertNull(converter79);
        org.junit.Assert.assertNull(logLevel80);
        org.junit.Assert.assertNull(server82);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(server92);
        org.junit.Assert.assertNotNull(server94);
    }

    @Test
    public void test06919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06919");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter4 = null;
        restAdapter0.converter = converter4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        java.util.concurrent.Executor executor7 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Log log8 = restAdapter0.log;
        retrofit.Profiler profiler9 = null;
        restAdapter0.profiler = profiler9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        builder11.logLevel = logLevel13;
        boolean boolean15 = logLevel13.log();
        restAdapter0.logLevel = logLevel13;
        retrofit.Profiler profiler17 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler27 = builder26.errorHandler;
        retrofit.RestAdapter restAdapter28 = builder26.build();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler32 = restAdapter31.new RestHandler();
        java.util.concurrent.Executor executor33 = restAdapter31.httpExecutor;
        java.util.concurrent.Executor executor34 = null;
        restAdapter31.callbackExecutor = executor34;
        retrofit.client.Client.Provider provider36 = null;
        restAdapter31.clientProvider = provider36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("Retrofit-Idle");
        retrofit.Server server65 = builder64.server;
        retrofit.client.Client.Provider provider66 = null;
        java.util.concurrent.Executor executor67 = null;
        java.util.concurrent.Executor executor68 = null;
        retrofit.RequestInterceptor requestInterceptor69 = null;
        retrofit.converter.Converter converter70 = null;
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Log log73 = null;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.Server server75 = builder74.server;
        retrofit.RestAdapter.Log log76 = null;
        builder74.log = log76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel79 = builder78.logLevel;
        retrofit.RestAdapter.Builder builder80 = builder74.setLogLevel(logLevel79);
        retrofit.RestAdapter restAdapter81 = new retrofit.RestAdapter(server65, provider66, executor67, executor68, requestInterceptor69, converter70, profiler71, errorHandler72, log73, logLevel79);
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel79);
        restAdapter31.log = log55;
        log55.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder86 = builder29.setLog(log55);
        builder26.log = log55;
        retrofit.RequestInterceptor requestInterceptor88 = builder26.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor88;
        retrofit.RestAdapter.RestHandler restHandler90 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor91 = restAdapter0.requestInterceptor;
        retrofit.client.Client.Provider provider92 = restAdapter0.clientProvider;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(errorHandler27);
        org.junit.Assert.assertNotNull(restAdapter28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertNull(executor33);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(server65);
        org.junit.Assert.assertNull(server75);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(requestInterceptor88);
        org.junit.Assert.assertNotNull(requestInterceptor91);
        org.junit.Assert.assertNull(provider92);
    }

    @Test
    public void test06920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06920");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider2 = null;
        builder0.clientProvider = provider2;
        retrofit.RestAdapter.Builder builder5 = builder0.setServer("hi!");
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        retrofit.Profiler profiler8 = builder6.profiler;
        retrofit.RestAdapter.Builder builder10 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel11 = builder6.logLevel;
        java.util.concurrent.Executor executor12 = null;
        builder6.httpExecutor = executor12;
        builder6.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter24 = builder23.build();
        retrofit.Profiler profiler25 = null;
        builder23.profiler = profiler25;
        retrofit.RestAdapter restAdapter27 = builder23.build();
        retrofit.client.Client.Provider provider28 = builder23.clientProvider;
        retrofit.RestAdapter.Builder builder29 = builder6.setClient(provider28);
        retrofit.RestAdapter.Builder builder30 = builder0.setClient(provider28);
        java.util.concurrent.Executor executor31 = builder0.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel32 = builder0.logLevel;
        retrofit.Profiler profiler33 = builder0.profiler;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter35 = null;
        builder34.converter = converter35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder37.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder45 = builder43.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder47 = builder45.setLog(log46);
        retrofit.Profiler profiler48 = builder47.profiler;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = builder53.logLevel;
        retrofit.RestAdapter.Builder builder55 = builder49.setLogLevel(logLevel54);
        retrofit.RestAdapter.Builder builder57 = builder55.setServer("Retrofit-Idle");
        retrofit.Server server58 = builder57.server;
        retrofit.client.Client.Provider provider59 = null;
        java.util.concurrent.Executor executor60 = null;
        java.util.concurrent.Executor executor61 = null;
        retrofit.RequestInterceptor requestInterceptor62 = null;
        retrofit.converter.Converter converter63 = null;
        retrofit.Profiler profiler64 = null;
        retrofit.ErrorHandler errorHandler65 = null;
        retrofit.RestAdapter.Log log66 = null;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.Server server68 = builder67.server;
        retrofit.RestAdapter.Log log69 = null;
        builder67.log = log69;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel72 = builder71.logLevel;
        retrofit.RestAdapter.Builder builder73 = builder67.setLogLevel(logLevel72);
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server58, provider59, executor60, executor61, requestInterceptor62, converter63, profiler64, errorHandler65, log66, logLevel72);
        retrofit.RestAdapter.Builder builder75 = builder47.setServer(server58);
        retrofit.RestAdapter.Builder builder76 = builder34.setServer(server58);
        retrofit.converter.Converter converter77 = null;
        builder76.converter = converter77;
        retrofit.Profiler profiler79 = builder76.profiler;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel81 = builder80.logLevel;
        boolean boolean82 = logLevel81.log();
        retrofit.RestAdapter.Builder builder83 = builder76.setLogLevel(logLevel81);
        retrofit.RestAdapter.Builder builder84 = builder0.setLogLevel(logLevel81);
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(profiler8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(restAdapter24);
        org.junit.Assert.assertNotNull(restAdapter27);
        org.junit.Assert.assertNotNull(provider28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(profiler79);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test06921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06921");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.Server server19 = builder18.server;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder36.server;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel51);
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel51);
        builder0.log = log27;
        retrofit.client.Client.Provider provider56 = null;
        builder0.clientProvider = provider56;
        retrofit.RequestInterceptor requestInterceptor58 = builder0.requestInterceptor;
        retrofit.Server server59 = builder0.server;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor61 = builder60.callbackExecutor;
        retrofit.Profiler profiler62 = builder60.profiler;
        retrofit.RestAdapter.Builder builder64 = builder60.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.Server server66 = builder65.server;
        retrofit.RestAdapter.Log log67 = null;
        builder65.log = log67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = builder69.logLevel;
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel70);
        retrofit.RestAdapter.Builder builder73 = builder71.setServer("Retrofit-Idle");
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Builder builder75 = builder64.setServer(server74);
        retrofit.RestAdapter.Log log76 = builder75.log;
        retrofit.converter.Converter converter77 = builder75.converter;
        builder75.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor79 = builder75.requestInterceptor;
        retrofit.RestAdapter.Builder builder80 = builder0.setRequestInterceptor(requestInterceptor79);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter81 = builder80.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(requestInterceptor58);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertNull(executor61);
        org.junit.Assert.assertNull(profiler62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(server74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNull(log76);
        org.junit.Assert.assertNull(converter77);
        org.junit.Assert.assertNotNull(requestInterceptor79);
        org.junit.Assert.assertNotNull(builder80);
    }

    @Test
    public void test06922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06922");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.RestAdapter.RestHandler restHandler9 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider10 = restAdapter0.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor12 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter14 = null;
        builder13.converter = converter14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder26 = builder24.setLog(log25);
        retrofit.Profiler profiler27 = builder26.profiler;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder36.server;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder26.setServer(server37);
        retrofit.RestAdapter.Builder builder55 = builder13.setServer(server37);
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter57 = builder13.build();
        java.util.concurrent.Executor executor58 = builder13.httpExecutor;
        restAdapter0.callbackExecutor = executor58;
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter61 = restAdapter0.converter;
        retrofit.Server server62 = restAdapter0.server;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(restAdapter57);
        org.junit.Assert.assertNotNull(executor58);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(server62);
    }

    @Test
    public void test06923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06923");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        restAdapter0.clientProvider = provider5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("Retrofit-Idle");
        retrofit.Server server34 = builder33.server;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.Server server44 = builder43.server;
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel48 = builder47.logLevel;
        retrofit.RestAdapter.Builder builder49 = builder43.setLogLevel(logLevel48);
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel48);
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel48);
        restAdapter0.log = log24;
        retrofit.ErrorHandler errorHandler53 = restAdapter0.errorHandler;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor55 = null;
        restAdapter54.requestInterceptor = requestInterceptor55;
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter54.new RestHandler();
        java.util.concurrent.Executor executor58 = restAdapter54.callbackExecutor;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler60 = restAdapter59.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel61 = restAdapter59.logLevel;
        retrofit.ErrorHandler errorHandler62 = restAdapter59.errorHandler;
        retrofit.converter.Converter converter63 = null;
        restAdapter59.converter = converter63;
        retrofit.converter.Converter converter65 = restAdapter59.converter;
        retrofit.RestAdapter.RestHandler restHandler66 = restAdapter59.new RestHandler();
        retrofit.converter.Converter converter67 = null;
        restAdapter59.converter = converter67;
        retrofit.client.Client.Provider provider69 = restAdapter59.clientProvider;
        retrofit.Server server70 = restAdapter59.server;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log80 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder81 = builder79.setLog(log80);
        java.util.concurrent.Executor executor82 = builder79.httpExecutor;
        java.util.concurrent.Executor executor83 = null;
        builder79.httpExecutor = executor83;
        java.util.concurrent.Executor executor85 = builder79.callbackExecutor;
        builder79.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter87 = builder79.build();
        java.util.concurrent.Executor executor88 = restAdapter87.httpExecutor;
        restAdapter59.httpExecutor = executor88;
        restAdapter54.callbackExecutor = executor88;
        restAdapter0.callbackExecutor = executor88;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(errorHandler53);
        org.junit.Assert.assertNull(executor58);
        org.junit.Assert.assertNull(logLevel61);
        org.junit.Assert.assertNull(errorHandler62);
        org.junit.Assert.assertNull(converter65);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(server70);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(log80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(executor82);
        org.junit.Assert.assertNull(executor85);
        org.junit.Assert.assertNotNull(restAdapter87);
        org.junit.Assert.assertNotNull(executor88);
    }

    @Test
    public void test06924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06924");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.Profiler profiler3 = restAdapter0.profiler;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter0.logLevel;
        retrofit.Server server6 = restAdapter0.server;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        retrofit.Profiler profiler20 = builder19.profiler;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = builder21.server;
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        retrofit.RestAdapter.Builder builder27 = builder21.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("Retrofit-Idle");
        retrofit.Server server30 = builder29.server;
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.RequestInterceptor requestInterceptor34 = null;
        retrofit.converter.Converter converter35 = null;
        retrofit.Profiler profiler36 = null;
        retrofit.ErrorHandler errorHandler37 = null;
        retrofit.RestAdapter.Log log38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        retrofit.RestAdapter.Builder builder45 = builder39.setLogLevel(logLevel44);
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor34, converter35, profiler36, errorHandler37, log38, logLevel44);
        retrofit.RestAdapter.Builder builder47 = builder19.setServer(server30);
        retrofit.converter.Converter converter48 = null;
        builder19.converter = converter48;
        java.util.concurrent.Executor executor50 = null;
        builder19.callbackExecutor = executor50;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor53 = null;
        restAdapter52.callbackExecutor = executor53;
        retrofit.RestAdapter.Log log55 = restAdapter52.log;
        retrofit.converter.Converter converter56 = restAdapter52.converter;
        java.util.concurrent.Executor executor57 = null;
        restAdapter52.callbackExecutor = executor57;
        java.util.concurrent.Executor executor59 = null;
        restAdapter52.httpExecutor = executor59;
        retrofit.RestAdapter.RestHandler restHandler61 = restAdapter52.new RestHandler();
        retrofit.converter.Converter converter62 = restAdapter52.converter;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("Retrofit-Idle");
        retrofit.Server server72 = builder71.server;
        retrofit.Profiler profiler73 = null;
        builder71.profiler = profiler73;
        retrofit.Profiler profiler75 = null;
        builder71.profiler = profiler75;
        retrofit.RestAdapter restAdapter77 = builder71.build();
        retrofit.ErrorHandler errorHandler78 = builder71.errorHandler;
        restAdapter52.errorHandler = errorHandler78;
        builder19.errorHandler = errorHandler78;
        retrofit.ErrorHandler errorHandler81 = builder19.errorHandler;
        restAdapter0.errorHandler = errorHandler81;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(profiler3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(profiler20);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(log55);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(converter62);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(errorHandler78);
        org.junit.Assert.assertNotNull(errorHandler81);
    }

    @Test
    public void test06925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06925");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.client.Client.Provider provider7 = restAdapter0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel8 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        java.util.concurrent.Executor executor16 = builder15.callbackExecutor;
        java.util.concurrent.Executor executor17 = builder15.callbackExecutor;
        retrofit.Profiler profiler18 = null;
        builder15.profiler = profiler18;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter20.new RestHandler();
        java.util.concurrent.Executor executor22 = restAdapter20.httpExecutor;
        java.util.concurrent.Executor executor23 = null;
        restAdapter20.callbackExecutor = executor23;
        retrofit.client.Client.Provider provider25 = null;
        restAdapter20.clientProvider = provider25;
        java.util.concurrent.Executor executor27 = null;
        restAdapter20.callbackExecutor = executor27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter38 = builder37.build();
        retrofit.RestAdapter.LogLevel logLevel39 = restAdapter38.logLevel;
        retrofit.RequestInterceptor requestInterceptor40 = restAdapter38.requestInterceptor;
        restAdapter20.requestInterceptor = requestInterceptor40;
        retrofit.RestAdapter.Builder builder42 = builder15.setRequestInterceptor(requestInterceptor40);
        restAdapter0.requestInterceptor = requestInterceptor40;
        retrofit.RestAdapter.LogLevel logLevel44 = restAdapter0.getLogLevel();
        retrofit.RequestInterceptor requestInterceptor45 = restAdapter0.requestInterceptor;
        java.util.concurrent.Executor executor46 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        builder54.logLevel = logLevel56;
        boolean boolean58 = logLevel56.log();
        builder47.logLevel = logLevel56;
        retrofit.RequestInterceptor requestInterceptor60 = null;
        builder47.requestInterceptor = requestInterceptor60;
        java.util.concurrent.Executor executor62 = null;
        builder47.httpExecutor = executor62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.Server server66 = builder65.server;
        retrofit.RestAdapter.Log log67 = null;
        builder65.log = log67;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel70 = builder69.logLevel;
        retrofit.RestAdapter.Builder builder71 = builder65.setLogLevel(logLevel70);
        retrofit.client.Client.Provider provider72 = builder65.clientProvider;
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        builder65.log = log73;
        retrofit.RestAdapter.Builder builder75 = builder64.setLog(log73);
        retrofit.converter.Converter converter76 = null;
        builder64.converter = converter76;
        retrofit.RestAdapter.Log log78 = builder64.log;
        retrofit.RestAdapter.Builder builder79 = builder47.setLog(log78);
        retrofit.RestAdapter.Builder builder81 = builder47.setServer("Retrofit-");
        retrofit.RestAdapter.Log log82 = builder81.log;
        restAdapter0.log = log82;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(logLevel8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNull(executor22);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(logLevel44);
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertNull(executor46);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(log82);
    }

    @Test
    public void test06926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06926");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        restAdapter0.clientProvider = provider5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder33 = builder31.setServer("Retrofit-Idle");
        retrofit.Server server34 = builder33.server;
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.RequestInterceptor requestInterceptor38 = null;
        retrofit.converter.Converter converter39 = null;
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Log log42 = null;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.Server server44 = builder43.server;
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel48 = builder47.logLevel;
        retrofit.RestAdapter.Builder builder49 = builder43.setLogLevel(logLevel48);
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor38, converter39, profiler40, errorHandler41, log42, logLevel48);
        retrofit.RestAdapter restAdapter51 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log24, logLevel48);
        restAdapter0.log = log24;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder63 = builder61.setLog(log62);
        java.util.concurrent.Executor executor64 = builder61.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel65 = builder61.logLevel;
        restAdapter0.logLevel = logLevel65;
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler68 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(executor64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06927");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor4 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter0.logLevel;
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(logLevel5);
    }

    @Test
    public void test06928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06928");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider29 = builder22.clientProvider;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log30;
        retrofit.RestAdapter.Builder builder32 = builder21.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log30, logLevel33);
        builder0.logLevel = logLevel33;
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        retrofit.Profiler profiler37 = builder0.profiler;
        retrofit.RestAdapter.Builder builder39 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        builder40.logLevel = logLevel42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("Retrofit-Idle");
        retrofit.Server server53 = builder52.server;
        retrofit.client.Client.Provider provider54 = null;
        java.util.concurrent.Executor executor55 = null;
        java.util.concurrent.Executor executor56 = null;
        retrofit.RequestInterceptor requestInterceptor57 = null;
        retrofit.converter.Converter converter58 = null;
        retrofit.Profiler profiler59 = null;
        retrofit.ErrorHandler errorHandler60 = null;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel67);
        retrofit.client.Client.Provider provider69 = builder62.clientProvider;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        builder62.log = log70;
        retrofit.RestAdapter.Builder builder72 = builder61.setLog(log70);
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server53, provider54, executor55, executor56, requestInterceptor57, converter58, profiler59, errorHandler60, log70, logLevel73);
        builder40.logLevel = logLevel73;
        boolean boolean76 = logLevel73.log();
        boolean boolean77 = logLevel73.log();
        retrofit.RestAdapter.Builder builder78 = builder0.setLogLevel(logLevel73);
        retrofit.client.Client client79 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder80 = builder0.setClient(client79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(builder78);
    }

    @Test
    public void test06929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06929");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        java.util.concurrent.Executor executor4 = restAdapter0.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor5 = restAdapter0.requestInterceptor;
        java.util.concurrent.Executor executor6 = restAdapter0.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor7 = restAdapter0.requestInterceptor;
        retrofit.Server server8 = restAdapter0.server;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(requestInterceptor5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(requestInterceptor7);
        org.junit.Assert.assertNull(server8);
    }

    @Test
    public void test06930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06930");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.ErrorHandler errorHandler4 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        retrofit.Server server6 = restAdapter0.server;
        retrofit.Profiler profiler7 = null;
        restAdapter0.profiler = profiler7;
        retrofit.Profiler profiler9 = null;
        restAdapter0.profiler = profiler9;
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter0.getLogLevel();
        retrofit.Profiler profiler12 = restAdapter0.profiler;
        java.lang.Throwable throwable13 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable13, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(errorHandler4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertNull(logLevel11);
        org.junit.Assert.assertNull(profiler12);
    }

    @Test
    public void test06931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06931");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler3 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor4 = null;
        restAdapter0.httpExecutor = executor4;
        retrofit.ErrorHandler errorHandler6 = null;
        restAdapter0.errorHandler = errorHandler6;
        retrofit.RestAdapter.Log log8 = restAdapter0.log;
        retrofit.converter.Converter converter9 = restAdapter0.converter;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = builder10.callbackExecutor;
        retrofit.Profiler profiler12 = builder10.profiler;
        retrofit.RestAdapter.Builder builder14 = builder10.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.RestAdapter.Builder builder23 = builder21.setServer("Retrofit-Idle");
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Builder builder25 = builder14.setServer(server24);
        retrofit.RestAdapter restAdapter26 = builder25.build();
        retrofit.Profiler profiler27 = builder25.profiler;
        retrofit.RestAdapter.LogLevel logLevel28 = builder25.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder25.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        retrofit.RestAdapter.Builder builder37 = builder31.setLogLevel(logLevel36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        builder38.logLevel = logLevel40;
        boolean boolean42 = logLevel40.log();
        builder31.logLevel = logLevel40;
        retrofit.RestAdapter.LogLevel logLevel44 = builder31.logLevel;
        retrofit.Profiler profiler45 = builder31.profiler;
        java.util.concurrent.Executor executor46 = null;
        builder31.httpExecutor = executor46;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler49 = restAdapter48.new RestHandler();
        java.util.concurrent.Executor executor50 = restAdapter48.httpExecutor;
        java.util.concurrent.Executor executor51 = null;
        restAdapter48.callbackExecutor = executor51;
        retrofit.ErrorHandler errorHandler53 = null;
        restAdapter48.errorHandler = errorHandler53;
        retrofit.RestAdapter.LogLevel logLevel55 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter48.logLevel = logLevel55;
        retrofit.RestAdapter.LogLevel logLevel57 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter48.logLevel = logLevel57;
        boolean boolean59 = logLevel57.log();
        retrofit.RestAdapter.Builder builder60 = builder31.setLogLevel(logLevel57);
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        boolean boolean62 = logLevel61.log();
        retrofit.RestAdapter.Builder builder63 = builder30.setLogLevel(logLevel61);
        retrofit.RequestInterceptor requestInterceptor64 = builder30.requestInterceptor;
        restAdapter0.requestInterceptor = requestInterceptor64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor67 = builder66.callbackExecutor;
        retrofit.Profiler profiler68 = builder66.profiler;
        retrofit.RestAdapter.Builder builder70 = builder66.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("Retrofit-Idle");
        retrofit.Server server80 = builder79.server;
        retrofit.RestAdapter.Builder builder81 = builder70.setServer(server80);
        retrofit.RestAdapter restAdapter82 = builder81.build();
        retrofit.client.Client.Provider provider83 = null;
        restAdapter82.clientProvider = provider83;
        retrofit.RestAdapter.Log log85 = restAdapter82.log;
        retrofit.RestAdapter.LogLevel logLevel86 = restAdapter82.getLogLevel();
        retrofit.Profiler profiler87 = restAdapter82.profiler;
        retrofit.Server server88 = restAdapter82.server;
        java.util.concurrent.Executor executor89 = restAdapter82.callbackExecutor;
        restAdapter0.httpExecutor = executor89;
        java.util.concurrent.Executor executor91 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler92 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(log8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertTrue("'" + logLevel55 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel55.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(requestInterceptor64);
        org.junit.Assert.assertNull(executor67);
        org.junit.Assert.assertNull(profiler68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertNotNull(log85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler87);
        org.junit.Assert.assertNotNull(server88);
        org.junit.Assert.assertNotNull(executor89);
        org.junit.Assert.assertNull(executor91);
    }

    @Test
    public void test06932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06932");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.getLogLevel();
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor5 = null;
        restAdapter4.callbackExecutor = executor5;
        retrofit.converter.Converter converter7 = restAdapter4.converter;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        restAdapter4.log = log8;
        java.util.concurrent.Executor executor10 = null;
        restAdapter4.httpExecutor = executor10;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter4.requestInterceptor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel18);
        java.util.concurrent.Executor executor20 = builder19.callbackExecutor;
        java.util.concurrent.Executor executor21 = builder19.callbackExecutor;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        builder29.logLevel = logLevel31;
        boolean boolean33 = logLevel31.log();
        builder22.logLevel = logLevel31;
        retrofit.RestAdapter.LogLevel logLevel35 = builder22.logLevel;
        retrofit.Profiler profiler36 = builder22.profiler;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor38 = builder37.callbackExecutor;
        retrofit.Profiler profiler39 = builder37.profiler;
        retrofit.RestAdapter.Builder builder41 = builder37.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("Retrofit-Idle");
        retrofit.Server server51 = builder50.server;
        retrofit.RestAdapter.Builder builder52 = builder41.setServer(server51);
        retrofit.RestAdapter.Builder builder53 = builder22.setServer(server51);
        retrofit.RestAdapter.Builder builder54 = builder19.setServer(server51);
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.RequestInterceptor requestInterceptor58 = null;
        retrofit.converter.Converter converter59 = null;
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.Server server67 = builder66.server;
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = builder70.logLevel;
        retrofit.RestAdapter.Builder builder72 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider73 = builder66.clientProvider;
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        builder66.log = log74;
        retrofit.RestAdapter.Builder builder76 = builder62.setLog(log74);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.Server server78 = builder77.server;
        retrofit.RestAdapter.Log log79 = null;
        builder77.log = log79;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        retrofit.RestAdapter.Builder builder83 = builder77.setLogLevel(logLevel82);
        retrofit.RestAdapter.Builder builder85 = builder83.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter86 = builder85.build();
        retrofit.RestAdapter.LogLevel logLevel87 = restAdapter86.logLevel;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server51, provider55, executor56, executor57, requestInterceptor58, converter59, profiler60, errorHandler61, log74, logLevel87);
        restAdapter4.server = server51;
        restAdapter0.server = server51;
        retrofit.RestAdapter.RestHandler restHandler91 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNull(executor38);
        org.junit.Assert.assertNull(profiler39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(server78);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(restAdapter86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06933");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.Server server19 = builder18.server;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder36.server;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel51);
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel51);
        builder0.log = log27;
        retrofit.RestAdapter.Log log56 = builder0.log;
        retrofit.RestAdapter.Log log57 = builder0.log;
        retrofit.ErrorHandler errorHandler58 = builder0.errorHandler;
        retrofit.Profiler profiler59 = null;
        builder0.profiler = profiler59;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter61.new RestHandler();
        java.util.concurrent.Executor executor63 = restAdapter61.httpExecutor;
        java.util.concurrent.Executor executor64 = null;
        restAdapter61.callbackExecutor = executor64;
        retrofit.ErrorHandler errorHandler66 = null;
        restAdapter61.errorHandler = errorHandler66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter61.logLevel = logLevel68;
        retrofit.RestAdapter.LogLevel logLevel70 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter61.logLevel = logLevel70;
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel73 = restAdapter61.getLogLevel();
        boolean boolean74 = logLevel73.log();
        boolean boolean75 = logLevel73.log();
        retrofit.RestAdapter.Builder builder76 = builder0.setLogLevel(logLevel73);
        retrofit.RestAdapter.Log log77 = builder0.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNull(errorHandler58);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel70 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel70.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log77);
    }

    @Test
    public void test06934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06934");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.client.Client.Provider provider11 = builder4.clientProvider;
        retrofit.RestAdapter.Log log12 = retrofit.RestAdapter.Log.NONE;
        builder4.log = log12;
        retrofit.RestAdapter.Builder builder14 = builder0.setLog(log12);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.client.Client.Provider provider26 = builder19.clientProvider;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        builder19.log = log27;
        retrofit.RestAdapter.Builder builder29 = builder15.setLog(log27);
        retrofit.RestAdapter.Builder builder30 = builder0.setLog(log27);
        retrofit.ErrorHandler errorHandler31 = null;
        builder30.errorHandler = errorHandler31;
        builder30.ensureSaneDefaults();
        retrofit.Server server34 = builder30.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(log12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server34);
    }

    @Test
    public void test06935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06935");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        java.util.concurrent.Executor executor16 = builder4.callbackExecutor;
        retrofit.converter.Converter converter17 = builder4.converter;
        retrofit.RestAdapter.Builder builder19 = builder4.setServer("hi!");
        retrofit.RestAdapter.Log log20 = builder19.log;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(log20);
    }

    @Test
    public void test06936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06936");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = builder6.build();
        retrofit.RestAdapter.Log log10 = builder6.log;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        builder6.logLevel = logLevel12;
        boolean boolean14 = logLevel12.log();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06937");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        builder24.logLevel = logLevel26;
        boolean boolean28 = logLevel26.log();
        builder17.logLevel = logLevel26;
        retrofit.RestAdapter.LogLevel logLevel30 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder15.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log41 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder42 = builder40.setLog(log41);
        java.util.concurrent.Executor executor43 = builder40.httpExecutor;
        retrofit.RestAdapter restAdapter44 = builder40.build();
        java.util.concurrent.Executor executor45 = restAdapter44.httpExecutor;
        retrofit.converter.Converter converter46 = restAdapter44.converter;
        retrofit.RestAdapter.Builder builder47 = builder31.setConverter(converter46);
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor49 = builder48.callbackExecutor;
        retrofit.Profiler profiler50 = builder48.profiler;
        retrofit.RestAdapter.Builder builder52 = builder48.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.Server server62 = builder61.server;
        retrofit.RestAdapter.Builder builder63 = builder52.setServer(server62);
        retrofit.RestAdapter restAdapter64 = builder63.build();
        retrofit.client.Client.Provider provider65 = restAdapter64.clientProvider;
        builder47.clientProvider = provider65;
        retrofit.RequestInterceptor requestInterceptor67 = builder47.requestInterceptor;
        retrofit.RestAdapter.Log log68 = builder47.log;
        java.util.concurrent.Executor executor69 = builder47.callbackExecutor;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(executor43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(converter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(executor49);
        org.junit.Assert.assertNull(profiler50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(restAdapter64);
        org.junit.Assert.assertNotNull(provider65);
        org.junit.Assert.assertNotNull(requestInterceptor67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(executor69);
    }

    @Test
    public void test06938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06938");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.Server server32 = builder31.server;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel46);
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel46);
        restAdapter0.server = server14;
        retrofit.client.Client.Provider provider51 = null;
        restAdapter0.clientProvider = provider51;
        retrofit.client.Client.Provider provider53 = restAdapter0.clientProvider;
        retrofit.RequestInterceptor requestInterceptor54 = restAdapter0.requestInterceptor;
        retrofit.Server server55 = restAdapter0.server;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        java.util.concurrent.Executor executor58 = null;
        builder56.httpExecutor = executor58;
        retrofit.Server server60 = builder56.server;
        retrofit.RestAdapter.LogLevel logLevel61 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel67);
        java.util.concurrent.Executor executor69 = builder68.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor70 = builder68.requestInterceptor;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter80 = builder79.build();
        retrofit.Profiler profiler81 = null;
        builder79.profiler = profiler81;
        retrofit.Profiler profiler83 = null;
        builder79.profiler = profiler83;
        retrofit.converter.Converter converter85 = builder79.converter;
        retrofit.RestAdapter.Builder builder86 = builder68.setConverter(converter85);
        builder56.converter = converter85;
        restAdapter0.converter = converter85;
        retrofit.RestAdapter.RestHandler restHandler89 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler90 = restAdapter0.new RestHandler();
        retrofit.client.Request request91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request92 = restAdapter0.logAndReplaceRequest(request91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNull(requestInterceptor54);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNull(requestInterceptor70);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(restAdapter80);
        org.junit.Assert.assertNotNull(converter85);
        org.junit.Assert.assertNotNull(builder86);
    }

    @Test
    public void test06939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06939");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.RestAdapter.Log log3 = restAdapter0.log;
        retrofit.converter.Converter converter4 = restAdapter0.converter;
        retrofit.RestAdapter.Log log5 = restAdapter0.log;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.Server server7 = builder6.server;
        retrofit.RestAdapter.Log log8 = null;
        builder6.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = builder10.logLevel;
        retrofit.RestAdapter.Builder builder12 = builder6.setLogLevel(logLevel11);
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder6.requestInterceptor = requestInterceptor13;
        retrofit.RestAdapter.Log log15 = builder6.log;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        builder23.logLevel = logLevel25;
        boolean boolean27 = logLevel25.log();
        builder16.logLevel = logLevel25;
        retrofit.RestAdapter.Builder builder29 = builder6.setLogLevel(logLevel25);
        retrofit.Profiler profiler30 = builder29.profiler;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor32 = builder31.callbackExecutor;
        retrofit.Profiler profiler33 = builder31.profiler;
        retrofit.RestAdapter.Builder builder35 = builder31.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("Retrofit-Idle");
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Builder builder46 = builder35.setServer(server45);
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.RequestInterceptor requestInterceptor50 = null;
        retrofit.converter.Converter converter51 = null;
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor55 = null;
        restAdapter54.callbackExecutor = executor55;
        retrofit.converter.Converter converter57 = restAdapter54.converter;
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        restAdapter54.log = log58;
        retrofit.RestAdapter restAdapter60 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor61 = null;
        restAdapter60.httpExecutor = executor61;
        java.util.concurrent.Executor executor63 = null;
        restAdapter60.httpExecutor = executor63;
        retrofit.RestAdapter.RestHandler restHandler65 = restAdapter60.new RestHandler();
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.Server server67 = builder66.server;
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = builder70.logLevel;
        retrofit.RestAdapter.Builder builder72 = builder66.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder74 = builder72.setServer("Retrofit-Idle");
        retrofit.Server server75 = builder74.server;
        retrofit.client.Client.Provider provider76 = null;
        java.util.concurrent.Executor executor77 = null;
        java.util.concurrent.Executor executor78 = null;
        retrofit.RequestInterceptor requestInterceptor79 = null;
        retrofit.converter.Converter converter80 = null;
        retrofit.Profiler profiler81 = null;
        retrofit.ErrorHandler errorHandler82 = null;
        retrofit.RestAdapter.Log log83 = null;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.Server server85 = builder84.server;
        retrofit.RestAdapter.Log log86 = null;
        builder84.log = log86;
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel89 = builder88.logLevel;
        retrofit.RestAdapter.Builder builder90 = builder84.setLogLevel(logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server75, provider76, executor77, executor78, requestInterceptor79, converter80, profiler81, errorHandler82, log83, logLevel89);
        boolean boolean92 = logLevel89.log();
        restAdapter60.logLevel = logLevel89;
        retrofit.RestAdapter restAdapter94 = new retrofit.RestAdapter(server45, provider47, executor48, executor49, requestInterceptor50, converter51, profiler52, errorHandler53, log58, logLevel89);
        builder29.log = log58;
        restAdapter0.log = log58;
        org.junit.Assert.assertNull(log3);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNull(executor32);
        org.junit.Assert.assertNull(profiler33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(server75);
        org.junit.Assert.assertNull(server85);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test06940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06940");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RestAdapter.LogLevel logLevel13 = builder0.logLevel;
        java.util.concurrent.Executor executor14 = builder0.callbackExecutor;
        retrofit.Server server15 = builder0.server;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.Server server25 = builder24.server;
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Log log33 = null;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        builder34.logLevel = logLevel36;
        boolean boolean38 = logLevel36.log();
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter(server25, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log33, logLevel36);
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.Server server52 = builder51.server;
        retrofit.RestAdapter.Log log53 = null;
        builder51.log = log53;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel56 = builder55.logLevel;
        retrofit.RestAdapter.Builder builder57 = builder51.setLogLevel(logLevel56);
        retrofit.client.Client.Provider provider58 = builder51.clientProvider;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        builder51.log = log59;
        retrofit.RestAdapter.Builder builder61 = builder47.setLog(log59);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.Server server67 = builder66.server;
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = builder70.logLevel;
        retrofit.RestAdapter.Builder builder72 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider73 = builder66.clientProvider;
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        builder66.log = log74;
        retrofit.RestAdapter.Builder builder76 = builder62.setLog(log74);
        retrofit.RestAdapter.Builder builder77 = builder47.setLog(log74);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.Server server79 = builder78.server;
        java.util.concurrent.Executor executor80 = null;
        builder78.httpExecutor = executor80;
        retrofit.Server server82 = builder78.server;
        retrofit.RestAdapter.LogLevel logLevel83 = builder78.logLevel;
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server25, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log74, logLevel83);
        retrofit.RestAdapter.Builder builder85 = builder0.setServer(server25);
        retrofit.RequestInterceptor requestInterceptor86 = builder0.requestInterceptor;
        retrofit.Profiler profiler87 = builder0.profiler;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertNull(server52);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertNull(server82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNull(requestInterceptor86);
        org.junit.Assert.assertNull(profiler87);
    }

    @Test
    public void test06941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06941");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.client.Client.Provider provider2 = null;
        builder0.clientProvider = provider2;
        java.util.concurrent.Executor executor4 = builder0.callbackExecutor;
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter5.new RestHandler();
        java.util.concurrent.Executor executor7 = restAdapter5.httpExecutor;
        java.util.concurrent.Executor executor8 = null;
        restAdapter5.callbackExecutor = executor8;
        retrofit.client.Client.Provider provider10 = null;
        restAdapter5.clientProvider = provider10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("Retrofit-Idle");
        retrofit.Server server21 = builder20.server;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder36.setServer("Retrofit-Idle");
        retrofit.Server server39 = builder38.server;
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.RequestInterceptor requestInterceptor43 = null;
        retrofit.converter.Converter converter44 = null;
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Log log47 = null;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder48.setLogLevel(logLevel53);
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor43, converter44, profiler45, errorHandler46, log47, logLevel53);
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel53);
        restAdapter5.log = log29;
        log29.log("Retrofit-Idle");
        log29.log("Retrofit-");
        builder0.log = log29;
        retrofit.Profiler profiler63 = null;
        builder0.profiler = profiler63;
        java.util.concurrent.Executor executor65 = builder0.httpExecutor;
        retrofit.Profiler profiler66 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder67 = builder0.setProfiler(profiler66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(executor65);
    }

    @Test
    public void test06942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06942");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RequestInterceptor requestInterceptor16 = builder15.requestInterceptor;
        retrofit.converter.Converter converter17 = null;
        builder15.converter = converter17;
        retrofit.Profiler profiler19 = builder15.profiler;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNull(profiler19);
    }

    @Test
    public void test06943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06943");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        java.util.concurrent.Executor executor12 = null;
        builder8.httpExecutor = executor12;
        retrofit.RestAdapter.Log log14 = builder8.log;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Log log17 = null;
        builder15.log = log17;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = builder19.logLevel;
        retrofit.RestAdapter.Builder builder21 = builder15.setLogLevel(logLevel20);
        retrofit.client.Client.Provider provider22 = builder15.clientProvider;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor26 = builder25.callbackExecutor;
        retrofit.Profiler profiler27 = builder25.profiler;
        retrofit.RestAdapter.Builder builder29 = builder25.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter30 = builder29.converter;
        retrofit.RestAdapter.Builder builder32 = builder29.setServer("Retrofit-Idle");
        retrofit.Server server33 = builder29.server;
        builder15.server = server33;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter35.new RestHandler();
        java.util.concurrent.Executor executor37 = restAdapter35.httpExecutor;
        java.util.concurrent.Executor executor38 = null;
        restAdapter35.callbackExecutor = executor38;
        retrofit.ErrorHandler errorHandler40 = null;
        restAdapter35.errorHandler = errorHandler40;
        retrofit.RestAdapter.LogLevel logLevel42 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter35.logLevel = logLevel42;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter35.logLevel = logLevel44;
        boolean boolean46 = logLevel44.log();
        retrofit.RestAdapter.Builder builder47 = builder15.setLogLevel(logLevel44);
        boolean boolean48 = logLevel44.log();
        retrofit.RestAdapter.Builder builder49 = builder8.setLogLevel(logLevel44);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test06944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06944");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.Server server2 = builder1.server;
        retrofit.RestAdapter.Log log3 = null;
        builder1.log = log3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder7 = builder1.setLogLevel(logLevel6);
        retrofit.client.Client.Provider provider8 = builder1.clientProvider;
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        builder1.log = log9;
        retrofit.RestAdapter.Builder builder11 = builder0.setLog(log9);
        retrofit.RestAdapter.Log log12 = builder0.log;
        builder0.ensureSaneDefaults();
        retrofit.client.Client client14 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder15 = builder0.setClient(client14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server2);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(log12);
    }

    @Test
    public void test06945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06945");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        restAdapter0.log = log4;
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter0.logLevel = logLevel6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.Server server9 = builder8.server;
        retrofit.RestAdapter.Log log10 = null;
        builder8.log = log10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.RestAdapter.Builder builder14 = builder8.setLogLevel(logLevel13);
        retrofit.RequestInterceptor requestInterceptor15 = null;
        builder8.requestInterceptor = requestInterceptor15;
        retrofit.RestAdapter.Log log17 = builder8.log;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        builder25.logLevel = logLevel27;
        boolean boolean29 = logLevel27.log();
        builder18.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder31 = builder8.setLogLevel(logLevel27);
        retrofit.Profiler profiler32 = builder31.profiler;
        builder31.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder44 = builder42.setLog(log43);
        java.util.concurrent.Executor executor45 = builder42.httpExecutor;
        retrofit.RestAdapter.Builder builder47 = builder42.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Log log51 = null;
        builder49.log = log51;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel54 = builder53.logLevel;
        retrofit.RestAdapter.Builder builder55 = builder49.setLogLevel(logLevel54);
        retrofit.client.Client.Provider provider56 = builder49.clientProvider;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        builder49.log = log57;
        retrofit.RestAdapter.Builder builder59 = builder48.setLog(log57);
        retrofit.Profiler profiler60 = builder48.profiler;
        java.util.concurrent.Executor executor61 = null;
        builder48.callbackExecutor = executor61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        retrofit.client.Client.Provider provider70 = builder63.clientProvider;
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        builder63.log = log71;
        builder48.log = log71;
        retrofit.RestAdapter.Builder builder74 = builder47.setLog(log71);
        retrofit.RestAdapter.Builder builder75 = builder31.setLog(log71);
        retrofit.RestAdapter.LogLevel logLevel76 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.Server server78 = builder77.server;
        retrofit.RestAdapter.Log log79 = null;
        builder77.log = log79;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        retrofit.RestAdapter.Builder builder83 = builder77.setLogLevel(logLevel82);
        retrofit.RestAdapter.Builder builder85 = builder83.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter86 = builder85.build();
        retrofit.RestAdapter.LogLevel logLevel87 = retrofit.RestAdapter.LogLevel.NONE;
        builder85.logLevel = logLevel87;
        retrofit.converter.Converter converter89 = builder85.converter;
        retrofit.RestAdapter.Builder builder90 = builder31.setConverter(converter89);
        retrofit.ErrorHandler errorHandler91 = builder31.errorHandler;
        retrofit.client.Client.Provider provider92 = builder31.clientProvider;
        java.util.concurrent.Executor executor93 = builder31.callbackExecutor;
        restAdapter0.callbackExecutor = executor93;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNull(executor45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNull(profiler60);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server78);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(restAdapter86);
        org.junit.Assert.assertTrue("'" + logLevel87 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel87.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(converter89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(errorHandler91);
        org.junit.Assert.assertNotNull(provider92);
        org.junit.Assert.assertNotNull(executor93);
    }

    @Test
    public void test06946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06946");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        retrofit.client.Client.Provider provider3 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler13 = builder12.errorHandler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor15 = builder14.callbackExecutor;
        retrofit.Profiler profiler16 = builder14.profiler;
        retrofit.RestAdapter.Builder builder18 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Log log21 = null;
        builder19.log = log21;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = builder23.logLevel;
        retrofit.RestAdapter.Builder builder25 = builder19.setLogLevel(logLevel24);
        retrofit.RestAdapter.Builder builder27 = builder25.setServer("Retrofit-Idle");
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Builder builder29 = builder18.setServer(server28);
        retrofit.RestAdapter restAdapter30 = builder29.build();
        java.util.concurrent.Executor executor31 = restAdapter30.callbackExecutor;
        builder12.callbackExecutor = executor31;
        restAdapter0.callbackExecutor = executor31;
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter0.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor35 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter0.logLevel;
        retrofit.RestAdapter.RestHandler restHandler37 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor38 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertNull(requestInterceptor35);
        org.junit.Assert.assertNull(logLevel36);
        org.junit.Assert.assertNull(executor38);
    }

    @Test
    public void test06947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06947");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = builder8.build();
        retrofit.RestAdapter.LogLevel logLevel10 = restAdapter9.logLevel;
        retrofit.ErrorHandler errorHandler11 = null;
        restAdapter9.errorHandler = errorHandler11;
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter9.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter9.log;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log14);
    }

    @Test
    public void test06948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06948");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter.Log log16 = builder15.log;
        java.util.concurrent.Executor executor17 = builder15.httpExecutor;
        java.util.concurrent.Executor executor18 = builder15.httpExecutor;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        java.util.concurrent.Executor executor21 = null;
        builder19.httpExecutor = executor21;
        retrofit.Server server23 = builder19.server;
        retrofit.RestAdapter.LogLevel logLevel24 = builder19.logLevel;
        retrofit.client.Client.Provider provider25 = null;
        builder19.clientProvider = provider25;
        retrofit.Server server27 = builder19.server;
        retrofit.RequestInterceptor requestInterceptor28 = builder19.requestInterceptor;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor30 = null;
        restAdapter29.callbackExecutor = executor30;
        retrofit.RestAdapter.Log log32 = restAdapter29.log;
        retrofit.converter.Converter converter33 = restAdapter29.converter;
        java.util.concurrent.Executor executor34 = null;
        restAdapter29.callbackExecutor = executor34;
        java.util.concurrent.Executor executor36 = null;
        restAdapter29.httpExecutor = executor36;
        retrofit.RestAdapter.RestHandler restHandler38 = restAdapter29.new RestHandler();
        retrofit.converter.Converter converter39 = restAdapter29.converter;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("Retrofit-Idle");
        retrofit.Server server49 = builder48.server;
        retrofit.Profiler profiler50 = null;
        builder48.profiler = profiler50;
        retrofit.Profiler profiler52 = null;
        builder48.profiler = profiler52;
        retrofit.RestAdapter restAdapter54 = builder48.build();
        retrofit.ErrorHandler errorHandler55 = builder48.errorHandler;
        restAdapter29.errorHandler = errorHandler55;
        builder19.errorHandler = errorHandler55;
        retrofit.RestAdapter.Builder builder58 = builder15.setErrorHandler(errorHandler55);
        retrofit.converter.Converter converter59 = builder15.converter;
        retrofit.converter.Converter converter60 = builder15.converter;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(log16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertNull(requestInterceptor28);
        org.junit.Assert.assertNull(log32);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(restAdapter54);
        org.junit.Assert.assertNotNull(errorHandler55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertNull(converter60);
    }

    @Test
    public void test06949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06949");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.converter.Converter converter5 = builder4.converter;
        retrofit.RestAdapter.Builder builder7 = builder4.setServer("Retrofit-Idle");
        retrofit.Server server8 = builder4.server;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter18 = builder17.build();
        retrofit.Profiler profiler19 = null;
        builder17.profiler = profiler19;
        retrofit.RestAdapter restAdapter21 = builder17.build();
        retrofit.RestAdapter.LogLevel logLevel22 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder4.setLogLevel(logLevel22);
        java.lang.Class<?> wildcardClass24 = logLevel22.getClass();
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(restAdapter18);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test06950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06950");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.client.Client.Provider provider17 = null;
        restAdapter16.clientProvider = provider17;
        retrofit.RestAdapter.Log log19 = restAdapter16.log;
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter16.getLogLevel();
        retrofit.Profiler profiler21 = restAdapter16.profiler;
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter16.new RestHandler();
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor24 = null;
        restAdapter23.httpExecutor = executor24;
        java.util.concurrent.Executor executor26 = null;
        restAdapter23.httpExecutor = executor26;
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter23.new RestHandler();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.Server server38 = builder37.server;
        retrofit.client.Client.Provider provider39 = null;
        java.util.concurrent.Executor executor40 = null;
        java.util.concurrent.Executor executor41 = null;
        retrofit.RequestInterceptor requestInterceptor42 = null;
        retrofit.converter.Converter converter43 = null;
        retrofit.Profiler profiler44 = null;
        retrofit.ErrorHandler errorHandler45 = null;
        retrofit.RestAdapter.Log log46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server38, provider39, executor40, executor41, requestInterceptor42, converter43, profiler44, errorHandler45, log46, logLevel52);
        boolean boolean55 = logLevel52.log();
        restAdapter23.logLevel = logLevel52;
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter23.logLevel;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor59 = builder58.callbackExecutor;
        retrofit.Profiler profiler60 = builder58.profiler;
        retrofit.RestAdapter.Builder builder62 = builder58.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.Server server64 = builder63.server;
        retrofit.RestAdapter.Log log65 = null;
        builder63.log = log65;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel68 = builder67.logLevel;
        retrofit.RestAdapter.Builder builder69 = builder63.setLogLevel(logLevel68);
        retrofit.RestAdapter.Builder builder71 = builder69.setServer("Retrofit-Idle");
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Builder builder73 = builder62.setServer(server72);
        retrofit.RestAdapter restAdapter74 = builder73.build();
        retrofit.client.Client.Provider provider75 = null;
        restAdapter74.clientProvider = provider75;
        retrofit.RestAdapter.Log log77 = restAdapter74.log;
        retrofit.RestAdapter.LogLevel logLevel78 = restAdapter74.getLogLevel();
        retrofit.ErrorHandler errorHandler79 = null;
        restAdapter74.errorHandler = errorHandler79;
        java.util.concurrent.Executor executor81 = restAdapter74.httpExecutor;
        restAdapter23.callbackExecutor = executor81;
        restAdapter16.httpExecutor = executor81;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler21);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor59);
        org.junit.Assert.assertNull(profiler60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(server64);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(restAdapter74);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor81);
    }

    @Test
    public void test06951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06951");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel6 = null;
        restAdapter0.logLevel = logLevel6;
        java.util.concurrent.Executor executor8 = null;
        restAdapter0.httpExecutor = executor8;
        retrofit.converter.Converter converter10 = null;
        restAdapter0.converter = converter10;
        retrofit.Profiler profiler12 = null;
        restAdapter0.profiler = profiler12;
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter0.requestInterceptor;
        retrofit.Server server15 = restAdapter0.server;
        retrofit.Server server16 = restAdapter0.server;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        java.util.concurrent.Executor executor19 = null;
        builder17.httpExecutor = executor19;
        retrofit.Server server21 = builder17.server;
        retrofit.RestAdapter.LogLevel logLevel22 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder17.setServer("hi!");
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        builder32.logLevel = logLevel34;
        boolean boolean36 = logLevel34.log();
        builder25.logLevel = logLevel34;
        java.util.concurrent.Executor executor38 = null;
        builder25.httpExecutor = executor38;
        retrofit.RestAdapter restAdapter40 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor41 = null;
        restAdapter40.callbackExecutor = executor41;
        retrofit.RestAdapter.Log log43 = restAdapter40.log;
        retrofit.converter.Converter converter44 = restAdapter40.converter;
        retrofit.RestAdapter.RestHandler restHandler45 = restAdapter40.new RestHandler();
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        restAdapter40.logLevel = logLevel47;
        builder25.logLevel = logLevel47;
        retrofit.RestAdapter.LogLevel logLevel50 = builder25.logLevel;
        retrofit.RequestInterceptor requestInterceptor51 = builder25.requestInterceptor;
        retrofit.converter.Converter converter52 = builder25.converter;
        retrofit.RestAdapter.LogLevel logLevel53 = builder25.logLevel;
        boolean boolean54 = logLevel53.log();
        boolean boolean55 = logLevel53.log();
        retrofit.RestAdapter.Builder builder56 = builder17.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = builder57.server;
        java.util.concurrent.Executor executor59 = null;
        builder57.httpExecutor = executor59;
        retrofit.Server server61 = builder57.server;
        retrofit.converter.Converter converter62 = null;
        builder57.converter = converter62;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor65 = null;
        restAdapter64.callbackExecutor = executor65;
        retrofit.converter.Converter converter67 = restAdapter64.converter;
        java.util.concurrent.Executor executor68 = restAdapter64.httpExecutor;
        retrofit.converter.Converter converter69 = restAdapter64.converter;
        retrofit.RestAdapter.LogLevel logLevel70 = restAdapter64.logLevel;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter.Builder builder79 = builder77.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider80 = null;
        builder77.clientProvider = provider80;
        retrofit.Server server82 = builder77.server;
        restAdapter64.server = server82;
        retrofit.RestAdapter.Builder builder84 = builder57.setServer(server82);
        builder17.server = server82;
        retrofit.RestAdapter restAdapter86 = builder17.build();
        java.util.concurrent.Executor executor87 = restAdapter86.httpExecutor;
        restAdapter0.httpExecutor = executor87;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(log43);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(requestInterceptor51);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertNull(converter67);
        org.junit.Assert.assertNull(executor68);
        org.junit.Assert.assertNull(converter69);
        org.junit.Assert.assertNull(logLevel70);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(restAdapter86);
        org.junit.Assert.assertNotNull(executor87);
    }

    @Test
    public void test06952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06952");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.Profiler profiler5 = null;
        builder4.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder4.clientProvider;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(provider7);
    }

    @Test
    public void test06953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06953");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        java.util.concurrent.Executor executor8 = builder6.callbackExecutor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        retrofit.RestAdapter.Builder builder17 = builder15.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log18 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder19 = builder17.setLog(log18);
        java.util.concurrent.Executor executor20 = builder17.httpExecutor;
        retrofit.RestAdapter restAdapter21 = builder17.build();
        java.util.concurrent.Executor executor22 = restAdapter21.httpExecutor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log32 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder33 = builder31.setLog(log32);
        java.util.concurrent.Executor executor34 = builder31.httpExecutor;
        retrofit.RestAdapter restAdapter35 = builder31.build();
        java.util.concurrent.Executor executor36 = restAdapter35.httpExecutor;
        retrofit.RestAdapter.Builder builder37 = builder6.setExecutors(executor22, executor36);
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Builder builder49 = builder46.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler51 = restAdapter50.new RestHandler();
        java.util.concurrent.Executor executor52 = restAdapter50.httpExecutor;
        java.util.concurrent.Executor executor53 = null;
        restAdapter50.callbackExecutor = executor53;
        retrofit.client.Client.Provider provider55 = null;
        restAdapter50.clientProvider = provider55;
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter50.logLevel;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel60 = builder59.logLevel;
        builder58.logLevel = logLevel60;
        java.util.concurrent.Executor executor62 = null;
        builder58.callbackExecutor = executor62;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor65 = null;
        restAdapter64.callbackExecutor = executor65;
        retrofit.converter.Converter converter67 = restAdapter64.converter;
        retrofit.RestAdapter.Log log68 = retrofit.RestAdapter.Log.NONE;
        restAdapter64.log = log68;
        builder58.log = log68;
        restAdapter50.log = log68;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.Server server73 = builder72.server;
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel77 = builder76.logLevel;
        retrofit.RestAdapter.Builder builder78 = builder72.setLogLevel(logLevel77);
        retrofit.RestAdapter.Builder builder80 = builder78.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter81 = builder80.build();
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter81.logLevel;
        retrofit.RequestInterceptor requestInterceptor83 = restAdapter81.requestInterceptor;
        restAdapter50.requestInterceptor = requestInterceptor83;
        builder46.requestInterceptor = requestInterceptor83;
        retrofit.RestAdapter.Builder builder86 = builder6.setRequestInterceptor(requestInterceptor83);
        retrofit.converter.Converter converter87 = builder86.converter;
        java.util.concurrent.Executor executor88 = builder86.httpExecutor;
        retrofit.Server server89 = builder86.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(log18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNotNull(restAdapter21);
        org.junit.Assert.assertNotNull(executor22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(log32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNotNull(restAdapter35);
        org.junit.Assert.assertNotNull(executor36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNull(logLevel57);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter67);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(restAdapter81);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(requestInterceptor83);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(converter87);
        org.junit.Assert.assertNotNull(executor88);
        org.junit.Assert.assertNull(server89);
    }

    @Test
    public void test06954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06954");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.client.Client.Provider provider7 = restAdapter0.clientProvider;
        retrofit.converter.Converter converter8 = restAdapter0.converter;
        retrofit.RestAdapter.Log log9 = restAdapter0.log;
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler11 = null;
        restAdapter0.profiler = profiler11;
        java.util.concurrent.Executor executor13 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(executor13);
    }

    @Test
    public void test06955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06955");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel4 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.Server server24 = builder23.server;
        retrofit.RestAdapter.Log log25 = null;
        builder23.log = log25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel28 = builder27.logLevel;
        retrofit.RestAdapter.Builder builder29 = builder23.setLogLevel(logLevel28);
        retrofit.RestAdapter.Builder builder31 = builder29.setServer("Retrofit-Idle");
        retrofit.Server server32 = builder31.server;
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.RequestInterceptor requestInterceptor36 = null;
        retrofit.converter.Converter converter37 = null;
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Log log40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor36, converter37, profiler38, errorHandler39, log40, logLevel46);
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel46);
        restAdapter0.server = server14;
        retrofit.client.Client.Provider provider51 = null;
        restAdapter0.clientProvider = provider51;
        retrofit.RestAdapter.Log log53 = restAdapter0.log;
        retrofit.Server server54 = restAdapter0.server;
        java.util.concurrent.Executor executor55 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Log log58 = null;
        builder56.log = log58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel61 = builder60.logLevel;
        retrofit.RestAdapter.Builder builder62 = builder56.setLogLevel(logLevel61);
        retrofit.RestAdapter.Builder builder64 = builder62.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler65 = builder64.errorHandler;
        retrofit.RestAdapter restAdapter66 = builder64.build();
        java.util.concurrent.Executor executor67 = null;
        restAdapter66.httpExecutor = executor67;
        retrofit.RestAdapter.RestHandler restHandler69 = restAdapter66.new RestHandler();
        retrofit.client.Client.Provider provider70 = null;
        restAdapter66.clientProvider = provider70;
        retrofit.Profiler profiler72 = null;
        restAdapter66.profiler = profiler72;
        java.util.concurrent.Executor executor74 = restAdapter66.httpExecutor;
        java.util.concurrent.Executor executor75 = restAdapter66.callbackExecutor;
        java.util.concurrent.Executor executor76 = restAdapter66.callbackExecutor;
        restAdapter0.callbackExecutor = executor76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.Server server79 = builder78.server;
        retrofit.RestAdapter.Log log80 = null;
        builder78.log = log80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = builder82.logLevel;
        retrofit.RestAdapter.Builder builder84 = builder78.setLogLevel(logLevel83);
        retrofit.RestAdapter.Builder builder86 = builder84.setServer("Retrofit-Idle");
        retrofit.Server server87 = builder86.server;
        retrofit.Profiler profiler88 = null;
        builder86.profiler = profiler88;
        retrofit.client.Client.Provider provider90 = null;
        builder86.clientProvider = provider90;
        retrofit.RestAdapter restAdapter92 = builder86.build();
        java.util.concurrent.Executor executor93 = builder86.callbackExecutor;
        java.util.concurrent.Executor executor94 = builder86.callbackExecutor;
        restAdapter0.httpExecutor = executor94;
        retrofit.RestAdapter.RestHandler restHandler96 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(log53);
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNull(executor55);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(errorHandler65);
        org.junit.Assert.assertNotNull(restAdapter66);
        org.junit.Assert.assertNull(executor74);
        org.junit.Assert.assertNotNull(executor75);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(server87);
        org.junit.Assert.assertNotNull(restAdapter92);
        org.junit.Assert.assertNotNull(executor93);
        org.junit.Assert.assertNotNull(executor94);
    }

    @Test
    public void test06956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06956");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.Server server2 = builder1.server;
        retrofit.RestAdapter.Log log3 = null;
        builder1.log = log3;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel6 = builder5.logLevel;
        retrofit.RestAdapter.Builder builder7 = builder1.setLogLevel(logLevel6);
        retrofit.client.Client.Provider provider8 = builder1.clientProvider;
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        builder1.log = log9;
        retrofit.RestAdapter.Builder builder11 = builder0.setLog(log9);
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        builder20.logLevel = logLevel22;
        boolean boolean24 = logLevel22.log();
        builder13.logLevel = logLevel22;
        retrofit.RequestInterceptor requestInterceptor26 = null;
        builder13.requestInterceptor = requestInterceptor26;
        java.util.concurrent.Executor executor28 = null;
        builder13.httpExecutor = executor28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel36 = builder35.logLevel;
        retrofit.RestAdapter.Builder builder37 = builder31.setLogLevel(logLevel36);
        retrofit.client.Client.Provider provider38 = builder31.clientProvider;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        builder31.log = log39;
        retrofit.RestAdapter.Builder builder41 = builder30.setLog(log39);
        retrofit.converter.Converter converter42 = null;
        builder30.converter = converter42;
        retrofit.RestAdapter.Log log44 = builder30.log;
        retrofit.RestAdapter.Builder builder45 = builder13.setLog(log44);
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder0.setLogLevel(logLevel46);
        retrofit.Profiler profiler48 = builder0.profiler;
        org.junit.Assert.assertNull(server2);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(profiler48);
    }

    @Test
    public void test06957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06957");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter4 = null;
        restAdapter0.converter = converter4;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter7.requestInterceptor;
        java.util.concurrent.Executor executor9 = restAdapter7.callbackExecutor;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = builder10.callbackExecutor;
        retrofit.Profiler profiler12 = builder10.profiler;
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.converter.Converter converter24 = restAdapter23.converter;
        builder10.converter = converter24;
        restAdapter7.converter = converter24;
        restAdapter0.converter = converter24;
        retrofit.RestAdapter.RestHandler restHandler28 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler29 = restAdapter0.errorHandler;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertNotNull(converter24);
        org.junit.Assert.assertNull(errorHandler29);
    }

    @Test
    public void test06958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06958");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RequestInterceptor requestInterceptor7 = null;
        builder0.requestInterceptor = requestInterceptor7;
        retrofit.RestAdapter.Log log9 = builder0.log;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        builder17.logLevel = logLevel19;
        boolean boolean21 = logLevel19.log();
        builder10.logLevel = logLevel19;
        retrofit.RestAdapter.Builder builder23 = builder0.setLogLevel(logLevel19);
        retrofit.Profiler profiler24 = builder23.profiler;
        retrofit.client.Client.Provider provider25 = builder23.clientProvider;
        java.util.concurrent.Executor executor26 = builder23.httpExecutor;
        retrofit.RestAdapter.Log log27 = builder23.log;
        retrofit.RestAdapter.Builder builder29 = builder23.setServer("Retrofit-");
        retrofit.client.Client client30 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder31 = builder29.setClient(client30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(log27);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test06959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06959");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        retrofit.Profiler profiler11 = builder10.profiler;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.RestAdapter.Builder builder20 = builder18.setServer("Retrofit-Idle");
        retrofit.Server server21 = builder20.server;
        retrofit.client.Client.Provider provider22 = null;
        java.util.concurrent.Executor executor23 = null;
        java.util.concurrent.Executor executor24 = null;
        retrofit.RequestInterceptor requestInterceptor25 = null;
        retrofit.converter.Converter converter26 = null;
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Log log29 = null;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server21, provider22, executor23, executor24, requestInterceptor25, converter26, profiler27, errorHandler28, log29, logLevel35);
        retrofit.RestAdapter.Builder builder38 = builder10.setServer(server21);
        retrofit.converter.Converter converter39 = builder38.converter;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("Retrofit-Idle");
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Builder builder50 = builder38.setServer(server49);
        retrofit.RestAdapter.Log log51 = builder50.log;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter61 = builder60.build();
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.NONE;
        builder60.logLevel = logLevel62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter73 = builder72.build();
        retrofit.RestAdapter.LogLevel logLevel74 = restAdapter73.logLevel;
        retrofit.ErrorHandler errorHandler75 = null;
        restAdapter73.errorHandler = errorHandler75;
        retrofit.Server server77 = restAdapter73.server;
        retrofit.RestAdapter.Builder builder78 = builder60.setServer(server77);
        retrofit.client.Client.Provider provider79 = builder60.clientProvider;
        retrofit.RestAdapter.Builder builder80 = builder50.setClient(provider79);
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(restAdapter61);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(restAdapter73);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(provider79);
        org.junit.Assert.assertNotNull(builder80);
    }

    @Test
    public void test06960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06960");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        builder17.logLevel = logLevel19;
        boolean boolean21 = logLevel19.log();
        builder10.logLevel = logLevel19;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        builder10.requestInterceptor = requestInterceptor23;
        retrofit.converter.Converter converter25 = null;
        builder10.converter = converter25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor28 = builder27.callbackExecutor;
        retrofit.Profiler profiler29 = builder27.profiler;
        retrofit.RestAdapter.Builder builder31 = builder27.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("Retrofit-Idle");
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Builder builder42 = builder31.setServer(server41);
        retrofit.RestAdapter restAdapter43 = builder42.build();
        java.util.concurrent.Executor executor44 = restAdapter43.callbackExecutor;
        builder10.httpExecutor = executor44;
        builder8.callbackExecutor = executor44;
        retrofit.Server server47 = builder8.server;
        retrofit.client.Client client48 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder49 = builder8.setClient(client48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNotNull(server47);
    }

    @Test
    public void test06961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06961");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        restAdapter0.clientProvider = provider9;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        retrofit.client.Client.Provider provider12 = restAdapter0.clientProvider;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel18);
        retrofit.RequestInterceptor requestInterceptor20 = null;
        builder13.requestInterceptor = requestInterceptor20;
        retrofit.RestAdapter.Log log22 = builder13.log;
        retrofit.RequestInterceptor requestInterceptor23 = builder13.requestInterceptor;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        java.util.concurrent.Executor executor26 = null;
        builder24.httpExecutor = executor26;
        retrofit.Server server28 = builder24.server;
        retrofit.RestAdapter.LogLevel logLevel29 = builder24.logLevel;
        retrofit.ErrorHandler errorHandler30 = builder24.errorHandler;
        retrofit.RestAdapter.Builder builder32 = builder24.setServer("Retrofit-Idle");
        retrofit.Server server33 = builder32.server;
        builder13.server = server33;
        restAdapter0.server = server33;
        retrofit.client.Client.Provider provider36 = restAdapter0.clientProvider;
        retrofit.client.Client.Provider provider37 = restAdapter0.clientProvider;
        retrofit.converter.Converter converter38 = restAdapter0.converter;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertNull(requestInterceptor23);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNull(converter38);
    }

    @Test
    public void test06962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06962");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler9 = builder8.errorHandler;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.Server server19 = builder18.server;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        builder28.logLevel = logLevel30;
        boolean boolean32 = logLevel30.log();
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel30);
        retrofit.Profiler profiler34 = null;
        restAdapter33.profiler = profiler34;
        retrofit.Server server36 = restAdapter33.server;
        retrofit.RestAdapter.Builder builder37 = builder8.setServer(server36);
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = builder39.callbackExecutor;
        retrofit.Profiler profiler41 = builder39.profiler;
        retrofit.RestAdapter.Builder builder43 = builder39.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("Retrofit-Idle");
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Builder builder54 = builder43.setServer(server53);
        retrofit.RestAdapter.Builder builder55 = builder37.setServer(server53);
        java.util.concurrent.Executor executor56 = null;
        builder55.httpExecutor = executor56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = builder62.logLevel;
        retrofit.RestAdapter.Builder builder64 = builder58.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder64.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log67 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder68 = builder66.setLog(log67);
        java.util.concurrent.Executor executor69 = builder66.httpExecutor;
        retrofit.RestAdapter restAdapter70 = builder66.build();
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor72 = null;
        restAdapter71.callbackExecutor = executor72;
        retrofit.converter.Converter converter74 = restAdapter71.converter;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        restAdapter71.log = log75;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter71.logLevel = logLevel77;
        builder66.logLevel = logLevel77;
        boolean boolean80 = logLevel77.log();
        boolean boolean81 = logLevel77.log();
        boolean boolean82 = logLevel77.log();
        retrofit.RestAdapter.Builder builder83 = builder55.setLogLevel(logLevel77);
        retrofit.Profiler profiler84 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder85 = builder55.setProfiler(profiler84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(executor69);
        org.junit.Assert.assertNotNull(restAdapter70);
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.FULL));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(builder83);
    }

    @Test
    public void test06963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06963");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter9 = builder8.build();
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.NONE;
        builder8.logLevel = logLevel10;
        retrofit.Server server12 = builder8.server;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(restAdapter9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server12);
    }

    @Test
    public void test06964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06964");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter5.new RestHandler();
        java.util.concurrent.Executor executor7 = restAdapter5.httpExecutor;
        java.util.concurrent.Executor executor8 = null;
        restAdapter5.callbackExecutor = executor8;
        retrofit.client.Client.Provider provider10 = null;
        restAdapter5.clientProvider = provider10;
        java.util.concurrent.Executor executor12 = null;
        restAdapter5.callbackExecutor = executor12;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter5.logLevel;
        retrofit.Server server15 = null;
        restAdapter5.server = server15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler26 = builder25.errorHandler;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor28 = builder27.callbackExecutor;
        retrofit.Profiler profiler29 = builder27.profiler;
        retrofit.RestAdapter.Builder builder31 = builder27.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("Retrofit-Idle");
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Builder builder42 = builder31.setServer(server41);
        retrofit.RestAdapter restAdapter43 = builder42.build();
        java.util.concurrent.Executor executor44 = restAdapter43.callbackExecutor;
        builder25.callbackExecutor = executor44;
        restAdapter5.callbackExecutor = executor44;
        restAdapter0.callbackExecutor = executor44;
        retrofit.Profiler profiler48 = restAdapter0.profiler;
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter0.logLevel;
        retrofit.Profiler profiler50 = null;
        restAdapter0.profiler = profiler50;
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(errorHandler26);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertNull(logLevel49);
    }

    @Test
    public void test06965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06965");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        java.util.concurrent.Executor executor6 = null;
        builder0.httpExecutor = executor6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.Server server9 = builder8.server;
        retrofit.RestAdapter.Log log10 = null;
        builder8.log = log10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.RestAdapter.Builder builder14 = builder8.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        builder15.logLevel = logLevel17;
        boolean boolean19 = logLevel17.log();
        builder8.logLevel = logLevel17;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        builder8.requestInterceptor = requestInterceptor21;
        retrofit.RestAdapter restAdapter23 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor24 = restAdapter23.requestInterceptor;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        java.util.concurrent.Executor executor27 = null;
        builder25.httpExecutor = executor27;
        retrofit.Server server29 = builder25.server;
        retrofit.RestAdapter.LogLevel logLevel30 = builder25.logLevel;
        retrofit.ErrorHandler errorHandler31 = builder25.errorHandler;
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor34 = builder33.callbackExecutor;
        retrofit.Profiler profiler35 = builder33.profiler;
        retrofit.RestAdapter.Builder builder37 = builder33.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Builder builder48 = builder37.setServer(server47);
        retrofit.RestAdapter restAdapter49 = builder48.build();
        retrofit.RestAdapter.Log log50 = builder48.log;
        retrofit.Profiler profiler51 = builder48.profiler;
        retrofit.Server server52 = builder48.server;
        retrofit.client.Client.Provider provider53 = builder48.clientProvider;
        retrofit.RestAdapter.Builder builder54 = builder25.setClient(provider53);
        restAdapter23.clientProvider = provider53;
        builder8.clientProvider = provider53;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter57.new RestHandler();
        retrofit.ErrorHandler errorHandler59 = null;
        restAdapter57.errorHandler = errorHandler59;
        retrofit.RestAdapter.Log log61 = restAdapter57.log;
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler63 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        java.util.concurrent.Executor executor71 = builder70.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor72 = builder70.requestInterceptor;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Log log75 = null;
        builder73.log = log75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter82 = builder81.build();
        retrofit.Profiler profiler83 = null;
        builder81.profiler = profiler83;
        retrofit.Profiler profiler85 = null;
        builder81.profiler = profiler85;
        retrofit.converter.Converter converter87 = builder81.converter;
        retrofit.RestAdapter.Builder builder88 = builder70.setConverter(converter87);
        restAdapter57.converter = converter87;
        retrofit.converter.Converter converter90 = restAdapter57.converter;
        retrofit.RestAdapter.Builder builder91 = builder8.setConverter(converter90);
        retrofit.converter.Converter converter92 = builder91.converter;
        retrofit.RestAdapter.Builder builder93 = builder0.setConverter(converter92);
        java.lang.Class<?> wildcardClass94 = converter92.getClass();
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(requestInterceptor24);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(restAdapter49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNull(profiler51);
        org.junit.Assert.assertNotNull(server52);
        org.junit.Assert.assertNotNull(provider53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNull(log61);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(executor71);
        org.junit.Assert.assertNull(requestInterceptor72);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertNotNull(converter87);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(converter90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(converter92);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test06966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06966");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler6 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.RequestInterceptor requestInterceptor20 = null;
        retrofit.converter.Converter converter21 = null;
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log33;
        retrofit.RestAdapter.Builder builder35 = builder24.setLog(log33);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor20, converter21, profiler22, errorHandler23, log33, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder0.setLog(log33);
        retrofit.RequestInterceptor requestInterceptor39 = builder38.requestInterceptor;
        retrofit.ErrorHandler errorHandler40 = null;
        builder38.errorHandler = errorHandler40;
        retrofit.ErrorHandler errorHandler42 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder43 = builder38.setErrorHandler(errorHandler42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Error handler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(requestInterceptor39);
    }

    @Test
    public void test06967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06967");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = null;
        restAdapter0.converter = converter3;
        java.util.concurrent.Executor executor5 = restAdapter0.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter0.new RestHandler();
        retrofit.Server server7 = restAdapter0.server;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor9 = restAdapter0.callbackExecutor;
        java.lang.Throwable throwable10 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.logException(throwable10, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(executor9);
    }

    @Test
    public void test06968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06968");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.RestAdapter.Log log8 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.Server server19 = builder18.server;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder36.server;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = null;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel51);
        retrofit.RestAdapter restAdapter54 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel51);
        builder0.log = log27;
        java.util.concurrent.Executor executor56 = builder0.callbackExecutor;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = builder57.server;
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = builder61.logLevel;
        retrofit.RestAdapter.Builder builder63 = builder57.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder65 = builder63.setServer("Retrofit-Idle");
        retrofit.Server server66 = builder65.server;
        retrofit.client.Client.Provider provider67 = null;
        java.util.concurrent.Executor executor68 = null;
        java.util.concurrent.Executor executor69 = null;
        retrofit.RequestInterceptor requestInterceptor70 = null;
        retrofit.converter.Converter converter71 = null;
        retrofit.Profiler profiler72 = null;
        retrofit.ErrorHandler errorHandler73 = null;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.Server server76 = builder75.server;
        retrofit.RestAdapter.Log log77 = null;
        builder75.log = log77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel80 = builder79.logLevel;
        retrofit.RestAdapter.Builder builder81 = builder75.setLogLevel(logLevel80);
        retrofit.client.Client.Provider provider82 = builder75.clientProvider;
        retrofit.RestAdapter.Log log83 = retrofit.RestAdapter.Log.NONE;
        builder75.log = log83;
        retrofit.RestAdapter.Builder builder85 = builder74.setLog(log83);
        retrofit.RestAdapter.LogLevel logLevel86 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter87 = new retrofit.RestAdapter(server66, provider67, executor68, executor69, requestInterceptor70, converter71, profiler72, errorHandler73, log83, logLevel86);
        retrofit.RestAdapter.Builder builder88 = builder0.setServer(server66);
        retrofit.Profiler profiler89 = null;
        builder0.profiler = profiler89;
        retrofit.RestAdapter.Builder builder92 = builder0.setServer("hi!");
        retrofit.Profiler profiler93 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder94 = builder0.setProfiler(profiler93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(executor56);
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNull(server76);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(provider82);
        org.junit.Assert.assertNotNull(log83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + logLevel86 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel86.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test06969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06969");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel5 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor7 = builder6.callbackExecutor;
        retrofit.Profiler profiler8 = builder6.profiler;
        retrofit.RestAdapter.Builder builder10 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder17 = builder11.setLogLevel(logLevel16);
        retrofit.RestAdapter.Builder builder19 = builder17.setServer("Retrofit-Idle");
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter.Builder builder21 = builder10.setServer(server20);
        retrofit.RestAdapter restAdapter22 = builder21.build();
        retrofit.RestAdapter.Log log23 = builder21.log;
        retrofit.Profiler profiler24 = builder21.profiler;
        retrofit.Server server25 = builder21.server;
        retrofit.client.Client.Provider provider26 = builder21.clientProvider;
        restAdapter0.clientProvider = provider26;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter28.new RestHandler();
        java.util.concurrent.Executor executor30 = restAdapter28.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter28.new RestHandler();
        java.util.concurrent.Executor executor32 = null;
        restAdapter28.httpExecutor = executor32;
        retrofit.ErrorHandler errorHandler34 = null;
        restAdapter28.errorHandler = errorHandler34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor37 = builder36.callbackExecutor;
        retrofit.Profiler profiler38 = builder36.profiler;
        retrofit.RestAdapter.Builder builder40 = builder36.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("Retrofit-Idle");
        retrofit.Server server50 = builder49.server;
        retrofit.RestAdapter.Builder builder51 = builder40.setServer(server50);
        retrofit.RestAdapter restAdapter52 = builder51.build();
        retrofit.RestAdapter.Log log53 = builder51.log;
        retrofit.Profiler profiler54 = builder51.profiler;
        retrofit.RequestInterceptor requestInterceptor55 = builder51.requestInterceptor;
        restAdapter28.requestInterceptor = requestInterceptor55;
        restAdapter0.requestInterceptor = requestInterceptor55;
        java.util.concurrent.Executor executor58 = restAdapter0.httpExecutor;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel5);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(profiler8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(restAdapter22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNull(profiler24);
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(provider26);
        org.junit.Assert.assertNull(executor30);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(profiler38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(restAdapter52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNull(profiler54);
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertNull(executor58);
    }

    @Test
    public void test06970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06970");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = null;
        restAdapter0.errorHandler = errorHandler3;
        java.util.concurrent.Executor executor5 = restAdapter0.httpExecutor;
        retrofit.ErrorHandler errorHandler6 = restAdapter0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter0.logLevel;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.Server server9 = builder8.server;
        retrofit.RestAdapter.Log log10 = null;
        builder8.log = log10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.RestAdapter.Builder builder14 = builder8.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder18 = builder16.setLog(log17);
        java.util.concurrent.Executor executor19 = builder16.httpExecutor;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder30 = builder28.setLog(log29);
        java.util.concurrent.Executor executor31 = builder28.httpExecutor;
        retrofit.RestAdapter.Builder builder33 = builder28.setServer("Retrofit-Idle");
        retrofit.RestAdapter.LogLevel logLevel34 = builder28.logLevel;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor36 = null;
        restAdapter35.callbackExecutor = executor36;
        retrofit.converter.Converter converter38 = restAdapter35.converter;
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter35.new RestHandler();
        retrofit.RestAdapter.Log log40 = restAdapter35.log;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("Retrofit-Idle");
        retrofit.Server server50 = builder49.server;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = null;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = builder63.logLevel;
        retrofit.RestAdapter.Builder builder65 = builder59.setLogLevel(logLevel64);
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel64);
        retrofit.client.Client.Provider provider67 = null;
        java.util.concurrent.Executor executor68 = null;
        java.util.concurrent.Executor executor69 = null;
        retrofit.RequestInterceptor requestInterceptor70 = null;
        retrofit.converter.Converter converter71 = null;
        retrofit.Profiler profiler72 = null;
        retrofit.ErrorHandler errorHandler73 = null;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.Server server75 = builder74.server;
        retrofit.RestAdapter.Log log76 = null;
        builder74.log = log76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.Server server79 = builder78.server;
        retrofit.RestAdapter.Log log80 = null;
        builder78.log = log80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = builder82.logLevel;
        retrofit.RestAdapter.Builder builder84 = builder78.setLogLevel(logLevel83);
        retrofit.client.Client.Provider provider85 = builder78.clientProvider;
        retrofit.RestAdapter.Log log86 = retrofit.RestAdapter.Log.NONE;
        builder78.log = log86;
        retrofit.RestAdapter.Builder builder88 = builder74.setLog(log86);
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server50, provider67, executor68, executor69, requestInterceptor70, converter71, profiler72, errorHandler73, log86, logLevel89);
        restAdapter35.server = server50;
        retrofit.RestAdapter.Builder builder92 = builder28.setServer(server50);
        builder16.server = server50;
        retrofit.RestAdapter.LogLevel logLevel94 = builder16.logLevel;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter0.setLogLevel(logLevel94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(executor5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(executor19);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(log40);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(server75);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNull(provider85);
        org.junit.Assert.assertNotNull(log86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06971");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.httpExecutor = executor1;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.httpExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        restAdapter0.clientProvider = provider5;
        retrofit.ErrorHandler errorHandler7 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter8 = null;
        restAdapter0.converter = converter8;
        retrofit.RequestInterceptor requestInterceptor10 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.Server server13 = builder12.server;
        retrofit.RestAdapter.Log log14 = null;
        builder12.log = log14;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel17 = builder16.logLevel;
        retrofit.RestAdapter.Builder builder18 = builder12.setLogLevel(logLevel17);
        retrofit.client.Client.Provider provider19 = builder12.clientProvider;
        retrofit.RestAdapter.Log log20 = retrofit.RestAdapter.Log.NONE;
        builder12.log = log20;
        retrofit.RestAdapter.Builder builder22 = builder11.setLog(log20);
        retrofit.Profiler profiler23 = builder11.profiler;
        java.util.concurrent.Executor executor24 = null;
        builder11.callbackExecutor = executor24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Log log28 = null;
        builder26.log = log28;
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel31 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder32 = builder26.setLogLevel(logLevel31);
        retrofit.client.Client.Provider provider33 = builder26.clientProvider;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder26.log = log34;
        builder11.log = log34;
        retrofit.Profiler profiler37 = builder11.profiler;
        retrofit.Server server38 = builder11.server;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor40 = builder39.callbackExecutor;
        retrofit.Profiler profiler41 = builder39.profiler;
        retrofit.RestAdapter.Builder builder43 = builder39.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.Server server45 = builder44.server;
        retrofit.RestAdapter.Log log46 = null;
        builder44.log = log46;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel49 = builder48.logLevel;
        retrofit.RestAdapter.Builder builder50 = builder44.setLogLevel(logLevel49);
        retrofit.RestAdapter.Builder builder52 = builder50.setServer("Retrofit-Idle");
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Builder builder54 = builder43.setServer(server53);
        retrofit.RestAdapter restAdapter55 = builder54.build();
        java.util.concurrent.Executor executor56 = restAdapter55.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler57 = restAdapter55.new RestHandler();
        retrofit.ErrorHandler errorHandler58 = restAdapter55.errorHandler;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor60 = builder59.callbackExecutor;
        retrofit.Profiler profiler61 = builder59.profiler;
        retrofit.RestAdapter.Builder builder63 = builder59.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter.Builder builder72 = builder70.setServer("Retrofit-Idle");
        retrofit.Server server73 = builder72.server;
        retrofit.RestAdapter.Builder builder74 = builder63.setServer(server73);
        retrofit.RestAdapter restAdapter75 = builder74.build();
        retrofit.client.Client.Provider provider76 = null;
        restAdapter75.clientProvider = provider76;
        retrofit.RestAdapter.Log log78 = restAdapter75.log;
        retrofit.RestAdapter.LogLevel logLevel79 = restAdapter75.getLogLevel();
        restAdapter55.logLevel = logLevel79;
        boolean boolean81 = logLevel79.log();
        builder11.logLevel = logLevel79;
        restAdapter0.logLevel = logLevel79;
        retrofit.ErrorHandler errorHandler84 = null;
        restAdapter0.errorHandler = errorHandler84;
        retrofit.client.Client.Provider provider86 = restAdapter0.clientProvider;
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNull(requestInterceptor10);
        org.junit.Assert.assertNull(server13);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(profiler23);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(profiler41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(server45);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(restAdapter55);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNull(executor60);
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(server73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(restAdapter75);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(provider86);
    }

    @Test
    public void test06972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06972");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log9 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder10 = builder8.setLog(log9);
        java.util.concurrent.Executor executor11 = builder8.httpExecutor;
        java.util.concurrent.Executor executor12 = null;
        builder8.httpExecutor = executor12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter23 = builder22.build();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter23.logLevel;
        builder8.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder27 = builder8.setServer("hi!");
        retrofit.RestAdapter.Builder builder29 = builder8.setServer("Retrofit-Idle");
        retrofit.Profiler profiler30 = builder29.profiler;
        builder29.ensureSaneDefaults();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(restAdapter23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(profiler30);
    }

    @Test
    public void test06973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06973");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = null;
        restAdapter0.converter = converter3;
        retrofit.Server server5 = restAdapter0.server;
        retrofit.RequestInterceptor requestInterceptor6 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter7.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel9 = restAdapter7.logLevel;
        retrofit.ErrorHandler errorHandler10 = restAdapter7.errorHandler;
        retrofit.converter.Converter converter11 = null;
        restAdapter7.converter = converter11;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter7.logLevel;
        java.util.concurrent.Executor executor14 = restAdapter7.httpExecutor;
        retrofit.RestAdapter.Log log15 = restAdapter7.log;
        retrofit.Profiler profiler16 = null;
        restAdapter7.profiler = profiler16;
        retrofit.RestAdapter restAdapter18 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor19 = restAdapter18.requestInterceptor;
        java.util.concurrent.Executor executor20 = restAdapter18.callbackExecutor;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = builder21.server;
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        retrofit.RestAdapter.Builder builder27 = builder21.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder29 = builder27.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler30 = builder29.errorHandler;
        retrofit.RestAdapter restAdapter31 = builder29.build();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler35 = restAdapter34.new RestHandler();
        java.util.concurrent.Executor executor36 = restAdapter34.httpExecutor;
        java.util.concurrent.Executor executor37 = null;
        restAdapter34.callbackExecutor = executor37;
        retrofit.client.Client.Provider provider39 = null;
        restAdapter34.clientProvider = provider39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Log log43 = null;
        builder41.log = log43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel46 = builder45.logLevel;
        retrofit.RestAdapter.Builder builder47 = builder41.setLogLevel(logLevel46);
        retrofit.RestAdapter.Builder builder49 = builder47.setServer("Retrofit-Idle");
        retrofit.Server server50 = builder49.server;
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.Server server60 = builder59.server;
        retrofit.RestAdapter.Log log61 = null;
        builder59.log = log61;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel64 = builder63.logLevel;
        retrofit.RestAdapter.Builder builder65 = builder59.setLogLevel(logLevel64);
        retrofit.RestAdapter.Builder builder67 = builder65.setServer("Retrofit-Idle");
        retrofit.Server server68 = builder67.server;
        retrofit.client.Client.Provider provider69 = null;
        java.util.concurrent.Executor executor70 = null;
        java.util.concurrent.Executor executor71 = null;
        retrofit.RequestInterceptor requestInterceptor72 = null;
        retrofit.converter.Converter converter73 = null;
        retrofit.Profiler profiler74 = null;
        retrofit.ErrorHandler errorHandler75 = null;
        retrofit.RestAdapter.Log log76 = null;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.Server server78 = builder77.server;
        retrofit.RestAdapter.Log log79 = null;
        builder77.log = log79;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        retrofit.RestAdapter.Builder builder83 = builder77.setLogLevel(logLevel82);
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server68, provider69, executor70, executor71, requestInterceptor72, converter73, profiler74, errorHandler75, log76, logLevel82);
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server50, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log58, logLevel82);
        restAdapter34.log = log58;
        log58.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder89 = builder32.setLog(log58);
        builder29.log = log58;
        retrofit.ErrorHandler errorHandler91 = builder29.errorHandler;
        restAdapter18.errorHandler = errorHandler91;
        restAdapter7.errorHandler = errorHandler91;
        retrofit.RestAdapter.RestHandler restHandler94 = restAdapter7.new RestHandler();
        retrofit.ErrorHandler errorHandler95 = restAdapter7.errorHandler;
        restAdapter0.errorHandler = errorHandler95;
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(logLevel9);
        org.junit.Assert.assertNull(errorHandler10);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertNull(requestInterceptor19);
        org.junit.Assert.assertNull(executor20);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(errorHandler30);
        org.junit.Assert.assertNotNull(restAdapter31);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertNull(executor36);
        org.junit.Assert.assertNull(server42);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertNull(server60);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(server68);
        org.junit.Assert.assertNull(server78);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(errorHandler91);
        org.junit.Assert.assertNotNull(errorHandler95);
    }

    @Test
    public void test06974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06974");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler2 = null;
        builder0.errorHandler = errorHandler2;
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter4.new RestHandler();
        retrofit.ErrorHandler errorHandler6 = null;
        restAdapter4.errorHandler = errorHandler6;
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter4.new RestHandler();
        retrofit.RestAdapter restAdapter9 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter9.new RestHandler();
        java.util.concurrent.Executor executor11 = restAdapter9.httpExecutor;
        java.util.concurrent.Executor executor12 = null;
        restAdapter9.callbackExecutor = executor12;
        retrofit.ErrorHandler errorHandler14 = null;
        restAdapter9.errorHandler = errorHandler14;
        retrofit.client.Client.Provider provider16 = null;
        restAdapter9.clientProvider = provider16;
        java.util.concurrent.Executor executor18 = restAdapter9.httpExecutor;
        retrofit.RestAdapter.Log log19 = restAdapter9.log;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.RestAdapter.Builder builder28 = builder26.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler29 = builder28.errorHandler;
        retrofit.RestAdapter restAdapter30 = builder28.build();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter restAdapter33 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler34 = restAdapter33.new RestHandler();
        java.util.concurrent.Executor executor35 = restAdapter33.httpExecutor;
        java.util.concurrent.Executor executor36 = null;
        restAdapter33.callbackExecutor = executor36;
        retrofit.client.Client.Provider provider38 = null;
        restAdapter33.clientProvider = provider38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("Retrofit-Idle");
        retrofit.Server server49 = builder48.server;
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.RequestInterceptor requestInterceptor53 = null;
        retrofit.converter.Converter converter54 = null;
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Log log57 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = builder62.logLevel;
        retrofit.RestAdapter.Builder builder64 = builder58.setLogLevel(logLevel63);
        retrofit.RestAdapter.Builder builder66 = builder64.setServer("Retrofit-Idle");
        retrofit.Server server67 = builder66.server;
        retrofit.client.Client.Provider provider68 = null;
        java.util.concurrent.Executor executor69 = null;
        java.util.concurrent.Executor executor70 = null;
        retrofit.RequestInterceptor requestInterceptor71 = null;
        retrofit.converter.Converter converter72 = null;
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Log log75 = null;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.Server server77 = builder76.server;
        retrofit.RestAdapter.Log log78 = null;
        builder76.log = log78;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel81 = builder80.logLevel;
        retrofit.RestAdapter.Builder builder82 = builder76.setLogLevel(logLevel81);
        retrofit.RestAdapter restAdapter83 = new retrofit.RestAdapter(server67, provider68, executor69, executor70, requestInterceptor71, converter72, profiler73, errorHandler74, log75, logLevel81);
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor53, converter54, profiler55, errorHandler56, log57, logLevel81);
        restAdapter33.log = log57;
        log57.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder88 = builder31.setLog(log57);
        builder28.log = log57;
        retrofit.RequestInterceptor requestInterceptor90 = builder28.requestInterceptor;
        restAdapter9.requestInterceptor = requestInterceptor90;
        restAdapter4.requestInterceptor = requestInterceptor90;
        retrofit.RestAdapter.Builder builder93 = builder0.setRequestInterceptor(requestInterceptor90);
        retrofit.client.Client.Provider provider94 = builder93.clientProvider;
        retrofit.RestAdapter.Builder builder96 = builder93.setServer("hi!");
        retrofit.Profiler profiler97 = builder93.profiler;
        retrofit.converter.Converter converter98 = builder93.converter;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(log19);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(executor35);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(log57);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(server67);
        org.junit.Assert.assertNull(server77);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(requestInterceptor90);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNull(provider94);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNull(profiler97);
        org.junit.Assert.assertNull(converter98);
    }

    @Test
    public void test06975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06975");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        java.util.concurrent.Executor executor6 = restAdapter0.httpExecutor;
        retrofit.ErrorHandler errorHandler7 = null;
        restAdapter0.errorHandler = errorHandler7;
        retrofit.converter.Converter converter9 = restAdapter0.converter;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor11 = builder10.callbackExecutor;
        retrofit.Profiler profiler12 = builder10.profiler;
        builder10.ensureSaneDefaults();
        java.util.concurrent.Executor executor14 = builder10.httpExecutor;
        retrofit.RestAdapter restAdapter15 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter15.new RestHandler();
        retrofit.ErrorHandler errorHandler17 = null;
        restAdapter15.errorHandler = errorHandler17;
        retrofit.ErrorHandler errorHandler19 = restAdapter15.errorHandler;
        retrofit.converter.Converter converter20 = restAdapter15.converter;
        retrofit.Server server21 = restAdapter15.server;
        retrofit.Profiler profiler22 = null;
        restAdapter15.profiler = profiler22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.client.Client.Provider provider35 = builder28.clientProvider;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        builder28.log = log36;
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log36);
        retrofit.Server server39 = builder24.server;
        java.util.concurrent.Executor executor40 = null;
        builder24.callbackExecutor = executor40;
        retrofit.converter.Converter converter42 = builder24.converter;
        retrofit.ErrorHandler errorHandler43 = builder24.errorHandler;
        retrofit.ErrorHandler errorHandler44 = null;
        builder24.errorHandler = errorHandler44;
        builder24.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler48 = restAdapter47.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel49 = restAdapter47.logLevel;
        retrofit.ErrorHandler errorHandler50 = null;
        restAdapter47.errorHandler = errorHandler50;
        java.util.concurrent.Executor executor52 = restAdapter47.httpExecutor;
        java.util.concurrent.Executor executor53 = null;
        restAdapter47.httpExecutor = executor53;
        retrofit.ErrorHandler errorHandler55 = restAdapter47.errorHandler;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        retrofit.RequestInterceptor requestInterceptor57 = null;
        restAdapter56.requestInterceptor = requestInterceptor57;
        retrofit.Profiler profiler59 = null;
        restAdapter56.profiler = profiler59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor62 = builder61.callbackExecutor;
        retrofit.Profiler profiler63 = builder61.profiler;
        retrofit.RestAdapter.Builder builder65 = builder61.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.Server server67 = builder66.server;
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = builder70.logLevel;
        retrofit.RestAdapter.Builder builder72 = builder66.setLogLevel(logLevel71);
        retrofit.RestAdapter.Builder builder74 = builder72.setServer("Retrofit-Idle");
        retrofit.Server server75 = builder74.server;
        retrofit.RestAdapter.Builder builder76 = builder65.setServer(server75);
        retrofit.RestAdapter restAdapter77 = builder76.build();
        java.util.concurrent.Executor executor78 = restAdapter77.callbackExecutor;
        restAdapter56.callbackExecutor = executor78;
        restAdapter47.httpExecutor = executor78;
        builder24.callbackExecutor = executor78;
        restAdapter15.callbackExecutor = executor78;
        builder10.httpExecutor = executor78;
        restAdapter0.callbackExecutor = executor78;
        retrofit.RestAdapter.RestHandler restHandler85 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNotNull(executor14);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNull(errorHandler43);
        org.junit.Assert.assertNull(logLevel49);
        org.junit.Assert.assertNull(executor52);
        org.junit.Assert.assertNull(errorHandler55);
        org.junit.Assert.assertNull(executor62);
        org.junit.Assert.assertNull(profiler63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(server75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(restAdapter77);
        org.junit.Assert.assertNotNull(executor78);
    }

    @Test
    public void test06976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06976");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.getLogLevel();
        retrofit.ErrorHandler errorHandler4 = null;
        restAdapter0.errorHandler = errorHandler4;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.Server server7 = builder6.server;
        retrofit.RestAdapter.Log log8 = null;
        builder6.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = builder10.logLevel;
        retrofit.RestAdapter.Builder builder12 = builder6.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("Retrofit-Idle");
        retrofit.Server server15 = builder14.server;
        retrofit.client.Client.Provider provider16 = null;
        java.util.concurrent.Executor executor17 = null;
        java.util.concurrent.Executor executor18 = null;
        retrofit.RequestInterceptor requestInterceptor19 = null;
        retrofit.converter.Converter converter20 = null;
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Log log23 = null;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel29 = builder28.logLevel;
        retrofit.RestAdapter.Builder builder30 = builder24.setLogLevel(logLevel29);
        retrofit.RestAdapter restAdapter31 = new retrofit.RestAdapter(server15, provider16, executor17, executor18, requestInterceptor19, converter20, profiler21, errorHandler22, log23, logLevel29);
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.RequestInterceptor requestInterceptor35 = null;
        retrofit.converter.Converter converter36 = null;
        retrofit.Profiler profiler37 = null;
        retrofit.ErrorHandler errorHandler38 = null;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.Server server40 = builder39.server;
        retrofit.RestAdapter.Log log41 = null;
        builder39.log = log41;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.Server server44 = builder43.server;
        retrofit.RestAdapter.Log log45 = null;
        builder43.log = log45;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel48 = builder47.logLevel;
        retrofit.RestAdapter.Builder builder49 = builder43.setLogLevel(logLevel48);
        retrofit.client.Client.Provider provider50 = builder43.clientProvider;
        retrofit.RestAdapter.Log log51 = retrofit.RestAdapter.Log.NONE;
        builder43.log = log51;
        retrofit.RestAdapter.Builder builder53 = builder39.setLog(log51);
        retrofit.RestAdapter.LogLevel logLevel54 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server15, provider32, executor33, executor34, requestInterceptor35, converter36, profiler37, errorHandler38, log51, logLevel54);
        log51.log("Retrofit-");
        restAdapter0.log = log51;
        retrofit.Profiler profiler59 = restAdapter0.profiler;
        retrofit.Server server60 = restAdapter0.server;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertTrue("'" + logLevel29 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel29.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(log51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertTrue("'" + logLevel54 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel54.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler59);
        org.junit.Assert.assertNull(server60);
    }

    @Test
    public void test06977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06977");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = null;
        restAdapter0.errorHandler = errorHandler3;
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter0.new RestHandler();
        retrofit.Profiler profiler6 = restAdapter0.profiler;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.Server server12 = builder11.server;
        retrofit.RestAdapter.Log log13 = null;
        builder11.log = log13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel16 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder17 = builder11.setLogLevel(logLevel16);
        retrofit.client.Client.Provider provider18 = builder11.clientProvider;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder11.log = log19;
        retrofit.RestAdapter.Builder builder21 = builder7.setLog(log19);
        retrofit.Server server22 = builder7.server;
        java.util.concurrent.Executor executor23 = builder7.callbackExecutor;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.Server server25 = builder24.server;
        retrofit.RestAdapter.Log log26 = null;
        builder24.log = log26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.client.Client.Provider provider35 = builder28.clientProvider;
        retrofit.RestAdapter.Log log36 = retrofit.RestAdapter.Log.NONE;
        builder28.log = log36;
        retrofit.RestAdapter.Builder builder38 = builder24.setLog(log36);
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter39.new RestHandler();
        java.util.concurrent.Executor executor41 = restAdapter39.httpExecutor;
        java.util.concurrent.Executor executor42 = null;
        restAdapter39.callbackExecutor = executor42;
        retrofit.ErrorHandler errorHandler44 = null;
        restAdapter39.errorHandler = errorHandler44;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter39.logLevel = logLevel46;
        builder24.logLevel = logLevel46;
        builder7.logLevel = logLevel46;
        retrofit.RestAdapter.Log log50 = builder7.log;
        restAdapter0.log = log50;
        retrofit.Server server52 = restAdapter0.server;
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertTrue("'" + logLevel16 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel16.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(executor41);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNull(server52);
    }

    @Test
    public void test06978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06978");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RequestInterceptor requestInterceptor7 = null;
        builder0.requestInterceptor = requestInterceptor7;
        retrofit.RestAdapter.Log log9 = builder0.log;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        builder17.logLevel = logLevel19;
        boolean boolean21 = logLevel19.log();
        builder10.logLevel = logLevel19;
        retrofit.RestAdapter.Builder builder23 = builder0.setLogLevel(logLevel19);
        java.util.concurrent.Executor executor24 = builder23.callbackExecutor;
        builder23.ensureSaneDefaults();
        java.util.concurrent.Executor executor26 = builder23.httpExecutor;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter.Log log29 = null;
        builder27.log = log29;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        retrofit.RestAdapter.Builder builder33 = builder27.setLogLevel(logLevel32);
        retrofit.RestAdapter.Builder builder35 = builder33.setServer("Retrofit-Idle");
        retrofit.Profiler profiler36 = builder33.profiler;
        java.util.concurrent.Executor executor37 = builder33.callbackExecutor;
        retrofit.Server server38 = builder33.server;
        retrofit.RestAdapter restAdapter39 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor40 = restAdapter39.callbackExecutor;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor42 = null;
        restAdapter41.callbackExecutor = executor42;
        retrofit.converter.Converter converter44 = null;
        restAdapter41.converter = converter44;
        retrofit.RestAdapter.RestHandler restHandler46 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor48 = builder47.callbackExecutor;
        retrofit.Profiler profiler49 = builder47.profiler;
        retrofit.RestAdapter.Builder builder51 = builder47.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("Retrofit-Idle");
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Builder builder62 = builder51.setServer(server61);
        retrofit.RestAdapter restAdapter63 = builder62.build();
        java.util.concurrent.Executor executor64 = restAdapter63.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler65 = restAdapter63.new RestHandler();
        retrofit.ErrorHandler errorHandler66 = restAdapter63.errorHandler;
        restAdapter41.errorHandler = errorHandler66;
        restAdapter39.errorHandler = errorHandler66;
        builder33.errorHandler = errorHandler66;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.Server server71 = builder70.server;
        retrofit.RestAdapter.Log log72 = null;
        builder70.log = log72;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel75 = builder74.logLevel;
        retrofit.RestAdapter.Builder builder76 = builder70.setLogLevel(logLevel75);
        retrofit.RestAdapter.Builder builder78 = builder76.setServer("Retrofit-Idle");
        retrofit.Server server79 = builder78.server;
        retrofit.client.Client.Provider provider80 = null;
        java.util.concurrent.Executor executor81 = null;
        java.util.concurrent.Executor executor82 = null;
        retrofit.RequestInterceptor requestInterceptor83 = null;
        retrofit.converter.Converter converter84 = null;
        retrofit.Profiler profiler85 = null;
        retrofit.ErrorHandler errorHandler86 = null;
        retrofit.RestAdapter.Log log87 = null;
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.Server server89 = builder88.server;
        retrofit.RestAdapter.Log log90 = null;
        builder88.log = log90;
        retrofit.RestAdapter.Builder builder92 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel93 = builder92.logLevel;
        retrofit.RestAdapter.Builder builder94 = builder88.setLogLevel(logLevel93);
        retrofit.RestAdapter restAdapter95 = new retrofit.RestAdapter(server79, provider80, executor81, executor82, requestInterceptor83, converter84, profiler85, errorHandler86, log87, logLevel93);
        boolean boolean96 = logLevel93.log();
        builder33.logLevel = logLevel93;
        builder23.logLevel = logLevel93;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(profiler36);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(restAdapter63);
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNull(server71);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(server79);
        org.junit.Assert.assertNull(server89);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test06979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06979");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder0.requestInterceptor = requestInterceptor13;
        java.util.concurrent.Executor executor15 = null;
        builder0.httpExecutor = executor15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider24 = builder17.clientProvider;
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log25;
        builder0.log = log25;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        builder35.logLevel = logLevel37;
        boolean boolean39 = logLevel37.log();
        builder28.logLevel = logLevel37;
        retrofit.RestAdapter.LogLevel logLevel41 = builder28.logLevel;
        retrofit.Profiler profiler42 = builder28.profiler;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor44 = builder43.callbackExecutor;
        retrofit.Profiler profiler45 = builder43.profiler;
        retrofit.RestAdapter.Builder builder47 = builder43.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder48.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("Retrofit-Idle");
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Builder builder58 = builder47.setServer(server57);
        retrofit.RestAdapter.Builder builder59 = builder28.setServer(server57);
        retrofit.RestAdapter.Builder builder60 = builder0.setServer(server57);
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler62 = restAdapter61.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel63 = restAdapter61.logLevel;
        retrofit.client.Client.Provider provider64 = restAdapter61.clientProvider;
        retrofit.Profiler profiler65 = restAdapter61.profiler;
        retrofit.RestAdapter restAdapter66 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler67 = restAdapter66.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel68 = restAdapter66.logLevel;
        retrofit.ErrorHandler errorHandler69 = restAdapter66.errorHandler;
        retrofit.converter.Converter converter70 = null;
        restAdapter66.converter = converter70;
        retrofit.RestAdapter.LogLevel logLevel72 = restAdapter66.logLevel;
        java.util.concurrent.Executor executor73 = restAdapter66.httpExecutor;
        retrofit.RestAdapter.Log log74 = restAdapter66.log;
        retrofit.Profiler profiler75 = null;
        restAdapter66.profiler = profiler75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel79 = builder78.logLevel;
        builder77.logLevel = logLevel79;
        boolean boolean81 = logLevel79.log();
        restAdapter66.logLevel = logLevel79;
        restAdapter61.logLevel = logLevel79;
        builder0.logLevel = logLevel79;
        retrofit.converter.Converter converter85 = builder0.converter;
        retrofit.Profiler profiler86 = null;
        builder0.profiler = profiler86;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(logLevel63);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNull(profiler65);
        org.junit.Assert.assertNull(logLevel68);
        org.junit.Assert.assertNull(errorHandler69);
        org.junit.Assert.assertNull(logLevel72);
        org.junit.Assert.assertNull(executor73);
        org.junit.Assert.assertNull(log74);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(converter85);
    }

    @Test
    public void test06980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06980");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        retrofit.converter.Converter converter14 = null;
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Log log17 = null;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor13, converter14, profiler15, errorHandler16, log17, logLevel23);
        retrofit.client.Client.Provider provider26 = null;
        java.util.concurrent.Executor executor27 = null;
        java.util.concurrent.Executor executor28 = null;
        retrofit.RequestInterceptor requestInterceptor29 = null;
        retrofit.converter.Converter converter30 = null;
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.Server server38 = builder37.server;
        retrofit.RestAdapter.Log log39 = null;
        builder37.log = log39;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel42 = builder41.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder37.setLogLevel(logLevel42);
        retrofit.client.Client.Provider provider44 = builder37.clientProvider;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log45;
        retrofit.RestAdapter.Builder builder47 = builder33.setLog(log45);
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.NONE;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server9, provider26, executor27, executor28, requestInterceptor29, converter30, profiler31, errorHandler32, log45, logLevel48);
        retrofit.converter.Converter converter50 = null;
        restAdapter49.converter = converter50;
        retrofit.Profiler profiler52 = null;
        restAdapter49.profiler = profiler52;
        retrofit.Profiler profiler54 = null;
        restAdapter49.profiler = profiler54;
        retrofit.converter.Converter converter56 = restAdapter49.converter;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(server38);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter56);
    }

    @Test
    public void test06981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06981");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.LogLevel logLevel5 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler6 = builder0.errorHandler;
        retrofit.client.Client.Provider provider7 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor9 = builder8.callbackExecutor;
        retrofit.Profiler profiler10 = builder8.profiler;
        retrofit.RestAdapter.Builder builder12 = builder8.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Log log15 = null;
        builder13.log = log15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel18 = builder17.logLevel;
        retrofit.RestAdapter.Builder builder19 = builder13.setLogLevel(logLevel18);
        retrofit.RestAdapter.Builder builder21 = builder19.setServer("Retrofit-Idle");
        retrofit.Server server22 = builder21.server;
        retrofit.RestAdapter.Builder builder23 = builder12.setServer(server22);
        retrofit.RestAdapter restAdapter24 = builder23.build();
        retrofit.RestAdapter.Log log25 = builder23.log;
        retrofit.Profiler profiler26 = builder23.profiler;
        retrofit.Server server27 = builder23.server;
        retrofit.client.Client.Provider provider28 = builder23.clientProvider;
        retrofit.RestAdapter.Builder builder29 = builder0.setClient(provider28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel32 = builder31.logLevel;
        builder30.logLevel = logLevel32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder42 = builder40.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider43 = null;
        builder40.clientProvider = provider43;
        retrofit.Server server45 = builder40.server;
        retrofit.RestAdapter.Builder builder46 = builder30.setServer(server45);
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor48 = builder47.callbackExecutor;
        retrofit.client.Client.Provider provider49 = null;
        builder47.clientProvider = provider49;
        java.util.concurrent.Executor executor51 = builder47.callbackExecutor;
        retrofit.client.Client.Provider provider52 = builder47.clientProvider;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        java.util.concurrent.Executor executor55 = null;
        builder53.httpExecutor = executor55;
        retrofit.Server server57 = builder53.server;
        retrofit.RestAdapter.LogLevel logLevel58 = builder53.logLevel;
        retrofit.client.Client.Provider provider59 = null;
        builder53.clientProvider = provider59;
        retrofit.Server server61 = builder53.server;
        retrofit.RequestInterceptor requestInterceptor62 = builder53.requestInterceptor;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor64 = null;
        restAdapter63.callbackExecutor = executor64;
        retrofit.RestAdapter.Log log66 = restAdapter63.log;
        retrofit.converter.Converter converter67 = restAdapter63.converter;
        java.util.concurrent.Executor executor68 = null;
        restAdapter63.callbackExecutor = executor68;
        java.util.concurrent.Executor executor70 = null;
        restAdapter63.httpExecutor = executor70;
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter63.new RestHandler();
        retrofit.converter.Converter converter73 = restAdapter63.converter;
        retrofit.RestAdapter.Builder builder74 = new retrofit.RestAdapter.Builder();
        retrofit.Server server75 = builder74.server;
        retrofit.RestAdapter.Log log76 = null;
        builder74.log = log76;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel79 = builder78.logLevel;
        retrofit.RestAdapter.Builder builder80 = builder74.setLogLevel(logLevel79);
        retrofit.RestAdapter.Builder builder82 = builder80.setServer("Retrofit-Idle");
        retrofit.Server server83 = builder82.server;
        retrofit.Profiler profiler84 = null;
        builder82.profiler = profiler84;
        retrofit.Profiler profiler86 = null;
        builder82.profiler = profiler86;
        retrofit.RestAdapter restAdapter88 = builder82.build();
        retrofit.ErrorHandler errorHandler89 = builder82.errorHandler;
        restAdapter63.errorHandler = errorHandler89;
        builder53.errorHandler = errorHandler89;
        builder47.errorHandler = errorHandler89;
        builder30.errorHandler = errorHandler89;
        retrofit.RestAdapter.Builder builder94 = builder0.setErrorHandler(errorHandler89);
        retrofit.converter.Converter converter95 = builder0.converter;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(executor9);
        org.junit.Assert.assertNull(profiler10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(server22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(restAdapter24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNull(profiler26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(provider28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel32 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel32.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNull(executor51);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertNull(server57);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertNull(requestInterceptor62);
        org.junit.Assert.assertNull(log66);
        org.junit.Assert.assertNull(converter67);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNull(server75);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(server83);
        org.junit.Assert.assertNotNull(restAdapter88);
        org.junit.Assert.assertNotNull(errorHandler89);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNull(converter95);
    }

    @Test
    public void test06982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06982");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor3 = builder2.callbackExecutor;
        retrofit.Profiler profiler4 = builder2.profiler;
        retrofit.RestAdapter.Builder builder6 = builder2.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.Server server8 = builder7.server;
        retrofit.RestAdapter.Log log9 = null;
        builder7.log = log9;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel12 = builder11.logLevel;
        retrofit.RestAdapter.Builder builder13 = builder7.setLogLevel(logLevel12);
        retrofit.RestAdapter.Builder builder15 = builder13.setServer("Retrofit-Idle");
        retrofit.Server server16 = builder15.server;
        retrofit.RestAdapter.Builder builder17 = builder6.setServer(server16);
        retrofit.client.Client.Provider provider18 = null;
        java.util.concurrent.Executor executor19 = null;
        java.util.concurrent.Executor executor20 = null;
        retrofit.RequestInterceptor requestInterceptor21 = null;
        retrofit.converter.Converter converter22 = null;
        retrofit.Profiler profiler23 = null;
        retrofit.ErrorHandler errorHandler24 = null;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Log log27 = null;
        builder25.log = log27;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        retrofit.RestAdapter.Builder builder31 = builder25.setLogLevel(logLevel30);
        retrofit.client.Client.Provider provider32 = builder25.clientProvider;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder25.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder41.setServer("Retrofit-Idle");
        retrofit.Server server44 = builder43.server;
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.RequestInterceptor requestInterceptor48 = null;
        retrofit.converter.Converter converter49 = null;
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Log log52 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.Server server62 = builder61.server;
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.RequestInterceptor requestInterceptor66 = null;
        retrofit.converter.Converter converter67 = null;
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Log log70 = null;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.Server server72 = builder71.server;
        retrofit.RestAdapter.Log log73 = null;
        builder71.log = log73;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel76 = builder75.logLevel;
        retrofit.RestAdapter.Builder builder77 = builder71.setLogLevel(logLevel76);
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor66, converter67, profiler68, errorHandler69, log70, logLevel76);
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor48, converter49, profiler50, errorHandler51, log52, logLevel76);
        builder25.log = log52;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        retrofit.RestAdapter.Builder builder83 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel85 = builder84.logLevel;
        builder83.logLevel = logLevel85;
        builder81.logLevel = logLevel85;
        retrofit.RestAdapter restAdapter88 = new retrofit.RestAdapter(server16, provider18, executor19, executor20, requestInterceptor21, converter22, profiler23, errorHandler24, log52, logLevel85);
        builder0.server = server16;
        retrofit.Profiler profiler90 = builder0.profiler;
        java.util.concurrent.Executor executor91 = null;
        builder0.callbackExecutor = executor91;
        retrofit.ErrorHandler errorHandler93 = null;
        builder0.errorHandler = errorHandler93;
        retrofit.RestAdapter.LogLevel logLevel95 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler96 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor98 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(profiler4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(server8);
        org.junit.Assert.assertTrue("'" + logLevel12 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel12.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(server26);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNull(server72);
        org.junit.Assert.assertTrue("'" + logLevel76 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel76.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel85 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel85.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler90);
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(errorHandler96);
        org.junit.Assert.assertNotNull(executor98);
    }

    @Test
    public void test06983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06983");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = null;
        builder0.converter = converter1;
        java.util.concurrent.Executor executor3 = builder0.callbackExecutor;
        retrofit.RestAdapter restAdapter4 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler5 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter4.logLevel;
        retrofit.RestAdapter.LogLevel logLevel7 = restAdapter4.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler8 = restAdapter4.new RestHandler();
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.ErrorHandler errorHandler11 = builder9.errorHandler;
        retrofit.Server server12 = builder9.server;
        retrofit.RestAdapter restAdapter13 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter13.new RestHandler();
        retrofit.ErrorHandler errorHandler15 = null;
        restAdapter13.errorHandler = errorHandler15;
        retrofit.RestAdapter.Log log17 = restAdapter13.log;
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter13.new RestHandler();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        java.util.concurrent.Executor executor27 = builder26.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor28 = builder26.requestInterceptor;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.Server server30 = builder29.server;
        retrofit.RestAdapter.Log log31 = null;
        builder29.log = log31;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel34 = builder33.logLevel;
        retrofit.RestAdapter.Builder builder35 = builder29.setLogLevel(logLevel34);
        retrofit.RestAdapter.Builder builder37 = builder35.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter38 = builder37.build();
        retrofit.Profiler profiler39 = null;
        builder37.profiler = profiler39;
        retrofit.Profiler profiler41 = null;
        builder37.profiler = profiler41;
        retrofit.converter.Converter converter43 = builder37.converter;
        retrofit.RestAdapter.Builder builder44 = builder26.setConverter(converter43);
        restAdapter13.converter = converter43;
        retrofit.RestAdapter.Builder builder46 = builder9.setConverter(converter43);
        restAdapter4.converter = converter43;
        retrofit.RestAdapter.Builder builder48 = builder0.setConverter(converter43);
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.Server server50 = builder49.server;
        retrofit.RequestInterceptor requestInterceptor51 = builder49.requestInterceptor;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor53 = builder52.callbackExecutor;
        retrofit.Profiler profiler54 = builder52.profiler;
        retrofit.RestAdapter.Builder builder56 = builder52.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = builder57.server;
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = builder61.logLevel;
        retrofit.RestAdapter.Builder builder63 = builder57.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder65 = builder63.setServer("Retrofit-Idle");
        retrofit.Server server66 = builder65.server;
        retrofit.RestAdapter.Builder builder67 = builder56.setServer(server66);
        retrofit.RestAdapter restAdapter68 = builder67.build();
        java.util.concurrent.Executor executor69 = restAdapter68.callbackExecutor;
        builder49.httpExecutor = executor69;
        builder0.httpExecutor = executor69;
        retrofit.RequestInterceptor requestInterceptor72 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(logLevel7);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(server12);
        org.junit.Assert.assertNull(log17);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(executor27);
        org.junit.Assert.assertNull(requestInterceptor28);
        org.junit.Assert.assertNull(server30);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(restAdapter38);
        org.junit.Assert.assertNotNull(converter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(server50);
        org.junit.Assert.assertNull(requestInterceptor51);
        org.junit.Assert.assertNull(executor53);
        org.junit.Assert.assertNull(profiler54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(restAdapter68);
        org.junit.Assert.assertNotNull(executor69);
        org.junit.Assert.assertNull(requestInterceptor72);
    }

    @Test
    public void test06984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06984");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        restAdapter0.clientProvider = provider9;
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor12 = restAdapter0.callbackExecutor;
        retrofit.ErrorHandler errorHandler13 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter15 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler26 = builder25.errorHandler;
        retrofit.RestAdapter restAdapter27 = builder25.build();
        retrofit.client.Client.Provider provider28 = builder25.clientProvider;
        java.util.concurrent.Executor executor29 = builder25.callbackExecutor;
        java.util.concurrent.Executor executor30 = builder25.callbackExecutor;
        restAdapter0.callbackExecutor = executor30;
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(errorHandler26);
        org.junit.Assert.assertNotNull(restAdapter27);
        org.junit.Assert.assertNotNull(provider28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(executor30);
    }

    @Test
    public void test06985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06985");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder1 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel2 = builder1.logLevel;
        builder0.logLevel = logLevel2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.Server server5 = builder4.server;
        retrofit.RestAdapter.Log log6 = null;
        builder4.log = log6;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        retrofit.RestAdapter.Builder builder10 = builder4.setLogLevel(logLevel9);
        retrofit.RestAdapter.Builder builder12 = builder10.setServer("Retrofit-Idle");
        retrofit.Server server13 = builder12.server;
        retrofit.client.Client.Provider provider14 = null;
        java.util.concurrent.Executor executor15 = null;
        java.util.concurrent.Executor executor16 = null;
        retrofit.RequestInterceptor requestInterceptor17 = null;
        retrofit.converter.Converter converter18 = null;
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.client.Client.Provider provider29 = builder22.clientProvider;
        retrofit.RestAdapter.Log log30 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log30;
        retrofit.RestAdapter.Builder builder32 = builder21.setLog(log30);
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server13, provider14, executor15, executor16, requestInterceptor17, converter18, profiler19, errorHandler20, log30, logLevel33);
        builder0.logLevel = logLevel33;
        retrofit.RestAdapter.LogLevel logLevel36 = builder0.logLevel;
        retrofit.Profiler profiler37 = builder0.profiler;
        retrofit.RestAdapter.Builder builder39 = builder0.setServer("Retrofit-");
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Log log42 = null;
        builder40.log = log42;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder40.setLogLevel(logLevel45);
        retrofit.RestAdapter.Builder builder48 = builder46.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter49 = builder48.build();
        retrofit.Profiler profiler50 = null;
        builder48.profiler = profiler50;
        retrofit.Profiler profiler52 = null;
        builder48.profiler = profiler52;
        retrofit.converter.Converter converter54 = builder48.converter;
        builder39.converter = converter54;
        retrofit.RestAdapter restAdapter56 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor57 = null;
        restAdapter56.callbackExecutor = executor57;
        retrofit.RestAdapter.Log log59 = restAdapter56.log;
        retrofit.converter.Converter converter60 = restAdapter56.converter;
        java.util.concurrent.Executor executor61 = null;
        restAdapter56.callbackExecutor = executor61;
        java.util.concurrent.Executor executor63 = null;
        restAdapter56.httpExecutor = executor63;
        retrofit.RestAdapter.RestHandler restHandler65 = restAdapter56.new RestHandler();
        retrofit.converter.Converter converter66 = restAdapter56.converter;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.Server server68 = builder67.server;
        retrofit.RestAdapter.Log log69 = null;
        builder67.log = log69;
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel72 = builder71.logLevel;
        retrofit.RestAdapter.Builder builder73 = builder67.setLogLevel(logLevel72);
        retrofit.RestAdapter.Builder builder75 = builder73.setServer("Retrofit-Idle");
        retrofit.Server server76 = builder75.server;
        retrofit.Profiler profiler77 = null;
        builder75.profiler = profiler77;
        retrofit.Profiler profiler79 = null;
        builder75.profiler = profiler79;
        retrofit.RestAdapter restAdapter81 = builder75.build();
        retrofit.ErrorHandler errorHandler82 = builder75.errorHandler;
        restAdapter56.errorHandler = errorHandler82;
        retrofit.RestAdapter.Builder builder84 = builder39.setErrorHandler(errorHandler82);
        retrofit.client.Client.Provider provider85 = builder84.clientProvider;
        retrofit.Profiler profiler86 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder87 = builder84.setProfiler(profiler86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel2 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel2.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(server5);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNull(server41);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(restAdapter49);
        org.junit.Assert.assertNotNull(converter54);
        org.junit.Assert.assertNull(log59);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(converter66);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(server76);
        org.junit.Assert.assertNotNull(restAdapter81);
        org.junit.Assert.assertNotNull(errorHandler82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNull(provider85);
    }

    @Test
    public void test06986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06986");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        java.util.concurrent.Executor executor2 = null;
        builder0.httpExecutor = executor2;
        retrofit.converter.Converter converter4 = null;
        builder0.converter = converter4;
        retrofit.Profiler profiler6 = builder0.profiler;
        retrofit.RestAdapter.Log log7 = builder0.log;
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertNull(profiler6);
        org.junit.Assert.assertNull(log7);
    }

    @Test
    public void test06987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06987");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.Log log4 = retrofit.RestAdapter.Log.NONE;
        restAdapter0.log = log4;
        java.util.concurrent.Executor executor6 = null;
        restAdapter0.httpExecutor = executor6;
        retrofit.RequestInterceptor requestInterceptor8 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.Server server10 = builder9.server;
        retrofit.RestAdapter.Log log11 = null;
        builder9.log = log11;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = builder13.logLevel;
        retrofit.RestAdapter.Builder builder15 = builder9.setLogLevel(logLevel14);
        java.util.concurrent.Executor executor16 = builder15.callbackExecutor;
        java.util.concurrent.Executor executor17 = builder15.callbackExecutor;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        builder25.logLevel = logLevel27;
        boolean boolean29 = logLevel27.log();
        builder18.logLevel = logLevel27;
        retrofit.RestAdapter.LogLevel logLevel31 = builder18.logLevel;
        retrofit.Profiler profiler32 = builder18.profiler;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor34 = builder33.callbackExecutor;
        retrofit.Profiler profiler35 = builder33.profiler;
        retrofit.RestAdapter.Builder builder37 = builder33.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.Server server39 = builder38.server;
        retrofit.RestAdapter.Log log40 = null;
        builder38.log = log40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder38.setLogLevel(logLevel43);
        retrofit.RestAdapter.Builder builder46 = builder44.setServer("Retrofit-Idle");
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Builder builder48 = builder37.setServer(server47);
        retrofit.RestAdapter.Builder builder49 = builder18.setServer(server47);
        retrofit.RestAdapter.Builder builder50 = builder15.setServer(server47);
        retrofit.client.Client.Provider provider51 = null;
        java.util.concurrent.Executor executor52 = null;
        java.util.concurrent.Executor executor53 = null;
        retrofit.RequestInterceptor requestInterceptor54 = null;
        retrofit.converter.Converter converter55 = null;
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.Server server59 = builder58.server;
        retrofit.RestAdapter.Log log60 = null;
        builder58.log = log60;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.Server server63 = builder62.server;
        retrofit.RestAdapter.Log log64 = null;
        builder62.log = log64;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel67 = builder66.logLevel;
        retrofit.RestAdapter.Builder builder68 = builder62.setLogLevel(logLevel67);
        retrofit.client.Client.Provider provider69 = builder62.clientProvider;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        builder62.log = log70;
        retrofit.RestAdapter.Builder builder72 = builder58.setLog(log70);
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.Server server74 = builder73.server;
        retrofit.RestAdapter.Log log75 = null;
        builder73.log = log75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel78 = builder77.logLevel;
        retrofit.RestAdapter.Builder builder79 = builder73.setLogLevel(logLevel78);
        retrofit.RestAdapter.Builder builder81 = builder79.setServer("Retrofit-Idle");
        retrofit.RestAdapter restAdapter82 = builder81.build();
        retrofit.RestAdapter.LogLevel logLevel83 = restAdapter82.logLevel;
        retrofit.RestAdapter restAdapter84 = new retrofit.RestAdapter(server47, provider51, executor52, executor53, requestInterceptor54, converter55, profiler56, errorHandler57, log70, logLevel83);
        restAdapter0.server = server47;
        retrofit.Server server86 = restAdapter0.server;
        java.util.concurrent.Executor executor87 = restAdapter0.callbackExecutor;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNull(requestInterceptor8);
        org.junit.Assert.assertNull(server10);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler32);
        org.junit.Assert.assertNull(executor34);
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNull(server39);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNull(server59);
        org.junit.Assert.assertNull(server63);
        org.junit.Assert.assertTrue("'" + logLevel67 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel67.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(server74);
        org.junit.Assert.assertTrue("'" + logLevel78 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel78.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(restAdapter82);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server86);
        org.junit.Assert.assertNull(executor87);
    }

    @Test
    public void test06988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06988");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel9 = builder8.logLevel;
        builder7.logLevel = logLevel9;
        boolean boolean11 = logLevel9.log();
        builder0.logLevel = logLevel9;
        retrofit.RequestInterceptor requestInterceptor13 = null;
        builder0.requestInterceptor = requestInterceptor13;
        java.util.concurrent.Executor executor15 = null;
        builder0.httpExecutor = executor15;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.client.Client.Provider provider24 = builder17.clientProvider;
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log25;
        builder0.log = log25;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        builder35.logLevel = logLevel37;
        boolean boolean39 = logLevel37.log();
        builder28.logLevel = logLevel37;
        retrofit.RestAdapter.LogLevel logLevel41 = builder28.logLevel;
        retrofit.Profiler profiler42 = builder28.profiler;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor44 = builder43.callbackExecutor;
        retrofit.Profiler profiler45 = builder43.profiler;
        retrofit.RestAdapter.Builder builder47 = builder43.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder48.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("Retrofit-Idle");
        retrofit.Server server57 = builder56.server;
        retrofit.RestAdapter.Builder builder58 = builder47.setServer(server57);
        retrofit.RestAdapter.Builder builder59 = builder28.setServer(server57);
        retrofit.RestAdapter.Builder builder60 = builder0.setServer(server57);
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.Server server62 = builder61.server;
        retrofit.RestAdapter.Log log63 = null;
        builder61.log = log63;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel66 = builder65.logLevel;
        retrofit.RestAdapter.Builder builder67 = builder61.setLogLevel(logLevel66);
        retrofit.RestAdapter.Builder builder69 = builder67.setServer("Retrofit-Idle");
        retrofit.Server server70 = builder69.server;
        retrofit.Profiler profiler71 = null;
        builder69.profiler = profiler71;
        retrofit.Profiler profiler73 = null;
        builder69.profiler = profiler73;
        builder69.ensureSaneDefaults();
        retrofit.Server server76 = builder69.server;
        java.util.concurrent.Executor executor77 = builder69.callbackExecutor;
        retrofit.client.Client.Provider provider78 = builder69.clientProvider;
        retrofit.RestAdapter.Builder builder79 = builder0.setClient(provider78);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder81 = builder79.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + logLevel9 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel9.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler42);
        org.junit.Assert.assertNull(executor44);
        org.junit.Assert.assertNull(profiler45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(server62);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(server70);
        org.junit.Assert.assertNotNull(server76);
        org.junit.Assert.assertNotNull(executor77);
        org.junit.Assert.assertNotNull(provider78);
        org.junit.Assert.assertNotNull(builder79);
    }

    @Test
    public void test06989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06989");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.ErrorHandler errorHandler3 = restAdapter0.errorHandler;
        retrofit.converter.Converter converter4 = null;
        restAdapter0.converter = converter4;
        retrofit.RestAdapter.LogLevel logLevel6 = restAdapter0.logLevel;
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.Server server9 = builder8.server;
        retrofit.RestAdapter.Log log10 = null;
        builder8.log = log10;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = builder12.logLevel;
        retrofit.RestAdapter.Builder builder14 = builder8.setLogLevel(logLevel13);
        retrofit.RestAdapter.Builder builder16 = builder14.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler17 = builder16.errorHandler;
        retrofit.RestAdapter restAdapter18 = builder16.build();
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.Server server20 = builder19.server;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter21.new RestHandler();
        java.util.concurrent.Executor executor23 = restAdapter21.httpExecutor;
        java.util.concurrent.Executor executor24 = null;
        restAdapter21.callbackExecutor = executor24;
        retrofit.client.Client.Provider provider26 = null;
        restAdapter21.clientProvider = provider26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.Server server29 = builder28.server;
        retrofit.RestAdapter.Log log30 = null;
        builder28.log = log30;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel33 = builder32.logLevel;
        retrofit.RestAdapter.Builder builder34 = builder28.setLogLevel(logLevel33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("Retrofit-Idle");
        retrofit.Server server37 = builder36.server;
        retrofit.client.Client.Provider provider38 = null;
        java.util.concurrent.Executor executor39 = null;
        java.util.concurrent.Executor executor40 = null;
        retrofit.RequestInterceptor requestInterceptor41 = null;
        retrofit.converter.Converter converter42 = null;
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.Server server47 = builder46.server;
        retrofit.RestAdapter.Log log48 = null;
        builder46.log = log48;
        retrofit.RestAdapter.Builder builder50 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        retrofit.RestAdapter.Builder builder52 = builder46.setLogLevel(logLevel51);
        retrofit.RestAdapter.Builder builder54 = builder52.setServer("Retrofit-Idle");
        retrofit.Server server55 = builder54.server;
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.RequestInterceptor requestInterceptor59 = null;
        retrofit.converter.Converter converter60 = null;
        retrofit.Profiler profiler61 = null;
        retrofit.ErrorHandler errorHandler62 = null;
        retrofit.RestAdapter.Log log63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.Server server65 = builder64.server;
        retrofit.RestAdapter.Log log66 = null;
        builder64.log = log66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel69 = builder68.logLevel;
        retrofit.RestAdapter.Builder builder70 = builder64.setLogLevel(logLevel69);
        retrofit.RestAdapter restAdapter71 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor59, converter60, profiler61, errorHandler62, log63, logLevel69);
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server37, provider38, executor39, executor40, requestInterceptor41, converter42, profiler43, errorHandler44, log45, logLevel69);
        restAdapter21.log = log45;
        log45.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder76 = builder19.setLog(log45);
        builder16.log = log45;
        retrofit.RestAdapter.Log log78 = builder16.log;
        retrofit.client.Client.Provider provider79 = builder16.clientProvider;
        restAdapter0.clientProvider = provider79;
        retrofit.RestAdapter.Log log81 = restAdapter0.log;
        retrofit.RestAdapter.LogLevel logLevel82 = restAdapter0.logLevel;
        retrofit.client.Request request83 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request84 = restAdapter0.logAndReplaceRequest(request83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(errorHandler3);
        org.junit.Assert.assertNull(logLevel6);
        org.junit.Assert.assertNull(server9);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNotNull(restAdapter18);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(server29);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertNull(server47);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNull(server65);
        org.junit.Assert.assertTrue("'" + logLevel69 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel69.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(log78);
        org.junit.Assert.assertNotNull(provider79);
        org.junit.Assert.assertNull(log81);
        org.junit.Assert.assertNull(logLevel82);
    }

    @Test
    public void test06990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06990");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.Server server14 = builder13.server;
        retrofit.RestAdapter.Builder builder15 = builder4.setServer(server14);
        retrofit.RestAdapter restAdapter16 = builder15.build();
        retrofit.Profiler profiler17 = builder15.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = builder15.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder15.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.Server server22 = builder21.server;
        retrofit.RestAdapter.Log log23 = null;
        builder21.log = log23;
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel26 = builder25.logLevel;
        retrofit.RestAdapter.Builder builder27 = builder21.setLogLevel(logLevel26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel30 = builder29.logLevel;
        builder28.logLevel = logLevel30;
        boolean boolean32 = logLevel30.log();
        builder21.logLevel = logLevel30;
        retrofit.RestAdapter.LogLevel logLevel34 = builder21.logLevel;
        retrofit.Profiler profiler35 = builder21.profiler;
        java.util.concurrent.Executor executor36 = null;
        builder21.httpExecutor = executor36;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler39 = restAdapter38.new RestHandler();
        java.util.concurrent.Executor executor40 = restAdapter38.httpExecutor;
        java.util.concurrent.Executor executor41 = null;
        restAdapter38.callbackExecutor = executor41;
        retrofit.ErrorHandler errorHandler43 = null;
        restAdapter38.errorHandler = errorHandler43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter38.logLevel = logLevel45;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter38.logLevel = logLevel47;
        boolean boolean49 = logLevel47.log();
        retrofit.RestAdapter.Builder builder50 = builder21.setLogLevel(logLevel47);
        retrofit.RestAdapter.LogLevel logLevel51 = builder50.logLevel;
        boolean boolean52 = logLevel51.log();
        retrofit.RestAdapter.Builder builder53 = builder20.setLogLevel(logLevel51);
        retrofit.Profiler profiler54 = builder53.profiler;
        builder53.ensureSaneDefaults();
        retrofit.client.Client client56 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder57 = builder53.setClient(client56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(restAdapter16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(server22);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler35);
        org.junit.Assert.assertNull(executor40);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(profiler54);
    }

    @Test
    public void test06991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06991");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.Server server9 = builder8.server;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        builder17.logLevel = logLevel19;
        boolean boolean21 = logLevel19.log();
        builder10.logLevel = logLevel19;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        builder10.requestInterceptor = requestInterceptor23;
        retrofit.converter.Converter converter25 = null;
        builder10.converter = converter25;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor28 = builder27.callbackExecutor;
        retrofit.Profiler profiler29 = builder27.profiler;
        retrofit.RestAdapter.Builder builder31 = builder27.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.Server server33 = builder32.server;
        retrofit.RestAdapter.Log log34 = null;
        builder32.log = log34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel37 = builder36.logLevel;
        retrofit.RestAdapter.Builder builder38 = builder32.setLogLevel(logLevel37);
        retrofit.RestAdapter.Builder builder40 = builder38.setServer("Retrofit-Idle");
        retrofit.Server server41 = builder40.server;
        retrofit.RestAdapter.Builder builder42 = builder31.setServer(server41);
        retrofit.RestAdapter restAdapter43 = builder42.build();
        java.util.concurrent.Executor executor44 = restAdapter43.callbackExecutor;
        builder10.httpExecutor = executor44;
        builder8.callbackExecutor = executor44;
        retrofit.Server server47 = builder8.server;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.Server server49 = builder48.server;
        retrofit.RestAdapter.Log log50 = null;
        builder48.log = log50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel53 = builder52.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder48.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder56 = builder54.setServer("Retrofit-Idle");
        retrofit.Server server57 = builder56.server;
        retrofit.client.Client.Provider provider58 = null;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.RequestInterceptor requestInterceptor61 = null;
        retrofit.converter.Converter converter62 = null;
        retrofit.Profiler profiler63 = null;
        retrofit.ErrorHandler errorHandler64 = null;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.Server server67 = builder66.server;
        retrofit.RestAdapter.Log log68 = null;
        builder66.log = log68;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel71 = builder70.logLevel;
        retrofit.RestAdapter.Builder builder72 = builder66.setLogLevel(logLevel71);
        retrofit.client.Client.Provider provider73 = builder66.clientProvider;
        retrofit.RestAdapter.Log log74 = retrofit.RestAdapter.Log.NONE;
        builder66.log = log74;
        retrofit.RestAdapter.Builder builder76 = builder65.setLog(log74);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server57, provider58, executor59, executor60, requestInterceptor61, converter62, profiler63, errorHandler64, log74, logLevel77);
        builder8.server = server57;
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNull(profiler29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNull(server33);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(restAdapter43);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertNull(server67);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test06992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06992");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.ErrorHandler errorHandler2 = null;
        restAdapter0.errorHandler = errorHandler2;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter restAdapter5 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler6 = restAdapter5.new RestHandler();
        java.util.concurrent.Executor executor7 = restAdapter5.httpExecutor;
        java.util.concurrent.Executor executor8 = null;
        restAdapter5.callbackExecutor = executor8;
        retrofit.ErrorHandler errorHandler10 = null;
        restAdapter5.errorHandler = errorHandler10;
        retrofit.client.Client.Provider provider12 = null;
        restAdapter5.clientProvider = provider12;
        java.util.concurrent.Executor executor14 = restAdapter5.httpExecutor;
        retrofit.RestAdapter.Log log15 = restAdapter5.log;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = builder20.logLevel;
        retrofit.RestAdapter.Builder builder22 = builder16.setLogLevel(logLevel21);
        retrofit.RestAdapter.Builder builder24 = builder22.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler25 = builder24.errorHandler;
        retrofit.RestAdapter restAdapter26 = builder24.build();
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.Server server28 = builder27.server;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter29.new RestHandler();
        java.util.concurrent.Executor executor31 = restAdapter29.httpExecutor;
        java.util.concurrent.Executor executor32 = null;
        restAdapter29.callbackExecutor = executor32;
        retrofit.client.Client.Provider provider34 = null;
        restAdapter29.clientProvider = provider34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.Server server37 = builder36.server;
        retrofit.RestAdapter.Log log38 = null;
        builder36.log = log38;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel41 = builder40.logLevel;
        retrofit.RestAdapter.Builder builder42 = builder36.setLogLevel(logLevel41);
        retrofit.RestAdapter.Builder builder44 = builder42.setServer("Retrofit-Idle");
        retrofit.Server server45 = builder44.server;
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.Server server55 = builder54.server;
        retrofit.RestAdapter.Log log56 = null;
        builder54.log = log56;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel59 = builder58.logLevel;
        retrofit.RestAdapter.Builder builder60 = builder54.setLogLevel(logLevel59);
        retrofit.RestAdapter.Builder builder62 = builder60.setServer("Retrofit-Idle");
        retrofit.Server server63 = builder62.server;
        retrofit.client.Client.Provider provider64 = null;
        java.util.concurrent.Executor executor65 = null;
        java.util.concurrent.Executor executor66 = null;
        retrofit.RequestInterceptor requestInterceptor67 = null;
        retrofit.converter.Converter converter68 = null;
        retrofit.Profiler profiler69 = null;
        retrofit.ErrorHandler errorHandler70 = null;
        retrofit.RestAdapter.Log log71 = null;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        retrofit.Server server73 = builder72.server;
        retrofit.RestAdapter.Log log74 = null;
        builder72.log = log74;
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel77 = builder76.logLevel;
        retrofit.RestAdapter.Builder builder78 = builder72.setLogLevel(logLevel77);
        retrofit.RestAdapter restAdapter79 = new retrofit.RestAdapter(server63, provider64, executor65, executor66, requestInterceptor67, converter68, profiler69, errorHandler70, log71, logLevel77);
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel77);
        restAdapter29.log = log53;
        log53.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder84 = builder27.setLog(log53);
        builder24.log = log53;
        retrofit.RequestInterceptor requestInterceptor86 = builder24.requestInterceptor;
        restAdapter5.requestInterceptor = requestInterceptor86;
        restAdapter0.requestInterceptor = requestInterceptor86;
        retrofit.ErrorHandler errorHandler89 = restAdapter0.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler90 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler91 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(log15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNotNull(restAdapter26);
        org.junit.Assert.assertNull(server28);
        org.junit.Assert.assertNull(executor31);
        org.junit.Assert.assertNull(server37);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(server63);
        org.junit.Assert.assertNull(server73);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(requestInterceptor86);
        org.junit.Assert.assertNull(errorHandler89);
    }

    @Test
    public void test06993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06993");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.Profiler profiler5 = restAdapter0.profiler;
        retrofit.ErrorHandler errorHandler6 = restAdapter0.errorHandler;
        retrofit.RestAdapter restAdapter7 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor8 = null;
        restAdapter7.callbackExecutor = executor8;
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter7.new RestHandler();
        retrofit.ErrorHandler errorHandler11 = restAdapter7.errorHandler;
        java.util.concurrent.Executor executor12 = restAdapter7.httpExecutor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor14 = builder13.callbackExecutor;
        retrofit.Profiler profiler15 = builder13.profiler;
        retrofit.RestAdapter.Builder builder17 = builder13.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.Server server19 = builder18.server;
        retrofit.RestAdapter.Log log20 = null;
        builder18.log = log20;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel23 = builder22.logLevel;
        retrofit.RestAdapter.Builder builder24 = builder18.setLogLevel(logLevel23);
        retrofit.RestAdapter.Builder builder26 = builder24.setServer("Retrofit-Idle");
        retrofit.Server server27 = builder26.server;
        retrofit.RestAdapter.Builder builder28 = builder17.setServer(server27);
        retrofit.RestAdapter restAdapter29 = builder28.build();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.Server server31 = builder30.server;
        retrofit.RestAdapter.Log log32 = null;
        builder30.log = log32;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = builder34.logLevel;
        retrofit.RestAdapter.Builder builder36 = builder30.setLogLevel(logLevel35);
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        builder37.logLevel = logLevel39;
        boolean boolean41 = logLevel39.log();
        builder30.logLevel = logLevel39;
        retrofit.RestAdapter.LogLevel logLevel43 = builder30.logLevel;
        retrofit.RestAdapter.Builder builder44 = builder28.setLogLevel(logLevel43);
        retrofit.RestAdapter.LogLevel logLevel45 = builder44.logLevel;
        java.util.concurrent.Executor executor46 = builder44.httpExecutor;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor48 = builder47.callbackExecutor;
        retrofit.Profiler profiler49 = builder47.profiler;
        retrofit.RestAdapter.Builder builder51 = builder47.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.Server server53 = builder52.server;
        retrofit.RestAdapter.Log log54 = null;
        builder52.log = log54;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel57 = builder56.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder52.setLogLevel(logLevel57);
        retrofit.RestAdapter.Builder builder60 = builder58.setServer("Retrofit-Idle");
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Builder builder62 = builder51.setServer(server61);
        retrofit.RestAdapter restAdapter63 = builder62.build();
        retrofit.RestAdapter.Log log64 = builder62.log;
        retrofit.Profiler profiler65 = builder62.profiler;
        retrofit.Server server66 = builder62.server;
        retrofit.client.Client.Provider provider67 = builder62.clientProvider;
        retrofit.RestAdapter.Builder builder68 = builder44.setClient(provider67);
        retrofit.Server server69 = builder44.server;
        restAdapter7.server = server69;
        restAdapter0.server = server69;
        retrofit.RestAdapter.RestHandler restHandler72 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(restAdapter29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNull(profiler49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(server53);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(restAdapter63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNull(profiler65);
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(provider67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(server69);
    }

    @Test
    public void test06994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06994");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel2 = restAdapter0.logLevel;
        retrofit.RestAdapter.LogLevel logLevel3 = restAdapter0.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.Server server6 = builder5.server;
        retrofit.RestAdapter.Log log7 = null;
        builder5.log = log7;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel10 = builder9.logLevel;
        retrofit.RestAdapter.Builder builder11 = builder5.setLogLevel(logLevel10);
        retrofit.RestAdapter.Builder builder13 = builder11.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log14 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder15 = builder13.setLog(log14);
        retrofit.Profiler profiler16 = builder15.profiler;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("Retrofit-Idle");
        retrofit.Server server26 = builder25.server;
        retrofit.client.Client.Provider provider27 = null;
        java.util.concurrent.Executor executor28 = null;
        java.util.concurrent.Executor executor29 = null;
        retrofit.RequestInterceptor requestInterceptor30 = null;
        retrofit.converter.Converter converter31 = null;
        retrofit.Profiler profiler32 = null;
        retrofit.ErrorHandler errorHandler33 = null;
        retrofit.RestAdapter.Log log34 = null;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server26, provider27, executor28, executor29, requestInterceptor30, converter31, profiler32, errorHandler33, log34, logLevel40);
        retrofit.RestAdapter.Builder builder43 = builder15.setServer(server26);
        retrofit.RestAdapter.LogLevel logLevel44 = builder43.logLevel;
        retrofit.Server server45 = builder43.server;
        retrofit.client.Client.Provider provider46 = builder43.clientProvider;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.Server server48 = builder47.server;
        retrofit.RestAdapter.Log log49 = null;
        builder47.log = log49;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel52 = builder51.logLevel;
        retrofit.RestAdapter.Builder builder53 = builder47.setLogLevel(logLevel52);
        retrofit.RequestInterceptor requestInterceptor54 = null;
        builder47.requestInterceptor = requestInterceptor54;
        retrofit.RestAdapter.Log log56 = builder47.log;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.Server server58 = builder57.server;
        retrofit.RestAdapter.Log log59 = null;
        builder57.log = log59;
        retrofit.RestAdapter.Builder builder61 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel62 = builder61.logLevel;
        retrofit.RestAdapter.Builder builder63 = builder57.setLogLevel(logLevel62);
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel66 = builder65.logLevel;
        builder64.logLevel = logLevel66;
        boolean boolean68 = logLevel66.log();
        builder57.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder70 = builder47.setLogLevel(logLevel66);
        retrofit.ErrorHandler errorHandler71 = builder47.errorHandler;
        retrofit.RestAdapter.Builder builder72 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor73 = builder72.callbackExecutor;
        retrofit.Profiler profiler74 = builder72.profiler;
        retrofit.RestAdapter.Builder builder76 = builder72.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.Server server78 = builder77.server;
        retrofit.RestAdapter.Log log79 = null;
        builder77.log = log79;
        retrofit.RestAdapter.Builder builder81 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel82 = builder81.logLevel;
        retrofit.RestAdapter.Builder builder83 = builder77.setLogLevel(logLevel82);
        retrofit.RestAdapter.Builder builder85 = builder83.setServer("Retrofit-Idle");
        retrofit.Server server86 = builder85.server;
        retrofit.RestAdapter.Builder builder87 = builder76.setServer(server86);
        retrofit.RestAdapter restAdapter88 = builder87.build();
        java.util.concurrent.Executor executor89 = restAdapter88.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler90 = restAdapter88.new RestHandler();
        retrofit.ErrorHandler errorHandler91 = restAdapter88.errorHandler;
        retrofit.RestAdapter.Builder builder92 = builder47.setErrorHandler(errorHandler91);
        builder43.errorHandler = errorHandler91;
        restAdapter0.errorHandler = errorHandler91;
        retrofit.RestAdapter.Log log95 = restAdapter0.log;
        java.util.concurrent.Executor executor96 = restAdapter0.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler97 = restAdapter0.new RestHandler();
        org.junit.Assert.assertNull(logLevel2);
        org.junit.Assert.assertNull(logLevel3);
        org.junit.Assert.assertNull(server6);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(log14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNull(server48);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(log56);
        org.junit.Assert.assertNull(server58);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNull(errorHandler71);
        org.junit.Assert.assertNull(executor73);
        org.junit.Assert.assertNull(profiler74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(server78);
        org.junit.Assert.assertTrue("'" + logLevel82 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel82.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(server86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(restAdapter88);
        org.junit.Assert.assertNotNull(executor89);
        org.junit.Assert.assertNotNull(errorHandler91);
        org.junit.Assert.assertNotNull(builder92);
        org.junit.Assert.assertNull(log95);
        org.junit.Assert.assertNull(executor96);
    }

    @Test
    public void test06995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06995");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = builder0.logLevel;
        retrofit.client.Client.Provider provider2 = builder0.clientProvider;
        java.util.concurrent.Executor executor3 = builder0.httpExecutor;
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = builder0.profiler;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.ErrorHandler errorHandler7 = builder6.errorHandler;
        retrofit.converter.Converter converter8 = builder6.converter;
        retrofit.RestAdapter.Log log9 = builder6.log;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Log log12 = null;
        builder10.log = log12;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel15 = builder14.logLevel;
        retrofit.RestAdapter.Builder builder16 = builder10.setLogLevel(logLevel15);
        retrofit.RestAdapter.Builder builder18 = builder16.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder20 = builder18.setLog(log19);
        java.util.concurrent.Executor executor21 = builder18.httpExecutor;
        retrofit.RestAdapter.Builder builder23 = builder18.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler24 = builder18.errorHandler;
        retrofit.RestAdapter restAdapter25 = builder18.build();
        java.util.concurrent.Executor executor26 = restAdapter25.httpExecutor;
        builder6.httpExecutor = executor26;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor29 = builder28.callbackExecutor;
        retrofit.Profiler profiler30 = builder28.profiler;
        retrofit.RestAdapter.Builder builder32 = builder28.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter.Log log35 = null;
        builder33.log = log35;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel38 = builder37.logLevel;
        retrofit.RestAdapter.Builder builder39 = builder33.setLogLevel(logLevel38);
        retrofit.RestAdapter.Builder builder41 = builder39.setServer("Retrofit-Idle");
        retrofit.Server server42 = builder41.server;
        retrofit.RestAdapter.Builder builder43 = builder32.setServer(server42);
        retrofit.RestAdapter restAdapter44 = builder43.build();
        retrofit.client.Client.Provider provider45 = null;
        restAdapter44.clientProvider = provider45;
        retrofit.RestAdapter.Log log47 = restAdapter44.log;
        retrofit.Profiler profiler48 = restAdapter44.profiler;
        retrofit.ErrorHandler errorHandler49 = restAdapter44.errorHandler;
        retrofit.RestAdapter.Builder builder50 = builder6.setErrorHandler(errorHandler49);
        builder0.errorHandler = errorHandler49;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(profiler5);
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNull(log9);
        org.junit.Assert.assertNull(server11);
        org.junit.Assert.assertTrue("'" + logLevel15 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel15.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(executor21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(errorHandler24);
        org.junit.Assert.assertNotNull(restAdapter25);
        org.junit.Assert.assertNotNull(executor26);
        org.junit.Assert.assertNull(executor29);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(restAdapter44);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(builder50);
    }

    @Test
    public void test06996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06996");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server1 = builder0.server;
        retrofit.RestAdapter.Log log2 = null;
        builder0.log = log2;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel5 = builder4.logLevel;
        retrofit.RestAdapter.Builder builder6 = builder0.setLogLevel(logLevel5);
        retrofit.RestAdapter.Builder builder8 = builder6.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler9 = builder8.errorHandler;
        retrofit.RestAdapter restAdapter10 = builder8.build();
        retrofit.RestAdapter.LogLevel logLevel11 = restAdapter10.logLevel;
        retrofit.Profiler profiler12 = restAdapter10.profiler;
        retrofit.Profiler profiler13 = restAdapter10.profiler;
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.Server server15 = builder14.server;
        retrofit.RestAdapter.Log log16 = null;
        builder14.log = log16;
        retrofit.RestAdapter.Builder builder18 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel19 = builder18.logLevel;
        retrofit.RestAdapter.Builder builder20 = builder14.setLogLevel(logLevel19);
        retrofit.RestAdapter.Builder builder22 = builder20.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder24 = builder22.setLog(log23);
        java.util.concurrent.Executor executor25 = builder22.httpExecutor;
        java.util.concurrent.Executor executor26 = null;
        builder22.httpExecutor = executor26;
        retrofit.RestAdapter restAdapter28 = builder22.build();
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter restAdapter30 = builder22.build();
        retrofit.RestAdapter.LogLevel logLevel31 = builder22.logLevel;
        restAdapter10.setLogLevel(logLevel31);
        java.lang.Throwable throwable33 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable33, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(server1);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNotNull(restAdapter10);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(executor25);
        org.junit.Assert.assertNotNull(restAdapter28);
        org.junit.Assert.assertNotNull(restAdapter30);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06997");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler1 = restAdapter0.new RestHandler();
        java.util.concurrent.Executor executor2 = restAdapter0.httpExecutor;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.callbackExecutor = executor3;
        retrofit.ErrorHandler errorHandler5 = null;
        restAdapter0.errorHandler = errorHandler5;
        retrofit.client.Client.Provider provider7 = null;
        restAdapter0.clientProvider = provider7;
        retrofit.client.Client.Provider provider9 = null;
        restAdapter0.clientProvider = provider9;
        retrofit.ErrorHandler errorHandler11 = null;
        restAdapter0.errorHandler = errorHandler11;
        retrofit.RestAdapter.Log log13 = restAdapter0.log;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter0.new RestHandler();
        retrofit.client.Response response16 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response18 = restAdapter0.logAndReplaceResponse("hi!", response16, (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(log13);
    }

    @Test
    public void test06998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06998");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.httpExecutor = executor1;
        java.util.concurrent.Executor executor3 = null;
        restAdapter0.httpExecutor = executor3;
        retrofit.client.Client.Provider provider5 = null;
        restAdapter0.clientProvider = provider5;
        retrofit.client.Client.Provider provider7 = restAdapter0.clientProvider;
        retrofit.RestAdapter restAdapter8 = new retrofit.RestAdapter();
        retrofit.converter.Converter converter9 = null;
        restAdapter8.converter = converter9;
        java.util.concurrent.Executor executor11 = restAdapter8.callbackExecutor;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor13 = builder12.callbackExecutor;
        retrofit.Profiler profiler14 = builder12.profiler;
        retrofit.RestAdapter.Builder builder16 = builder12.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.Server server18 = builder17.server;
        retrofit.RestAdapter.Log log19 = null;
        builder17.log = log19;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel22 = builder21.logLevel;
        retrofit.RestAdapter.Builder builder23 = builder17.setLogLevel(logLevel22);
        retrofit.RestAdapter.Builder builder25 = builder23.setServer("Retrofit-Idle");
        retrofit.Server server26 = builder25.server;
        retrofit.RestAdapter.Builder builder27 = builder16.setServer(server26);
        retrofit.RestAdapter restAdapter28 = builder27.build();
        java.util.concurrent.Executor executor29 = restAdapter28.callbackExecutor;
        retrofit.client.Client.Provider provider30 = restAdapter28.clientProvider;
        restAdapter8.clientProvider = provider30;
        restAdapter0.clientProvider = provider30;
        retrofit.RequestInterceptor requestInterceptor33 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.Server server35 = builder34.server;
        retrofit.RestAdapter.Log log36 = null;
        builder34.log = log36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel39 = builder38.logLevel;
        retrofit.RestAdapter.Builder builder40 = builder34.setLogLevel(logLevel39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel43 = builder42.logLevel;
        builder41.logLevel = logLevel43;
        boolean boolean45 = logLevel43.log();
        builder34.logLevel = logLevel43;
        retrofit.RestAdapter.LogLevel logLevel47 = builder34.logLevel;
        java.util.concurrent.Executor executor48 = builder34.callbackExecutor;
        retrofit.client.Client.Provider provider49 = builder34.clientProvider;
        java.util.concurrent.Executor executor50 = builder34.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel51 = builder34.logLevel;
        restAdapter0.logLevel = logLevel51;
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(executor11);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(restAdapter28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNotNull(provider30);
        org.junit.Assert.assertNull(requestInterceptor33);
        org.junit.Assert.assertNull(server35);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(executor48);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNull(executor50);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test06999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06999");
        retrofit.RestAdapter restAdapter0 = new retrofit.RestAdapter();
        java.util.concurrent.Executor executor1 = null;
        restAdapter0.callbackExecutor = executor1;
        retrofit.converter.Converter converter3 = restAdapter0.converter;
        retrofit.RestAdapter.RestHandler restHandler4 = restAdapter0.new RestHandler();
        retrofit.converter.Converter converter5 = restAdapter0.converter;
        retrofit.RestAdapter restAdapter6 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler7 = restAdapter6.new RestHandler();
        retrofit.ErrorHandler errorHandler8 = null;
        restAdapter6.errorHandler = errorHandler8;
        retrofit.RestAdapter.RestHandler restHandler10 = restAdapter6.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter6.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter6.requestInterceptor;
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter6.logLevel;
        retrofit.Profiler profiler14 = restAdapter6.profiler;
        retrofit.Server server15 = restAdapter6.server;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.Server server17 = builder16.server;
        retrofit.RestAdapter.Log log18 = null;
        builder16.log = log18;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.Server server21 = builder20.server;
        retrofit.RestAdapter.Log log22 = null;
        builder20.log = log22;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel25 = builder24.logLevel;
        retrofit.RestAdapter.Builder builder26 = builder20.setLogLevel(logLevel25);
        retrofit.client.Client.Provider provider27 = builder20.clientProvider;
        retrofit.RestAdapter.Log log28 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log28;
        retrofit.RestAdapter.Builder builder30 = builder16.setLog(log28);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.Server server32 = builder31.server;
        retrofit.RestAdapter.Log log33 = null;
        builder31.log = log33;
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.Server server36 = builder35.server;
        retrofit.RestAdapter.Log log37 = null;
        builder35.log = log37;
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel40 = builder39.logLevel;
        retrofit.RestAdapter.Builder builder41 = builder35.setLogLevel(logLevel40);
        retrofit.client.Client.Provider provider42 = builder35.clientProvider;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder35.log = log43;
        retrofit.RestAdapter.Builder builder45 = builder31.setLog(log43);
        retrofit.RestAdapter.Builder builder46 = builder16.setLog(log43);
        builder46.ensureSaneDefaults();
        java.util.concurrent.Executor executor48 = builder46.callbackExecutor;
        restAdapter6.httpExecutor = executor48;
        restAdapter0.callbackExecutor = executor48;
        retrofit.RequestInterceptor requestInterceptor51 = restAdapter0.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor52 = restAdapter0.requestInterceptor;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.Server server54 = builder53.server;
        retrofit.RestAdapter.Log log55 = null;
        builder53.log = log55;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel58 = builder57.logLevel;
        retrofit.RestAdapter.Builder builder59 = builder53.setLogLevel(logLevel58);
        retrofit.RestAdapter.Builder builder61 = builder59.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler62 = builder61.errorHandler;
        retrofit.RestAdapter restAdapter63 = builder61.build();
        retrofit.RestAdapter.RestHandler restHandler64 = restAdapter63.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel65 = restAdapter63.getLogLevel();
        restAdapter0.logLevel = logLevel65;
        retrofit.converter.Converter converter67 = restAdapter0.converter;
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(server17);
        org.junit.Assert.assertNull(server21);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(server32);
        org.junit.Assert.assertNull(server36);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNull(requestInterceptor51);
        org.junit.Assert.assertNull(requestInterceptor52);
        org.junit.Assert.assertNull(server54);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNull(errorHandler62);
        org.junit.Assert.assertNotNull(restAdapter63);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNull(converter67);
    }

    @Test
    public void test07000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test07000");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        java.util.concurrent.Executor executor1 = builder0.callbackExecutor;
        retrofit.Profiler profiler2 = builder0.profiler;
        retrofit.RestAdapter.Builder builder4 = builder0.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log5 = builder0.log;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.Server server7 = builder6.server;
        retrofit.RestAdapter.Log log8 = null;
        builder6.log = log8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel11 = builder10.logLevel;
        retrofit.RestAdapter.Builder builder12 = builder6.setLogLevel(logLevel11);
        retrofit.RestAdapter.Builder builder14 = builder12.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Log log15 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder16 = builder14.setLog(log15);
        java.util.concurrent.Executor executor17 = builder14.httpExecutor;
        java.util.concurrent.Executor executor18 = null;
        builder14.httpExecutor = executor18;
        retrofit.RestAdapter restAdapter20 = builder14.build();
        retrofit.RestAdapter.Log log21 = builder14.log;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.Server server23 = builder22.server;
        retrofit.RestAdapter.Log log24 = null;
        builder22.log = log24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel27 = builder26.logLevel;
        retrofit.RestAdapter.Builder builder28 = builder22.setLogLevel(logLevel27);
        retrofit.RestAdapter.Builder builder30 = builder28.setServer("Retrofit-Idle");
        retrofit.ErrorHandler errorHandler31 = builder30.errorHandler;
        retrofit.RestAdapter restAdapter32 = builder30.build();
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.Server server34 = builder33.server;
        retrofit.RestAdapter restAdapter35 = new retrofit.RestAdapter();
        retrofit.RestAdapter.RestHandler restHandler36 = restAdapter35.new RestHandler();
        java.util.concurrent.Executor executor37 = restAdapter35.httpExecutor;
        java.util.concurrent.Executor executor38 = null;
        restAdapter35.callbackExecutor = executor38;
        retrofit.client.Client.Provider provider40 = null;
        restAdapter35.clientProvider = provider40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.Server server43 = builder42.server;
        retrofit.RestAdapter.Log log44 = null;
        builder42.log = log44;
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel47 = builder46.logLevel;
        retrofit.RestAdapter.Builder builder48 = builder42.setLogLevel(logLevel47);
        retrofit.RestAdapter.Builder builder50 = builder48.setServer("Retrofit-Idle");
        retrofit.Server server51 = builder50.server;
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.RequestInterceptor requestInterceptor55 = null;
        retrofit.converter.Converter converter56 = null;
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.Server server61 = builder60.server;
        retrofit.RestAdapter.Log log62 = null;
        builder60.log = log62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel65 = builder64.logLevel;
        retrofit.RestAdapter.Builder builder66 = builder60.setLogLevel(logLevel65);
        retrofit.RestAdapter.Builder builder68 = builder66.setServer("Retrofit-Idle");
        retrofit.Server server69 = builder68.server;
        retrofit.client.Client.Provider provider70 = null;
        java.util.concurrent.Executor executor71 = null;
        java.util.concurrent.Executor executor72 = null;
        retrofit.RequestInterceptor requestInterceptor73 = null;
        retrofit.converter.Converter converter74 = null;
        retrofit.Profiler profiler75 = null;
        retrofit.ErrorHandler errorHandler76 = null;
        retrofit.RestAdapter.Log log77 = null;
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.Server server79 = builder78.server;
        retrofit.RestAdapter.Log log80 = null;
        builder78.log = log80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel83 = builder82.logLevel;
        retrofit.RestAdapter.Builder builder84 = builder78.setLogLevel(logLevel83);
        retrofit.RestAdapter restAdapter85 = new retrofit.RestAdapter(server69, provider70, executor71, executor72, requestInterceptor73, converter74, profiler75, errorHandler76, log77, logLevel83);
        retrofit.RestAdapter restAdapter86 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor55, converter56, profiler57, errorHandler58, log59, logLevel83);
        restAdapter35.log = log59;
        log59.log("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder90 = builder33.setLog(log59);
        builder30.log = log59;
        retrofit.ErrorHandler errorHandler92 = builder30.errorHandler;
        retrofit.RestAdapter.Builder builder93 = builder14.setErrorHandler(errorHandler92);
        retrofit.RestAdapter.Builder builder94 = builder0.setErrorHandler(errorHandler92);
        retrofit.RequestInterceptor requestInterceptor95 = builder0.requestInterceptor;
        retrofit.Server server96 = builder0.server;
        org.junit.Assert.assertNull(executor1);
        org.junit.Assert.assertNull(profiler2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNull(log5);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertTrue("'" + logLevel11 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel11.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNotNull(restAdapter20);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(errorHandler31);
        org.junit.Assert.assertNotNull(restAdapter32);
        org.junit.Assert.assertNull(server34);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(server43);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertNull(server61);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(server69);
        org.junit.Assert.assertNull(server79);
        org.junit.Assert.assertTrue("'" + logLevel83 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel83.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(errorHandler92);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertNull(requestInterceptor95);
        org.junit.Assert.assertNotNull(server96);
    }
}

